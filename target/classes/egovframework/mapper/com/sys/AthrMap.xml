<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="AthrMap">

    <sql id="AthrMap.selectCondition_fragment">
        <where>
            <if test="athr_cd != null and athr_cd != ''">
                AND ATHR_CD = #{athr_cd}
            </if>
            <if test="athr_cd2 != null and athr_cd2 != ''">
                AND ATHR_CD LIKE '%' || #{athr_cd2} || '%'
            </if>
            <if test="cntr_cd != null and cntr_cd != ''">
                AND CNTR_CD = #{cntr_cd}
            </if>
        </where>
    </sql>

    <select id="AthrMap.getAthrCount" parameterType="map" resultType="int">
        SELECT /* AthrMap.getAthrCount */
               COUNT(*)
          FROM TB_ATHR A
        <include refid="AthrMap.selectCondition_fragment"/>
    </select>

    <select id="AthrMap.getAthrList" parameterType="map" resultType="resultMap">
        SELECT /* AthrMap.getAthrList */
               ROWNUM AS PAGE_INDX, B.*
          FROM (SELECT ATHR_CD, ATHR_NM, ATHR_EXPI, ATHR_SQNC, GDS_CD
                     , CNTR_CD, RGSR_ID, RGSN_DTTM, AMND_ID, AMNT_DTTM
                     , (SELECT B.USER_NM
                          FROM TB_USER B
                         WHERE B.USER_ID = A.RGSR_ID
                           AND B.CNTR_CD = A.CNTR_CD) AS RGSR_NM
                     , (SELECT B.USER_NM
                          FROM TB_USER B
                         WHERE B.USER_ID = A.AMND_ID
                           AND B.CNTR_CD = A.CNTR_CD) AS AMND_NM
                  FROM TB_ATHR A
        <include refid="AthrMap.selectCondition_fragment"/>

        <choose>
            <when test="orderBy != null and orderBy != ''">
                ORDER BY ${orderBy} ${orderDirection}
            </when>
            <otherwise>
                 ORDER BY ATHR_SQNC ASC
            </otherwise>
        </choose>
               ) B
    </select>

    <select id="AthrMap.getAthrMaxSequence" parameterType="map" resultType="int">
        SELECT /* AthrMap.getAthrMaxSequence */
               NVL(MAX(ATHR_SQNC), 0)
          FROM TB_ATHR
         WHERE CNTR_CD = #{cntr_cd}
    </select>

    <select id="AthrMap.getAthrDuplicateCount" parameterType="map" resultType="int">
        SELECT /* AthrMap.getAthrDuplicateCount */
               COUNT(*)
          FROM TB_ATHR
         WHERE ATHR_CD != #{athr_cd}
           AND CNTR_CD = #{cntr_cd}
           AND ATHR_SQNC = #{athr_sqnc}
    </select>

    <insert id="AthrMap.insertAthr" parameterType="map">
        INSERT /* AthrMap.insertAthr */
          INTO TB_ATHR
               (ATHR_CD, ATHR_NM, ATHR_EXPI, ATHR_SQNC, GDS_CD
              , CNTR_CD, RGSR_ID, RGSN_DTTM, AMND_ID, AMNT_DTTM)
        VALUES (#{athr_cd}, #{athr_nm}, #{athr_expi}, #{athr_sqnc}, #{gds_cd}
              , #{cntr_cd}, #{rgsr_id}, TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'), #{amnd_id}, TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))
    </insert>

    <update id="AthrMap.updateAthr" parameterType="map">
        UPDATE /* AthrMap.updateAthr */
               TB_ATHR
           SET ATHR_NM = #{athr_nm}
             , ATHR_EXPI = #{athr_expi}
             , ATHR_SQNC = #{athr_sqnc}
             , GDS_CD = #{gds_cd}
             , AMND_ID = #{amnd_id}
             , AMNT_DTTM = TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')
        WHERE ATHR_CD = #{athr_cd}
          AND CNTR_CD = #{cntr_cd}
    </update>

    <update id="AthrMap.updateAthrSequence" parameterType="map">
    <![CDATA[
        UPDATE /* AthrMap.updateAthrSequence */
               TB_ATHR
           SET ATHR_SQNC = (CASE ATHR_CD WHEN #{athr_cd} THEN ${athr_sqnc}
                                         ELSE (CASE SIGN(${athr_sqnc_old} - ${athr_sqnc}) WHEN -1 THEN ATHR_SQNC - 1
                                                                                          WHEN  1 THEN ATHR_SQNC + 1
                                               END)
                            END)
         WHERE ATHR_SQNC <= (CASE SIGN(${athr_sqnc_old} - ${athr_sqnc}) WHEN  1 THEN ${athr_sqnc_old}
                                                                        WHEN -1 THEN ${athr_sqnc}
                             END)
           AND ATHR_SQNC >= (CASE SIGN(${athr_sqnc_old} - ${athr_sqnc}) WHEN  1 THEN ${athr_sqnc}
                                                                        WHEN -1 THEN ${athr_sqnc_old}
                             END)
           AND CNTR_CD = #{cntr_cd}
    ]]>
    </update>

    <delete id="AthrMap.deleteAthr" parameterType="map">
        DELETE /* AthrMap.deleteAthr */
          FROM TB_ATHR
         WHERE ATHR_CD = #{athr_cd}
           AND CNTR_CD = #{cntr_cd}
    </delete>

</mapper>

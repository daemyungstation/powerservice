<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ConsMap">

    <sql id="ConsMap.selectCondition_fragment">
        <if test="cell != null and cell != ''">
            <!-- 2018.05.11 TB_CONS 테이블 개인정보는 MEMBER 테이블에서... AND CELL = REPLACE(#{cell}, '-', '') -->
                AND REPLACE(MEM.CELL, '-', '') = REPLACE(#{cell}, '-', '')
        </if>
        <if test="consno != null and consno != ''">
            AND A.CONSNO = #{consno}
        </if>
        <if test="(mem_no != null and mem_no != '') or path_typ == 'history'">
            AND A.MEM_NO = #{mem_no}
        </if>
        <if test="dt_typ != null and dt_typ != ''">
            <if test="stt_dt != null and stt_dt != '' and end_dt != null and end_dt != ''">
                <if test="dt_typ == 'acpg_dttm'">
                    AND A.ACPG_DTTM BETWEEN REPLACE(#{stt_dt}, '-', '') || '000000' AND REPLACE(#{end_dt}, '-', '') || '235959'
                </if>
                <if test="dt_typ == 'cons_dsps_dttm'">
                    AND A.CONS_DSPS_DTTM BETWEEN REPLACE(#{stt_dt}, '-', '') || '000000' AND REPLACE(#{end_dt}, '-', '') || '235959'
                </if>
            </if>
            <if test="dt_typ == 'today'">
                AND A.CONS_DSPS_DTTM BETWEEN TO_CHAR(SYSDATE, 'YYYYMMDD') || '000000' AND TO_CHAR(SYSDATE, 'YYYYMMDD') || '235959'
            </if>
        </if>
        <if test="cons_dspsmddl_dtpt_cd != null and cons_dspsmddl_dtpt_cd != ''">
            AND A.CONS_DSPSMDDL_DTPT_CD = #{cons_dspsmddl_dtpt_cd}
        </if>
        <if test="cons_dspsmddl_dtpt_cd_list != null and cons_dspsmddl_dtpt_cd_list != ''">
            AND A.CONS_DSPSMDDL_DTPT_CD IN (${cons_dspsmddl_dtpt_cd_list})
        </if>
        <if test="acpg_chnl_cd != null and acpg_chnl_cd != ''">
            AND A.ACPG_CHNL_CD = #{acpg_chnl_cd}
        </if>
        <if test="cons_stat_cd != null and cons_stat_cd != ''">
            AND A.CONS_STAT_CD = #{cons_stat_cd}
        </if>
        <if test="cons_stat_cd_list != null and cons_stat_cd_list != ''">
            AND A.CONS_STAT_CD IN (${cons_stat_cd_list})
        </if>
        <if test="user_typ == 'actp_id'">
            <choose>
                <when test="user_id != null and user_id != ''">
                AND A.ACTP_ID IN(${user_id})
                </when>
                <when test="team2_cd != null and team2_cd != ''">
                AND EXISTS (SELECT 'Y'
                              FROM TB_USER B
                             WHERE B.USER_ID = A.ACTP_ID
                               AND B.CNTR_CD = A.CNTR_CD
                               AND B.TEAM_CD = #{team2_cd})
                </when>
                <when test="team1_cd != null and team1_cd != ''">
                AND EXISTS (SELECT 'Y'
                              FROM TB_USER B
                                 , TB_CONS_TEAM C
                             WHERE B.USER_ID = A.ACTP_ID
                               AND B.CNTR_CD = A.CNTR_CD
                               AND B.TEAM_CD = C.TEAM_CD
                               AND B.CNTR_CD = C.CNTR_CD
                               AND C.HGRN_TEAM_CD = #{team1_cd})
                </when>
            </choose>
        </if>
        <if test="user_typ == 'chpr_id'">
            <choose>
                <when test="user_id != null and user_id != ''">
                AND A.CHPR_ID = #{user_id}
                </when>
                <when test="team2_cd != null and team2_cd != ''">
                AND EXISTS (SELECT 'Y'
                              FROM TB_USER B
                             WHERE B.USER_ID = A.CHPR_ID
                               AND B.CNTR_CD = A.CNTR_CD
                               AND B.TEAM_CD = #{team2_cd})
                </when>
                <when test="team1_cd != null and team1_cd != ''">
                AND EXISTS (SELECT 'Y'
                              FROM TB_USER B
                                 , TB_CONS_TEAM C
                             WHERE B.USER_ID = A.CHPR_ID
                               AND B.CNTR_CD = A.CNTR_CD
                               AND B.TEAM_CD = C.TEAM_CD
                               AND B.CNTR_CD = C.CNTR_CD
                               AND C.HGRN_TEAM_CD = #{team1_cd})
                </when>
            </choose>
        </if>
        <if test="user_typ == 'amnd_id'">
            <choose>
                <when test="user_id != null and user_id != ''">
                AND A.AMND_ID = #{user_id}
                </when>
                <when test="team2_cd != null and team2_cd != ''">
                AND EXISTS (SELECT 'Y'
                              FROM TB_USER B
                             WHERE B.USER_ID = A.AMND_ID
                               AND B.CNTR_CD = A.CNTR_CD
                               AND B.TEAM_CD = #{team2_cd})
                </when>
                <when test="team1_cd != null and team1_cd != ''">
                AND EXISTS (SELECT 'Y'
                              FROM TB_USER B
                                 , TB_CONS_TEAM C
                             WHERE B.USER_ID = A.AMND_ID
                               AND B.CNTR_CD = A.CNTR_CD
                               AND B.TEAM_CD = C.TEAM_CD
                               AND B.CNTR_CD = C.CNTR_CD
                               AND C.HGRN_TEAM_CD = #{team1_cd})
                </when>
            </choose>
        </if>
        <if test="cons_typ1_cd != null and cons_typ1_cd != ''">
            AND A.CONS_TYP1_CD = #{cons_typ1_cd}
        </if>
        <if test="cons_typ2_cd != null and cons_typ2_cd != ''">
            AND A.CONS_TYP2_CD = #{cons_typ2_cd}
        </if>
        <if test="cons_typ3_cd != null and cons_typ3_cd != ''">
            AND A.CONS_TYP3_CD = #{cons_typ3_cd}
        </if>
        <if test="cntr_cd != null and cntr_cd != ''">
            AND A.CNTR_CD = #{cntr_cd}
        </if>
        <if test="srch_vl != null and srch_vl != ''">
            <if test="srch_typ == 'cust_nm'">
                <!-- 2018.05.11 TB_CONS 테이블 개인정보는 MEMBER 테이블에서... AND A.MEM_NM LIKE '%' || #{srch_vl} || '%' -->
                AND MEM.MEM_NM LIKE '%' || #{srch_vl} || '%'
            </if>
            <if test="srch_typ == 'cons_memo_cntn'">
                AND A.CONS_MEMO_CNTN LIKE '%' || #{srch_vl} || '%'
            </if>
            <if test="srch_typ == 'all'">
                AND (A.CONS_MEMO_CNTN LIKE '%' || #{srch_vl} || '%'
                     OR MEM.MEM_NM LIKE '%' || #{srch_vl} || '%')  <!-- 2018.05.11 TB_CONS 테이블 개인정보는 MEMBER 테이블에서... OR A.MEM_NM LIKE '%' || #{srch_vl} || '%') -->
            </if>
        </if>
        <if test='dept_yn == "Y"'>
            <if test="dataAthrQury != null and dataAthrQury != ''">
                ${dataAthrQury}
            </if>
        </if>
    </sql>

    <select id="ConsMap.getConsCount" parameterType="map" resultType="int">
        SELECT /* ConsMap.getConsCount */
               COUNT(*)
          FROM TB_CONS A
          LEFT OUTER JOIN			<!--  2018.05.11 TB_CONS 테이블 개인정보는 MEMBER 테이블에서... -->

               LF_DMUSER.MEMBER MEM
            ON A.MEM_NO = MEM.MEM_NO
         WHERE 1 = 1
        <include refid="ConsMap.selectCondition_fragment"/>
        <if test="cons_memo_cntn != null and cons_memo_cntn != ''">
            AND A.CONS_MEMO_CNTN LIKE '%' || #{cons_memo_cntn} || '%'
        </if>
    </select>

    <select id="ConsMap.getConsList" parameterType="map" resultType="resultMap">
        SELECT /* ConsMap.getConsList */
               C.*
             , (SELECT LF_DMUSER.FN_COM_NM('S014',KSTBIT) FROM LF_DMUSER.MEM_PROD_ACCNT WHERE ACCNT_NO = C.ACCNT_NO) KSTBIT
             , DECODE(SUBSTR(ACPG_DTTM, 1, 8), TO_CHAR(SYSDATE, 'YYYYMMDD'), 'Y', 'N') AS TODAY_FLAG
             , GETCODENM('CNS060', ARS_SRVC_ADDR, CNTR_CD) AS ARS_SRVC_ADDR_NM
             , replace(GETCODENM('CNS030', CONS_STAT_CD, CNTR_CD), chr(0), '') AS CONS_STAT_NM
             , replace(GETCODENM('CNS020', CONS_DSPSMDDL_DTPT_CD, CNTR_CD), chr(0), '') AS CONS_DSPSMDDL_DTPT_NM
             , (TO_DATE(RECRNC_DTTM, 'YYYYMMDDHH24MISS') - SYSDATE) * 24 * 60 AS RECRNC_LEFT_TM
             , (CASE WHEN TO_DATE(RECRNC_DTTM,'YYYYMMDDHH24MISS') > SYSDATE
                          THEN TRUNC(TO_DATE(RECRNC_DTTM,'YYYYMMDDHH24MISS') - SYSDATE) || '일 ' ||
                          LPAD(TRUNC(MOD((TO_DATE(RECRNC_DTTM,'YYYYMMDDHH24MISS') - SYSDATE), 1) * 24), 2, 0) || ':' ||
                          LPAD(TRUNC(MOD((TO_DATE(RECRNC_DTTM,'YYYYMMDDHH24MISS') - SYSDATE) * 24, 1) * 60), 2, 0) || ':' ||
                          LPAD(TRUNC(ROUND(MOD((TO_DATE(RECRNC_DTTM,'YYYYMMDDHH24MISS') - SYSDATE) * 24 * 60, 1) * 60)), 2, 0)
                     ELSE TRUNC(SYSDATE - TO_DATE(RECRNC_DTTM,'YYYYMMDDHH24MISS')) || '일 ' ||
                          LPAD(TRUNC(MOD((SYSDATE - TO_DATE(RECRNC_DTTM,'YYYYMMDDHH24MISS')), 1) * 24), 2, 0) || ':' ||
                          LPAD(TRUNC(MOD((SYSDATE - TO_DATE(RECRNC_DTTM,'YYYYMMDDHH24MISS')) * 24, 1) * 60), 2, 0) || ':' ||
                          LPAD(TRUNC(ROUND(MOD((SYSDATE - TO_DATE(RECRNC_DTTM,'YYYYMMDDHH24MISS')) * 24 * 60, 1) * 60)), 2, 0)
                END) AS RECRNC_TERM
             , (SELECT D.TEAM_NM
                  FROM TB_CONS_TEAM D
                 WHERE D.TEAM_CD = C.ACTP_TEAM1_CD
                   AND D.CNTR_CD = C.CNTR_CD) AS ACTP_TEAM1_NM
             , (SELECT D.TEAM_NM
                  FROM TB_CONS_TEAM D
                 WHERE D.TEAM_CD = C.ACTP_TEAM2_CD
                   AND D.CNTR_CD = C.CNTR_CD) AS ACTP_TEAM2_NM
             , DECODE(LENGTH(C.IDN_NO), 10, 'Y', 'N') AS BUSINESS_YN
             ,C.CHCNT
             ,TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI:SS') SYS_DATE
          FROM (SELECT ROWNUM AS PAGE_INDX, B.*
                     , (SELECT C.RECRNC_DT || C.RECRNC_HRMN || '00'
                          FROM TB_RECRNC_RESR_DTL C
                         WHERE C.CONSNO = B.CONSNO) AS RECRNC_DTTM
                     , (SELECT C.HGRN_TEAM_CD
                          FROM TB_CONS_TEAM C
                         WHERE C.TEAM_CD = B.ACTP_TEAM2_CD
                           AND C.CNTR_CD = B.CNTR_CD) AS ACTP_TEAM1_CD
<!--
    2018.05.11 TB_CONS 테이블 개인정보는 MEMBER 테이블에서...
                  FROM (SELECT A.CONSNO, A.CONSNO_GROP_NO, A.CONSNO_SQNO
                               , replace(A.ARS_SRVC_ADDR,chr(0),'') ARS_SRVC_ADDR
                               , replace(A.INCO_TLNO,chr(0),'') INCO_TLNO
                             , replace(A.CALL_ID,chr(0),'') CALL_ID
                             , A.MEM_NO, A.ACPG_CHNL_CD, A.ACPG_DTTM, A.ACTP_ID
                             , A.TOTL_CONS_HR
                             , replace(A.CLNT_NM,chr(0),'') CLNT_NM
                             , A.CONS_TYP1_CD, A.CONS_TYP2_CD, A.CONS_TYP3_CD
                             , replace(A.CONS_MEMO_CNTN, chr(0), '') CONS_MEMO_CNTN
                             , A.CONS_STAT_CD, A.CONS_DSPSMDDL_DTPT_CD
                             , replace(trim(A.CONS_DSPS_DTTM), chr(0), '') CONS_DSPS_DTTM
                             , A.RSPS_DEPT_CD
                             , A.CHPR_ID, A.ADMR_AMNT_YN
                             , replace(A.ADMR_ID,chr(0),'') ADMR_ID
                             , replace(A.ADMR_AMNT_DTTM,chr(0),'') ADMR_AMNT_DTTM
                             , A.CONS_DSPSMDDL_DTPT_CD AS OLD_CONS_DSPSMDDL_DTPT_CD
                             , A.CNTR_CD, A.RGSR_ID, A.RGSN_DTTM, A.AMND_ID, A.AMNT_DTTM
                             , A.CONC_YN, A.EMPLE_NO, A.EMPLE_NM, A.JOIN_DT, A.CTI_CRNC_DTL_ID
                             , replace(A.MST_KEY,chr(0),'') MST_KEY
                             , replace(A.DTPT_KEY, chr(0),'') DTPT_KEY
                             , A.ACCNT_NO, A.DEPT_CD
                             , REPLACE(A.MEM_NM, chr(0),'') MEM_NM
                             , replace(A.SEX, chr(0), '') SEX
                             , replace(A.BRTH_MON_DAY, chr(0), '') BRTH_MON_DAY
                             , A.CI_VAL
                             , replace(A.IDN_NO, chr(0),'') IDN_NO
                             , replace(A.HOME_TEL,chr(0),'') HOME_TEL
                             , replace(A.CELL,chr(0),'') CELL
                             , replace(A.WRPL_TEL,chr(0),'') WRPL_TEL
                             , A.HOME_ZIP, A.HOME_ADDR, A.HOME_ADDR2
                             , A.CREDIT_RATING, A.CRDT_MNG_NO, A.EMAIL, A.NOTE
                             , replace(GETCODENM('CNS010', A.ACPG_CHNL_CD, A.CNTR_CD), chr(0), '') AS ACPG_CHNL_NM

                             , (SELECT replace(C.CONS_TYP_NM, chr(0), '')
                                  FROM TB_CONS_TYP_CD C
                                 WHERE C.CONS_TYP_CD = A.CONS_TYP1_CD
                                   AND C.CNTR_CD = A.CNTR_CD) AS CONS_TYP1_NM
                             , (SELECT replace(C.CONS_TYP_NM, chr(0), '')
                                  FROM TB_CONS_TYP_CD C
                                 WHERE C.CONS_TYP_CD = A.CONS_TYP2_CD
                                   AND C.CNTR_CD = A.CNTR_CD) AS CONS_TYP2_NM
                             , (SELECT replace(C.CONS_TYP_NM, chr(0), '')
                                  FROM TB_CONS_TYP_CD C
                                 WHERE C.CONS_TYP_CD = A.CONS_TYP3_CD
                                   AND C.CNTR_CD = A.CNTR_CD) AS CONS_TYP3_NM
                             , (SELECT C.USER_NM
                                  FROM TB_USER C
                                 WHERE C.USER_ID = A.ACTP_ID
                                   AND C.CNTR_CD = A.CNTR_CD) AS ACTP_NM
                             , (SELECT C.TEAM_CD
                                  FROM TB_USER C
                                 WHERE C.USER_ID = A.ACTP_ID
                                   AND C.CNTR_CD = A.CNTR_CD) AS ACTP_TEAM2_CD
                             , (SELECT replace(C.USER_NM, chr(0), '')
                                  FROM TB_USER C
                                 WHERE C.USER_ID = A.CHPR_ID
                                   AND C.CNTR_CD = A.CNTR_CD) AS CHPR_NM
                             , (SELECT C.USER_NM
                                  FROM TB_USER C
                                 WHERE C.USER_ID = A.AMND_ID
                                   AND C.CNTR_CD = A.CNTR_CD) AS AMND_NM
                             , ( SELECT COUNT(*) FROM TB_CONS_HSTR CH WHERE  CH.CNTR_CD = A.CNTR_CD AND CH.CONSNO = A.CONSNO )   CHCNT
                          FROM TB_CONS A
-->

                    FROM (SELECT A.CONSNO, A.CONSNO_GROP_NO, A.CONSNO_SQNO
                               , replace(A.ARS_SRVC_ADDR,chr(0),'') ARS_SRVC_ADDR
                               , replace(A.INCO_TLNO,chr(0),'') INCO_TLNO
                             , replace(A.CALL_ID,chr(0),'') CALL_ID
                             , A.MEM_NO, A.ACPG_CHNL_CD, A.ACPG_DTTM, A.ACTP_ID
                             , A.TOTL_CONS_HR
                             , replace(A.CLNT_NM,chr(0),'') CLNT_NM
                             , A.CONS_TYP1_CD, A.CONS_TYP2_CD, A.CONS_TYP3_CD
                             , replace(A.CONS_MEMO_CNTN, chr(0), '') CONS_MEMO_CNTN
                             , A.CONS_STAT_CD, A.CONS_DSPSMDDL_DTPT_CD
                             , replace(trim(A.CONS_DSPS_DTTM), chr(0), '') CONS_DSPS_DTTM
                             , A.RSPS_DEPT_CD
                             , A.CHPR_ID, A.ADMR_AMNT_YN
                             , replace(A.ADMR_ID,chr(0),'') ADMR_ID
                             , replace(A.ADMR_AMNT_DTTM,chr(0),'') ADMR_AMNT_DTTM
                             , A.CONS_DSPSMDDL_DTPT_CD AS OLD_CONS_DSPSMDDL_DTPT_CD
                             , A.CNTR_CD, A.RGSR_ID, A.RGSN_DTTM, A.AMND_ID, A.AMNT_DTTM
                             , A.CONC_YN, A.EMPLE_NO, A.EMPLE_NM, A.JOIN_DT, A.CTI_CRNC_DTL_ID
                             , replace(A.MST_KEY,chr(0),'') MST_KEY
                             , replace(A.DTPT_KEY, chr(0),'') DTPT_KEY
                             , A.ACCNT_NO, A.DEPT_CD
                             , replace(A.SEX, chr(0), '') SEX
                             , replace(A.BRTH_MON_DAY, chr(0), '') BRTH_MON_DAY

                             , REPLACE(MEM.MEM_NM, chr(0),'') MEM_NM
                             , MEM.CI_VAL
                             , replace(MEM.HOME_TEL,chr(0),'') HOME_TEL
                             , replace(MEM.CELL,chr(0),'') CELL
                             , replace(MEM.WRPL_TEL,chr(0),'') WRPL_TEL
                             , MEM.HOME_ZIP, MEM.HOME_ADDR, MEM.HOME_ADDR2
                             , MEM.EMAIL
                             , A.NOTE
                             , replace(A.IDN_NO, chr(0),'') IDN_NO
                             , A.CREDIT_RATING, A.CRDT_MNG_NO
                             , replace(GETCODENM('CNS010', A.ACPG_CHNL_CD, A.CNTR_CD), chr(0), '') AS ACPG_CHNL_NM
                             , (SELECT replace(C.CONS_TYP_NM, chr(0), '')
                                  FROM TB_CONS_TYP_CD C
                                 WHERE C.CONS_TYP_CD = A.CONS_TYP1_CD
                                   AND C.CNTR_CD = A.CNTR_CD) AS CONS_TYP1_NM
                             , (SELECT replace(C.CONS_TYP_NM, chr(0), '')
                                  FROM TB_CONS_TYP_CD C
                                 WHERE C.CONS_TYP_CD = A.CONS_TYP2_CD
                                   AND C.CNTR_CD = A.CNTR_CD) AS CONS_TYP2_NM
                             , (SELECT replace(C.CONS_TYP_NM, chr(0), '')
                                  FROM TB_CONS_TYP_CD C
                                 WHERE C.CONS_TYP_CD = A.CONS_TYP3_CD
                                   AND C.CNTR_CD = A.CNTR_CD) AS CONS_TYP3_NM
                             , (SELECT C.USER_NM
                                  FROM TB_USER C
                                 WHERE C.USER_ID = A.ACTP_ID
                                   AND C.CNTR_CD = A.CNTR_CD) AS ACTP_NM
                             , (SELECT C.TEAM_CD
                                  FROM TB_USER C
                                 WHERE C.USER_ID = A.ACTP_ID
                                   AND C.CNTR_CD = A.CNTR_CD) AS ACTP_TEAM2_CD
                             , (SELECT replace(C.USER_NM, chr(0), '')
                                  FROM TB_USER C
                                 WHERE C.USER_ID = A.CHPR_ID
                                   AND C.CNTR_CD = A.CNTR_CD) AS CHPR_NM
                             , (SELECT C.USER_NM
                                  FROM TB_USER C
                                 WHERE C.USER_ID = A.AMND_ID
                                   AND C.CNTR_CD = A.CNTR_CD) AS AMND_NM
                             , ( SELECT COUNT(*) FROM TB_CONS_HSTR CH WHERE  CH.CNTR_CD = A.CNTR_CD AND CH.CONSNO = A.CONSNO )   CHCNT
                          FROM TB_CONS A
                               LEFT OUTER JOIN
                               LF_DMUSER.MEMBER MEM
                               ON A.MEM_NO = MEM.MEM_NO
                         WHERE 1 = 1
                    <include refid="ConsMap.selectCondition_fragment"/>
                    <if test="cons_memo_cntn != null and cons_memo_cntn != ''">
                        AND A.CONS_MEMO_CNTN LIKE '%' || #{cons_memo_cntn} || '%'
                    </if>
                    <choose>
                        <when test="orderBy == null or orderBy == ''">
                            ORDER BY ACPG_DTTM ASC
                        </when>
                        <otherwise>
                            ORDER BY ${orderBy} ${orderDirection}
                        </otherwise>
                    </choose>
                       ) B
               ) C
        <if test="startLine != null and startLine != '' and endLine != null and endLine != ''">
        <![CDATA[
         WHERE PAGE_INDX >= #{startLine}
           AND PAGE_INDX < #{endLine}
        ]]>
        </if>
    </select>
    
    <select id="ConsMap.getConsCount2" parameterType="map" resultType="int">
        SELECT /* ConsMap.getConsCount2 */
               COUNT(*)
          FROM TB_CONS A
          LEFT OUTER JOIN			<!--  2018.05.11 TB_CONS 테이블 개인정보는 MEMBER 테이블에서... -->

               LF_DMUSER.MEMBER MEM
            ON A.MEM_NO = MEM.MEM_NO
         WHERE 1 = 1
        <include refid="ConsMap.selectCondition_fragment"/>
        <if test="cons_memo_cntn != null and cons_memo_cntn != ''">
            AND A.CONS_MEMO_CNTN LIKE '%' || #{cons_memo_cntn} || '%'
        </if>
    </select>

    <select id="ConsMap.getConsList2" parameterType="map" resultType="resultMap">
        SELECT /* ConsMap.getConsList2 */
               C.*
             , (SELECT LF_DMUSER.FN_COM_NM('S014',KSTBIT) FROM LF_DMUSER.MEM_PROD_ACCNT WHERE ACCNT_NO = C.ACCNT_NO) KSTBIT
             , DECODE(SUBSTR(ACPG_DTTM, 1, 8), TO_CHAR(SYSDATE, 'YYYYMMDD'), 'Y', 'N') AS TODAY_FLAG
             , GETCODENM('CNS060', ARS_SRVC_ADDR, CNTR_CD) AS ARS_SRVC_ADDR_NM
             , replace(GETCODENM('CNS030', CONS_STAT_CD, CNTR_CD), chr(0), '') AS CONS_STAT_NM
             , replace(GETCODENM('CNS020', CONS_DSPSMDDL_DTPT_CD, CNTR_CD), chr(0), '') AS CONS_DSPSMDDL_DTPT_NM
             , (TO_DATE(RECRNC_DTTM, 'YYYYMMDDHH24MISS') - SYSDATE) * 24 * 60 AS RECRNC_LEFT_TM
             , (CASE WHEN TO_DATE(RECRNC_DTTM,'YYYYMMDDHH24MISS') > SYSDATE
                          THEN TRUNC(TO_DATE(RECRNC_DTTM,'YYYYMMDDHH24MISS') - SYSDATE) || '일 ' ||
                          LPAD(TRUNC(MOD((TO_DATE(RECRNC_DTTM,'YYYYMMDDHH24MISS') - SYSDATE), 1) * 24), 2, 0) || ':' ||
                          LPAD(TRUNC(MOD((TO_DATE(RECRNC_DTTM,'YYYYMMDDHH24MISS') - SYSDATE) * 24, 1) * 60), 2, 0) || ':' ||
                          LPAD(TRUNC(ROUND(MOD((TO_DATE(RECRNC_DTTM,'YYYYMMDDHH24MISS') - SYSDATE) * 24 * 60, 1) * 60)), 2, 0)
                     ELSE TRUNC(SYSDATE - TO_DATE(RECRNC_DTTM,'YYYYMMDDHH24MISS')) || '일 ' ||
                          LPAD(TRUNC(MOD((SYSDATE - TO_DATE(RECRNC_DTTM,'YYYYMMDDHH24MISS')), 1) * 24), 2, 0) || ':' ||
                          LPAD(TRUNC(MOD((SYSDATE - TO_DATE(RECRNC_DTTM,'YYYYMMDDHH24MISS')) * 24, 1) * 60), 2, 0) || ':' ||
                          LPAD(TRUNC(ROUND(MOD((SYSDATE - TO_DATE(RECRNC_DTTM,'YYYYMMDDHH24MISS')) * 24 * 60, 1) * 60)), 2, 0)
                END) AS RECRNC_TERM
             , (SELECT D.TEAM_NM
                  FROM TB_CONS_TEAM D
                 WHERE D.TEAM_CD = C.ACTP_TEAM1_CD
                   AND D.CNTR_CD = C.CNTR_CD) AS ACTP_TEAM1_NM
             , (SELECT D.TEAM_NM
                  FROM TB_CONS_TEAM D
                 WHERE D.TEAM_CD = C.ACTP_TEAM2_CD
                   AND D.CNTR_CD = C.CNTR_CD) AS ACTP_TEAM2_NM
             , DECODE(LENGTH(C.IDN_NO), 10, 'Y', 'N') AS BUSINESS_YN
             ,C.CHCNT
             ,TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI:SS') SYS_DATE
          FROM (SELECT ROWNUM AS PAGE_INDX, B.*
                     , (SELECT C.RECRNC_DT || C.RECRNC_HRMN || '00'
                          FROM TB_RECRNC_RESR_DTL C
                         WHERE C.CONSNO = B.CONSNO) AS RECRNC_DTTM
                     , (SELECT C.HGRN_TEAM_CD
                          FROM TB_CONS_TEAM C
                         WHERE C.TEAM_CD = B.ACTP_TEAM2_CD
                           AND C.CNTR_CD = B.CNTR_CD) AS ACTP_TEAM1_CD
                    FROM (SELECT A.CONSNO, A.CONSNO_GROP_NO, A.CONSNO_SQNO
                               , replace(A.ARS_SRVC_ADDR,chr(0),'') ARS_SRVC_ADDR
                               , replace(A.CALL_ID,chr(0),'') CALL_ID
                             , A.ACPG_CHNL_CD, A.ACPG_DTTM, A.ACTP_ID
                             , A.TOTL_CONS_HR
                             , replace(A.CLNT_NM,chr(0),'') CLNT_NM
                             , A.CONS_TYP1_CD, A.CONS_TYP2_CD, A.CONS_TYP3_CD
                             , replace(A.CONS_MEMO_CNTN, chr(0), '') CONS_MEMO_CNTN
                             , A.CONS_STAT_CD, A.CONS_DSPSMDDL_DTPT_CD
                             , replace(trim(A.CONS_DSPS_DTTM), chr(0), '') CONS_DSPS_DTTM
                             , A.RSPS_DEPT_CD
                             , A.CHPR_ID, A.ADMR_AMNT_YN
                             , replace(A.ADMR_ID,chr(0),'') ADMR_ID
                             , replace(A.ADMR_AMNT_DTTM,chr(0),'') ADMR_AMNT_DTTM
                             , A.CONS_DSPSMDDL_DTPT_CD AS OLD_CONS_DSPSMDDL_DTPT_CD
                             , A.CNTR_CD, A.RGSR_ID, A.RGSN_DTTM, A.AMND_ID, A.AMNT_DTTM
                             , A.CONC_YN, A.EMPLE_NO, A.EMPLE_NM, A.JOIN_DT, A.CTI_CRNC_DTL_ID
                             , replace(A.MST_KEY,chr(0),'') MST_KEY
                             , replace(A.DTPT_KEY, chr(0),'') DTPT_KEY
                             , A.ACCNT_NO, A.DEPT_CD
                             , replace(A.SEX, chr(0), '') SEX
                             , replace(A.BRTH_MON_DAY, chr(0), '') BRTH_MON_DAY

                             , REPLACE(MEM.MEM_NM, chr(0),'') MEM_NM
                             , MEM.CI_VAL
                             , replace(MEM.CELL,chr(0),'') CELL
                             , replace(MEM.WRPL_TEL,chr(0),'') WRPL_TEL
                             , MEM.HOME_ZIP, MEM.HOME_ADDR, MEM.HOME_ADDR2
                             , MEM.HOME_ZIP || ' ' || MEM.HOME_ADDR || ' ' || MEM.HOME_ADDR2 AS HOME_ADDR3
                             , MEM.EMAIL
                             , A.NOTE
                             , replace(A.IDN_NO, chr(0),'') IDN_NO
                             , A.CREDIT_RATING, A.CRDT_MNG_NO
                             , replace(GETCODENM('CNS010', A.ACPG_CHNL_CD, A.CNTR_CD), chr(0), '') AS ACPG_CHNL_NM
                             , (SELECT replace(C.CONS_TYP_NM, chr(0), '')
                                  FROM TB_CONS_TYP_CD C
                                 WHERE C.CONS_TYP_CD = A.CONS_TYP1_CD
                                   AND C.CNTR_CD = A.CNTR_CD) AS CONS_TYP1_NM
                             , (SELECT replace(C.CONS_TYP_NM, chr(0), '')
                                  FROM TB_CONS_TYP_CD C
                                 WHERE C.CONS_TYP_CD = A.CONS_TYP2_CD
                                   AND C.CNTR_CD = A.CNTR_CD) AS CONS_TYP2_NM
                             , (SELECT replace(C.CONS_TYP_NM, chr(0), '')
                                  FROM TB_CONS_TYP_CD C
                                 WHERE C.CONS_TYP_CD = A.CONS_TYP3_CD
                                   AND C.CNTR_CD = A.CNTR_CD) AS CONS_TYP3_NM
                             , (SELECT C.USER_NM
                                  FROM TB_USER C
                                 WHERE C.USER_ID = A.ACTP_ID
                                   AND C.CNTR_CD = A.CNTR_CD) AS ACTP_NM
                             , (SELECT C.TEAM_CD
                                  FROM TB_USER C
                                 WHERE C.USER_ID = A.ACTP_ID
                                   AND C.CNTR_CD = A.CNTR_CD) AS ACTP_TEAM2_CD
                             , (SELECT replace(C.USER_NM, chr(0), '')
                                  FROM TB_USER C
                                 WHERE C.USER_ID = A.CHPR_ID
                                   AND C.CNTR_CD = A.CNTR_CD) AS CHPR_NM
                             , (SELECT C.USER_NM
                                  FROM TB_USER C
                                 WHERE C.USER_ID = A.AMND_ID
                                   AND C.CNTR_CD = A.CNTR_CD) AS AMND_NM
                             , ( SELECT COUNT(*) FROM TB_CONS_HSTR CH WHERE  CH.CNTR_CD = A.CNTR_CD AND CH.CONSNO = A.CONSNO )   CHCNT
                             , PD.PROD_NM
                             , (SELECT COUNT(*)
                                FROM LF_DMUSER.PAY_MNG
                                WHERE MPA.ACCNT_NO = ACCNT_NO
                                AND DEL_FG = 'N') AS PAY_CNT
                             , NVL((SELECT SUM(PAY_AMT) AS AMT FROM LF_DMUSER.PAY_MNG
					               WHERE ACCNT_NO = MPA.ACCNT_NO
					               AND DEL_FG = 'N'), 0) + 
                               NVL((SELECT SUM(PAY_AMT) AS AMT FROM LF_DMUSER.PAY_MNG_DTL
					               WHERE ACCNT_NO = MPA.ACCNT_NO
					               AND DEL_FG = 'N'), 0) +
                               NVL((SELECT SUM(PAY_AMT) AS AMT FROM LF_DMUSER.PAY_MNG_DTL1
					               WHERE ACCNT_NO = MPA.ACCNT_NO
					               AND DEL_FG = 'N'), 0) AS PAY_AMT
                             , PD.PROD_AMT - NVL((SELECT SUM(PAY_AMT) AS AMT
                                              FROM LF_DMUSER.PAY_MNG
                                              WHERE ACCNT_NO = MPA.ACCNT_NO
                                              AND DEL_FG = 'N'), 0) + 
                                             NVL((SELECT SUM(PAY_AMT) AS AMT 
                                              FROM LF_DMUSER.PAY_MNG_DTL
                                              WHERE ACCNT_NO = MPA.ACCNT_NO
                                              AND DEL_FG = 'N'), 0) +
                                             NVL((SELECT SUM(PAY_AMT) AS AMT 
                                              FROM LF_DMUSER.PAY_MNG_DTL1
                                              WHERE ACCNT_NO = MPA.ACCNT_NO
                                              AND DEL_FG = 'N'), 0) - (NVL(PD.PROD_DC_CNT, 0)*PD.MON_PAY_AMT) AS PROD_AMT
                          FROM TB_CONS A LEFT OUTER JOIN
                               LF_DMUSER.MEMBER MEM ON A.MEM_NO = MEM.MEM_NO LEFT OUTER JOIN
                               LF_DMUSER.MEM_PROD_ACCNT MPA ON A.ACCNT_NO = MPA.ACCNT_NO LEFT OUTER JOIN
                               LF_DMUSER.PRODUCT PD ON PD.PROD_CD = MPA.PROD_CD
                         WHERE 1 = 1
                    <include refid="ConsMap.selectCondition_fragment"/>
                    <if test="cons_memo_cntn != null and cons_memo_cntn != ''">
                        AND A.CONS_MEMO_CNTN LIKE '%' || #{cons_memo_cntn} || '%'
                    </if>
                    <choose>
                        <when test="orderBy == null or orderBy == ''">
                            ORDER BY ACPG_DTTM ASC
                        </when>
                        <otherwise>
                            ORDER BY ${orderBy} ${orderDirection}
                        </otherwise>
                    </choose>
                       ) B
               ) C
        <if test="startLine != null and startLine != '' and endLine != null and endLine != ''">
        <![CDATA[
         WHERE PAGE_INDX >= #{startLine}
           AND PAGE_INDX < #{endLine}
        ]]>
        </if>
    </select>

    <select id="ConsMap.getConsGroup" parameterType="map" resultType="resultMap">
        SELECT /* ConsMap.getConsGroup */
               A.CONSNO, A.CONSNO_GROP_NO, A.CONSNO_SQNO, A.ARS_SRVC_ADDR, A.INCO_TLNO
             , A.CALL_ID, A.MEM_NO, A.ACPG_CHNL_CD, A.ACPG_DTTM, A.ACTP_ID
             , A.TOTL_CONS_HR, A.CLNT_NM, A.CONS_TYP1_CD, A.CONS_TYP2_CD, A.CONS_TYP3_CD
             , A.CONS_MEMO_CNTN, A.CONS_STAT_CD, A.CONS_DSPSMDDL_DTPT_CD, A.CONS_DSPS_DTTM, A.RSPS_DEPT_CD
             , A.CHPR_ID, A.ADMR_AMNT_YN, A.ADMR_ID, A.ADMR_AMNT_DTTM, A.CONS_DSPSMDDL_DTPT_CD AS OLD_CONS_DSPSMDDL_DTPT_CD
             , A.CNTR_CD, A.RGSR_ID, A.RGSN_DTTM, A.AMND_ID, A.AMNT_DTTM
             , A.CONC_YN, A.MST_KEY, A.DTPT_KEY, A.ACCNT_NO, A.CTI_CRNC_DTL_ID

<!--
    2018.05.11 TB_CONS 테이블 개인정보는 MEMBER 테이블에서...
             , A.MEM_NM, A.SEX, A.BRTH_MON_DAY, A.CI_VAL, A.IDN_NO
             , A.HOME_TEL, A.CELL, A.WRPL_TEL, A.HOME_ZIP, A.HOME_ADDR
             , A.HOME_ADDR2, A.CREDIT_RATING, A.CRDT_MNG_NO, A.EMAIL, A.DEPT_CD
             , A.EMPLE_NO, A.EMPLE_NM, A.JOIN_DT, A.NOTE
             , GETCODENM('CNS010', A.ACPG_CHNL_CD, A.CNTR_CD) AS ACPG_CHNL_NM
             , GETCODENM('CNS030', A.CONS_STAT_CD, A.CNTR_CD) AS CONS_STAT_NM
             , (SELECT C.CONS_TYP_NM
                  FROM TB_CONS_TYP_CD C
                 WHERE C.CONS_TYP_CD = A.CONS_TYP1_CD
                   AND C.CNTR_CD = A.CNTR_CD) AS CONS_TYP1_NM
             , (SELECT C.CONS_TYP_NM
                  FROM TB_CONS_TYP_CD C
                 WHERE C.CONS_TYP_CD = A.CONS_TYP2_CD
                   AND C.CNTR_CD = A.CNTR_CD) AS CONS_TYP2_NM
             , (SELECT C.CONS_TYP_NM
                  FROM TB_CONS_TYP_CD C
                 WHERE C.CONS_TYP_CD = A.CONS_TYP3_CD
                   AND C.CNTR_CD = A.CNTR_CD) AS CONS_TYP3_NM
             , (SELECT C.USER_NM
                  FROM TB_USER C
                 WHERE C.USER_ID = A.ACTP_ID
                   AND C.CNTR_CD = A.CNTR_CD) AS ACTP_NM
             , (SELECT C.USER_NM
                  FROM TB_USER C
                 WHERE C.USER_ID = A.CHPR_ID
                   AND C.CNTR_CD = A.CNTR_CD) AS CHPR_NM
             , (SELECT C.USER_NM
                  FROM TB_USER C
                 WHERE C.USER_ID = A.AMND_ID
                   AND C.CNTR_CD = A.CNTR_CD) AS AMND_NM
          FROM TB_CONS A
-->
             , MEM.MEM_NM, A.SEX, A.BRTH_MON_DAY, MEM.CI_VAL, A.IDN_NO
             , MEM.HOME_TEL, MEM.CELL, MEM.WRPL_TEL, MEM.HOME_ZIP, MEM.HOME_ADDR
             , MEM.HOME_ADDR2, A.CREDIT_RATING, A.CRDT_MNG_NO, MEM.EMAIL, A.DEPT_CD
             , A.EMPLE_NO, A.EMPLE_NM, A.JOIN_DT, A.NOTE
             , GETCODENM('CNS010', A.ACPG_CHNL_CD, A.CNTR_CD) AS ACPG_CHNL_NM
             , GETCODENM('CNS030', A.CONS_STAT_CD, A.CNTR_CD) AS CONS_STAT_NM
             , (SELECT C.CONS_TYP_NM
                  FROM TB_CONS_TYP_CD C
                 WHERE C.CONS_TYP_CD = A.CONS_TYP1_CD
                   AND C.CNTR_CD = A.CNTR_CD) AS CONS_TYP1_NM
             , (SELECT C.CONS_TYP_NM
                  FROM TB_CONS_TYP_CD C
                 WHERE C.CONS_TYP_CD = A.CONS_TYP2_CD
                   AND C.CNTR_CD = A.CNTR_CD) AS CONS_TYP2_NM
             , (SELECT C.CONS_TYP_NM
                  FROM TB_CONS_TYP_CD C
                 WHERE C.CONS_TYP_CD = A.CONS_TYP3_CD
                   AND C.CNTR_CD = A.CNTR_CD) AS CONS_TYP3_NM
             , (SELECT C.USER_NM
                  FROM TB_USER C
                 WHERE C.USER_ID = A.ACTP_ID
                   AND C.CNTR_CD = A.CNTR_CD) AS ACTP_NM
             , (SELECT C.USER_NM
                  FROM TB_USER C
                 WHERE C.USER_ID = A.CHPR_ID
                   AND C.CNTR_CD = A.CNTR_CD) AS CHPR_NM
             , (SELECT C.USER_NM
                  FROM TB_USER C
                 WHERE C.USER_ID = A.AMND_ID
                   AND C.CNTR_CD = A.CNTR_CD) AS AMND_NM
          FROM TB_CONS A
               LEFT OUTER JOIN
               LF_DMUSER.MEMBER MEM
               ON A.MEM_NO = MEM.MEM_NO
         WHERE CONSNO_GROP_NO = #{consno_grop_no}
      ORDER BY CONSNO_SQNO ASC
    </select>

    <insert id="ConsMap.insertCons" parameterType="map">
        <selectKey keyProperty="consno" resultType="String" order="BEFORE">
            SELECT 'CSL' || TO_CHAR(SYSDATE, 'YYYYMMDD') || LPAD(SEQ_CONS.NEXTVAL, 7, '0') FROM DUAL
        </selectKey>

        INSERT /* ConsMap.insertCons */
          INTO TB_CONS
               (CONSNO, CONSNO_GROP_NO, CONSNO_SQNO, ARS_SRVC_ADDR, INCO_TLNO
              , CALL_ID, MEM_NO, ACPG_CHNL_CD, ACPG_DTTM, ACTP_ID
              , CLNT_NM, CONS_TYP1_CD, CONS_TYP2_CD, CONS_TYP3_CD, CONS_STAT_CD
              , CONS_DSPSMDDL_DTPT_CD, RSPS_DEPT_CD, CHPR_ID, CONC_YN, CONS_MEMO_CNTN
              , MST_KEY, DTPT_KEY, ACCNT_NO, CTI_CRNC_DTL_ID

              , MEM_NM, SEX, BRTH_MON_DAY, CI_VAL, IDN_NO
              , HOME_TEL, CELL, WRPL_TEL, HOME_ZIP, HOME_ADDR
              , HOME_ADDR2, CREDIT_RATING, CRDT_MNG_NO, EMAIL, EMPLE_NO
              , EMPLE_NM, JOIN_DT, DEPT_CD, NOTE
        <if test="totl_cons_hr != null and totl_cons_hr != ''">
              , TOTL_CONS_HR
        </if>
        <if test="cons_stat_cd == '30'">
              , CONS_DSPS_DTTM
        </if>
              , CNTR_CD, RGSR_ID, RGSN_DTTM, AMND_ID, AMNT_DTTM)
        VALUES (#{consno}, NVL(#{consno_grop_no}, #{consno}), #{consno_sqno}, #{ars_srvc_addr}, REPLACE(#{inco_tlno}, '-', '')
              , #{call_id}, #{mem_no}, #{acpg_chnl_cd}, TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'), #{actp_id}
              , #{clnt_nm}, #{cons_typ1_cd}, #{cons_typ2_cd}, #{cons_typ3_cd}, #{cons_stat_cd}
              , #{cons_dspsmddl_dtpt_cd}, #{rsps_dept_cd}, #{chpr_id}, NVL(#{conc_yn}, 'N'), #{cons_memo_cntn}
              , #{mst_key}, #{dtpt_key}, #{accnt_no}, #{cti_crnc_dtl_id}

<!--
    2018.05.11 TB_CONS 테이블 개인정보는 빈값으로....
              , #{mem_nm}, #{sex}, REPLACE(#{brth_mon_day}, '-', ''), #{ci_val}, #{idn_no}
              , REPLACE(#{home_tel}, '-', ''), REPLACE(#{cell}, '-', ''), REPLACE(#{wrpl_tel}, '-', ''), REPLACE(#{home_zip}, '-', ''), #{home_addr}
              , #{home_addr2}, #{credit_rating}, #{crdt_mng_no}, #{email}, #{emple_no}
-->

              , '', #{sex}, REPLACE(#{brth_mon_day}, '-', ''), '', #{idn_no}
              , '', '', '', '', ''
              , '', #{credit_rating}, #{crdt_mng_no}, '', #{emple_no}
              , #{emple_nm}, REPLACE(#{join_dt}, '-', ''), #{dept_cd}, #{note}
        <if test="totl_cons_hr != null and totl_cons_hr != ''">
              , #{totl_cons_hr}
        </if>
        <if test="cons_stat_cd == '30'">
              , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')
        </if>
              , #{cntr_cd}, #{rgsr_id}, TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'), #{amnd_id}, TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))
    </insert>

    <update id="ConsMap.updateCons" parameterType="map">
        UPDATE /* ConsMap.updateCons */
               TB_CONS
           SET MEM_NO = #{mem_no}
             , TOTL_CONS_HR = #{totl_cons_hr}
             , CLNT_NM = #{clnt_nm}
             , CONS_TYP1_CD = #{cons_typ1_cd}
             , CONS_TYP2_CD = #{cons_typ2_cd}
             , CONS_TYP3_CD = #{cons_typ3_cd}
             , CONS_MEMO_CNTN = #{cons_memo_cntn}
             , CONS_STAT_CD = #{cons_stat_cd}
             , CONS_DSPSMDDL_DTPT_CD = #{cons_dspsmddl_dtpt_cd}
             , RSPS_DEPT_CD = #{rsps_dept_cd}
             , CHPR_ID = #{chpr_id}
             , CONC_YN = #{conc_yn}
            <if test="cti_crnc_dtl_id != null and cti_crnc_dtl_id != ''">
             , CTI_CRNC_DTL_ID = #{cti_crnc_dtl_id}
            </if>

<!--
    2018.05.11 TB_CONS 테이블 개인정보는 빈값으로....

             , MEM_NM = #{mem_nm}
             , SEX = #{sex}
             , BRTH_MON_DAY = REPLACE(#{brth_mon_day}, '-', '')
             , CI_VAL = #{ci_val}
             , IDN_NO = #{idn_no}
             , HOME_TEL = REPLACE(#{home_tel}, '-', '')
             , CELL = REPLACE(#{cell}, '-', '')
             , WRPL_TEL = REPLACE(#{wrpl_tel}, '-', '')
             , HOME_ZIP = REPLACE(#{home_zip}, '-', '')
             , HOME_ADDR = #{home_addr}
             , HOME_ADDR2 = #{home_addr2}
             , CREDIT_RATING = #{credit_rating}
             , CRDT_MNG_NO = #{crdt_mng_no}
             , EMAIL = #{email}
-->

             , MEM_NM = ''
             , SEX = #{sex}
             , BRTH_MON_DAY = REPLACE(#{brth_mon_day}, '-', '')
             , CI_VAL = ''
             , IDN_NO = #{idn_no}
             , HOME_TEL = ''
             , CELL = ''
             , WRPL_TEL = ''
             , HOME_ZIP = ''
             , HOME_ADDR = ''
             , HOME_ADDR2 = ''
             , CREDIT_RATING = #{credit_rating}
             , CRDT_MNG_NO = #{crdt_mng_no}
             , EMAIL = ''
             , EMPLE_NO = #{emple_no}
             , EMPLE_NM = #{emple_nm}
             , JOIN_DT = REPLACE(#{join_dt}, '-', '')
             , DEPT_CD = #{dept_cd}
             , NOTE = #{note}
             , ACPG_CHNL_CD = #{acpg_chnl_cd}
        <if test="mst_key != null and mst_key != ''">
             , MST_KEY = #{mst_key}
        </if>
        <if test="dtpt_key != null and dtpt_key != ''">
             , DTPT_KEY = #{dtpt_key}
        </if>
        <if test="accnt_no != null and accnt_no != ''">
             , ACCNT_NO = #{accnt_no}
        </if>
        <if test="cons_stat_cd == '30'">
             , CONS_DSPS_DTTM = TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')
        </if>
        <if test="admr_amnt_yn != null and admr_amnt_yn != ''">
             , ADMR_AMNT_YN = #{admr_amnt_yn}
            <if test='admr_amnt_yn == "Y"'>
                , ADMR_ID = #{admr_id}
                , ADMR_AMNT_DTTM = TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')
            </if>
        </if>
             , AMND_ID = #{amnd_id}
             , AMNT_DTTM  = TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')
         WHERE CONSNO = #{consno}
    </update>

    <update id="ConsMap.updateConsTrctChpr" parameterType="map">
        UPDATE /* ConsMap.updateConsTrctChpr */
               TB_CONS
           SET CONS_STAT_CD = #{cons_stat_cd}
             , CONS_DSPSMDDL_DTPT_CD = #{cons_dspsmddl_dtpt_cd}
             , RSPS_DEPT_CD = #{rsps_dept_cd}
             , CHPR_ID = #{chpr_id}
             , AMND_ID = #{amnd_id}
             , AMNT_DTTM  = TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')
         WHERE CONSNO = #{consno}
    </update>

    <select id="ConsMap.getConsChartCount" parameterType="map" resultType="resultMap">
        SELECT /* ConsMap.getConsChartCount */
               NVL(SUM(TODAY), 0) AS TODAY_CNT
             , NVL(SUM(YESTERDAY), 0) AS YESTERDAY_CNT
             , NVL(SUM(WEEK), 0) AS WEEK_CNT
             , NVL(SUM(MONTH), 0) AS MONTH_CNT
          FROM (SELECT CASE WHEN SUBSTR(ACPG_DTTM, 1, 8) = TO_CHAR(SYSDATE, 'YYYYMMDD') THEN 1 ELSE 0 END AS TODAY
                     , CASE WHEN SUBSTR(ACPG_DTTM, 1, 8) = TO_CHAR(SYSDATE - 1, 'YYYYMMDD') THEN 1 ELSE 0 END AS YESTERDAY
                     , CASE WHEN SUBSTR(ACPG_DTTM, 1, 8) BETWEEN TO_CHAR(TRUNC(SYSDATE, 'D'), 'YYYYMMDD') AND TO_CHAR(SYSDATE, 'YYYYMMDD') THEN 1 ELSE 0 END AS WEEK
                     , CASE WHEN SUBSTR(ACPG_DTTM, 1, 8) BETWEEN TO_CHAR(SYSDATE, 'YYYYMM') || '01' AND TO_CHAR(SYSDATE, 'YYYYMMDD') THEN 1 ELSE 0 END AS MONTH
                  FROM TB_CONS A
                 WHERE CNTR_CD = #{cntr_cd}
                   AND ACPG_DTTM BETWEEN TO_CHAR(TRUNC(TO_DATE(TO_CHAR(SYSDATE, 'YYYYMM') || '01', 'YYYYMMDD'), 'D'), 'YYYYMMDD') || '000000'
                   AND TO_CHAR(SYSDATE, 'YYYYMMDD') || '235959'
        <choose>
            <when test="user_id != null and user_id != ''">
            AND ACTP_ID = #{user_id}
            </when>
            <when test="team2_cd != null and team2_cd != ''">
            AND EXISTS (SELECT 'Y'
                          FROM TB_USER B
                         WHERE B.USER_ID = A.ACTP_ID
                           AND B.CNTR_CD = A.CNTR_CD
                           AND B.TEAM_CD = #{team2_cd})
            </when>
            <when test="team1_cd != null and team1_cd != ''">
            AND EXISTS (SELECT 'Y'
                          FROM TB_USER B
                             , TB_CONS_TEAM C
                         WHERE B.USER_ID = A.ACTP_ID
                           AND B.CNTR_CD = A.CNTR_CD
                           AND B.TEAM_CD = C.TEAM_CD
                           AND B.CNTR_CD = C.CNTR_CD
                           AND C.HGRN_TEAM_CD = #{team1_cd})
            </when>
        </choose>
        <if test="cons_typ1_cd != null and cons_typ1_cd != ''">
                   AND CONS_TYP1_CD = #{cons_typ1_cd}
        </if>
               )
    </select>


    <sql id="ConsMap.selectChartCondition_fragment">
        <if test="srch_typ == 'today'">
           AND ACPG_DTTM BETWEEN TO_CHAR(SYSDATE, 'YYYYMMDD') || '000000'
           AND TO_CHAR(SYSDATE, 'YYYYMMDD') || '235959'
        </if>
        <if test="srch_typ == 'yesterday'">
           AND ACPG_DTTM BETWEEN TO_CHAR(SYSDATE - 1, 'YYYYMMDD') || '000000'
           AND TO_CHAR(SYSDATE - 1, 'YYYYMMDD') || '235959'
        </if>
        <if test="srch_typ == 'week'">
           AND ACPG_DTTM BETWEEN TO_CHAR(TRUNC(SYSDATE, 'D'), 'YYYYMMDD') || '000000'
           AND TO_CHAR(SYSDATE, 'YYYYMMDD') || '235959'
        </if>
        <if test="srch_typ == 'month'">
           AND ACPG_DTTM BETWEEN TO_CHAR(SYSDATE, 'YYYYMM') || '01000000'
           AND TO_CHAR(SYSDATE, 'YYYYMMDD') || '235959'
        </if>
        <if test="srch_typ == '2weeks'">
           AND ACPG_DTTM BETWEEN TO_CHAR(SYSDATE - 13, 'YYYYMMDD') || '000000'
           AND TO_CHAR(SYSDATE, 'YYYYMMDD') || '235959'
        </if>
        <choose>
            <when test="user_id != null and user_id != ''">
            AND ACTP_ID = #{user_id}
            </when>
            <when test="team2_cd != null and team2_cd != ''">
            AND EXISTS (SELECT 'Y'
                          FROM TB_USER B
                         WHERE B.USER_ID = A.ACTP_ID
                           AND B.CNTR_CD = A.CNTR_CD
                           AND B.TEAM_CD = #{team2_cd})
            </when>
            <when test="team1_cd != null and team1_cd != ''">
            AND EXISTS (SELECT 'Y'
                          FROM TB_USER B
                             , TB_CONS_TEAM C
                         WHERE B.USER_ID = A.ACTP_ID
                           AND B.CNTR_CD = A.CNTR_CD
                           AND B.TEAM_CD = C.TEAM_CD
                           AND B.CNTR_CD = C.CNTR_CD
                           AND C.HGRN_TEAM_CD = #{team1_cd})
            </when>
        </choose>
        <if test="cons_typ1_cd != null and cons_typ1_cd != ''">
            AND CONS_TYP1_CD = #{cons_typ1_cd}
        </if>
    </sql>

    <select id="ConsMap.getConsChartDailyList" parameterType="map" resultType="resultMap">
        SELECT /* ConsMap.getConsChartDailyList */
               TM || ':00' AS X, NVL(CNT, 0) AS CNT
          FROM (SELECT SUBSTR(ACPG_DTTM, 9, 2) AS ACPG_TM, COUNT(*) AS CNT
                  FROM TB_CONS A
                 WHERE A.CNTR_CD = #{cntr_cd}
        <include refid="ConsMap.selectChartCondition_fragment" />
        <![CDATA[
                 GROUP BY SUBSTR(ACPG_DTTM, 9, 2)
               ) A
             , (SELECT LPAD(LEVEL, 2, '0') AS TM
                  FROM DUAL
                 WHERE LEVEL >= 8
               CONNECT BY LEVEL <= 20
               ) B
         WHERE A.ACPG_TM(+) = B.TM
      ORDER BY B.TM ASC
        ]]>
    </select>

    <select id="ConsMap.getConsChartWeeklyList" parameterType="map" resultType="resultMap">
        SELECT /* ConsMap.getConsChartWeeklyList */
               TO_CHAR(TO_DATE(DT, 'YYYYMMDD'), 'DD') || '(' || DECODE(TO_CHAR(TO_DATE(DT, 'YYYYMMDD'), 'D'), 1, '일', 2, '월', 3, '화', 4, '수', 5, '목', 6, '금', 7, '토') || ')' AS X, NVL(CNT, 0) AS CNT
          FROM (SELECT SUBSTR(ACPG_DTTM, 1, 8) AS ACPG_DT, COUNT(*) AS CNT
                  FROM TB_CONS A
                 WHERE A.CNTR_CD = #{cntr_cd}
        <include refid="ConsMap.selectChartCondition_fragment" />
        <![CDATA[
                 GROUP BY SUBSTR(ACPG_DTTM, 1, 8)
               ) A
             , (SELECT TO_CHAR(TRUNC(SYSDATE, 'D') + LEVEL - 1, 'YYYYMMDD') AS DT
                  FROM DUAL
               CONNECT BY LEVEL <= (TRUNC(SYSDATE, 'D') + 6) - TRUNC(SYSDATE, 'D') + 1
               ) B
         WHERE A.ACPG_DT(+) = B.DT
      ORDER BY B.DT ASC
        ]]>
    </select>

    <select id="ConsMap.getConsChartMonthlyList" parameterType="map" resultType="resultMap">
        SELECT /* ConsMap.getConsChartMonthlyList */
               TO_CHAR(TO_DATE(DT, 'YYYYMMDD'), 'DD') AS X, NVL(CNT, 0) AS CNT
          FROM (SELECT SUBSTR(ACPG_DTTM, 1, 8) AS ACPG_DT, COUNT(*) AS CNT
                  FROM TB_CONS A
                 WHERE A.CNTR_CD = #{cntr_cd}
        <include refid="ConsMap.selectChartCondition_fragment" />
        <![CDATA[
                 GROUP BY SUBSTR(ACPG_DTTM, 1, 8)
               ) A
             , (SELECT TO_CHAR(TO_DATE(TO_CHAR(SYSDATE, 'YYYYMM') || '01', 'YYYYMMDD') + LEVEL - 1, 'YYYYMMDD') AS DT
                  FROM DUAL
               CONNECT BY LEVEL <= LAST_DAY(SYSDATE) - TO_DATE(TO_CHAR(SYSDATE, 'YYYYMM') || '01', 'YYYYMMDD') + 1
               ) B
         WHERE A.ACPG_DT(+) = B.DT
      ORDER BY B.DT ASC
        ]]>
    </select>

    <select id="ConsMap.getConsChart2WeeksList" parameterType="map" resultType="resultMap">
        SELECT /* ConsMap.getConsChart2WeeksList */
               TO_CHAR(TO_DATE(DT, 'YYYYMMDD'), 'MM-DD') || '(' || DECODE(TO_CHAR(TO_DATE(DT, 'YYYYMMDD'), 'D'), 1, '일', 2, '월', 3, '화', 4, '수', 5, '목', 6, '금', 7, '토') || ')' AS X, NVL(CNT, 0) AS CNT
          FROM (SELECT SUBSTR(ACPG_DTTM, 1, 8) AS ACPG_DT, COUNT(*) AS CNT
                  FROM TB_CONS A
                 WHERE A.CNTR_CD = #{cntr_cd}
        <include refid="ConsMap.selectChartCondition_fragment" />
        <![CDATA[
                 GROUP BY SUBSTR(ACPG_DTTM, 1, 8)
               ) A
             , (SELECT TO_CHAR((SYSDATE - 13) + LEVEL - 1, 'YYYYMMDD') AS DT
                  FROM DUAL
               CONNECT BY LEVEL <= SYSDATE - (SYSDATE - 13) + 1
               ) B
         WHERE A.ACPG_DT(+) = B.DT
      ORDER BY B.DT ASC
        ]]>
    </select>


    <select id="ConsMap.getConsTop5List" parameterType="map" resultType="resultMap">
        SELECT /* ConsMap.getConsTop5List */
               RANKING, CNT
             , (SELECT B.USER_NM
                  FROM TB_USER B
                 WHERE B.USER_ID = A.ACTP_ID
                   AND B.CNTR_CD = #{cntr_cd}) AS USER_NM
             , (SELECT C.TEAM_NM
                  FROM TB_USER B
                     , TB_CONS_TEAM C
                 WHERE B.USER_ID = A.ACTP_ID
                   AND B.TEAM_CD = C.TEAM_CD
                   AND B.CNTR_CD = #{cntr_cd}
                   AND C.CNTR_CD = #{cntr_cd}) AS TEAM_NM
          FROM (SELECT ACTP_ID, CNT
                     , RANK() OVER(ORDER BY CNT DESC) AS RANKING
                  FROM (SELECT ACTP_ID, COUNT(*) CNT
                          FROM TB_CONS
                         WHERE CNTR_CD = #{cntr_cd}
        <if test="srch_typ == 'today'">
                           AND ACPG_DTTM BETWEEN TO_CHAR(SYSDATE, 'YYYYMMDD') || '000000'
                           AND TO_CHAR(SYSDATE, 'YYYYMMDD') || '235959'
        </if>
        <if test="srch_typ == 'yesterday'">
                           AND ACPG_DTTM BETWEEN TO_CHAR(SYSDATE - 1, 'YYYYMMDD') || '000000'
                           AND TO_CHAR(SYSDATE - 1, 'YYYYMMDD') || '235959'
        </if>
        <if test="srch_typ == 'week'">
                           AND ACPG_DTTM BETWEEN TO_CHAR(TRUNC(SYSDATE, 'D'), 'YYYYMMDD') || '000000'
                           AND TO_CHAR(SYSDATE, 'YYYYMMDD') || '235959'
        </if>
        <if test="srch_typ == 'month'">
                           AND ACPG_DTTM BETWEEN TO_CHAR(SYSDATE, 'YYYYMM') || '01000000'
                           AND TO_CHAR(SYSDATE, 'YYYYMMDD') || '235959'
        </if>
        <![CDATA[
                         GROUP BY ACTP_ID
                       )
               ) A
         WHERE RANKING <= 5
        ]]>
    </select>

    <!--  미니전광판 실적 관련 쿼리 -->
    <select id="ConsMap.getTodayConsCount" parameterType="map" resultType="resultMap">
        SELECT /* ConsMap.getTodayConsCount */
                T.CNTR_CD, T.USER_ID, T.OPEN_CNT, T.PROC_CNT, T.CLOSE_CNT
                , T.TRANS_CNT, ROUND(T.CLOSE_CNT/T.TOTAL * 100, 1) AS CLOSE_RATE    				--처리현황
          FROM  ( SELECT CNTR_CD, CHPR_ID AS USER_ID
                       , SUM(CASE WHEN CONS_STAT_CD = '10' THEN 1 ELSE 0 END) AS OPEN_CNT -- 접수
                       , SUM(CASE WHEN CONS_STAT_CD = '20' THEN 1 ELSE 0 END) AS PROC_CNT -- 처리
                       , SUM(CASE WHEN CONS_STAT_CD = '30' THEN 1 ELSE 0 END) AS CLOSE_CNT -- 상담완료
                       , SUM(CASE WHEN CONS_STAT_CD NOT IN ('10', '20', '30') THEN 1 ELSE 0 END) AS TRANS_CNT -- 이관접수
                       , SUM(1) AS TOTAL --전체건수
                      FROM TB_CONS
                    WHERE ACPG_DTTM BETWEEN TO_CHAR(SYSDATE, 'YYYYMMDD') || '000000' AND TO_CHAR(SYSDATE, 'YYYYMMDD') || '235959'
                 GROUP BY CNTR_CD, CHPR_ID ) T
    </select>

    <select id="ConsMap.getThisMonthConsCount" parameterType="map" resultType="resultMap">
        SELECT /* ConsMap.getThisMonthConsCount */
               CNTR_CD, CHPR_ID AS USER_ID
             , SUM(CASE WHEN CONS_DSPSMDDL_DTPT_CD IN ('10', '30', '50') THEN 1 ELSE 0 END) AS TODO_CNT -- 미처리
             , SUM(CASE WHEN CONS_DSPSMDDL_DTPT_CD = '40' THEN 1 ELSE 0 END) AS RECRNC_CNT -- 재통화
             , SUM(CASE WHEN CONS_DSPSMDDL_DTPT_CD = '40'
                         AND EXISTS (SELECT 'Y'
                                       FROM TB_RECRNC_RESR_DTL B
                                      WHERE B.CONSNO = A.CONSNO
                                        AND TO_DATE(B.RECRNC_DT || B.RECRNC_HRMN, 'YYYYMMDDHH24MI') - SYSDATE <![CDATA[<]]> 0.007)
                             THEN 1
                             ELSE 0
                   END) AS RECRNC_ALARM_CNT -- 재통화 10분전 알림
          FROM TB_CONS A
         WHERE CONS_STAT_CD IN ('10', '20')
         GROUP BY CNTR_CD, CHPR_ID
    </select>

    <update id="ConsMap.updateConsTrctconsCmpl" parameterType="map">
        UPDATE /* ConsMap.updateConsTrctconsCmpl */
               TB_CONS
           SET CONS_STAT_CD = '30'
             , CONS_DSPS_DTTM = TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')
             , AMND_ID = #{amnd_id}
             , AMNT_DTTM  = TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')
         WHERE CONSNO = #{consno}
    </update>

    <!-- 양도양수 시 상담정보 복사 추가 -->
    <insert id="ConsMap.updateYdysCons" parameterType="map">

        INSERT /* ConsMap.updateYdysCons */
          INTO TB_CONS
               (CONSNO, CONSNO_GROP_NO, CONSNO_SQNO, ARS_SRVC_ADDR, INCO_TLNO
              , CALL_ID, MEM_NO, ACPG_CHNL_CD, ACPG_DTTM, ACTP_ID
              , CLNT_NM, CONS_TYP1_CD, CONS_TYP2_CD, CONS_TYP3_CD, CONS_STAT_CD
              , CONS_DSPSMDDL_DTPT_CD, RSPS_DEPT_CD, CHPR_ID, CONC_YN, CONS_MEMO_CNTN
              , MST_KEY, DTPT_KEY, ACCNT_NO, CTI_CRNC_DTL_ID

              , MEM_NM, SEX, BRTH_MON_DAY, CI_VAL, IDN_NO
              , HOME_TEL, CELL, WRPL_TEL, HOME_ZIP, HOME_ADDR
              , HOME_ADDR2, CREDIT_RATING, CRDT_MNG_NO, EMAIL, EMPLE_NO
              , EMPLE_NM, JOIN_DT, DEPT_CD, NOTE
              , TOTL_CONS_HR
              , CONS_DSPS_DTTM
              , CNTR_CD, RGSR_ID, RGSN_DTTM, AMND_ID, AMNT_DTTM)

           SELECT SUBSTR(CONSNO,1,11) || LPAD(SEQ_CONS.NEXTVAL, 7, '0'), CONSNO_GROP_NO, CONSNO_SQNO, ARS_SRVC_ADDR, INCO_TLNO
                  , CALL_ID, #{ys_mem_no}, ACPG_CHNL_CD, ACPG_DTTM, ACTP_ID
                  , CLNT_NM, CONS_TYP1_CD, CONS_TYP2_CD, CONS_TYP3_CD, CONS_STAT_CD
                  , CONS_DSPSMDDL_DTPT_CD, RSPS_DEPT_CD, CHPR_ID, CONC_YN, CONS_MEMO_CNTN
                  , MST_KEY, DTPT_KEY, ACCNT_NO, CTI_CRNC_DTL_ID

                  , MEM_NM, SEX, BRTH_MON_DAY, CI_VAL, IDN_NO
                  , HOME_TEL, CELL, WRPL_TEL, HOME_ZIP, HOME_ADDR
                  , HOME_ADDR2, CREDIT_RATING, CRDT_MNG_NO, EMAIL, EMPLE_NO
                  , EMPLE_NM, JOIN_DT, DEPT_CD, NOTE
                  , TOTL_CONS_HR
                  , CONS_DSPS_DTTM
                  , CNTR_CD, RGSR_ID, RGSN_DTTM, AMND_ID, AMNT_DTTM  
          FROM TB_CONS
          WHERE 1=1
          AND MEM_NO = #{mem_no}    
          AND ACCNT_NO = #{accnt_no}
    </insert>

    <!-- 양도양수 시 상담이력정보 복사 추가 -->
    <insert id="ConsMap.updateYdysConsHstr" parameterType="map">

        INSERT /* ConsMap.updateYdysConsHstr */
          INTO TB_CONS_HSTR
               (CONSNO, CONSNO_GROP_NO, CONSNO_SQNO, ARS_SRVC_ADDR, INCO_TLNO
              , CALL_ID, MEM_NO, ACPG_CHNL_CD, ACPG_DTTM, ACTP_ID
              , CLNT_NM, CONS_TYP1_CD, CONS_TYP2_CD, CONS_TYP3_CD, CONS_STAT_CD
              , CONS_DSPSMDDL_DTPT_CD, RSPS_DEPT_CD, CHPR_ID, CONC_YN, CONS_MEMO_CNTN
              , MST_KEY, DTPT_KEY, ACCNT_NO, CTI_CRNC_DTL_ID

              , MEM_NM, SEX, BRTH_MON_DAY, CI_VAL, IDN_NO
              , HOME_TEL, CELL, WRPL_TEL, HOME_ZIP, HOME_ADDR
              , HOME_ADDR2, CREDIT_RATING, CRDT_MNG_NO, EMAIL, EMPLE_NO
              , EMPLE_NM, JOIN_DT, DEPT_CD, NOTE
              , TOTL_CONS_HR
              , CONS_DSPS_DTTM
              , CNTR_CD, RGSR_ID, RGSN_DTTM, AMND_ID, AMNT_DTTM, CHNG_DTTM)

           SELECT CONSNO, CONSNO_GROP_NO, CONSNO_SQNO, ARS_SRVC_ADDR, INCO_TLNO
                  , CALL_ID, MEM_NO, ACPG_CHNL_CD, ACPG_DTTM, ACTP_ID
                  , CLNT_NM, CONS_TYP1_CD, CONS_TYP2_CD, CONS_TYP3_CD, CONS_STAT_CD
                  , CONS_DSPSMDDL_DTPT_CD, RSPS_DEPT_CD, CHPR_ID, CONC_YN, CONS_MEMO_CNTN
                  , MST_KEY, DTPT_KEY, ACCNT_NO, CTI_CRNC_DTL_ID

                  , MEM_NM, SEX, BRTH_MON_DAY, CI_VAL, IDN_NO
                  , HOME_TEL, CELL, WRPL_TEL, HOME_ZIP, HOME_ADDR
                  , HOME_ADDR2, CREDIT_RATING, CRDT_MNG_NO, EMAIL, EMPLE_NO
                  , EMPLE_NM, JOIN_DT, DEPT_CD, NOTE
                  , TOTL_CONS_HR
                  , CONS_DSPS_DTTM
                  , CNTR_CD, RGSR_ID, RGSN_DTTM, AMND_ID, AMNT_DTTM, SYSDATE
          FROM TB_CONS  
          WHERE 1=1
            AND MEM_NO = #{ys_mem_no} 
          	AND ACCNT_NO = #{accnt_no}
            
    </insert>

</mapper>

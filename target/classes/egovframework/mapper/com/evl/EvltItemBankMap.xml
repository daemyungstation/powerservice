<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="EvltItemBankMap">

    <sql id="EvltItemBankMap.selectCondition_fragment">
        <where>
            <if test="evlt_typ_id != null and evlt_typ_id != ''">
                AND EVLT_TYP_ID IN (SELECT EVLT_TYP_ID
                                      FROM TB_EVLT_TYP_BANK
                                     WHERE EVLT_TYP_LVL_CNT = 3
                                START WITH EVLT_TYP_ID = #{evlt_typ_id} CONNECT BY PRIOR EVLT_TYP_ID = HGRN_EVLT_TYP_ID)
            </if>
            <if test="cntr_cd != null and cntr_cd != ''">
                AND CNTR_CD = #{cntr_cd}
            </if>
            <if test="evlt_item_id != null and evlt_item_id != ''">
                AND EVLT_ITEM_ID = #{evlt_item_id}
            </if>
            <if test="evst_id != null and evst_id != ''">
                AND NOT EXISTS (SELECT 'Y'
                                  FROM TB_EVST_ITEM_DTL
                                 WHERE EVST_ID = #{evst_id}
                                   AND EVLT_ITEM_ID = A.EVLT_ITEM_ID
                                   AND CNTR_CD = A.CNTR_CD)
            </if>
            <if test="bzpt_div != null and bzpt_div != ''">
                AND BZPT_DIV = #{bzpt_div}
            </if>
        </where>
    </sql>

    <select id = "EvltItemBankMap.getEvltItemBankCount" parameterType="map" resultType="int">
       SELECT /* EvltItemBankMap.getEvltItemBankCount */
              COUNT(*)
         FROM TB_EVLT_ITEM_BANK A
     <include refid="EvltItemBankMap.selectCondition_fragment"/>
    </select>

    <select id="EvltItemBankMap.getEvltItemBankList" parameterType="map" resultType="resultMap">
        SELECT /* EvltItemBankMap.getEvltItemBankList */
               A.*
          FROM (SELECT <choose>
                          <when test="orderBy != null and orderBy != ''">
                            ROW_NUMBER() OVER (ORDER BY ${orderBy} ${orderDirection}) AS PAGE_INDX
                          </when>
                          <otherwise>
                            ROW_NUMBER() OVER (ORDER BY MAJ_EXPE_SQNC, MID_EXPE_SQNC, MIN_EXPE_SQNC, EXPE_SQNC ASC) AS PAGE_INDX
                          </otherwise>
                       </choose>
                     , A.*
                  FROM (SELECT A.*
                             , B.EVLT_TYP_NM AS MAJ_EVLT_TYP_NM, B.EXPE_SQNC AS MAJ_EXPE_SQNC
                             , C.EVLT_TYP_NM AS MID_EVLT_TYP_NM, C.EXPE_SQNC AS MID_EXPE_SQNC
                             , D.EVLT_TYP_NM AS MIN_EVLT_TYP_NM, D.EXPE_SQNC AS MIN_EXPE_SQNC
                            FROM (SELECT A.*
                                      , (SELECT Z.EVLT_TYP_ID
                                           FROM TB_EVLT_TYP_BANK Z
                                          WHERE Z.EVLT_TYP_LVL_CNT = 1
                                          START WITH Z.EVLT_TYP_ID = A.EVLT_TYP_ID
                                        CONNECT BY Z.EVLT_TYP_ID = PRIOR Z.HGRN_EVLT_TYP_ID) AS MAJ_EVLT_TYP_ID
                                      , (SELECT Z.EVLT_TYP_ID
                                           FROM TB_EVLT_TYP_BANK Z
                                          WHERE Z.EVLT_TYP_LVL_CNT = 2
                                          START WITH Z.EVLT_TYP_ID = A.EVLT_TYP_ID
                                        CONNECT BY Z.EVLT_TYP_ID = PRIOR Z.HGRN_EVLT_TYP_ID) AS MID_EVLT_TYP_ID
                                      , EVLT_TYP_ID AS MIN_EVLT_TYP_ID
                                      , (SELECT USER_NM
                                           FROM TB_USER
                                          WHERE USER_ID = A.RGSR_ID
                                            AND CNTR_CD = A.CNTR_CD) AS RGSR_NM
                                      , (SELECT USER_NM
                                           FROM TB_USER
                                          WHERE USER_ID = A.AMND_ID
                                            AND CNTR_CD = A.CNTR_CD) AS AMND_NM
                                   FROM (SELECT A.*
                                           FROM TB_EVLT_ITEM_BANK A
                                       <include refid="EvltItemBankMap.selectCondition_fragment"/>
                                        ) A
                                ) A
                           LEFT JOIN TB_EVLT_TYP_BANK B
                             ON B.EVLT_TYP_ID = A.MAJ_EVLT_TYP_ID
                            AND B.CNTR_CD = A.CNTR_CD
                           LEFT JOIN TB_EVLT_TYP_BANK C
                             ON C.EVLT_TYP_ID = A.MID_EVLT_TYP_ID
                            AND C.CNTR_CD = A.CNTR_CD
                           LEFT JOIN TB_EVLT_TYP_BANK D
                             ON D.EVLT_TYP_ID = A.MIN_EVLT_TYP_ID
                            AND D.CNTR_CD = A.CNTR_CD

                        ) A
               ) A
        <if test="startLine != null and startLine != '' and endLine != null and endLine != ''">
        <![CDATA[
         WHERE PAGE_INDX >= #{startLine}
           AND PAGE_INDX < #{endLine}
        ]]>
        </if>
    </select>

    <insert id="EvltItemBankMap.insertEvltItemBank" parameterType="map">
        <selectKey keyProperty="evlt_item_id" resultType="String" order="BEFORE">
            SELECT 'EIB' || TO_CHAR(SYSDATE, 'YYYYMMDD') || LPAD(SEQ_COMMON.NEXTVAL, 7, '0') FROM DUAL
        </selectKey>
        INSERT /* EvltItemBankMap.insertEvltItemBank */
          INTO TB_EVLT_ITEM_BANK A
               (A.EVLT_ITEM_ID, A.EVLT_ITEM_NM, A.EVLT_TYP_ID
             , A.EVLT_ITEM_SCR, A.EVLT_ITEM_EXPI, A.EXPE_SQNC, A.BZPT_DIV
             , A.CNTR_CD, A.RGSR_ID, A.RGSN_DTTM, A.AMND_ID, A.AMNT_DTTM)
        VALUES (#{evlt_item_id}, #{evlt_item_nm}, #{evlt_typ_id}
             , #{evlt_item_scr}, #{evlt_item_expi}, #{expe_sqnc}, #{bzpt_div}
             , #{cntr_cd}, #{rgsr_id}, TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS'), #{amnd_id}, TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS'))
    </insert>

    <update id="EvltItemBankMap.updateEvltItemBank" parameterType="map">
        UPDATE /* EvltItemBankMap.updateEvltItemBank */
               TB_EVLT_ITEM_BANK A
           SET A.EVLT_ITEM_NM 	= #{evlt_item_nm}
             , A.EVLT_ITEM_SCR  = #{evlt_item_scr}
             , A.EXPE_SQNC      = #{expe_sqnc}
             , A.EVLT_ITEM_EXPI = #{evlt_item_expi}
             , A.CNTR_CD       	= #{cntr_cd}
             , A.AMND_ID      	= #{amnd_id}
             , A.AMNT_DTTM      = TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
         WHERE A.EVLT_ITEM_ID   = #{evlt_item_id}
           AND A.CNTR_CD		= #{cntr_cd}
    </update>

    <delete id="EvltItemBankMap.deleteEvltItemBank" parameterType="map">
        DELETE /* EvltItemBankMap.deleteEvltItemBank */
          FROM TB_EVLT_ITEM_BANK
         WHERE CNTR_CD = #{cntr_cd}
           AND
        <choose>
            <when test="evlt_typ_id != null and evlt_typ_id != ''">
                EVLT_TYP_ID IN (SELECT EVLT_TYP_ID
                                  FROM TB_EVLT_TYP_BANK
                                 WHERE EVLT_TYP_LVL_CNT = 3
                            START WITH EVLT_TYP_ID = #{evlt_typ_id} CONNECT BY PRIOR EVLT_TYP_ID = HGRN_EVLT_TYP_ID)
            </when>
            <otherwise>
                EVLT_ITEM_ID
                <foreach collection="selectcheck" item="item" separator="," close=")" open="IN (">
                    #{item}
                </foreach>
            </otherwise>
        </choose>
    </delete>

    <update id="EvltItemBankMap.modifyEvltItemBankOrd" parameterType="map">
    <![CDATA[
        UPDATE /* EvltItemBankMap.modifyEvltItemBankOrd */
               TB_EVLT_ITEM_BANK
           SET EXPE_SQNC  = CASE EVLT_ITEM_ID WHEN #{evlt_item_id}  THEN ${expe_sqnc}
                            ELSE CASE SIGN( ${old_expe_sqnc} - ${expe_sqnc} ) WHEN -1 THEN EXPE_SQNC - 1
                                                                              WHEN  1 THEN EXPE_SQNC + 1 END
                            END
         WHERE EXPE_SQNC <= CASE SIGN( ${old_expe_sqnc} - ${expe_sqnc} ) WHEN 1 THEN ${old_expe_sqnc}
                                                                         WHEN -1 THEN ${expe_sqnc}
                            END
           AND EXPE_SQNC >= CASE SIGN( ${old_expe_sqnc} - ${expe_sqnc} ) WHEN 1 THEN ${expe_sqnc}
                                                                         WHEN -1 THEN ${old_expe_sqnc}
                            END
    ]]>
           AND EVLT_TYP_ID = #{evlt_typ_id}
           AND CNTR_CD = #{cntr_cd}

    </update>

    <select id="EvltItemBankMap.getEvltTypIdList" parameterType="map" resultType="resultMap">
        SELECT /* EvltItemBankMap.getEvltTypIdList */
               DISTINCT(EVLT_TYP_ID)
          FROM TB_EVLT_ITEM_BANK
         WHERE CNTR_CD = #{cntr_cd}
           AND EVLT_ITEM_ID
                <foreach collection="selectcheck" item="item" separator="," close=")" open="IN (">
                    #{item}
                </foreach>
    </select>
    <update id="EvltItemBankMap.setEvltItemBankOrd" parameterType="map">
        UPDATE /* EvltItemBankMap.setEvltItemBankOrd */
               TB_EVLT_ITEM_BANK A
           SET EXPE_SQNC = (SELECT PAGE_INDX
                              FROM (SELECT ROW_NUMBER() OVER (PARTITION BY EVLT_TYP_ID  ORDER BY EXPE_SQNC ASC) AS PAGE_INDX
                                         , EVLT_TYP_ID, EVLT_ITEM_ID, CNTR_CD
                                      FROM TB_EVLT_ITEM_BANK)
                             WHERE EVLT_TYP_ID = A.EVLT_TYP_ID
                               AND EVLT_ITEM_ID = A.EVLT_ITEM_ID
                               AND CNTR_CD = A.CNTR_CD
                           )
         WHERE EVLT_TYP_ID
           <foreach collection="selectcheck" item="item" separator="," close=")" open="IN (">
               #{item.evlt_typ_id}
           </foreach>

    </update>


    <insert id="EvltItemBankMap.insertCopyEvltItemBank" parameterType="map">
        <selectKey keyProperty="new_evlt_item_id" resultType="String" order="BEFORE">
            SELECT 'EIB' || TO_CHAR(SYSDATE, 'YYYYMMDD') || LPAD(SEQ_COMMON.NEXTVAL, 7, '0') FROM DUAL
        </selectKey>
        INSERT /* EvltItemBankMap.insertCopyEvltItemBank */
          INTO TB_EVLT_ITEM_BANK
               (EVLT_ITEM_ID, EVLT_ITEM_NM, EVLT_TYP_ID
              , EVLT_ITEM_SCR, EVLT_ITEM_EXPI, EXPE_SQNC, BZPT_DIV
              , CNTR_CD, RGSR_ID, RGSN_DTTM, AMND_ID, AMNT_DTTM)
        SELECT #{new_evlt_item_id}, SUBSTRB(EVLT_ITEM_NM, 1, 93) || '_복사', EVLT_TYP_ID
             , EVLT_ITEM_SCR, EVLT_ITEM_EXPI, (SELECT MAX(EXPE_SQNC)+1 FROM TB_EVLT_ITEM_BANK WHERE EVLT_TYP_ID = #{evlt_typ_id}), BZPT_DIV
             , CNTR_CD, #{rgsr_id}, TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS'), #{amnd_id}, TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
          FROM TB_EVLT_ITEM_BANK
         WHERE EVLT_ITEM_ID = #{evlt_item_id}
    </insert>

</mapper>
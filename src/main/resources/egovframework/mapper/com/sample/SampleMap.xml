<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="SampleMap">    

    <select id="SampleMap.getSampleCount" parameterType="map" resultType="int">
        SELECT /* SampleMap.getUserCount */
               COUNT(*)
          FROM TB_SAMPLE A
        <where>
            <if test="cntr_cd != null and cntr_cd != ''">
                AND CNTR_CD = #{cntr_cd}
            </if>
            <if test="sample_name != null and sample_name != ''">
                AND SAMPLE_NAME = #{sample_name}
            </if>
            <if test="sample_dept != null and sample_dept != ''">
                AND SAMPLE_DEPT = #{sample_dept}
            </if>
            <if test="sample_age != null and sample_age != ''">
                AND SAMPLE_AGE = #{sample_age}
            </if>
            </where>
    </select>

    <select id="SampleMap.getSampleList" parameterType="map" resultType="resultMap">
        SELECT /* SampleMap.getSampleList */
               SAMPLE_ID, SAMPLE_NAME, SAMPLE_DEPT, SAMPLE_AGE
             , REG_USER_ID, REG_DT, MOD_USER_ID, MOD_DT, CNTR_CD
          FROM TB_SAMPLE
        <where>
            <if test="cntr_cd != null and cntr_cd != ''">
                AND CNTR_CD = #{cntr_cd}
            </if>
            <if test="sample_name != null and sample_name != ''">
                AND SAMPLE_NAME = #{sample_name}
            </if>
            <if test="sample_dept != null and sample_dept != ''">
                AND SAMPLE_DEPT = #{sample_dept}
            </if>
            <if test="sample_age != null and sample_age != ''">
                AND SAMPLE_AGE = #{sample_age}
            </if>
            </where>
    </select>

    <insert id="SampleMap.insertSample" parameterType="map">
        <selectKey keyProperty="sample_id" resultType="String" order="BEFORE">
            SELECT 'SAM' || TO_CHAR(SYSDATE, 'YYYYMMDD') || LPAD(SEQ_COMMON.NEXTVAL, 7, '0') FROM DUAL
        </selectKey>
        INSERT /* SampleMap.insertSample */
          INTO TB_SAMPLE
             ( SAMPLE_ID, SAMPLE_NAME, SAMPLE_DEPT, SAMPLE_AGE
             , REG_USER_ID, REG_DT, MOD_USER_ID, MOD_DT, CNTR_CD
             )
        VALUES
             ( #{sample_id}, #{sample_name}, #{sample_dept}, #{sample_age}
             , #{reg_user_id}, TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS'), #{mod_user_id}, TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS'), #{cntr_cd}
             )
    </insert>

    <update id="SampleMap.updateSample" parameterType="map">
        UPDATE /* SampleMap.updateSample */
               TB_SAMPLE
           SET SAMPLE_NAME = #{sample_name}
             , SAMPLE_DEPT = #{sample_dept}
             , SAMPLE_AGE = #{sample_age}
             , MOD_USER_ID = #{mod_user_id}
             , MOD_DT = TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
        WHERE SAMPLE_ID = #{sample_id}
          AND CNTR_CD = #{cntr_cd}
    </update>

    <update id="SampleMap.deleteSample" parameterType="map">
       DELETE /* SampleMap.deleteSample */
         FROM TB_SAMPLE
        WHERE SAMPLE_ID = #{sample_id}
          AND CNTR_CD = #{cntr_cd}
    </update>
    
    <!-- 정출연 추가 -->
    
    <resultMap id="getListByProcParamResult" type="resultMap">
		<result property="icnt" column="ICNT"/>
		<result property="req_seq" column="REQ_SEQ"/>
		<result property="mem_no" column="MEM_NO"/>
		<result property="mem_nm" column="MEM_NM"/>
		<result property="cell" column="CELL"/>
		<result property="brth_mon_day" column="BRTH_MON_DAY"/>
		<result property="sex" column="SEX"/>
		<result property="empl_no" column="EMPL_NO"/>
	</resultMap>
	
    <parameterMap id="getListByProcParamMap" type="map">
        <parameter property="mem_nm" 	mode="IN" 	jdbcType="VARCHAR" javaType="java.lang.String" />
        <parameter property="rslt" 		mode="OUT" 	jdbcType="CURSOR" 	javaType="java.sql.ResultSet" resultMap="getListByProcParamResult"/>
    </parameterMap>
    
    <!-- 프로시져를 이용한 목록 조회 샘플 쿼리 -->
    <select id="SampleMap.getListByProc" statementType="CALLABLE" parameterMap="getListByProcParamMap">
		{call SP_GET_LIST_BY_PROC(?, ?)}
    </select>
    
    <select id="SampleMap.getProductList" parameterType="map" resultType="resultMap">
    	WITH W_TEMP AS (
    		SELECT LEVEL SEQ
    		  FROM DUAL
    	   CONNECT BY LEVEL &lt; 300
    	)
		SELECT /* DlwProdMap.getProductList */
			   ROWNUM AS RNUM,
		       A.PROD_CD,
		       A.PROD_NM,
		       A.MON_PAY_AMT,
		       A.EXPR_NO,
		       A.PROD_AMT,
		       A.PROD_POINT,
		       TO_CHAR(A.REG_DM, 'YYYYMMDD') AS REG_DM,
		       A.REG_MAN,
		       A.DEL_FG,
		       A.PROD_CL,
		       A.SALE_CL,
		       A.SALE_CLOSE_DAY,
		       A.PROD_SAVE_POINT
		  FROM SAMPLE_PRODUCT A
		     , W_TEMP B
    </select>
    
    <!-- 행사등록 -->
    <insert id="SampleMap.insertTestPlSql" parameterType="map">
		DECLARE
		    SI              VARCHAR2(20);
		    ETC_PRN_SI_NM   VARCHAR2(20);
		    ETC_LOC_NM      VARCHAR2(20);
		    FUNRL_PRN_SI_NM VARCHAR2(20);
		    FUNRL_LOC_NM    VARCHAR2(20);
		    RMK             VARCHAR2(1000);
		BEGIN
		    SI              := #{si};
		    ETC_PRN_SI_NM   := 'ETC_PRN_SI_NM';
		    ETC_LOC_NM      := 'ETC_LOC_NM';
		    FUNRL_LOC_NM    := 'FUNRL_LOC_NM';
		    RMK := SI || '^' || ETC_PRN_SI_NM || '^' || ETC_LOC_NM || '^' || FUNRL_PRN_SI_NM || '^' || FUNRL_LOC_NM;
		
		    FUNRL_PRN_SI_NM := CASE SI WHEN '강원도' THEN '강원'
		                                            WHEN '경기도' THEN '경기'
		                                            WHEN '경상남' THEN '경남'
		                                            WHEN '경상북' THEN '경북'
		                                            WHEN '광주광' THEN '광주'
		                                            WHEN '대구광' THEN '대구'
		                                            WHEN '대전광' THEN '대전'
		                                            WHEN '부산광' THEN '부산'
		                                            WHEN '서울특' THEN '서울'
		                                            WHEN '세종특' THEN '세종'
		                                            WHEN '울산광' THEN '울산'
		                                            WHEN '인천광' THEN '인천'
		                                            WHEN '전라남' THEN '전남'
		                                            WHEN '전라북' THEN '전북'
		                                            WHEN '제주특' THEN '제주'
		                                            WHEN '충청남' THEN '충남'
		                                            WHEN '충청북' THEN '충북'
		                                            ELSE CASE SUBSTR(SI, 1,2) WHEN '강원' THEN '강원'
		                                                                   WHEN '경기' THEN '경기'
		                                                                   WHEN '경남' THEN '경남'
		                                                                   WHEN '경북' THEN '경북'
		                                                                   WHEN '광주' THEN '광주'
		                                                                   WHEN '대구' THEN '대구'
		                                                                   WHEN '대전' THEN '대전'
		                                                                   WHEN '부산' THEN '부산'
		                                                                   WHEN '서울' THEN '서울'
		                                                                   WHEN '세종' THEN '세종'
		                                                                   WHEN '울산' THEN '울산'
		                                                                   WHEN '인천' THEN '인천'
		                                                                   WHEN '전남' THEN '전남'
		                                                                   WHEN '전북' THEN '전북'
		                                                                   WHEN '제주' THEN '제주'
		                                                                   WHEN '충남' THEN '충남'
		                                                                   WHEN '충북' THEN '충북'
		                                                                   ELSE ''
		                                                  END
		                                    END;
		
		    insert into PLSQL_TEST (SI, ETC_PRN_SI_NM, ETC_LOC_NM, FUNRL_PRN_SI_NM, FUNRL_LOC_NM, RMK) VALUES (SI, ETC_PRN_SI_NM, ETC_LOC_NM, FUNRL_PRN_SI_NM, FUNRL_LOC_NM, RMK);
		END;    
    </insert>
</mapper>

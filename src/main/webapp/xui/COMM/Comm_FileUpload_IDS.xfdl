<?xml version="1.0" encoding="utf-8"?>
<FDL version="1.4">
  <TypeDefinition url="..\default_typedef.xml"/>
  <Form id="Comm_FileUpload_IDS" classname="Comm_FileUpDownload" inheritanceid="" position="absolute 0 0 444 135" titletext="파일 업로드/다운로드" onload="Comm_FileUpDownload_onload">
    <Layouts>
      <Layout>
        <Grid id="grd_FileList" taborder="0" useinputpanel="false" position="absolute 0 26 444 135" anchor="all" binddataset="ds_FileList" formats="&lt;Formats&gt;&#10;  &lt;Format id=&quot;default&quot;&gt;&#10;    &lt;Columns&gt;&#10;      &lt;Col size=&quot;80&quot;/&gt;&#10;      &lt;Col size=&quot;80&quot;/&gt;&#10;      &lt;Col size=&quot;80&quot;/&gt;&#10;      &lt;Col size=&quot;80&quot;/&gt;&#10;      &lt;Col size=&quot;80&quot;/&gt;&#10;      &lt;Col size=&quot;80&quot;/&gt;&#10;      &lt;Col size=&quot;80&quot;/&gt;&#10;      &lt;Col size=&quot;80&quot;/&gt;&#10;      &lt;Col size=&quot;80&quot;/&gt;&#10;      &lt;Col size=&quot;80&quot;/&gt;&#10;      &lt;Col size=&quot;80&quot;/&gt;&#10;    &lt;/Columns&gt;&#10;    &lt;Rows&gt;&#10;      &lt;Row band=&quot;head&quot; size=&quot;24&quot;/&gt;&#10;      &lt;Row band=&quot;body&quot; size=&quot;24&quot;/&gt;&#10;    &lt;/Rows&gt;&#10;    &lt;Band id=&quot;head&quot;&gt;&#10;      &lt;Cell col=&quot;0&quot; disptype=&quot;normal&quot; text=&quot;_chk&quot;/&gt;&#10;      &lt;Cell col=&quot;1&quot; disptype=&quot;normal&quot; text=&quot;fileId&quot;/&gt;&#10;      &lt;Cell col=&quot;2&quot; disptype=&quot;normal&quot; text=&quot;fileLPath&quot;/&gt;&#10;      &lt;Cell col=&quot;3&quot; disptype=&quot;normal&quot; text=&quot;fileSPath&quot;/&gt;&#10;      &lt;Cell col=&quot;4&quot; disptype=&quot;normal&quot; text=&quot;fileName&quot;/&gt;&#10;      &lt;Cell col=&quot;5&quot; disptype=&quot;normal&quot; text=&quot;targetId&quot;/&gt;&#10;      &lt;Cell col=&quot;6&quot; disptype=&quot;normal&quot; text=&quot;fileSize&quot;/&gt;&#10;      &lt;Cell col=&quot;7&quot; disptype=&quot;normal&quot; text=&quot;fileType&quot;/&gt;&#10;      &lt;Cell col=&quot;8&quot; disptype=&quot;normal&quot; text=&quot;detailInfo&quot;/&gt;&#10;      &lt;Cell col=&quot;9&quot; disptype=&quot;normal&quot; text=&quot;regDate&quot;/&gt;&#10;      &lt;Cell col=&quot;10&quot; disptype=&quot;normal&quot; text=&quot;isUploaded&quot;/&gt;&#10;    &lt;/Band&gt;&#10;    &lt;Band id=&quot;body&quot;&gt;&#10;      &lt;Cell col=&quot;0&quot; disptype=&quot;normal&quot; text=&quot;bind:_chk&quot;/&gt;&#10;      &lt;Cell col=&quot;1&quot; disptype=&quot;normal&quot; text=&quot;bind:fileId&quot;/&gt;&#10;      &lt;Cell col=&quot;2&quot; disptype=&quot;normal&quot; text=&quot;bind:fileLPath&quot;/&gt;&#10;      &lt;Cell col=&quot;3&quot; disptype=&quot;normal&quot; text=&quot;bind:fileSPath&quot;/&gt;&#10;      &lt;Cell col=&quot;4&quot; disptype=&quot;normal&quot; text=&quot;bind:fileName&quot;/&gt;&#10;      &lt;Cell col=&quot;5&quot; disptype=&quot;normal&quot; text=&quot;bind:targetId&quot;/&gt;&#10;      &lt;Cell col=&quot;6&quot; disptype=&quot;normal&quot; text=&quot;bind:fileSize&quot;/&gt;&#10;      &lt;Cell col=&quot;7&quot; disptype=&quot;normal&quot; text=&quot;bind:fileType&quot;/&gt;&#10;      &lt;Cell col=&quot;8&quot; disptype=&quot;normal&quot; text=&quot;bind:detailInfo&quot;/&gt;&#10;      &lt;Cell col=&quot;9&quot; disptype=&quot;normal&quot; text=&quot;bind:regDate&quot;/&gt;&#10;      &lt;Cell col=&quot;10&quot; disptype=&quot;normal&quot; text=&quot;bind:isUploaded&quot;/&gt;&#10;    &lt;/Band&gt;&#10;  &lt;/Format&gt;&#10;&lt;/Formats&gt;&#10;" cellsizingtype="col" onheadclick="grd_FileList_onheadclick" autofittype="col">
          <Formats>
            <Format id="default">
              <Columns>
                <Column size="25"/>
                <Column size="28"/>
                <Column size="215"/>
                <Column size="81"/>
                <Column size="66"/>
              </Columns>
              <Rows>
                <Row size="24" band="head"/>
                <Row size="24"/>
              </Rows>
              <Band id="head">
                <Cell/>
                <Cell col="1" displaytype="checkbox"/>
                <Cell col="2" text="파일명"/>
                <Cell col="3" text="파일크기"/>
                <Cell col="4" text="파일타입"/>
              </Band>
              <Band id="body">
                <Cell displaytype="image" text="expr:gfn_setRowState(ds_FileList, currow)"/>
                <Cell col="1" displaytype="checkbox" edittype="checkbox" text="bind:_chk"/>
                <Cell col="2" style="align:left;" text="bind:fileName"/>
                <Cell col="3" style="align:right;" text="expr:gfn_appendComma(fileSize)+&quot; byte&quot;"/>
                <Cell col="4" text="bind:fileType"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
        <Button id="btn_addFile" taborder="1" text="파일추가" position="absolute 316 2 379 23" anchor="top right" onclick="btn_addFile_onclick" visible="false"/>
        <Button id="btn_delFile" taborder="1" text="파일삭제" position="absolute 381 2 444 23" anchor="top right" onclick="btn_delFile_onclick" visible="false"/>
        <Button id="btn_uploadFile" taborder="1" text="업로드" position="absolute 515 3 578 24" anchor="top right" onclick="btn_uploadFile_onclick" visible="false"/>
        <Button id="btn_downloadFile" taborder="1" text="다운로드" position="absolute 451 2 514 23" anchor="top right" visible="false"/>
        <Static id="stc_17" text="첨부파일" class="sta_workTitle2" position="absolute 0 6 184 26"/>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="ds_FileList" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="xRowStatusType" type="STRING" size="256"/>
          <Column id="_chk" type="STRING" size="256"/>
          <Column id="fileId" type="STRING" size="256"/>
          <Column id="fileLPath" type="STRING" size="256"/>
          <Column id="filePath" type="STRING" size="256"/>
          <Column id="fileName" type="STRING" size="256"/>
          <Column id="targetId" type="STRING" size="256"/>
          <Column id="fileSize" type="STRING" size="256"/>
          <Column id="fileType" type="STRING" size="256"/>
          <Column id="detailInfo" type="STRING" size="256"/>
          <Column id="regDate" type="STRING" size="256"/>
          <Column id="isUploaded" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_UploadResult" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false"/>
      <Dataset id="ds_HeadProperty" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="code" type="STRING" size="256"/>
          <Column id="value" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_BizProperty" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="code" type="STRING" size="256"/>
          <Column id="value" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
    <Script type="xscript4.0"><![CDATA[include "LIB::lib_All.xjs";

var fv_MultiUploadDiv = "M";				// Multi/Single 처리 구분
var arrFiles = new Array();					//파일 오브젝트 리스트
var fv_WorkMode;      					    // UPLOAD(업로드), SINGLEDOWN(1건 다운로드), MULTIDOWN(멀티다운로드)
var nRtn = true;
var nCurRow;

var httpObject;
var fileDialog;

var objParentDs;		// 부모창의 첨부파일데이타셋

//var FileInfo;
/*
function Comm_FileUpDownload_onload(obj:Form, e:LoadEventInfo)
{
	gfn_commInit(obj);
}
*/

// 공통처리 부분-----------------------------------------------------------------------

// 첨부파일 리스트를 설정한다.

// sDspsDiv : 처리구분(업로드:UPLOAD, 다운로드:DOWNLOAD)
// objDs : 첨부파일 리스트 데이타셋
function fn_initAttachFileInfo(sDspsDiv, objDs, sFileMultiSelDiv)
{
	fv_MultiUploadDiv = sFileMultiSelDiv;

	// 부모창의 데이타셋을 가지고 있는다.
	// 첨부파일 추가/삭제시에 부모창의 파일첨부 데이타셋과 동기화처리시 필요
	objParentDs = objDs;
	objParentDs.assign(ds_FileList);

	// 첨부파일 처리
	ds_FileList.clearData();
	ds_FileList.appendData(objDs);
	
	// TO-DO : 조회시 버튼처리 해야 함
	if(sDspsDiv == gfn_getAttachDiv_Upload()) {
		btn_addFile.visible 		= true;
		btn_delFile.visible 		= true;
		//btn_uploadFile.visible 		= true;
		btn_downloadFile.visible 	= false;
		
		fv_WorkMode = gfn_getAttachDiv_Upload();
	} else if(sDspsDiv == gfn_getAttachDiv_Download()) {
		btn_addFile.visible 		= false;
		btn_delFile.visible 		= false;
		//btn_uploadFile.visible 		= false;
		btn_downloadFile.visible 	= true;
		
		var nLeft = this.position.width - btn_downloadFile.position.width;
		btn_downloadFile.move(nLeft, 2);
	}
}

// 첨부파일 업로드시에 호출하는 함수
function fn_setAttachFileUpload()
{
	if(fn_fileUpload()) {
		objParentDs.assign(ds_FileList);
		return true;
	} else {
		return false;
	}
}

// 첨부파일 조회시에 호출하는 함수 (IDS조회안함)
/*
function fn_setAttachFileList()
{
	//trace(objParentDs.saveXML());

	ds_FileList.clearData();
	ds_FileList.appendData(objParentDs, true);
	ds_FileList.applyChange();
}
*/

// 첨부파일 초기화 함수
function fn_setAttachFileInit()
{
	// 파일첨부데이타셋 초기화 처리
	ds_FileList.clearData();
	objParentDs.assign(ds_FileList);
	
	arrFiles = [];
}


// 여기까지 공통-----------------------------------------------------------------------
/* IDS는 다운로드 사용안함*/
/*
function fn_fileDownload()
{
	if(fv_WorkMode == "MULTIDOWN") {
		if(ds_FileList.rowcount == 0){
			application.alert("다운로드할 파일이 없습니다.");
			return false;
		}
	}
    
 	httpObject = objects["httpObject"];
 	
 	if (httpObject == null) {
		httpObject = new HttpObject();
		httpObject.onload.setHandler(gfn_httpObject_onload);
	} 
	
 	fileDialog = objects["fileDialog"];
 	
 	if (fileDialog == null) {
		fileDialog = new FileDialog();
		httpObject.onload.setHandler(gfn_httpObject_onload);
	} 
	
	var sPath = fileDialog.open("file find", FileDialog.SELFOLDER,"%MYDOCUMENT%");

	if(fv_WorkMode == "MULTIDOWN") {
		if(!gfn_isNull(sPath))
		{
			for(var i=0;i<ds_FileList.rowcount;i++)
			{
				var sFile 	= sPath+"\\"+ ds_FileList.getColumn(i, "fileName");
				var sFileId = ds_FileList.getColumn(i, "fileId");
				
				var vFile_down = new VirtualFile;
				vFile_down.open(sFile, VirtualFile.openWrite);
				var rtn = httpObject.download(gfn_getFileDownloadUrl() + "?fileId="+sFileId+"&UUID="+UUID, vFile_down, false);
			}
		}	
	} else if(fv_WorkMode == "SINGLEDOWN") {
		var sFile 	= sPath+"\\"+ ds_FileList.getColumn(ds_FileList.rowposition, "fileName");
		var sFileId = ds_FileList.getColumn(ds_FileList.rowposition, "fileId");
		
		var vFile_down = new VirtualFile;
		vFile_down.open(sFile, VirtualFile.openWrite);
		var rtn = httpObject.download(gfn_getFileDownloadUrl() + "?fileId="+sFileId+"&UUID="+UUID, vFile_down, false);
	}	
}
*/
function fn_fileUpload()
{
	var nChkCnt = 0;
	
	var nFileSize:int = 0;
	var nTotalFileSize:int = 0;
	
	//var strUrl = "http://172.16.30.246:8080/DPMS/regDoc/regDocWeb.do";
	//var strParam = "TEST0001|뷰티화장품 서비스 청약서|IDS|SYS00001C20|71654|7906|김철수|20130226|0121:123456;0131:12345678;0021:계약자;0111:A1234;0143:123456-1234;0131:88888888;0144:교원그룹;0151:1;0152:123;0153:456;0154:서울특별시 중구 을지로1가;0155:100-100 100층 100100호"
	//var strParamGET = "formCode=TEST0001&formName=뷰티화장품 서비스 청약서&divCode=IDS&serviceID=SYS00001C20&deptCode=71654&userID=7906&userName=김철수&date=20130226&workData=0121:123456;0131:12345678;0021:계약자;0111:A1234;0143:123456-1234;0131:88888888;0144:교원그룹;0151:1;0152:123;0153:456;0154:서울특별시 중구 을지로1가;0155:100-100 100층 100100호"
	

	//fv_WorkMode = "UPLOAD";
    
    for(var i=0;i<ds_FileList.rowcount; i++) {
        if(ds_FileList.getRowType(i) == 2){
            nChkCnt++;
        }
    }
    
    if(nChkCnt == 0){
        application.alert("저장할 파일이 없습니다.");
        return false;
    }
    
	for(var k=0;k<ds_FileList.rowcount;k++) {
		nFileSize = ds_FileList.getColumn(k, "fileSize");
		nTotalFileSize += nFileSize;
	}    
    
	// 1M 이상의 첩부파일은 경고메시지 출력후 전송
	// 1 * 1024 * 1024 = 1M(1048576)
	// 5 * 1024 * 1024 = 5M(5242880)
	
	if (nTotalFileSize > 1048576) { // 1 * 1024 * 1024 = 1M
		var bResult = confirm("총 1024KB 이상의 대용량 파일 전송시에는\n전송시간이 다소 오래 걸릴 수 있습니다.\n" +
				"현재 첨부파일의 용량은 [ " + Math.round(nTotalFileSize / 1024) + "KB ] 입니다.\n\n" +
				"계속 진행하시겠습니까?\n");
				
		if (bResult == false) {
			return false;
		}
	}	    
    
 	httpObject = objects["httpObject"];
 	
 	if (httpObject == null) {
		httpObject = new HttpObject();
		httpObject.onload.setHandler(fn_httpObject_onload);
	}    

	//alert("aa");
	//trace("arrFiles::"+arrFiles);
	/*
	//개별 업로드
	for (var i = 0; i < arrFiles.length; i++) {
	
		nCurRow = ds_FileList.findRow("fileName", arrFiles[i].filename);
		
		//trace("gfn_getFileUploadUrl()::"+gfn_getFileUploadUrl());
		nRtn = httpObject.upload(gfn_getFileUploadUrl()+"?UUID="+UUID,FileDialog.LOAD, arrFiles[i], false);
		
		if(nRtn == false) {
			alert("파일 업로드 중 오류발생!!");
			return false;
		}		
    }
	*/
    
    //일괄업로드
    var strUrl = gfn_getIDSFileUploadUrl();
    var strParam = fn_makeIDSParam();
    trace(strUrl + strParam);
    nRtn =  httpObject.upload(strUrl+strParam,FileDialog.LOAD, arrFiles, false);
    
	/*	
	if(nRtn == false) {
		alert("파일 업로드 중 오류발생!!");
		return false;
	}		
    */
    return true;
}


function fn_makeIDSParam(){

	var strParam = ""; 
	
	var strCom = "";
	var strSvrType = ""
	
	for(i = 0; i < ds_HeadProperty.getRowCount(); i++){
		var strCode = ds_HeadProperty.getColumn(i,"code");
		var strValue = ds_HeadProperty.getColumn(i,"value");
		if(strCom.length > 0){
			if(strCode == gfn_getIDSAttachDiv_srvType()){
				strSvrType = strValue.trim();
			}
			else{
				strCom = strCom + "&" +strCode.trim() + "="  + strValue.trim();
			}
		}else{
			if(strCode == gfn_getIDSAttachDiv_srvType()){
				strSvrType = strValue.trim();
			}
			else{
				strCom = "?" + strCode.trim() + "="  + strValue.trim();
			}
		}
	}

	var strBiz = "";
	for(i = 0; i < ds_BizProperty.getRowCount(); i++){
	
		var strCode = ds_BizProperty.getColumn(i,"code");
		var strValue = ds_BizProperty.getColumn(i,"value");
		
		if(strBiz.length > 0){
			strBiz = strBiz + ";" +strCode.trim() + ":"  + strValue.trim();
		}else{
			strBiz = "&workData=" + strCode.trim() + ":"  + strValue.trim();
		}
	}
	
	strSvrType = '&' + gfn_getIDSAttachDiv_srvType() + "=" + strSvrType;
	strParam  = strCom + strBiz + strSvrType;

	return strParam;
	
}


//IDS첨부 공통 파라메터 
function fn_setIDSCommParam(strCode, strValue){
	
	var nRow = ds_HeadProperty.addRow();
	ds_HeadProperty.setColumn(nRow, "code", strCode);
	ds_HeadProperty.setColumn(nRow, "value", strValue);

}

//IDS첨부 비즈니스  파라메터 
function fn_setIDSBizParam(strCode, strValue){

	var nRow = ds_BizProperty.addRow();
	ds_BizProperty.setColumn(nRow, "code", strCode);
	ds_BizProperty.setColumn(nRow, "value", strValue);	

}

function fn_clearIDSBizParam(){
	ds_BizProperty.clearData();
}

function fn_clearIDSCommParam(){
	ds_HeadProperty.clearData();
}

function fn_httpObject_onload(obj:HttpObject, e:HttpObjLoadEventInfo) 
{
	//trace("----------------------- gfn_httpObject_onload : errorcode = " + e.errorcode + "\t" + "errormsg = " + e.errormsg);
	trace(e.errorcode );
	if (e.errorcode == 0 || e.errorcode == 200 || e.errorcode == 204 ) {
		if (fv_WorkMode == "UPLOAD") {
		
			/* 
			ds_UploadResult.loadXML(e.errormsg);
			trace(e.errormsg);
			ds_FileList.setColumn(nCurRow, "fileId", 		ds_UploadResult.getColumn(0, "fileId"));
			ds_FileList.setColumn(nCurRow, "filePath", 		ds_UploadResult.getColumn(0, "filePath"));
			ds_FileList.setColumn(nCurRow, "fileSize", 		ds_UploadResult.getColumn(0, "fileSize"));
            ds_FileList.setColumn(nCurRow, "isUploaded", 	ds_UploadResult.getColumn(0, "isUploaded"));
            */
            trace("Upload>>>>>>" + ds_UploadResult.getColumn(0, "filePath"));

		}
		/*
		  //IDS다운로드 불가
		  else if (fv_WorkMode == "SINGLEDOWN") {
			if (confirm("다운받은 파일을 실행하시겠습니까?")) {
				//system.execShell(objVFile.fullpath);
                var objExtCommon = new ExtCommon();
                var rtn = objExtCommon.executeProcess(objVFile.fullpath, "", "")				
			}			
		}
		*/
	} else {
		if (fv_WorkMode == "UPLOAD") {
			application.alert("첨부파일 업로드가 실패했습니다.");
		}
		 /*
		 //IDS다운로드 불가
		  else {
			application.alert("첨부파일 다운로드가 실패했습니다.");
		}
		 */
	}	
}

// 버튼 이벤트 영역----------------------------------------------------------------------------------------------------------------
//파일추가
function btn_addFile_onclick(obj:Button,  e:ClickEventInfo)
{
	var objFiles = gfn_fileSelect(fv_MultiUploadDiv);
	if (!objFiles) return;
	
	for (var i = 0; i < objFiles.length; i++) {
	
		//trace("i::"+i);
		var nFRow = ds_FileList.findRow("fileName", objFiles[i].filename);
		if(nFRow == -1) {

			var nRow = gfn_addDs(ds_FileList, true);
			
			arrFiles[nRow] = objFiles[i];
			
			var arrFileName = String(objFiles[i].filename).split(".");
			
			objFiles[i].open(VirtualFile.openRead| VirtualFile.openBinary);
			
			//ds_FileList.setColumn(nRow, "fileId", 		"");						// 파일 고유 아이디
			ds_FileList.setColumn(nRow, "fileLPath", 	objFiles[i].path);				// 파일의 전체 경로(로컬경로)
			ds_FileList.setColumn(nRow, "fileName", 	objFiles[i].filename);			// 파일명
			//ds_FileList.setColumn(nRow, "targetId", 	"");							// 파일에 맵핑된 객체의 아이디
			ds_FileList.setColumn(nRow, "fileSize", 	objFiles[i].getFileSize());		// 파일 크기
			ds_FileList.setColumn(nRow, "fileType", 	arrFileName[1]);				// 파일의 타입(확장자)
			//ds_FileList.setColumn(nRow, "detailInfo", 	"");						// 추가 정보
			//ds_FileList.setColumn(nRow, "regDate", 		"");						// 등록 일시
			//ds_FileList.setColumn(nRow, "isUploaded", 	"");						// 업로드 성공 여부(디비에는 저장안됨)
			
			objFiles[i].close();
		}	
	}
	
	objParentDs.assign(ds_FileList);
	
	ds_FileList.rowposition = 0;
	
 	//trace(arrFiles);
// 	trace(ds_FileList.saveXML());
}


//파일삭제
function btn_delFile_onclick(obj:Button,  e:ClickEventInfo)
{
	if(ds_FileList.getCaseCount("gfn_isNull(fileId)==true")>0)
	{
		var i;
		var nDelCount 	= ds_FileList.getCaseCount("_chk=='1'");
		var nCount 		= ds_FileList.rowcount;
		var j			= nCount - nDelCount;
		var TempArray 	= new Array(j--);
		
		for(i=ds_FileList.rowcount-1;i>-1;i--)
		{
			if(ds_FileList.getColumn(i, "_chk")==1)
			{
				//ds_FileList.deleteRow(i);
				gfn_delGrid(ds_FileList);
			}else
			{
				TempArray[j--] = arrFiles[i];
			}
		}
		arrFiles = TempArray;
	} else {
		//alert("서버에 저장된 파일은 삭제할수 없습니다.", "information");
	}
	
	this.grd_FileList.setCellProperty("head", 1, "text", "0");
	
	objParentDs.assign(ds_FileList);
	
// 	for (var i = 0; i < arrFiles.length; i++) {
// 		trace(arrFiles[i]);
// 	}
// 	
// 	trace(arrFiles);
}

/* 
//IDS는 파일 저장후 결과가 지정 서비스에서 처리됨.
function btn_uploadFile_onclick(obj:Button,  e:ClickEventInfo)
{
	if(fn_fileUpload()) {
		
		// TO-DO : 파일 업로드 성공한 후 파일정보 DB저장 처리
// 		trace(ds_FileList.saveXML());
// 		return;
		
		// KWData 설정
		gfn_kwDataInit();
		gfn_setKwData_trscCode("PRT00001AA");				// MCI
		
		gfn_tranMCI(gfn_getCommTypeSave() 
					, "FileInfo=ds_FileList:U"
					, ""
					, "fn_commSave_callBack");			

	}
}
*/


/*
//IDS직접 다운로드 불가
function btn_downloadFile_onclick(obj:Button,  e:ClickEventInfo)
{
	fv_WorkMode = "MULTIDOWN";
	fn_fileDownload();
}
*/

/*
//IDS직접 다운로드 불가
function grd_FileList_oncelldblclick(obj:Grid, e:GridClickEventInfo)
{
	if(fv_WorkMode == "UPLOAD") return;
	
	fv_WorkMode = "SINGLEDOWN";
	fn_fileDownload();
}
*/

function fn_commSave_callBack(strSvcID, nErrorCode, strErrorMsg)
{
	if(nErrorCode != 0) {
		return;
	}
	
}	

function grd_FileList_onheadclick(obj:Grid, e:GridClickEventInfo)
{
	if(e.cell == 1) {
		gfn_setGridCheckAll(obj, e);
	}	
}

// // 단일파일 업로드 용도
// // 시스템 에러발생시 화면켭쳐 파일업로드 사용
// function gfn_fileUpload(sUploadUrl, sfileLocalPath)
// {
// 	var objHttp;
//  	objHttp = objects["httpObject"];
//  	
//  	if (objHttp == null) {
// 		objHttp = new HttpObject();
// 		objHttp.onload.setHandler(gfn_httpObject_onload);
// 	}    
// 	
// 	var arrFiles = new Array();
// 	var objVirtualFiles = new VirtualFile;
// 	var nRtn = objVirtualFiles.open(sfileLocalPath, VirtualFile.openRead | VirtualFile.openBinary);
// 	
// 	if (!nRtn) {
// 		objVirtualFiles.close();
// 		return false;
// 	}	
// 		
// 	arrFiles[0] = objVirtualFiles;
// 	
// 	var nRtn = objHttp.upload(sUploadUrl ,FileDialog.LOAD, arrFiles, false);
// 	
// 	objVirtualFiles.close();	
// 	
// 	if(!nRtn) {
// 		alert("파일 업로드 중 오류발생!!");
// 		return false;
// 	}
// 	
// 	return true;
// }
// 
// function gfn_httpObject_onload(obj:HttpObject, e:HttpObjLoadEventInfo) 
// {
// 	//trace("----------------------- gfn_httpObject_onload : errorcode = " + e.errorcode + "\t" + "errormsg = " + e.errormsg);
// }	]]></Script>
  </Form>
</FDL>

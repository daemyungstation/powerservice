<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="DlwPayMap">

    <!-- 결과 데이터 건수조회 -->
    <select id="DlwPayMap.getReqResultCount" parameterType="map" resultType="resultMap">

        SELECT
            /* DlwPayMap.getReqResultCount */
               TBL.*
             , CARD_SUC_CNT + CARD_FAIL_CNT AS SUM_CARD_CNT /* Card 유승인 총건수 */
             , CARD_NAUTH_SUC_CNT + CARD_NAUTH_FAIL_CNT AS SUM_NAUTH_CARD_CNT /* Card 무승인 총건수 */
             , CMS_SUC_CNT + CMS_FAIL_CNT AS SUM_CMS_CNT    /* CMS  총건수 */
          FROM (
                 SELECT REQ_DAY
                      , SUM(CASE WHEN PAY_MTHD = '06' AND AUTH_YN = 'Y' AND RESULT_CD = '3001' THEN 1 ELSE 0 END) AS CARD_SUC_CNT                                                    /* Card 유승인 성공건수 */
                      , SUM(CASE WHEN PAY_MTHD = '06' AND AUTH_YN = 'Y' AND ( RESULT_CD <![CDATA[<>]]> '3001' OR NVL(RESULT_CD, 'N') = 'N' ) THEN 1 ELSE 0 END) AS CARD_FAIL_CNT     /* Card 유승인 실패건수 */
                      , SUM(CASE WHEN PAY_MTHD = '06' AND AUTH_YN = 'N' AND RESULT_CD = '00' THEN 1 ELSE 0 END) AS CARD_NAUTH_SUC_CNT                                                /* Card 무승인 성공건수 */
                      , SUM(CASE WHEN PAY_MTHD = '06' AND AUTH_YN = 'N' AND ( RESULT_CD <![CDATA[<>]]> '00' OR NVL(RESULT_CD, 'N') = 'N' ) THEN 1 ELSE 0 END) AS CARD_NAUTH_FAIL_CNT /* Card 무승인 실패건수 */
                      <!-- , ( SELECT COUNT(*) FROM TB_MEMBER_WDRW_REQ WHERE REQ_DAY = #{wdrw_dt} AND PAY_MTHD = '04' AND DEL_FG IN ('R','C','F') ) -->
                      <!-- - SUM(CASE WHEN PAY_MTHD = '04' AND ( RESULT_CD <![CDATA[<>]]> '3001' OR NVL(RESULT_CD, 'N') = 'N' ) THEN 1 ELSE 0 END) AS CMS_SUC_CNT   /* CMS 성공건수 = 청구건수 - 실패건수 */ -->
                      <!-- CMS 불능 데이터가 존재하면  성공/실패건수 조회 -->
                      , CASE WHEN SUM(CASE WHEN PAY_MTHD = '04' THEN 1 ELSE 0 END) > 0
                             THEN ( SELECT COUNT(*)
                                      FROM TB_MEMBER_WDRW_REQ
                                     WHERE REQ_DAY = #{wdrw_dt}
                                       AND PAY_MTHD = '04'
                                       <!-- AND DEL_FG IN ('R','C','F') -->
                                       AND DEL_FG IN ('R','C','F','X')
                                  )
                                 - SUM(CASE WHEN PAY_MTHD = '04' AND RESULT_CD IS NOT NULL THEN 1 ELSE 0 END)
                            ELSE 0
                        END AS CMS_SUC_CNT   /* CMS 성공건수 = 청구건수 - 실패건수 */
                      , SUM(CASE WHEN PAY_MTHD = '04' AND RESULT_CD IS NOT NULL THEN 1 ELSE 0 END) AS CMS_FAIL_CNT     /* CMS 실패건수 */
                   FROM TB_MEMBER_WDRW_RESULT
                  WHERE 1=1
                    AND REQ_DAY = #{wdrw_dt}
                    AND PAY_KIND = '01'  /* 파일 */
                  GROUP BY REQ_DAY
               ) TBL

    </select>

    <!-- 결과등록 -->
    <insert id="DlwPayMap.insertResultInfo"  parameterType="java.util.List" >

        /* 카드인 경우 */
        INSERT ALL

               <foreach item="item" index="idx" collection="list" open="" separator="" close="">
                    INTO TB_MEMBER_WDRW_RESULT
                    VALUES (
                        #{item.Col08},  /* 회원번호 */
                        #{item.Col04},  /* 청구일 */
                        NULL,           /* 청구/납입회차 */
                        '01',           /* 01:파일, 02:실시간, 03:자유,04:기타 */
                        #{item.Col03},  /* 결과키(TID, CMS결과키) */
                        #{item.Col12},  /* 결과코드 */
                        #{item.Col13},  /* 결과메시지 */
                        '06',           /* 납입방법(CMS/카드) */
                        #{item.Col06},  /* 승인일자 */
                        #{item.Col07},  /* 승인번호 */
                        NULL            /* 결과 이체 CD (카드사/은행) */
                    )
                </foreach>
                SELECT *  FROM DUAL



            /* CMS인 경우 */

    </insert>


    <!-- 파일변환 (** 결과반영) 파라미터 -->
    <parameterMap id="ResultInfoMap" type="resultMap">
        <!-- <parameter property="file_nm" mode="IN" jdbcType="VARCHAR"  javaType="java.lang.String" /> -->
        <parameter property="req_day" mode="IN" jdbcType="VARCHAR"  javaType="java.lang.String" />
        <parameter property="reg_man" mode="IN" jdbcType="VARCHAR"  javaType="java.lang.String" />
        <parameter property="result" mode="INOUT" jdbcType="INTEGER" javaType="java.lang.String" />
        <parameter property="gasu" mode="INOUT" jdbcType="VARCHAR"  javaType="java.lang.String" />
    </parameterMap>


    <!-- 파일변환 (** 결과반영) -->
    <select id="DlwPayMap.convertFile" statementType="CALLABLE" parameterMap="ResultInfoMap">
    <!-- <select id="DlwPayMap.convertFile" parameterType="map" > -->

           <!-- {call SP_CARD_PAY_RESULT_IPMST( ?, ? ,?, ?, ?)} -->
           <!-- {call SP_CMS_PAY_RESULT_PROC_IPMST(?, ?, ?,?,?)} -->

           {call SP_MEMBER_APPLY_REQ_RESULT( ?, ?, ?, ? )}


    </select>

    <!-- ================================================================
     * 날짜 : 20181018
     * 이름 : 송준빈
     * 추가내용 : 출금이체의뢰내역(청구) 조회건수
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_WDRW_REQ
     * ================================================================
     * -->
    <select id="DlwPayMap.getWdrwReqListCount" parameterType="map" resultType="int">
        SELECT 
        	COUNT(*) AS ICNT
        FROM 
        ( 
        	SELECT /* DlwPayMap.getWdrwReqListCount */
               ROW_NUMBER() OVER(ORDER BY ${orderBy} ${orderDirection}) PAGE_INDX, /* PAGE INDX               */
               A.*
            FROM ( SELECT ACCNT_NO          /* 회원번호                                                                 */
                       ,PROD_CD           /* 상품코드                                                                 */
                       ,PAY_MTHD          /* 산출구분(CMS:04, CARD:06)                                                */
                       ,REQ_BIT           /* 산출상세구분(01:정기, 02:미출금, 03:임의 ,04:연체, 05:임시, 06:고객센터) */
                       ,STAT              /* 상태                                                                     */
                       ,KSTBIT            /* 회원상태(01:대기, 02:가입, 03:해약, 04:행사, 09:만기)                    */
                       ,TRUE_CNT          /* 실납입회수                                                               */
                       ,REQ_PAY_NO        /* 산출청구회차                                                             */
                       ,PAY_BIT           /* 산출비트                                                                 */
                       ,ICHAE_NO          /* 이체번호(계좌 혹은 BID)                                                  */
                       ,ICHAE_CD          /* 이체코드(은행, 카드사)                                                   */
                       ,REQ_DAY           /* 청구일                                                                   */
                       ,BANK_FILIN_BRKDN  /* 통장기재내역                                                             */
                       ,PAY_AMT           /* 청구금액                                                                 */
                       ,TO_CHAR(REG_DM, 'YYYYMMDD') AS REG_DM           /* 등록일                                     */
                       ,REG_MAN           /* 등록자                                                                   */
                       ,ICHAE_DT          /* 정기건 및 연체건 이체일                                                  */
                       ,REQ_PAY_GUNSU     /* 산출청구건수                                                             */
                       ,UPD_DM            /* 수정일                                                                   */
                       ,UPD_MAN           /* 수정자                                                                   */
                       ,DEL_FG            /* 청구여부(N:청구전 Y:삭제 R:청구 C:완료(변환/입금) F:완료(실패))          */
                       ,BIRTH             /* 생년월일(CMS용)                                                          */
                       ,BILL_GUBUN        /* 36회 카드사 전달 구분값                                                  */
                       ,RESULT_KEY        /* 카드/CMS결과KEY(실시간포함)                                              */
                       ,RESULT_KIND       /* 01:파일, 02:실시간, 03:자유,04:기타                                      */
                       ,MONTH_CNT         /* 당월회차                                                                 */
                       ,'REQ' AS REQ_CNCL_BIT
                   FROM LF_DMUSER.TB_MEMBER_WDRW_REQ
                  WHERE 1=1
                    AND DEL_FG != 'Y'
                  <if test="req_day_stt != null and req_day_stt != '' and req_day_end != null and req_day_end != ''">
                      AND REQ_DAY BETWEEN #{req_day_stt} AND #{req_day_end}
                  </if>
                  <if test="pay_mthd != null and pay_mthd != ''">
                      AND PAY_MTHD = #{pay_mthd}
                  </if>
                  <if test="auth_yn != null and auth_yn != ''">
                      AND AUTH_YN = #{auth_yn}
                  </if>
                  <if test="req_bit != null and req_bit != ''">
                      AND REQ_BIT = #{req_bit}
                  </if>
                  <if test="result_kind != null and result_kind != ''">
                      AND RESULT_KIND = #{result_kind}
                  </if>
                  <if test="del_fg != null and del_fg != '' and del_fg.equalsIgnoreCase('NR')">
                      AND DEL_FG IN ('N', 'R')
                  </if>
                  <if test="del_fg != null and del_fg != '' and !del_fg.equalsIgnoreCase('NR')">
                      AND DEL_FG = #{del_fg}
                  </if>
                  <if test="accnt_no != null and accnt_no != ''">
                      AND ACCNT_NO = #{accnt_no}
                  </if>
                  
                  UNION ALL 
                  
                  SELECT
                        CNCL.ACCNT_NO          /* 회원번호                                                                */
                       ,REQ.PROD_CD           /* 상품코드                                                                 */
                       ,CNCL.PAY_MTHD          /* 산출구분(CMS:04, CARD:06)                                               */
                       ,REQ.REQ_BIT           /* 산출상세구분(01:정기, 02:미출금, 03:임의 ,04:연체, 05:임시, 06:고객센터) */
                       ,REQ.STAT              /* 상태                                                                     */
                       ,REQ.KSTBIT            /* 회원상태(01:대기, 02:가입, 03:해약, 04:행사, 09:만기)                    */
                       ,REQ.TRUE_CNT          /* 실납입회수                                                               */
                       ,CNCL.REQ_PAY_NO        /* 산출청구회차                                                            */
                       ,REQ.PAY_BIT           /* 산출비트                                                                 */
                       ,REQ.ICHAE_NO          /* 이체번호(계좌 혹은 BID)                                                  */
                       ,REQ.ICHAE_CD          /* 이체코드(은행, 카드사)                                                   */
                       ,CNCL.REQ_DAY           /* 청구일                                                                  */
                       ,REQ.BANK_FILIN_BRKDN  /* 통장기재내역                                                             */
                       ,CNCL.PAY_AMT           /* 청구금액                                                                */
                       ,TO_CHAR(CNCL.REG_DM, 'YYYYMMDD') AS REG_DM           /* 등록일                                    */
                       ,CNCL.REG_MAN           /* 등록자                                                                  */
                       ,REQ.ICHAE_DT          /* 정기건 및 연체건 이체일                                                  */
                       ,REQ.REQ_PAY_GUNSU     /* 산출청구건수                                                             */
                       ,REQ.UPD_DM            /* 수정일                                                                   */
                       ,REQ.UPD_MAN           /* 수정자                                                                   */
                       ,CNCL.DEL_FG            /* 청구여부(N:청구전 Y:삭제 R:청구 C:완료(변환/입금) F:완료(실패))         */
                       ,REQ.BIRTH             /* 생년월일(CMS용)                                                          */
                       ,REQ.BILL_GUBUN        /* 36회 카드사 전달 구분값                                                  */
                       ,CNCL.RESULT_KEY        /* 카드/CMS결과KEY(실시간포함)                                             */
                       ,REQ.RESULT_KIND       /* 01:파일, 02:실시간, 03:자유,04:기타                                      */
                       ,REQ.MONTH_CNT         /* 당월회차                                                                 */
                       ,'CNCL' AS REQ_CNCL_BIT
                   FROM LF_DMUSER.TB_MEMBER_REQ_NAUTH_CNCL CNCL INNER JOIN
                       LF_DMUSER.TB_MEMBER_WDRW_REQ REQ ON CNCL.ACCNT_NO = REQ.ACCNT_NO AND CNCL.RESULT_KEY = REQ.RESULT_KEY AND CNCL.REQ_PAY_NO = REQ.REQ_PAY_NO
                   WHERE 1=1
                   AND CNCL.DEL_FG != 'Y'
                   <if test="req_day_stt != null and req_day_stt != '' and req_day_end != null and req_day_end != ''">
                      AND CNCL.REQ_DAY BETWEEN #{req_day_stt} AND #{req_day_end}
                   </if>
                   <if test="pay_mthd != null and pay_mthd != ''">
                      AND CNCL.PAY_MTHD = #{pay_mthd}
                   </if>
                   <if test="req_bit != null and req_bit != ''">
                      AND REQ.REQ_BIT = #{req_bit}
                   </if>
                   <if test="result_kind != null and result_kind != ''">
                      AND REQ.RESULT_KIND = #{result_kind}
                   </if>
                   <if test="del_fg != null and del_fg != '' and del_fg.equalsIgnoreCase('NR')">
                      AND CNCL.DEL_FG IN ('N', 'R')
                   </if>
                   <if test="del_fg != null and del_fg != '' and !del_fg.equalsIgnoreCase('NR')">
                      AND CNCL.DEL_FG = #{del_fg}
                   </if>
                   <if test="accnt_no != null and accnt_no != ''">
                      AND CNCL.ACCNT_NO = #{accnt_no}
                   </if>
               ) A
               WHERE 1=1
               <if test="req_cncl_bit != null and req_cncl_bit != ''">
             		AND A.REQ_CNCL_BIT = #{req_cncl_bit}
         	   </if>
         ) A
         WHERE 1=1
    </select>

    <!-- ================================================================
     * 날짜 : 20181018
     * 이름 : 송준빈
     * 추가내용 : 출금이체의뢰내역(청구) 조회리스트
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_WDRW_REQ
     * ================================================================
     * -->
    <select id="DlwPayMap.getWdrwReqList" parameterType="map" resultType="resultMap">
        SELECT 
        	*
        FROM 
        ( 
        	SELECT /* DlwPayMap.getWdrwReqList */
               ROW_NUMBER() OVER(ORDER BY ${orderBy} ${orderDirection}) PAGE_INDX, /* PAGE INDX               */
               A.*
            FROM ( SELECT ACCNT_NO          /* 회원번호                                                                 */
                       ,PROD_CD           /* 상품코드                                                                 */
                       ,PAY_MTHD          /* 산출구분(CMS:04, CARD:06)                                                */
                       ,REQ_BIT           /* 산출상세구분(01:정기, 02:미출금, 03:임의 ,04:연체, 05:임시, 06:고객센터) */
                       ,STAT              /* 상태                                                                     */
                       ,KSTBIT            /* 회원상태(01:대기, 02:가입, 03:해약, 04:행사, 09:만기)                    */
                       ,TRUE_CNT          /* 실납입회수                                                               */
                       ,REQ_PAY_NO        /* 산출청구회차                                                             */
                       ,PAY_BIT           /* 산출비트                                                                 */
                       ,ICHAE_NO          /* 이체번호(계좌 혹은 BID)                                                  */
                       ,ICHAE_CD          /* 이체코드(은행, 카드사)                                                   */
                       ,REQ_DAY           /* 청구일                                                                   */
                       ,BANK_FILIN_BRKDN  /* 통장기재내역                                                             */
                       ,PAY_AMT           /* 청구금액                                                                 */
                       ,TO_CHAR(REG_DM, 'YYYYMMDD') AS REG_DM           /* 등록일                                     */
                       ,REG_MAN           /* 등록자                                                                   */
                       ,ICHAE_DT          /* 정기건 및 연체건 이체일                                                  */
                       ,REQ_PAY_GUNSU     /* 산출청구건수                                                             */
                       ,UPD_DM            /* 수정일                                                                   */
                       ,UPD_MAN           /* 수정자                                                                   */
                       ,DEL_FG            /* 청구여부(N:청구전 Y:삭제 R:청구 C:완료(변환/입금) F:완료(실패))          */
                       ,BIRTH             /* 생년월일(CMS용)                                                          */
                       ,BILL_GUBUN        /* 36회 카드사 전달 구분값                                                  */
                       ,RESULT_KEY        /* 카드/CMS결과KEY(실시간포함)                                              */
                       ,RESULT_KIND       /* 01:파일, 02:실시간, 03:자유,04:기타                                      */
                       ,MONTH_CNT         /* 당월회차                                                                 */
                       ,'REQ' AS REQ_CNCL_BIT
                   FROM LF_DMUSER.TB_MEMBER_WDRW_REQ
                  WHERE 1=1
                    AND DEL_FG != 'Y'
                  <if test="req_day_stt != null and req_day_stt != '' and req_day_end != null and req_day_end != ''">
                      AND REQ_DAY BETWEEN #{req_day_stt} AND #{req_day_end}
                  </if>
                  <if test="pay_mthd != null and pay_mthd != ''">
                      AND PAY_MTHD = #{pay_mthd}
                  </if>
                  <if test="auth_yn != null and auth_yn != ''">
                      AND AUTH_YN = #{auth_yn}
                  </if>
                  <if test="req_bit != null and req_bit != ''">
                      AND REQ_BIT = #{req_bit}
                  </if>
                  <if test="result_kind != null and result_kind != ''">
                      AND RESULT_KIND = #{result_kind}
                  </if>
                  <if test="del_fg != null and del_fg != '' and del_fg.equalsIgnoreCase('NR')">
                      AND DEL_FG IN ('N', 'R')
                  </if>
                  <if test="del_fg != null and del_fg != '' and !del_fg.equalsIgnoreCase('NR')">
                      AND DEL_FG = #{del_fg}
                  </if>
                  <if test="accnt_no != null and accnt_no != ''">
                      AND ACCNT_NO = #{accnt_no}
                  </if>
                  
                  UNION ALL 
                  
                  SELECT
                        CNCL.ACCNT_NO          /* 회원번호                                                                */
                       ,REQ.PROD_CD           /* 상품코드                                                                 */
                       ,CNCL.PAY_MTHD          /* 산출구분(CMS:04, CARD:06)                                               */
                       ,REQ.REQ_BIT           /* 산출상세구분(01:정기, 02:미출금, 03:임의 ,04:연체, 05:임시, 06:고객센터) */
                       ,REQ.STAT              /* 상태                                                                     */
                       ,REQ.KSTBIT            /* 회원상태(01:대기, 02:가입, 03:해약, 04:행사, 09:만기)                    */
                       ,REQ.TRUE_CNT          /* 실납입회수                                                               */
                       ,CNCL.REQ_PAY_NO        /* 산출청구회차                                                            */
                       ,REQ.PAY_BIT           /* 산출비트                                                                 */
                       ,REQ.ICHAE_NO          /* 이체번호(계좌 혹은 BID)                                                  */
                       ,REQ.ICHAE_CD          /* 이체코드(은행, 카드사)                                                   */
                       ,CNCL.REQ_DAY           /* 청구일                                                                  */
                       ,REQ.BANK_FILIN_BRKDN  /* 통장기재내역                                                             */
                       ,CNCL.PAY_AMT           /* 청구금액                                                                */
                       ,TO_CHAR(CNCL.REG_DM, 'YYYYMMDD') AS REG_DM           /* 등록일                                    */
                       ,CNCL.REG_MAN           /* 등록자                                                                  */
                       ,REQ.ICHAE_DT          /* 정기건 및 연체건 이체일                                                  */
                       ,REQ.REQ_PAY_GUNSU     /* 산출청구건수                                                             */
                       ,REQ.UPD_DM            /* 수정일                                                                   */
                       ,REQ.UPD_MAN           /* 수정자                                                                   */
                       ,CNCL.DEL_FG            /* 청구여부(N:청구전 Y:삭제 R:청구 C:완료(변환/입금) F:완료(실패))         */
                       ,REQ.BIRTH             /* 생년월일(CMS용)                                                          */
                       ,REQ.BILL_GUBUN        /* 36회 카드사 전달 구분값                                                  */
                       ,CNCL.RESULT_KEY        /* 카드/CMS결과KEY(실시간포함)                                             */
                       ,REQ.RESULT_KIND       /* 01:파일, 02:실시간, 03:자유,04:기타                                      */
                       ,REQ.MONTH_CNT         /* 당월회차                                                                 */
                       ,'CNCL' AS REQ_CNCL_BIT
                   FROM LF_DMUSER.TB_MEMBER_REQ_NAUTH_CNCL CNCL INNER JOIN
                       LF_DMUSER.TB_MEMBER_WDRW_REQ REQ ON CNCL.ACCNT_NO = REQ.ACCNT_NO AND CNCL.RESULT_KEY = REQ.RESULT_KEY AND CNCL.REQ_PAY_NO = REQ.REQ_PAY_NO
                   WHERE 1=1 
                   AND CNCL.DEL_FG != 'Y'
                   <if test="req_day_stt != null and req_day_stt != '' and req_day_end != null and req_day_end != ''">
                      AND CNCL.REQ_DAY BETWEEN #{req_day_stt} AND #{req_day_end}
                   </if>
                   <if test="pay_mthd != null and pay_mthd != ''">
                      AND CNCL.PAY_MTHD = #{pay_mthd}
                   </if>
                   <if test="req_bit != null and req_bit != ''">
                      AND REQ.REQ_BIT = #{req_bit}
                   </if>
                   <if test="result_kind != null and result_kind != ''">
                      AND REQ.RESULT_KIND = #{result_kind}
                   </if>
                   <if test="del_fg != null and del_fg != '' and del_fg.equalsIgnoreCase('NR')">
                      AND CNCL.DEL_FG IN ('N', 'R')
                   </if>
                   <if test="del_fg != null and del_fg != '' and !del_fg.equalsIgnoreCase('NR')">
                      AND CNCL.DEL_FG = #{del_fg}
                   </if>
                   <if test="accnt_no != null and accnt_no != ''">
                      AND CNCL.ACCNT_NO = #{accnt_no}
                   </if>
               ) A
               WHERE 1=1
               <if test="req_cncl_bit != null and req_cncl_bit != ''">
             		AND A.REQ_CNCL_BIT = #{req_cncl_bit}
         	   </if>
         ) A
         WHERE 1=1
         <if test="startLine != null and startLine != '' and endLine != null and endLine != ''">
             AND PAGE_INDX <![CDATA[>=]]> #{startLine}
             AND PAGE_INDX <![CDATA[<]]> #{endLine}
         </if>
    </select>


    <!-- 특수회원 카운트조회 -->
    <select id="DlwPayMap.getCntSpecialAcntList" parameterType="map" resultType="int">

        SELECT /* DlwPayMap.getCntSpecialAcntList */
               COUNT(*)
          FROM TB_MEMBER_EXT_SPECIAL MES
          INNER JOIN MEM_PROD_ACCNT MPA
                  ON MES.ACCNT_NO = MPA.ACCNT_NO AND MPA.DEL_FG = 'N'
          INNER JOIN MEMBER MBR
                  ON MPA.MEM_NO = MBR.MEM_NO AND MBR.DEL_FG = 'N'
         WHERE 1=1
           <if test="del_fg != null and del_fg != ''">
           AND MES.DEL_FG = #{del_fg}
           </if>
           <if test="accnt_no != null and accnt_no != ''">
           AND MES.ACCNT_NO = #{accnt_no}
           </if>
           <if test="special_bit != null and special_bit != ''">
           AND MES.SPECIAL_BIT = #{special_bit}
           </if>

    </select>

    <!-- 특수회원 조회 -->
    <select id="DlwPayMap.getSpecialAcntList" parameterType="map" resultType="resultMap">

        SELECT /* DlwPayMap.getSpecialAcntList */
               Z.*
          FROM (SELECT X.*,
                    <choose>
                        <when test="orderBy != null and orderBy != ''">
                            ROW_NUMBER() OVER(ORDER BY ${orderBy} ${orderDirection}) PAGE_INDX
                        </when>
                    </choose>
                  FROM ( SELECT MES.ACCNT_NO
                               ,REPLACE(MBR.MEM_NM,CHR(0),'') AS MEM_NM
                               ,REPLACE(MBR.CELL,CHR(0),'') AS CELL
                               ,MPA.KSTBIT
                               ,MES.REQ_PAY_GUNSU
                               ,MES.SPECIAL_BIT
                               ,MBID.PROD_CD
                               ,MBID.TRUE_CNT
                               ,MBID.REL_CNT
                               ,MBID.ADD_CNT
                               ,CM.ICHAE_DT
                               ,REPLACE(TO_CHAR(MES.REG_DM, 'YYYY-MM-DD HH24:MI:SS'),CHR(0),'') AS REG_DM
                               ,REPLACE(( SELECT EMPLE_NM FROM EMPLOYEE WHERE EMPLE_NO = MES.REG_MAN ),CHR(0),'') AS REG_MAN
                               ,MBID.MONTH_COUNT - MBID.TRUE_CNT AS NOR_YEON_CHE
                               ,CASE WHEN MBID.MONTH_COUNT >  MBID.TOT_REL_CNT THEN MBID.TOT_REL_CNT - MBID.REL_CNT
                                     WHEN MBID.MONTH_COUNT <![CDATA[<=]]> MBID.TOT_REL_CNT THEN MBID.MONTH_COUNT - MBID.REL_CNT
                                     ELSE -999
                                 END AS REL_YEON_CHE
                               ,CASE WHEN MBID.MONTH_COUNT >  MBID.TOT_ADD_CNT THEN MBID.TOT_ADD_CNT - MBID.ADD_CNT
                                     WHEN MBID.MONTH_COUNT <![CDATA[<=]]> MBID.TOT_ADD_CNT THEN MBID.MONTH_COUNT - MBID.ADD_CNT
                                     ELSE -999
                                 END AS ADD_YEON_CHE
                               ,MBID.TRUE_DAY
                               ,MBID.REL_DAY
                               ,MBID.ADD_DAY
                               ,REPLACE(MES.SPECIAL_ETC,CHR(0),'') AS SPECIAL_ETC
                               ,FN_COM_NM('01', MPA.PAY_MTHD) AS PAY_MTHD
                               ,REPLACE(TO_CHAR(MES.UPD_DM, 'YYYY-MM-DD HH24:MI:SS'),CHR(0),'') AS UPD_DM
                               ,REPLACE(( SELECT EMPLE_NM FROM EMPLOYEE WHERE EMPLE_NO = MES.UPD_MAN ),CHR(0),'') AS UPD_MAN
                           FROM TB_MEMBER_EXT_SPECIAL MES
                           INNER JOIN MEM_PROD_ACCNT MPA
                                   ON MES.ACCNT_NO = MPA.ACCNT_NO AND MPA.DEL_FG = 'N'
                           INNER JOIN MEMBER MBR
                                   ON MPA.MEM_NO = MBR.MEM_NO AND MBR.DEL_FG = 'N'
                           LEFT OUTER JOIN TB_MEMBER_BASIC_INFO_DAY MBID
                                   ON MES.ACCNT_NO = MBID.ACCNT_NO
                           LEFT OUTER JOIN ( SELECT ACCNT_NO,
                                                    '06' AS PAY_MTHD,
                                                    PAY_DT AS ICHAE_DT
                                               FROM CARD_MEM CARD
                                              WHERE CARD.DEL_FG = 'N'

                                             UNION

                                             SELECT ACCNT_NO,
                                                    '04' AS PAY_MTHD,
                                                    ICHAE_DT
                                               FROM CMS_MEM CMS
                                              WHERE CMS.DEL_FG = 'N'
                                           ) CM
                                   ON MBID.ACCNT_NO = CM.ACCNT_NO
                                  AND MBID.PAY_MTHD = CM.PAY_MTHD
                          WHERE 1=1
                            <if test="del_fg != null and del_fg != ''">
                            AND MES.DEL_FG = #{del_fg}
                            </if>
                            <if test="accnt_no != null and accnt_no != ''">
                            AND MES.ACCNT_NO = #{accnt_no}
                            </if>
                            <if test="special_bit != null and special_bit != ''">
                            AND MES.SPECIAL_BIT = #{special_bit}
                            </if>
                       ) X
               ) Z

        <if test="startLine != null and startLine != '' and endLine != null and endLine != ''">
            <![CDATA[
            WHERE PAGE_INDX >= #{startLine}
              AND PAGE_INDX < #{endLine}
            ]]>
        </if>

    </select>


    <!-- 특수회원 입력체크 -->
    <select id="DlwPayMap.getChkSpecialAcntList" parameterType="map" resultType="int">

        SELECT /* DlwPayMap.getChkSpecialAcntList */
               COUNT(*)
          FROM TB_MEMBER_EXT_SPECIAL
         WHERE 1=1
           AND ACCNT_NO = #{accnt_no}
           AND DEL_FG = 'N'

    </select>


    <!-- 특수회원 입력 -->
    <insert id="DlwPayMap.insertExtSpecial" parameterType="map">

        INSERT INTO TB_MEMBER_EXT_SPECIAL
          (ACCNT_NO, REQ_PAY_GUNSU, SPECIAL_BIT, DEL_FG, REG_DM, REG_MAN, SPECIAL_ETC)
        VALUES
          (#{accnt_no}, #{req_pay_gunsu}, #{special_bit}, 'N', SYSDATE, #{reg_man}, #{special_etc})

    </insert>


    <!-- 특수회원 수정 -->
    <update id="DlwPayMap.updateExtSpecial" parameterType="map">

        UPDATE TB_MEMBER_EXT_SPECIAL
           SET REQ_PAY_GUNSU = #{req_pay_gunsu}
             , SPECIAL_BIT = #{special_bit}
             , UPD_DM = SYSDATE
             , UPD_MAN = #{upd_man}
             , SPECIAL_ETC = #{special_etc}
         WHERE 1=1
           AND ACCNT_NO = #{accnt_no}
           AND DEL_FG = 'N'

    </update>


    <!-- 특수회원 삭제 -->
    <update id="DlwPayMap.deleteExtSpecial" parameterType="map">

        UPDATE TB_MEMBER_EXT_SPECIAL
           SET DEL_FG = 'Y'
             , UPD_DM = SYSDATE
             , UPD_MAN = #{upd_man}
         WHERE 1=1
           AND ACCNT_NO = #{accnt_no}
           AND SPECIAL_BIT = #{special_bit}
           AND DEL_FG = 'N'

    </update>

    <!-- ================================================================
     * 날짜 : 20181022
     * 이름 : 송준빈
     * 추가내용 : 특정회원의 청구 여부 확인
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_WDRW_REQ
     * ================================================================
     * -->
    <select id="DlwPayMap.getWdrwReqAccntConfirm" parameterType="String" resultType="int">
        SELECT /* DlwPayMap.getWdrwReqAccntConfirm */
               COUNT(*) AS ACCNT_CNT
          FROM ( SELECT ACCNT_NO          /* 회원번호                                                                 */
                       ,PROD_CD           /* 상품코드                                                                 */
                       ,PAY_MTHD          /* 산출구분(CMS:04, CARD:06)                                                */
                       ,REQ_BIT           /* 산출상세구분(01:정기, 02:미출금, 03:임의 ,04:연체, 05:임시, 06:고객센터) */
                       ,STAT              /* 상태                                                                     */
                       ,KSTBIT            /* 회원상태(01:대기, 02:가입, 03:해약, 04:행사, 09:만기)                    */
                       ,TRUE_CNT          /* 실납입회수                                                               */
                       ,REQ_PAY_NO        /* 산출청구회차                                                             */
                       ,PAY_BIT           /* 산출비트                                                                 */
                       ,ICHAE_NO          /* 이체번호(계좌 혹은 BID)                                                  */
                       ,ICHAE_CD          /* 이체코드(은행, 카드사)                                                   */
                       ,REQ_DAY           /* 청구일                                                                   */
                       ,BANK_FILIN_BRKDN  /* 통장기재내역                                                             */
                       ,PAY_AMT           /* 청구금액                                                                 */
                       ,REG_DM            /* 등록일                                                                   */
                       ,REG_MAN           /* 등록자                                                                   */
                       ,ICHAE_DT          /* 정기건 및 연체건 이체일                                                  */
                       ,REQ_PAY_GUNSU     /* 산출청구건수                                                             */
                       ,UPD_DM            /* 수정일                                                                   */
                       ,UPD_MAN           /* 수정자                                                                   */
                       ,DEL_FG            /* 청구여부(N:청구전 Y:삭제 R:청구 C:완료(변환/입금) F:완료(실패))          */
                       ,BIRTH             /* 생년월일(CMS용)                                                          */
                       ,BILL_GUBUN        /* 36회 카드사 전달 구분값                                                  */
                       ,RESULT_KEY        /* 카드/CMS결과KEY(실시간포함)                                              */
                       ,RESULT_KIND       /* 01:파일, 02:실시간, 03:자유,04:기타                                      */
                       ,MONTH_CNT         /* 당월회차                                                                 */
                   FROM LF_DMUSER.TB_MEMBER_WDRW_REQ
                  WHERE 1=1
                    AND DEL_FG IN ('N', 'R')
                    AND ACCNT_NO = #{accnt_no}
               ) A
         WHERE 1=1
    </select>

    <!-- ================================================================
     * 날짜 : 20181022
     * 이름 : 송준빈
     * 추가내용 : 출금이체의뢰내역(산출, 청구(행사, 해약)) 조회
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_WDRW_REQ
     * ================================================================
     * -->
    <select id="DlwPayMap.getWdrwReqAccntEventConfirm" parameterType="String" resultType="resultMap">
        SELECT /* DlwPayMap.getWdrwReqAccntEventConfirm */
               *
          FROM ( SELECT ACCNT_NO          /* 회원번호                                                                 */
                       ,PROD_CD           /* 상품코드                                                                 */
                       ,PAY_MTHD          /* 산출구분(CMS:04, CARD:06)                                                */
                       ,REQ_BIT           /* 산출상세구분(01:정기, 02:미출금, 03:임의 ,04:연체, 05:임시, 06:고객센터) */
                       ,STAT              /* 상태                                                                     */
                       ,KSTBIT            /* 회원상태(01:대기, 02:가입, 03:해약, 04:행사, 09:만기)                    */
                       ,TRUE_CNT          /* 실납입회수                                                               */
                       ,REQ_PAY_NO        /* 산출청구회차                                                             */
                       ,PAY_BIT           /* 산출비트                                                                 */
                       ,ICHAE_NO          /* 이체번호(계좌 혹은 BID)                                                  */
                       ,ICHAE_CD          /* 이체코드(은행, 카드사)                                                   */
                       ,REQ_DAY           /* 청구일                                                                   */
                       ,BANK_FILIN_BRKDN  /* 통장기재내역                                                             */
                       ,PAY_AMT           /* 청구금액                                                                 */
                       ,REG_DM            /* 등록일                                                                   */
                       ,REG_MAN           /* 등록자                                                                   */
                       ,ICHAE_DT          /* 정기건 및 연체건 이체일                                                  */
                       ,REQ_PAY_GUNSU     /* 산출청구건수                                                             */
                       ,UPD_DM            /* 수정일                                                                   */
                       ,UPD_MAN           /* 수정자                                                                   */
                       ,DEL_FG            /* 청구여부(N:청구전 Y:삭제 R:청구 C:완료(변환/입금) F:완료(실패))          */
                       ,BIRTH             /* 생년월일(CMS용)                                                          */
                       ,BILL_GUBUN        /* 36회 카드사 전달 구분값                                                  */
                       ,RESULT_KEY        /* 카드/CMS결과KEY(실시간포함)                                              */
                       ,RESULT_KIND       /* 01:파일, 02:실시간, 03:자유,04:기타                                      */
                       ,MONTH_CNT         /* 당월회차                                                                 */
                   FROM LF_DMUSER.TB_MEMBER_WDRW_REQ
                  WHERE 1=1
                    AND DEL_FG IN ('N', 'R')
                    AND ACCNT_NO = #{accnt_no}
                 UNION ALL
                 SELECT MWR.ACCNT_NO          /* 회원번호                                                                 */
                       ,MWR.PROD_CD           /* 상품코드                                                                 */
                       ,MWR.PAY_MTHD          /* 산출구분(CMS:04, CARD:06)                                                */
                       ,MWR.REQ_BIT           /* 산출상세구분(01:정기, 02:미출금, 03:임의 ,04:연체, 05:임시, 06:고객센터) */
                       ,MWR.STAT              /* 상태                                                                     */
                       ,MWR.KSTBIT            /* 회원상태(01:대기, 02:가입, 03:해약, 04:행사, 09:만기)                    */
                       ,MWR.TRUE_CNT          /* 실납입회수                                                               */
                       ,MWR.REQ_PAY_NO        /* 산출청구회차                                                             */
                       ,MWR.PAY_BIT           /* 산출비트                                                                 */
                       ,MWR.ICHAE_NO          /* 이체번호(계좌 혹은 BID)                                                  */
                       ,MWR.ICHAE_CD          /* 이체코드(은행, 카드사)                                                   */
                       ,MWR.REQ_DAY           /* 청구일                                                                   */
                       ,MWR.BANK_FILIN_BRKDN  /* 통장기재내역                                                             */
                       ,MWR.PAY_AMT           /* 청구금액                                                                 */
                       ,MWR.REG_DM            /* 등록일                                                                   */
                       ,MWR.REG_MAN           /* 등록자                                                                   */
                       ,MWR.ICHAE_DT          /* 정기건 및 연체건 이체일                                                  */
                       ,MWR.REQ_PAY_GUNSU     /* 산출청구건수                                                             */
                       ,MWR.UPD_DM            /* 수정일                                                                   */
                       ,MWR.UPD_MAN           /* 수정자                                                                   */
                       ,MRNC.DEL_FG            /* 청구여부(N:청구전 Y:삭제 R:청구 C:완료(변환/입금) F:완료(실패))          */
                       ,MWR.BIRTH             /* 생년월일(CMS용)                                                          */
                       ,MWR.BILL_GUBUN        /* 36회 카드사 전달 구분값                                                  */
                       ,MWR.RESULT_KEY        /* 카드/CMS결과KEY(실시간포함)                                              */
                       ,MWR.RESULT_KIND       /* 01:파일, 02:실시간, 03:자유,04:기타                                      */
                       ,MWR.MONTH_CNT         /* 당월회차                                                                 */
                   FROM LF_DMUSER.TB_MEMBER_REQ_NAUTH_CNCL MRNC
                        INNER JOIN LF_DMUSER.TB_MEMBER_WDRW_REQ MWR ON MRNC.ACCNT_NO = MWR.ACCNT_NO AND MRNC.PRE_REQ_DAY = MWR.REQ_DAY AND MRNC.RESULT_KEY = MWR.RESULT_KEY
                  WHERE 1=1
                    AND MRNC.DEL_FG IN ('N', 'R')
                    AND MRNC.ACCNT_NO = #{accnt_no}
               ) A
         WHERE 1=1
    </select>

    <!-- CMS 변환 시 청구 테이블 결과값 반영 (DEL_FG = 'C'(성공) 'F'(실패), PAY_KIND = '01' 처리완료 및 결과 종류가 파일 -->
    <update id="DlwPayMap.uptReqResultStat" parameterType="map">
        /*DlwPayMap.uptReqResultStat*/
        BEGIN
        	<if test='auth_yn == "Y"'>
        		<if test="pay_mthd == '06'">
		        	/*[001] 카드 유승인 성공 업데이트*/
				    MERGE INTO TB_MEMBER_WDRW_REQ_DAMO AAA
				    USING (
				            SELECT
				                ACCNT_NO,
				                RESULT_KEY,
				                REQ_DAY
				            FROM TB_MEMBER_WDRW_RESULT   
				            WHERE 1=1
				            AND REQ_DAY = #{req_day} 
				            AND PAY_KIND = '01'
				            AND PAY_MTHD = '06'
				            AND NVL(AUTH_YN,'Y') = 'Y'
				            AND NVL(RESULT_CD,'0000') = '3001'
				    ) BBB
				    ON ( AAA.ACCNT_NO = BBB.ACCNT_NO AND AAA.RESULT_KEY = BBB.RESULT_KEY AND AAA.REQ_DAY = BBB.REQ_DAY AND AAA.PAY_MTHD = '06')
				    WHEN MATCHED THEN 
				    UPDATE SET AAA.DEL_FG = 'C', AAA.UPD_MAN = #{upd_man}, AAA.UPD_DM = SYSDATE;
				    
				    /*[002] 카드 유승인 실패 업데이트*/
				    MERGE INTO TB_MEMBER_WDRW_REQ_DAMO AAA
				    USING (
				            SELECT
				                ACCNT_NO,
				                RESULT_KEY, 
				                REQ_DAY
				            FROM TB_MEMBER_WDRW_RESULT   
				            WHERE 1=1
				            AND REQ_DAY = #{req_day}
				            AND PAY_KIND = '01'
				            AND PAY_MTHD = '06'
				            AND NVL(AUTH_YN,'Y') = 'Y'
				            AND NVL(RESULT_CD,'0000') != '3001'
				    ) BBB
				    ON ( AAA.ACCNT_NO = BBB.ACCNT_NO AND AAA.RESULT_KEY = BBB.RESULT_KEY AND AAA.REQ_DAY = BBB.REQ_DAY AND  AAA.PAY_MTHD = '06')
				    WHEN MATCHED THEN 
				    UPDATE SET AAA.DEL_FG = 'F', AAA.UPD_MAN = #{upd_man}, AAA.UPD_DM = SYSDATE;
			    </if> 
			    
			    <if test="pay_mthd == '04'">   
				    /*[003] CMS 유승인 실패 결과 업데이트*/
				    MERGE INTO TB_MEMBER_WDRW_REQ_DAMO AAA
				    USING (
				            SELECT
				                ACCNT_NO,
				                RESULT_KEY,
				                REQ_DAY
				            FROM TB_MEMBER_WDRW_RESULT   
				            WHERE 1=1
				            AND REQ_DAY = #{req_day}
				            AND PAY_KIND = '01'
				            AND PAY_MTHD = '04'
				            AND NVL(AUTH_YN,'Y') = 'Y'
				    ) BBB
				    ON ( AAA.ACCNT_NO = BBB.ACCNT_NO AND AAA.RESULT_KEY = BBB.RESULT_KEY AND AAA.REQ_DAY = BBB.REQ_DAY AND  AAA.PAY_MTHD = '04' )
				    WHEN MATCHED THEN 
				    UPDATE SET AAA.DEL_FG = 'F', AAA.UPD_MAN = #{upd_man}, AAA.UPD_DM = SYSDATE;
				    
				    /*[004] CMS 유승인 성공 업데이트*/
				    UPDATE TB_MEMBER_WDRW_REQ_DAMO AAA
				    SET DEL_FG = 'C', UPD_MAN = #{upd_man}, UPD_DM = SYSDATE
				    WHERE REQ_DAY = #{req_day}
				        AND DEL_FG = 'R'
				        AND PAY_MTHD = '04' 
				        AND NVL(AUTH_YN,'Y') = 'Y';
				</if> 
        	</if>
        
	        <if test='auth_yn == "N"'>
	        	    /*[005] 카드 무승인 성공 업데이트*/
				    MERGE INTO TB_MEMBER_WDRW_REQ_DAMO AAA
				    USING (
				            SELECT
				                ACCNT_NO,
				                RESULT_KEY,
				                REQ_DAY
				            FROM TB_MEMBER_WDRW_RESULT   
				            WHERE 1=1
				            AND REQ_DAY = #{req_day}
				            AND PAY_KIND = '01'
				            AND NVL(AUTH_YN,'Y') = 'N'
				            AND NVL(RESULT_CD,'99') = '00'
				    ) BBB
				    ON ( AAA.ACCNT_NO = BBB.ACCNT_NO AND AAA.RESULT_KEY = BBB.RESULT_KEY AND AAA.REQ_DAY = BBB.REQ_DAY)
				    WHEN MATCHED THEN 
				    UPDATE SET AAA.DEL_FG = 'C', AAA.UPD_MAN = #{upd_man}, AAA.UPD_DM = SYSDATE;
				    				    
				    /*[006] 카드 무승인 실패 업데이트*/
				    MERGE INTO TB_MEMBER_WDRW_REQ_DAMO AAA
				    USING (
				            SELECT
				                ACCNT_NO,
				                RESULT_KEY,
				                REQ_DAY
				            FROM TB_MEMBER_WDRW_RESULT   
				            WHERE 1=1
				            AND REQ_DAY = #{req_day}
				            AND PAY_KIND = '01'
				            AND NVL(AUTH_YN,'Y') = 'N'
				            AND NVL(RESULT_CD,'99') != '00'
				    ) BBB
				    ON ( AAA.ACCNT_NO = BBB.ACCNT_NO AND AAA.RESULT_KEY = BBB.RESULT_KEY AND AAA.REQ_DAY = BBB.REQ_DAY)
				    WHEN MATCHED THEN 
				    UPDATE SET AAA.DEL_FG = 'F', AAA.UPD_MAN = #{upd_man}, AAA.UPD_DM = SYSDATE ;    
				    
				    /*[007] 카드 무승인 취소 성공 업데이트*/
				    MERGE INTO TB_MEMBER_REQ_NAUTH_CNCL AAA
				    USING (
				            SELECT
				                ACCNT_NO,
				                RESULT_KEY,
				                REQ_DAY
				            FROM TB_MEMBER_WDRW_RESULT   
				            WHERE 1=1
				            AND REQ_DAY = #{req_day}                   
				            AND PAY_KIND = '01'
				            AND NVL(AUTH_YN,'Y') = 'N'
				            AND NVL(RESULT_CD,'99') = '00'
				    ) BBB
				    ON ( AAA.ACCNT_NO = BBB.ACCNT_NO AND AAA.CC_RESULT_KEY = BBB.RESULT_KEY AND AAA.REQ_DAY = BBB.REQ_DAY)
				    WHEN MATCHED THEN 
				    UPDATE SET AAA.DEL_FG = 'C', AAA.UPD_MAN = #{upd_man}, AAA.UPD_DM = SYSDATE;
								
				    /*[008] 카드 무승인 취소 실패 업데이트*/
				    MERGE INTO TB_MEMBER_REQ_NAUTH_CNCL AAA
				    USING (
				            SELECT
				                ACCNT_NO,
				                RESULT_KEY,
				                REQ_DAY
				            FROM TB_MEMBER_WDRW_RESULT      
				            WHERE 1=1
				            AND REQ_DAY = #{req_day}
				            AND PAY_KIND = '01'
				            AND NVL(AUTH_YN,'Y') = 'N'
				            AND NVL(RESULT_CD,'99') != '00'
				    ) BBB
				    ON ( AAA.ACCNT_NO = BBB.ACCNT_NO AND AAA.CC_RESULT_KEY = BBB.RESULT_KEY AND AAA.REQ_DAY = BBB.REQ_DAY)
				    WHEN MATCHED THEN 
				    UPDATE SET AAA.DEL_FG = 'F', AAA.UPD_MAN = #{upd_man}, AAA.UPD_DM = SYSDATE;
		     </if>
        END;
        
          <!-- 20200311 무승인 + 청구 업데이트 처리 변경 -->
        <!-- 
        <if test='auth_yn == "N"'>
        	UPDATE TB_MEMBER_WDRW_REQ A
                SET A.DEL_FG = 'C',
                    A.UPD_MAN = #{upd_man},
                    A.UPD_DM = SYSDATE
            WHERE 1=1
            AND REQ_DAY = #{req_day}
            AND DEL_FG = 'R'
            AND PAY_MTHD = '06'
            AND RESULT_KIND = '01'
            AND NVL(AUTH_YN,'Y') = 'N'
            AND EXISTS
                (SELECT
                    RESULT_KEY 
                 FROM TB_MEMBER_WDRW_RESULT
                 WHERE 1=1
                 AND ACCNT_NO = A.ACCNT_NO
                 AND RESULT_KEY = A.RESULT_KEY
                 AND REQ_DAY = A.REQ_DAY
                 AND NVL(RESULT_CD,'99') = '00') ; 

        	UPDATE TB_MEMBER_WDRW_REQ A
                SET A.DEL_FG = 'F',
                    A.UPD_MAN = #{upd_man},
                    A.UPD_DM = SYSDATE
            WHERE 1=1
            AND REQ_DAY = #{req_day}
            AND DEL_FG = 'R'
            AND PAY_MTHD = '06'
            AND RESULT_KIND = '01'
            AND NVL(AUTH_YN,'Y') = 'N'
            AND EXISTS
                (SELECT
                    RESULT_KEY
                 FROM TB_MEMBER_WDRW_RESULT
                 WHERE 1=1
                 AND ACCNT_NO = A.ACCNT_NO
                 AND RESULT_KEY = A.RESULT_KEY
                 AND REQ_DAY = A.REQ_DAY
                 AND NVL(RESULT_CD,'99') != '00'	);   
                 
            UPDATE TB_MEMBER_REQ_NAUTH_CNCL A
			SET DEL_FG = 'C',
				  A.UPD_MAN = #{upd_man},
				  A.UPD_DM = SYSDATE
			WHERE 1=1
			AND DEL_FG = 'R'
			AND REQ_DAY = #{req_day}
			AND EXISTS
			    (SELECT
			        RESULT_KEY
			     FROM TB_MEMBER_WDRW_RESULT
			     WHERE RESULT_KEY = A.CC_RESULT_KEY
			     AND REQ_DAY = A.REQ_DAY
			     AND NVL(RESULT_CD,'99') = '00' ) ;
			     
            UPDATE TB_MEMBER_REQ_NAUTH_CNCL A
			SET DEL_FG = 'F',
				  A.UPD_MAN = #{upd_man},
				  A.UPD_DM = SYSDATE
			WHERE 1=1
			AND DEL_FG = 'R'
			AND REQ_DAY = #{req_day}
			AND EXISTS
			    (SELECT
			        RESULT_KEY
			     FROM TB_MEMBER_WDRW_RESULT
			     WHERE RESULT_KEY = A.CC_RESULT_KEY
			     AND REQ_DAY = #{req_day} 
			     AND NVL(RESULT_CD,'99') != '00' ) ;			     
        </if>
      
        <if test='auth_yn != "N"'>        	
            UPDATE TB_MEMBER_WDRW_REQ A
                SET A.DEL_FG = 'C',
                    A.UPD_MAN = #{upd_man}, 
                    A.UPD_DM = SYSDATE
            WHERE 1=1
            AND REQ_DAY = #{req_day}
            AND DEL_FG = 'R'
            AND PAY_MTHD = #{pay_mthd}
            AND RESULT_KIND = '01'
            <if test="pay_mthd == '06'"> /* 카드 */
            AND EXISTS
                (SELECT
                    RESULT_KEY
                 FROM TB_MEMBER_WDRW_RESULT
                 WHERE 1=1
                 AND ACCNT_NO = A.ACCNT_NO
                 AND RESULT_KEY = A.RESULT_KEY
                 AND REQ_DAY = A.REQ_DAY
                 AND NVL(AUTH_YN,'Y') = 'Y'
                 AND NVL(RESULT_CD,'0000') = '3001') ;
            </if>
            <if test="pay_mthd == '04'"> /* CMS */
            AND NOT EXISTS
                (SELECT
                    RESULT_KEY
                 FROM TB_MEMBER_WDRW_RESULT
                 WHERE 1=1
                 AND ACCNT_NO = A.ACCNT_NO
                 AND RESULT_KEY = A.RESULT_KEY
                 AND REQ_DAY = A.REQ_DAY
                 AND RESULT_KIND = '01') ;
            </if>

            UPDATE TB_MEMBER_WDRW_REQ A
                SET A.DEL_FG = 'F',
                    A.UPD_MAN = #{upd_man},
                    A.UPD_DM = SYSDATE
            WHERE 1=1
            AND REQ_DAY = #{req_day}
            AND DEL_FG = 'R'
            AND PAY_MTHD = #{pay_mthd}
            AND RESULT_KIND = '01'
            AND EXISTS
                (SELECT
                    RESULT_KEY
                 FROM TB_MEMBER_WDRW_RESULT
                 WHERE 1=1
                 AND ACCNT_NO = A.ACCNT_NO
                 AND RESULT_KEY = A.RESULT_KEY
                 AND REQ_DAY = A.REQ_DAY
                 AND RESULT_KIND = '01'                 
                 <if test="pay_mthd == '06'"> /* 카드 */
	                 AND NVL(AUTH_YN,'Y') = 'Y'
	                 AND NVL(RESULT_CD,'0000') != '3001'
                 </if>
                );
        </if>
         -->

        <!--
        MERGE INTO TB_MEMBER_WDRW_REQ A
        USING (
                SELECT
                    MWQ.ACCNT_NO,
                    MWQ.PAY_MTHD,
                    MWQ.REQ_DAY,
                    MWQ.REQ_PAY_NO,
                    (CASE WHEN NVL(MWR.RESULT_CD,'3001') = '3001' THEN 'C' ELSE 'F' END) AS DEL_FG
                FROM TB_MEMBER_WDRW_REQ MWQ LEFT OUTER JOIN
                TB_MEMBER_WDRW_RESULT MWR ON MWQ.PAY_MTHD =MWR.PAY_MTHD AND MWQ.RESULT_KEY = MWR.RESULT_KEY AND MWQ.REQ_DAY = MWR.REQ_DAY
                WHERE 1=1
                    AND MWQ.DEL_FG = 'R'
                    AND MWQ.PAY_MTHD = #{pay_mthd}
                    AND MWQ.RESULT_KIND = '01'
                    AND MWQ.REQ_DAY = #{req_day}
            ) B
        ON (
                A.ACCNT_NO = B.ACCNT_NO
                AND A.REQ_PAY_NO = B.REQ_PAY_NO
                AND A.PAY_MTHD = B.PAY_MTHD
                AND A.REQ_DAY = B.REQ_DAY
                AND A.RESULT_KIND = '01'
            )
        WHEN MATCHED THEN
        UPDATE SET A.DEL_FG = B.DEL_FG,
                    A.UPD_MAN = #{upd_man},
                    A.UPD_DM = SYSDATE
     -->
    </update>

    <update id="DlwPayMap.uptReqResultStat_R" parameterType="map">

        UPDATE
            /*DlwPayMap.uptReqResultStat_R*/
        TB_MEMBER_WDRW_REQ A
        SET DEL_FG = 'R',
            UPD_MAN = #{upd_man},
            UPD_DM = SYSDATE
        WHERE 1=1
            AND A.DEL_FG IN ('C','F')
            RESULT_KIND = '01',
            AND A.PAY_MTHD = #{pay_mthd}
            AND A.REQ_DAY = #{req_day}
    </update>

    <!-- ================================================================
     * 날짜 : 20181025
     * 이름 : 송준빈
     * 추가내용 : Card File List 수신리스트 결과 반영 여부 확인
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_WDRW_RSLT
     * ================================================================
     * -->
    <select id="DlwPayMap.getWdrwResultCount" parameterType="map" resultType="int">
        SELECT
            /* DlwPayMap.getWdrwResultCount */
            COUNT(*) AS WDRW_CNT
          FROM ( SELECT ACCNT_NO   /* 회원번호                            */
                       ,REQ_DAY    /* 청구/납입 일자                      */
                       ,REQ_NO     /* 청구/납입회차                       */
                       ,PAY_KIND   /* 01:파일, 02:실시간, 03:자유,04:기타 */
                       ,RESULT_KEY /* 결과키(TID, CMS결과키)              */
                       ,RESULT_CD  /* 결과코드                            */
                       ,RESULT_MSG /* 결과메세지                          */
                       ,PAY_MTHD   /* 납입방법(CMS/카드)                  */
                       ,AUTH_DT    /* 승인일자                            */
                       ,AUTH_CD    /* 승인번호                            */
                       ,ICHAE_CD   /* 결과 이체 CD (카드사, 은행)         */
                       ,ETC        /* 결과이슈사항(통장기재내역등)        */
                       ,AUTH_YN    /* 승인여부(Y:유승인,N:무승인)         */
                   FROM LF_DMUSER.TB_MEMBER_WDRW_RESULT
                  WHERE 1=1
                    AND PAY_MTHD = #{pay_mthd}
                    AND PAY_KIND = #{pay_kind}
                    AND AUTH_YN  = #{auth_yn}
                    AND REQ_DAY  = #{req_day}
               ) A
         WHERE 1=1
    </select>

    <!-- ================================================================
     * 날짜 : 20181026
     * 이름 : 송준빈
     * 추가내용 : 출금이체의뢰내역(청구) Card 총 합계
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_WDRW_REQ
     * ================================================================
     * -->
    <select id="DlwPayMap.getCalcAndChargeCardSummary" parameterType="map" resultType="resultMap">
         SELECT /* DlwPayMap.getCalcAndChargeCardSummary */
                PAY_MTHD                                                                                                                              /* 납입방법                  */
               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG IN ('N','R') AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) AS NR_JUNGI_CNT        /* 정기건 총건수 (청구전/후) */
               ,SUM(CASE WHEN REQ_BIT = '04'     AND DEL_FG IN ('N','R') AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) AS NR_YENCHE_CNT       /* 연체건 총건수 (청구전/후) */
               ,SUM(CASE WHEN REQ_BIT = '05'     AND DEL_FG IN ('N','R') AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) AS NR_IMSI_CNT         /* 임시건 총건수 (청구전/후) */
               ,SUM(CASE WHEN REQ_BIT = '03'     AND DEL_FG IN ('N','R') AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) AS NR_IM_CNT           /* 임의건 총건수 (청구전/후) */
               ,SUM(CASE WHEN RESULT_KIND = '02' AND DEL_FG IN ('N','R') THEN 1 ELSE 0 END) AS NR_REAL_CNT                                            /* 실시간 총건수 (청구전/후) */
               ,SUM(CASE WHEN RESULT_KIND = '03' AND DEL_FG IN ('N','R') THEN 1 ELSE 0 END) AS NR_FREE_CNT                                            /*  자유  총건수 (청구전/후) */
               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG IN ('N','R') AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '04'     AND DEL_FG IN ('N','R') AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '05'     AND DEL_FG IN ('N','R') AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '03'     AND DEL_FG IN ('N','R') AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) +
                SUM(CASE WHEN RESULT_KIND = '02' AND DEL_FG IN ('N','R') THEN 1 ELSE 0 END) +
                SUM(CASE WHEN RESULT_KIND = '03' AND DEL_FG IN ('N','R') THEN 1 ELSE 0 END) AS NR_CNT_SUMM                                            /* 청구전/후 총건수          */

               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG IN ('N','R') AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) AS NR_JUNGI_AMT  /* 정기건 총액 (청구전/후)   */
               ,SUM(CASE WHEN REQ_BIT = '04'     AND DEL_FG IN ('N','R') AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) AS NR_YENCHE_AMT /* 연체건 총액 (청구전/후)   */
               ,SUM(CASE WHEN REQ_BIT = '05'     AND DEL_FG IN ('N','R') AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) AS NR_IMSI_AMT   /* 임시건 총액 (청구전/후)   */
               ,SUM(CASE WHEN REQ_BIT = '03'     AND DEL_FG IN ('N','R') AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) AS NR_IM_AMT     /* 임의건 총액 (청구전/후)   */
               ,SUM(CASE WHEN RESULT_KIND = '02' AND DEL_FG IN ('N','R') THEN PAY_AMT ELSE 0 END) AS NR_REAL_AMT                                      /* 실시간 총액 (청구전/후)   */
               ,SUM(CASE WHEN RESULT_KIND = '03' AND DEL_FG IN ('N','R') THEN PAY_AMT ELSE 0 END) AS NR_FREE_AMT                                      /*  자유  총액 (청구전/후)   */
               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG IN ('N','R') AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '04'     AND DEL_FG IN ('N','R') AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '05'     AND DEL_FG IN ('N','R') AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '03'     AND DEL_FG IN ('N','R') AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) +
                SUM(CASE WHEN RESULT_KIND = '02' AND DEL_FG IN ('N','R') THEN PAY_AMT ELSE 0 END) +
                SUM(CASE WHEN RESULT_KIND = '03' AND DEL_FG IN ('N','R') THEN PAY_AMT ELSE 0 END) AS NR_AMT_SUMM                                      /* 청구전/후 금액 총합       */

               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG = 'C' AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) AS C_JUNGI_CNT                /* 정기건 총건수 (입금완료)  */
               ,SUM(CASE WHEN REQ_BIT = '04'     AND DEL_FG = 'C' AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) AS C_YENCHE_CNT               /* 연체건 총건수 (입금완료)  */
               ,SUM(CASE WHEN REQ_BIT = '05'     AND DEL_FG = 'C' AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) AS C_IMSI_CNT                 /* 임시건 총건수 (입금완료)  */
               ,SUM(CASE WHEN REQ_BIT = '03'     AND DEL_FG = 'C' AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) AS C_IM_CNT                   /* 임의건 총건수 (입금완료)  */
               ,SUM(CASE WHEN RESULT_KIND = '02' AND DEL_FG = 'C' THEN 1 ELSE 0 END) AS C_REAL_CNT                                                    /* 실시간 총건수 (입금완료)  */
               ,SUM(CASE WHEN RESULT_KIND = '03' AND DEL_FG = 'C' THEN 1 ELSE 0 END) AS C_FREE_CNT                                                    /*  자유  총건수 (입금완료)  */
               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG = 'C' AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '04'     AND DEL_FG = 'C' AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '05'     AND DEL_FG = 'C' AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '03'     AND DEL_FG = 'C' AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) +
                SUM(CASE WHEN RESULT_KIND = '02' AND DEL_FG = 'C' THEN 1 ELSE 0 END) +
                SUM(CASE WHEN RESULT_KIND = '03' AND DEL_FG = 'C' THEN 1 ELSE 0 END) AS C_CNT_SUMM                                                    /* 성공 총건수               */

               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG = 'C' AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) AS C_JUNGI_AMT          /* 정기건 총액 (입금완료)    */
               ,SUM(CASE WHEN REQ_BIT = '04'     AND DEL_FG = 'C' AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) AS C_YENCHE_AMT         /* 연체건 총액 (입금완료)    */
               ,SUM(CASE WHEN REQ_BIT = '05'     AND DEL_FG = 'C' AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) AS C_IMSI_AMT           /* 임시건 총액 (입금완료)    */
               ,SUM(CASE WHEN REQ_BIT = '03'     AND DEL_FG = 'C' AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) AS C_IM_AMT             /* 임의건 총액 (입금완료)    */
               ,SUM(CASE WHEN RESULT_KIND = '02' AND DEL_FG = 'C' THEN PAY_AMT ELSE 0 END) AS C_REAL_AMT                                              /* 실시간 총액 (입금완료)    */
               ,SUM(CASE WHEN RESULT_KIND = '03' AND DEL_FG = 'C' THEN PAY_AMT ELSE 0 END) AS C_FREE_AMT                                              /*  자유  총액 (입금완료)    */
               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG = 'C' AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '04'     AND DEL_FG = 'C' AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '05'     AND DEL_FG = 'C' AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '03'     AND DEL_FG = 'C' AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) +
                SUM(CASE WHEN RESULT_KIND = '02' AND DEL_FG = 'C' THEN PAY_AMT ELSE 0 END) +
                SUM(CASE WHEN RESULT_KIND = '03' AND DEL_FG = 'C' THEN PAY_AMT ELSE 0 END) AS C_AMT_SUMM                                              /* 성공 금액 총합            */

               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG = 'F' AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) AS F_JUNGI_CNT                /* 정기건 총건수 (실패)      */
               ,SUM(CASE WHEN REQ_BIT = '04'     AND DEL_FG = 'F' AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) AS F_YENCHE_CNT               /* 연체건 총건수 (실패)      */
               ,SUM(CASE WHEN REQ_BIT = '05'     AND DEL_FG = 'F' AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) AS F_IMSI_CNT                 /* 임시건 총건수 (실패)      */
               ,SUM(CASE WHEN REQ_BIT = '03'     AND DEL_FG = 'F' AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) AS F_IM_CNT                   /* 임의건 총건수 (실패)      */
               ,SUM(CASE WHEN RESULT_KIND = '02' AND DEL_FG = 'F' THEN 1 ELSE 0 END) AS F_REAL_CNT                                                    /* 실시간 총건수 (실패)      */
               ,SUM(CASE WHEN RESULT_KIND = '03' AND DEL_FG = 'F' THEN 1 ELSE 0 END) AS F_FREE_CNT                                                    /*  자유  총건수 (실패)      */
               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG = 'F' AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '04'     AND DEL_FG = 'F' AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '05'     AND DEL_FG = 'F' AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '03'     AND DEL_FG = 'F' AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) +
                SUM(CASE WHEN RESULT_KIND = '02' AND DEL_FG = 'F' THEN 1 ELSE 0 END) +
                SUM(CASE WHEN RESULT_KIND = '03' AND DEL_FG = 'F' THEN 1 ELSE 0 END) AS F_CNT_SUMM                                                    /* 실패 총건수               */

               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG = 'F' AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) AS F_JUNGI_AMT          /* 정기건 총액 (실패)        */
               ,SUM(CASE WHEN REQ_BIT = '04'     AND DEL_FG = 'F' AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) AS F_YENCHE_AMT         /* 연체건 총액 (실패)        */
               ,SUM(CASE WHEN REQ_BIT = '05'     AND DEL_FG = 'F' AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) AS F_IMSI_AMT           /* 임시건 총액 (실패)        */
               ,SUM(CASE WHEN REQ_BIT = '03'     AND DEL_FG = 'F' AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) AS F_IM_AMT             /* 임의건 총액 (실패)        */
               ,SUM(CASE WHEN RESULT_KIND = '02' AND DEL_FG = 'F' THEN PAY_AMT ELSE 0 END) AS F_REAL_AMT                                              /* 실시간 총액 (실패)        */
               ,SUM(CASE WHEN RESULT_KIND = '03' AND DEL_FG = 'F' THEN PAY_AMT ELSE 0 END) AS F_FREE_AMT                                              /*  자유  총액 (실패)        */
               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG = 'F' AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '04'     AND DEL_FG = 'F' AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '05'     AND DEL_FG = 'F' AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '03'     AND DEL_FG = 'F' AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) +
                SUM(CASE WHEN RESULT_KIND = '02' AND DEL_FG = 'F' THEN PAY_AMT ELSE 0 END) +
                SUM(CASE WHEN RESULT_KIND = '03' AND DEL_FG = 'F' THEN PAY_AMT ELSE 0 END) AS F_AMT_SUMM                                              /* 실패 금액 총합            */

               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG = 'X' AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) AS X_JUNGI_CNT                /* 정기건 총건수 (취소)      */
               ,SUM(CASE WHEN REQ_BIT = '04'     AND DEL_FG = 'X' AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) AS X_YENCHE_CNT               /* 연체건 총건수 (취소)      */
               ,SUM(CASE WHEN REQ_BIT = '05'     AND DEL_FG = 'X' AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) AS X_IMSI_CNT                 /* 임시건 총건수 (취소)      */
               ,SUM(CASE WHEN REQ_BIT = '03'     AND DEL_FG = 'X' AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) AS X_IM_CNT                   /* 임의건 총건수 (취소)      */
               ,SUM(CASE WHEN RESULT_KIND = '02' AND DEL_FG = 'X' THEN 1 ELSE 0 END) AS X_REAL_CNT                                                    /* 실시간 총건수 (취소)      */
               ,SUM(CASE WHEN RESULT_KIND = '03' AND DEL_FG = 'X' THEN 1 ELSE 0 END) AS X_FREE_CNT                                                    /*  자유  총건수 (취소)      */
               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG = 'X' AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '04'     AND DEL_FG = 'X' AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '05'     AND DEL_FG = 'X' AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '03'     AND DEL_FG = 'X' AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) +
                SUM(CASE WHEN RESULT_KIND = '02' AND DEL_FG = 'X' THEN 1 ELSE 0 END) +
                SUM(CASE WHEN RESULT_KIND = '03' AND DEL_FG = 'X' THEN 1 ELSE 0 END) AS X_CNT_SUMM                                                    /* 취소 총건수               */

               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG = 'X' AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) AS X_JUNGI_AMT          /* 정기건 총액 (취소)        */
               ,SUM(CASE WHEN REQ_BIT = '04'     AND DEL_FG = 'X' AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) AS X_YENCHE_AMT         /* 연체건 총액 (취소)        */
               ,SUM(CASE WHEN REQ_BIT = '05'     AND DEL_FG = 'X' AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) AS X_IMSI_AMT           /* 임시건 총액 (취소)        */
               ,SUM(CASE WHEN REQ_BIT = '03'     AND DEL_FG = 'X' AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) AS X_IM_AMT             /* 임의건 총액 (취소)        */
               ,SUM(CASE WHEN RESULT_KIND = '02' AND DEL_FG = 'X' THEN PAY_AMT ELSE 0 END) AS X_REAL_AMT                                              /* 실시간 총액 (취소)        */
               ,SUM(CASE WHEN RESULT_KIND = '03' AND DEL_FG = 'X' THEN PAY_AMT ELSE 0 END) AS X_FREE_AMT                                              /*  자유  총액 (취소)        */
               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG = 'X' AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '04'     AND DEL_FG = 'X' AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '05'     AND DEL_FG = 'X' AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '03'     AND DEL_FG = 'X' AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) +
                SUM(CASE WHEN RESULT_KIND = '02' AND DEL_FG = 'X' THEN PAY_AMT ELSE 0 END) +
                SUM(CASE WHEN RESULT_KIND = '03' AND DEL_FG = 'X' THEN PAY_AMT ELSE 0 END) AS X_AMT_SUMM                                              /* 취소 금액 총합            */
           FROM TB_MEMBER_WDRW_REQ
          WHERE 1=1
            <!-- AND DEL_FG IN ('N', 'R', 'C', 'F')                                         /* N:청구전 Y:삭제 R:청구 C:완료(변환/입금) F:완료(실패) */ -->
            AND DEL_FG != 'Y'                                                               /* N:청구전 Y:삭제 R:청구 C:완료(변환/입금) F:완료(실패) X:입금취소 */
            AND REQ_DAY BETWEEN #{req_day_stt} AND #{req_day_end}
            AND PAY_MTHD = '06'                                                        /* 04:CMS 06:Card                                        */
            AND AUTH_YN = 'Y'
          GROUP BY PAY_MTHD
    </select>
    
    <!-- ================================================================
     * 날짜 : 20191223
     * 이름 : 송준빈
     * 추가내용 : 출금이체의뢰내역(청구) Card무승인 총 합계
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_WDRW_REQ
     * ================================================================
     * -->
    <select id="DlwPayMap.getCalcAndChargeCardNauthSummary" parameterType="map" resultType="resultMap">
         SELECT /* DlwPayMap.getCalcAndChargeCardSummary */
                PAY_MTHD                                                                                                                              /* 납입방법 */                  
               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG IN ('N','R') AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) AS NR_JUNGI_CNT        /* 정기건 총건수 (청구전/후) */
               ,NVL((SELECT COUNT(*) AS ICNT FROM LF_DMUSER.TB_MEMBER_REQ_NAUTH_CNCL MRNC WHERE 1=1 
                    AND TO_CHAR(MRNC.REG_DM, 'YYYYMMDD') BETWEEN #{req_day_stt} AND #{req_day_end} AND MRNC.DEL_FG IN ('N', 'R')), 0) AS NR_CNCL_CNT  /* 취소건 총건수 (청구전/후) */
               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG IN ('N','R') AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) +
                NVL((SELECT COUNT(*) AS ICNT FROM LF_DMUSER.TB_MEMBER_REQ_NAUTH_CNCL MRNC WHERE 1=1 
                    AND TO_CHAR(MRNC.REG_DM, 'YYYYMMDD') BETWEEN #{req_day_stt} AND #{req_day_end} AND MRNC.DEL_FG IN ('N', 'R')), 0) AS NR_CNT_SUMM  /* 청구전/후 총건수 */

               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG IN ('N','R') AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) AS NR_JUNGI_AMT  /* 정기건 총액 (청구전/후) */
               ,NVL((SELECT SUM(PAY_AMT) AS ICNT FROM LF_DMUSER.TB_MEMBER_REQ_NAUTH_CNCL MRNC WHERE 1=1 
                    AND TO_CHAR(MRNC.REG_DM, 'YYYYMMDD') BETWEEN #{req_day_stt} AND #{req_day_end} AND MRNC.DEL_FG IN ('N', 'R')), 0) AS NR_CNCL_AMT  /* 취소건 총액 (청구전/후) */
               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG IN ('N','R') AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) +
                NVL((SELECT SUM(PAY_AMT) AS ICNT FROM LF_DMUSER.TB_MEMBER_REQ_NAUTH_CNCL MRNC WHERE 1=1 
                    AND TO_CHAR(MRNC.REG_DM, 'YYYYMMDD') BETWEEN #{req_day_stt} AND #{req_day_end} AND MRNC.DEL_FG IN ('N', 'R')), 0) AS NR_AMT_SUMM  /* 청구전/후 금액 총합 */

               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG = 'C' AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) AS C_JUNGI_CNT                /* 정기건 총건수 (입금완료) */
               ,NVL((SELECT COUNT(*) AS ICNT FROM LF_DMUSER.TB_MEMBER_REQ_NAUTH_CNCL MRNC WHERE 1=1 
                    AND MRNC.REQ_DAY BETWEEN #{req_day_stt} AND #{req_day_end} AND MRNC.DEL_FG = 'C'), 0) AS C_CNCL_CNT                               /* 취소건 총건수 (입금완료) */
               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG = 'C' AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) +
                NVL((SELECT COUNT(*) AS ICNT FROM LF_DMUSER.TB_MEMBER_REQ_NAUTH_CNCL MRNC WHERE 1=1 
                    AND MRNC.REQ_DAY BETWEEN #{req_day_stt} AND #{req_day_end} AND MRNC.DEL_FG = 'C'), 0) AS C_CNT_SUMM                               /* 성공 총건수 (입금완료) */

               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG = 'C' AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) AS C_JUNGI_AMT          /* 정기건 총액 (입금완료) */
               ,NVL((SELECT SUM(PAY_AMT) AS ICNT FROM LF_DMUSER.TB_MEMBER_REQ_NAUTH_CNCL MRNC WHERE 1=1 
                    AND MRNC.REQ_DAY BETWEEN #{req_day_stt} AND #{req_day_end} AND MRNC.DEL_FG = 'C'), 0) AS C_CNCL_AMT                               /* 취소건 총액 (입금완료) */
               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG = 'C' AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) +
                NVL((SELECT SUM(PAY_AMT) AS ICNT FROM LF_DMUSER.TB_MEMBER_REQ_NAUTH_CNCL MRNC WHERE 1=1 
                    AND MRNC.REQ_DAY BETWEEN #{req_day_stt} AND #{req_day_end} AND MRNC.DEL_FG = 'C'), 0) AS C_AMT_SUMM                               /* 성공 금액 총합 */

               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG = 'F' AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) AS F_JUNGI_CNT                /* 정기건 총건수 (실패) */
               ,NVL((SELECT COUNT(*) AS ICNT FROM LF_DMUSER.TB_MEMBER_REQ_NAUTH_CNCL MRNC WHERE 1=1 
                    AND MRNC.REQ_DAY BETWEEN #{req_day_stt} AND #{req_day_end} AND MRNC.DEL_FG = 'F'), 0) AS F_CNCL_CNT                               /* 취소건 총건수 (실패) */
               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG = 'F' AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) +
                NVL((SELECT COUNT(*) AS ICNT FROM LF_DMUSER.TB_MEMBER_REQ_NAUTH_CNCL MRNC WHERE 1=1 
                    AND MRNC.REQ_DAY BETWEEN #{req_day_stt} AND #{req_day_end} AND MRNC.DEL_FG = 'F'), 0) AS F_CNT_SUMM                               /* 실패 총건수 */

               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG = 'F' AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) AS F_JUNGI_AMT          /* 정기건 총액 (실패) */
               ,NVL((SELECT SUM(PAY_AMT) AS ICNT FROM LF_DMUSER.TB_MEMBER_REQ_NAUTH_CNCL MRNC WHERE 1=1 
                    AND MRNC.REQ_DAY BETWEEN #{req_day_stt} AND #{req_day_end} AND MRNC.DEL_FG = 'F'), 0) AS F_CNCL_AMT                               /* 취소건 총액 (실패) */
               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG = 'F' AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) +
                NVL((SELECT SUM(PAY_AMT) AS ICNT FROM LF_DMUSER.TB_MEMBER_REQ_NAUTH_CNCL MRNC WHERE 1=1 
                    AND MRNC.REQ_DAY BETWEEN #{req_day_stt} AND #{req_day_end} AND MRNC.DEL_FG = 'F'), 0) AS F_AMT_SUMM                               /* 실패 금액 총합 */

               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG = 'X' AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) AS X_JUNGI_CNT                /* 정기건 총건수 (취소) */
               ,NVL((SELECT COUNT(*) AS ICNT FROM LF_DMUSER.TB_MEMBER_REQ_NAUTH_CNCL MRNC WHERE 1=1 
                    AND MRNC.REQ_DAY BETWEEN #{req_day_stt} AND #{req_day_end} AND MRNC.DEL_FG = 'X'), 0) AS X_CNCL_CNT                               /* 취소건 총건수 (취소) */
               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG = 'X' AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) +
                NVL((SELECT COUNT(*) AS ICNT FROM LF_DMUSER.TB_MEMBER_REQ_NAUTH_CNCL MRNC WHERE 1=1 
                    AND MRNC.REQ_DAY BETWEEN #{req_day_stt} AND #{req_day_end} AND MRNC.DEL_FG = 'X'), 0) AS X_CNT_SUMM                               /* 취소 총건수 */

               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG = 'X' AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) AS X_JUNGI_AMT          /* 정기건 총액 (취소) */
               ,NVL((SELECT SUM(PAY_AMT) AS ICNT FROM LF_DMUSER.TB_MEMBER_REQ_NAUTH_CNCL MRNC WHERE 1=1 
                    AND MRNC.REQ_DAY BETWEEN #{req_day_stt} AND #{req_day_end} AND MRNC.DEL_FG = 'X'), 0) AS X_CNCL_AMT                               /* 취소건 총건수 (취소) */
               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG = 'X' AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) +
                NVL((SELECT SUM(PAY_AMT) AS ICNT FROM LF_DMUSER.TB_MEMBER_REQ_NAUTH_CNCL MRNC WHERE 1=1 
                    AND MRNC.REQ_DAY BETWEEN #{req_day_stt} AND #{req_day_end} AND MRNC.DEL_FG = 'X'), 0) AS X_AMT_SUMM                               /* 취소 금액 총합 */
           FROM TB_MEMBER_WDRW_REQ
          WHERE 1=1
            AND DEL_FG != 'Y'
            AND REQ_DAY BETWEEN #{req_day_stt} AND #{req_day_end}
            AND PAY_MTHD = '06'
            AND AUTH_YN = 'N'
          GROUP BY PAY_MTHD
    </select>

    <!-- ================================================================
     * 날짜 : 20181026
     * 이름 : 송준빈
     * 추가내용 : 출금이체의뢰내역(청구) CMS 총 합계
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_WDRW_REQ
     * ================================================================
     * -->
    <select id="DlwPayMap.getCalcAndChargeCMSSummary" parameterType="map" resultType="resultMap">
         SELECT /* DlwPayMap.getCalcAndChargeCMSSummary */
                PAY_MTHD                                                                                           /* 납입방법                  */
               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG IN ('N','R') THEN 1 ELSE 0 END) AS NR_JUNGI_CNT        /* 정기건 총건수 (청구전/후) */
               ,SUM(CASE WHEN REQ_BIT = '04'     AND DEL_FG IN ('N','R') THEN 1 ELSE 0 END) AS NR_YENCHE_CNT       /* 연체건 총건수 (청구전/후) */
               ,SUM(CASE WHEN REQ_BIT = '05'     AND DEL_FG IN ('N','R') THEN 1 ELSE 0 END) AS NR_IMSI_CNT         /* 임시건 총건수 (청구전/후) */
               ,SUM(CASE WHEN REQ_BIT = '03'     AND DEL_FG IN ('N','R') THEN 1 ELSE 0 END) AS NR_IM_CNT           /* 임의건 총건수 (청구전/후) */
               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG IN ('N','R') THEN 1 ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '04'     AND DEL_FG IN ('N','R') THEN 1 ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '05'     AND DEL_FG IN ('N','R') THEN 1 ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '03'     AND DEL_FG IN ('N','R') THEN 1 ELSE 0 END) AS NR_CNT_SUMM         /* 청구전/후 총건수          */

               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG IN ('N','R') THEN PAY_AMT ELSE 0 END) AS NR_JUNGI_AMT  /* 정기건 총액 (청구전/후)   */
               ,SUM(CASE WHEN REQ_BIT = '04'     AND DEL_FG IN ('N','R') THEN PAY_AMT ELSE 0 END) AS NR_YENCHE_AMT /* 연체건 총액 (청구전/후)   */
               ,SUM(CASE WHEN REQ_BIT = '05'     AND DEL_FG IN ('N','R') THEN PAY_AMT ELSE 0 END) AS NR_IMSI_AMT   /* 임시건 총액 (청구전/후)   */
               ,SUM(CASE WHEN REQ_BIT = '03'     AND DEL_FG IN ('N','R') THEN PAY_AMT ELSE 0 END) AS NR_IM_AMT     /* 임의건 총액 (청구전/후)   */
               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG IN ('N','R') THEN PAY_AMT ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '04'     AND DEL_FG IN ('N','R') THEN PAY_AMT ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '05'     AND DEL_FG IN ('N','R') THEN PAY_AMT ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '03'     AND DEL_FG IN ('N','R') THEN PAY_AMT ELSE 0 END) AS NR_AMT_SUMM   /* 청구전/후 금액 총합       */

               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG = 'C' THEN 1 ELSE 0 END) AS C_JUNGI_CNT                /* 정기건 총건수 (입금완료)  */
               ,SUM(CASE WHEN REQ_BIT = '04'     AND DEL_FG = 'C' THEN 1 ELSE 0 END) AS C_YENCHE_CNT               /* 연체건 총건수 (입금완료)  */
               ,SUM(CASE WHEN REQ_BIT = '05'     AND DEL_FG = 'C' THEN 1 ELSE 0 END) AS C_IMSI_CNT                 /* 임시건 총건수 (입금완료)  */
               ,SUM(CASE WHEN REQ_BIT = '03'     AND DEL_FG = 'C' THEN 1 ELSE 0 END) AS C_IM_CNT                   /* 임의건 총건수 (입금완료)  */
               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG = 'C' THEN 1 ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '04'     AND DEL_FG = 'C' THEN 1 ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '05'     AND DEL_FG = 'C' THEN 1 ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '03'     AND DEL_FG = 'C' THEN 1 ELSE 0 END) AS C_CNT_SUMM                 /* 성공 총건수               */

               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG = 'C' THEN PAY_AMT ELSE 0 END) AS C_JUNGI_AMT          /* 정기건 총액 (입금완료)    */
               ,SUM(CASE WHEN REQ_BIT = '04'     AND DEL_FG = 'C' THEN PAY_AMT ELSE 0 END) AS C_YENCHE_AMT         /* 연체건 총액 (입금완료)    */
               ,SUM(CASE WHEN REQ_BIT = '05'     AND DEL_FG = 'C' THEN PAY_AMT ELSE 0 END) AS C_IMSI_AMT           /* 임시건 총액 (입금완료)    */
               ,SUM(CASE WHEN REQ_BIT = '03'     AND DEL_FG = 'C' THEN PAY_AMT ELSE 0 END) AS C_IM_AMT             /* 임의건 총액 (입금완료)    */
               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG = 'C' THEN PAY_AMT ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '04'     AND DEL_FG = 'C' THEN PAY_AMT ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '05'     AND DEL_FG = 'C' THEN PAY_AMT ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '03'     AND DEL_FG = 'C' THEN PAY_AMT ELSE 0 END) AS C_AMT_SUMM           /* 성공 금액 총합            */

               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG = 'F' THEN 1 ELSE 0 END) AS F_JUNGI_CNT                /* 정기건 총건수 (실패)      */
               ,SUM(CASE WHEN REQ_BIT = '04'     AND DEL_FG = 'F' THEN 1 ELSE 0 END) AS F_YENCHE_CNT               /* 연체건 총건수 (실패)      */
               ,SUM(CASE WHEN REQ_BIT = '05'     AND DEL_FG = 'F' THEN 1 ELSE 0 END) AS F_IMSI_CNT                 /* 임시건 총건수 (실패)      */
               ,SUM(CASE WHEN REQ_BIT = '03'     AND DEL_FG = 'F' THEN 1 ELSE 0 END) AS F_IM_CNT                   /* 임의건 총건수 (실패)      */
               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG = 'F' THEN 1 ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '04'     AND DEL_FG = 'F' THEN 1 ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '05'     AND DEL_FG = 'F' THEN 1 ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '03'     AND DEL_FG = 'F' THEN 1 ELSE 0 END) AS F_CNT_SUMM                 /* 실패 총건수               */

               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG = 'F' THEN PAY_AMT ELSE 0 END) AS F_JUNGI_AMT          /* 정기건 총액 (실패)        */
               ,SUM(CASE WHEN REQ_BIT = '04'     AND DEL_FG = 'F' THEN PAY_AMT ELSE 0 END) AS F_YENCHE_AMT         /* 연체건 총액 (실패)        */
               ,SUM(CASE WHEN REQ_BIT = '05'     AND DEL_FG = 'F' THEN PAY_AMT ELSE 0 END) AS F_IMSI_AMT           /* 임시건 총액 (실패)        */
               ,SUM(CASE WHEN REQ_BIT = '03'     AND DEL_FG = 'F' THEN PAY_AMT ELSE 0 END) AS F_IM_AMT             /* 임의건 총액 (실패)        */
               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG = 'F' THEN PAY_AMT ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '04'     AND DEL_FG = 'F' THEN PAY_AMT ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '05'     AND DEL_FG = 'F' THEN PAY_AMT ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '03'     AND DEL_FG = 'F' THEN PAY_AMT ELSE 0 END) AS F_AMT_SUMM           /* 실패 금액 총합            */

               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG = 'X' THEN 1 ELSE 0 END) AS X_JUNGI_CNT                /* 정기건 총건수 (취소)      */
               ,SUM(CASE WHEN REQ_BIT = '04'     AND DEL_FG = 'X' THEN 1 ELSE 0 END) AS X_YENCHE_CNT               /* 연체건 총건수 (취소)      */
               ,SUM(CASE WHEN REQ_BIT = '05'     AND DEL_FG = 'X' THEN 1 ELSE 0 END) AS X_IMSI_CNT                 /* 임시건 총건수 (취소)      */
               ,SUM(CASE WHEN REQ_BIT = '03'     AND DEL_FG = 'X' THEN 1 ELSE 0 END) AS X_IM_CNT                   /* 임의건 총건수 (취소)      */
               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG = 'X' THEN 1 ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '04'     AND DEL_FG = 'X' THEN 1 ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '05'     AND DEL_FG = 'X' THEN 1 ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '03'     AND DEL_FG = 'X' THEN 1 ELSE 0 END) AS X_CNT_SUMM                 /* 취소 총건수               */

               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG = 'X' THEN PAY_AMT ELSE 0 END) AS X_JUNGI_AMT          /* 정기건 총액 (취소)        */
               ,SUM(CASE WHEN REQ_BIT = '04'     AND DEL_FG = 'X' THEN PAY_AMT ELSE 0 END) AS X_YENCHE_AMT         /* 연체건 총액 (취소)        */
               ,SUM(CASE WHEN REQ_BIT = '05'     AND DEL_FG = 'X' THEN PAY_AMT ELSE 0 END) AS X_IMSI_AMT           /* 임시건 총액 (취소)        */
               ,SUM(CASE WHEN REQ_BIT = '03'     AND DEL_FG = 'X' THEN PAY_AMT ELSE 0 END) AS X_IM_AMT             /* 임의건 총액 (취소)        */
               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG = 'X' THEN PAY_AMT ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '04'     AND DEL_FG = 'X' THEN PAY_AMT ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '05'     AND DEL_FG = 'X' THEN PAY_AMT ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '03'     AND DEL_FG = 'X' THEN PAY_AMT ELSE 0 END) AS X_AMT_SUMM           /* 취소 금액 총합            */
           FROM TB_MEMBER_WDRW_REQ
          WHERE 1=1
            <!-- AND DEL_FG IN ('N', 'R', 'C', 'F')                                         /* N:청구전 Y:삭제 R:청구 C:완료(변환/입금) F:완료(실패) */ -->
            AND DEL_FG != 'Y'                                                               /* N:청구전 Y:삭제 R:청구 C:완료(변환/입금) F:완료(실패) X:입금취소 */
            AND REQ_DAY BETWEEN #{req_day_stt} AND #{req_day_end}
            AND PAY_MTHD = '04'                                                        /* 04:CMS 06:Card                                        */
          GROUP BY PAY_MTHD
    </select>

    <!-- ================================================================
     * 날짜 : 20181029
     * 이름 : 정승철
     * 추가내용 : 카드,CMS 결과데이터 건수조회
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_WDRW_REQ
                     LF_DMUSER.TB_MEMBER_WDRW_RESULT
                     LF_DMUSER.TB_MEMBER_REQ_REFUND
     * ================================================================
     * -->
    <select id="DlwPayMap.getDlwRltmCardLogCount" parameterType="map" resultType="int">
    	/* DlwPayMap.getDlwRltmCardLogCount */
    	SELECT 
    		COUNT(*) AS ICNT 
		FROM LF_DMUSER.TB_MEMBER_WDRW_REQ REQ INNER JOIN
            PRODUCT PD ON REQ.PROD_CD = PD.PROD_CD
            LEFT OUTER JOIN LF_DMUSER.TB_MEMBER_WDRW_RESULT RST
                         ON REQ.ACCNT_NO = RST.ACCNT_NO
                        AND REQ.PAY_MTHD = RST.PAY_MTHD
                        AND REQ.REQ_DAY = RST.REQ_DAY
                        AND REQ.RESULT_KEY = RST.RESULT_KEY
            LEFT OUTER JOIN LF_DMUSER.TB_MEMBER_REQ_REFUND MRR
                         ON MRR.ACCNT_NO = REQ.ACCNT_NO
                        AND MRR.PAY_MTHD = REQ.PAY_MTHD
                        AND MRR.DEL_FG = 'N'
                        AND MRR.REQ_DAY = REQ.REQ_DAY
                      --AND MRR.RESULT_KEY = REQ.RESULT_KEY
                        AND NVL(MRR.RESULT_KEY,'JL32') = NVL(REQ.RESULT_KEY,'JL32') /* JL32 : PGWEB 서버 통신 중 에러 */
        WHERE 1=1
        <if test="accnt_no != null and accnt_no != ''">
            AND REQ.ACCNT_NO = #{accnt_no}
        </if>
        AND REQ.PAY_MTHD = #{pay_mthd}
        AND REQ.DEL_FG IN ('C', 'F', 'X')
        <if test="del_fg != null and del_fg != ''">
            AND REQ.DEL_FG = #{del_fg}
        </if>  
        <if test="stt_req_dt != null and stt_req_dt != '' and end_req_dt != null and end_req_dt != ''">
            AND REQ.REQ_DAY BETWEEN #{stt_req_dt} AND #{end_req_dt}
        </if>
        <if test="result_kind != null and result_kind != ''">
            AND REQ.RESULT_KIND = #{result_kind}
        </if>
        <if test="req_bit != null and req_bit != ''">
            AND REQ.REQ_BIT = #{req_bit}
        </if>
         <if test="auth_yn != null and auth_yn != ''">
         	AND REQ.AUTH_YN = #{auth_yn}
         </if>        
    </select>

    <!-- ================================================================
     * 날짜 : 20181029
     * 이름 : 정승철
     * 추가내용 : 카드,CMS 결과데이터 조회
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_WDRW_REQ
                     LF_DMUSER.TB_MEMBER_WDRW_RESULT
                     LF_DMUSER.TB_MEMBER_REQ_REFUND
     * ================================================================
     * -->
    <select id="DlwPayMap.getDlwRltmCardLogList" parameterType="map" resultType="resultMap">


        SELECT /* DlwPayMap.getDlwRltmCardLogList */
               *
          FROM (SELECT <if test="orderBy != null and orderBy != ''">
                           ROW_NUMBER() OVER(ORDER BY REQ_DAY DESC, REG_DM DESC, REQ_PAY_NO DESC, ACCNT_NO) PAGE_INDX,
                       </if>
                       X.*
                  FROM (
                            SELECT REQ.ACCNT_NO,
                                   REQ.MEM_NO,
                                   PD.PROD_NM,
                                   REQ_BIT,
                                   REQ.TRUE_CNT,                                            /* 실납입횟수 */
                                   REQ.REQ_PAY_NO,                                          /* 청구회차 */
                                   '조회' AS MAX_REQ_PAY_NO,
                                   TO_CHAR(RST.REG_DM, 'YYYYMMDDHH24MISS') AS REG_DM,   /* 결과입력시간*/
                                   '' AS MAX_REG_DM,                                    /* (TEMP) 회원번호 기준 MAX 결과입력시간 */
                                   REQ.PAY_BIT,
                                   REQ.ICHAE_NO,
                                   REQ.REQ_DAY,
                                   PAY_AMT,
                                   REQ.RESULT_KEY, 
                                   RST.TID,
                                   RST.PAY_KIND AS RESULT_KIND,
                                   <!-- NVL(RST.PAY_KIND, '01') AS RESULT_KIND, -->
                                   RST.RESULT_CD,
                                   CASE WHEN REQ.PAY_MTHD = '04'  THEN FN_COM_NM('15', RESULT_CD)
                                        WHEN REQ.PAY_MTHD = '06' AND NVL(REQ.AUTH_YN,'Y') = 'N'  THEN FN_COM_NM('0222', RESULT_CD)
                                   ELSE RST.RESULT_MSG END AS RESULT_MSG,
                                   AUTH_DT,
                                   AUTH_CD,
                                   (SELECT COUNT(*) FROM TB_MEMBER_REQ_NAUTH_CNCL WHERE ACCNT_NO = REQ.ACCNT_NO AND REQ_PAY_NO = REQ.REQ_PAY_NO AND DEL_FG IN ('P','N','R')) AS CNCL_CNT,
                                  CASE WHEN REQ.PAY_MTHD = '04'  THEN  FN_COM_NM('63', NVL(RST.ICHAE_CD,REQ.ICHAE_CD))
                                        WHEN REQ.PAY_MTHD = '06' AND RST.PAY_KIND = '01' THEN  RST.ICHAE_CD
                                        WHEN REQ.PAY_MTHD = '06' AND RST.PAY_KIND != '01' THEN  FN_COM_NM('0120', NVL(RST.ICHAE_CD,REQ.ICHAE_CD))
                                   ELSE '' END AS ICHAE_CD,
                                   <!--
                                   ( SELECT REG_DM
                                       FROM TB_MEMBER_REQ_REFUND
                                      WHERE ACCNT_NO = REQ.ACCNT_NO
                                        AND PAY_MTHD = REQ.PAY_MTHD
                                        AND DEL_FG = 'N'
                                        AND REQ_DAY = REQ.REQ_DAY
                                        AND RESULT_KEY = REQ.RESULT_KEY
                                   ) AS REFUND_REG_DT, /* 환불등록일 */
                                   -->
                                   MRR.REG_DM AS REFUND_REG_DT, /* 환불등록일 */
                                   <!--
                                   ( SELECT REFUND_DT
                                       FROM TB_MEMBER_REQ_REFUND MRR
                                       INNER JOIN TB_MEMBER_WDRW_REQ MWR
                                               ON MWR.ACCNT_NO = MRR.ACCNT_NO
                                              AND MWR.PAY_MTHD = MRR.PAY_MTHD
                                              AND MWR.DEL_FG = 'X'
                                              AND MWR.REQ_DAY = MRR.REQ_DAY
                                              AND MWR.RESULT_KEY = MRR.RESULT_KEY
                                      WHERE MRR.ACCNT_NO = REQ.ACCNT_NO
                                        AND MRR.PAY_MTHD = REQ.PAY_MTHD
                                        AND MRR.DEL_FG = 'N'
                                        AND MRR.REQ_DAY = REQ.REQ_DAY
                                        AND MRR.RESULT_KEY = REQ.RESULT_KEY
                                   ) AS REAL_CANCEL_DT,   /* 실제취소일 */
                                   -->
                                   <!--
                                   ( SELECT TO_CHAR(CANCEL_DT, 'YYYYMMDDHH24MISS')
                                       FROM TB_MEMBER_REQ_REFUND MRR
                                      WHERE MRR.ACCNT_NO = REQ.ACCNT_NO
                                        AND MRR.PAY_MTHD = REQ.PAY_MTHD
                                        AND MRR.DEL_FG = 'N'
                                        AND MRR.REQ_DAY = REQ.REQ_DAY
                                        AND MRR.RESULT_KEY = REQ.RESULT_KEY
                                   ) AS CANCEL_DT,   /* 실제취소일 */
                                   -->
                                   TO_CHAR(MRR.CANCEL_DT, 'YYYYMMDDHH24MISS') AS CANCEL_DT, /* 실제취소일*/
                                   RST.ETC,
                                   REQ.PAY_MTHD,  /* 납입방법 (04:CMS, 06:카드) */
                                   REQ.DEL_FG,
                                   CASE WHEN LENGTH(RST.REG_MAN) = 10
                                        THEN ( SELECT EMPLE_NM FROM EMPLOYEE WHERE EMPLE_NO = RST.REG_MAN )
                                        ELSE RST.REG_MAN
                                    END AS REG_MAN,  /* 결과등록자 사원명으로 표시 */
                                   REQ.AUTH_YN,
                                   REQ.FRANCHISEE_NO
                              FROM LF_DMUSER.TB_MEMBER_WDRW_REQ REQ INNER JOIN
                                  PRODUCT PD ON REQ.PROD_CD = PD.PROD_CD
                        LEFT OUTER JOIN LF_DMUSER.TB_MEMBER_WDRW_RESULT RST
                                     ON REQ.ACCNT_NO = RST.ACCNT_NO
                                    AND REQ.PAY_MTHD = RST.PAY_MTHD
                                    AND REQ.REQ_DAY = RST.REQ_DAY
                                    AND REQ.RESULT_KEY = RST.RESULT_KEY
                        LEFT OUTER JOIN LF_DMUSER.TB_MEMBER_REQ_REFUND MRR
                                     ON MRR.ACCNT_NO = REQ.ACCNT_NO
                                    AND MRR.PAY_MTHD = REQ.PAY_MTHD
                                    AND MRR.DEL_FG = 'N'
                                    AND MRR.REQ_DAY = REQ.REQ_DAY
                                    --AND MRR.RESULT_KEY = REQ.RESULT_KEY
                                    AND NVL(MRR.RESULT_KEY,'JL32') = NVL(REQ.RESULT_KEY,'JL32') /* JL32 : PGWEB 서버 통신 중 에러 */
                             WHERE 1=1
                               <if test="accnt_no != null and accnt_no != ''">
                               AND REQ.ACCNT_NO = #{accnt_no}
                               </if>
                               AND REQ.PAY_MTHD = #{pay_mthd}
                               AND REQ.DEL_FG IN ('C', 'F', 'X')
                               <if test="auth_yn != null and auth_yn != ''">
                               AND REQ.AUTH_YN = #{auth_yn}
                               </if>
                               <if test="del_fg != null and del_fg != ''">
                               AND REQ.DEL_FG = #{del_fg}
                               </if>
                               <if test="stt_req_dt != null and stt_req_dt != '' and end_req_dt != null and end_req_dt != ''">
                               AND REQ.REQ_DAY BETWEEN #{stt_req_dt} AND #{end_req_dt}
                               </if>
                               <if test="result_kind != null and result_kind != ''">
                               AND REQ.RESULT_KIND = #{result_kind}
                               </if>
                               <if test="req_bit != null and req_bit != ''">
                               AND REQ.REQ_BIT = #{req_bit}
                               </if>
                    ) X
                    WHERE 1=1
                ) Z

     <if test="excel_fg == null or excel_fg == '' or !excel_fg.equalsIgnoreCase('Y')">
         <if test="startLine != null and startLine != '' and endLine != null and endLine != ''">
             <![CDATA[
             WHERE PAGE_INDX >= #{startLine}
               AND PAGE_INDX < #{endLine}
             ]]>
         </if>
     </if>

    </select>


    <!-- ================================================================
     * 날짜 : 20181031
     * 이름 : 정승철
     * 추가내용 : 카드 결과데이터 INSERT (** 자유결제)
     * ================================================================
     * -->
    <insert id="DlwPayMap.insertFreeCardResult"  parameterType="map">
        BEGIN
            <!-- 청구관리 테이블 등록 -->
            INSERT INTO TB_MEMBER_WDRW_REQ	(
                ACCNT_NO,
                MEM_NO,
                PROD_CD,
                PAY_MTHD,
                REQ_BIT,
                STAT,
                KSTBIT,
                REQ_PAY_NO,
                ICHAE_NO,
                ICHAE_CD,
                REQ_DAY,
                PAY_AMT,
                REG_DM,
                REG_MAN,
                DEL_FG,
                RESULT_KEY,
                RESULT_KIND
            ) VALUES (
                   #{accnt_no},
                   #{mem_no},
                   #{prod_cd},
                '06',
                '03',
                #{stat},
                #{kstbit},
                999,
                SUBSTR(#{card_no},0,4) || '-****-****[' || #{exp_year} || #{exp_mon} ,
                #{card_cd},
                TO_CHAR(SYSDATE,'YYYYMMDD'),
                #{pay_amt},
                SYSDATE,
                #{emple_no},
                #{del_fg},
                #{result_key},
                #{pay_kind}
            );

            <!-- 결제 결과 테이블 등록 -->
              INSERT
                /* DlwPayMap.insertFreeCardResult */
              INTO TB_MEMBER_WDRW_RESULT
                 (
                   ACCNT_NO,
                   REQ_DAY,
                   REQ_NO,
                   PAY_KIND,
                   RESULT_KEY,
                   RESULT_CD,
                   RESULT_MSG,
                   PAY_MTHD,
                   AUTH_DT,
                   AUTH_CD,
                   ICHAE_CD,
                   ICHAE_NO,
                   ETC,
                   REG_DM,
                   REG_MAN,
                   TID
                 )
            VALUES
                 (
                   #{accnt_no},
                   TO_CHAR(SYSDATE,'YYYYMMDD'),
                   #{pay_no},
                   #{pay_kind},
                   #{result_key},
                   #{result_cd},
                   #{result_msg},
                   #{pay_mthd},
                   #{auth_dt},
                   #{auth_cd},
                   #{card_cd},
                   SUBSTR(#{card_no},0,4) || '-****-****[' || #{exp_year} || #{exp_mon} ,
                   #{etc},
                   SYSDATE,
                   #{emple_no},
                   #{result_key}
                 );
        END ;
    </insert>

    <!-- ================================================================
     * 날짜 : 20181031
     * 이름 : 정승철
     * 추가내용 : 자유결제 카드결과를 산출관리쪽에 UPDATE
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_WDRW_REQ
     * ================================================================
     * -->
    <update id="DlwPayMap.updateReqWdrw"  parameterType="map">

        <!-- <if test="pay_kind == '02' or pay_kind == '03'"> -->
        <if test="pay_kind == '03'"> <!-- 자유 -->
        UPDATE TB_MEMBER_WDRW_REQ
                   SET RESULT_KEY = #{result_key}
                     , UPD_DM = SYSDATE
                     , UPD_MAN = #{emple_no}
                     <if test="result_cd == '3001' || auth_cd != ''">
                     , DEL_FG = 'C'
                     , RESULT_KIND = #{pay_kind}
                     </if>
                 WHERE 1=1
                   AND DEL_FG = 'N'
                   AND ACCNT_NO =  #{accnt_no}
                   AND REQ_DAY = #{req_day}
                   <!-- 자유결제의 경우 회차개념은 0 (TEMP) -->
                   <!-- AND REQ_PAY_NO = {pay_no} -->
        </if>

    </update>


    <!-- 실시간 카드결제 - 대상회원 상태 조회 -->
    <!-- ================================================================
     * 날짜 : 20181031
     * 이름 : 정승철
     * 추가내용 : 자유결제 (실시간 카드) - 대상회원 상태 조회
     * 대상 테이블 :
     * ================================================================
     * -->
    <select id="DlwPayMap.getAccntStatByFreeCard" parameterType="map" resultType="resultMap">

        SELECT /* DlwPayMap.getAccntStatByFreeCard */
               MPA.ACCNT_NO
             , FN_EVENT(MPA.ACCNT_NO) AS STAT
             , FN_YEN_CHE(MPA.ACCNT_NO) AS PAY_STAT
             , MPA.MEM_NO AS MEM_NO
             , (SELECT BID FROM CARD_MEM WHERE ACCNT_NO=MPA.ACCNT_NO AND DEL_FG='N') AS BID
             , TO_CHAR(SYSDATE, 'YYYY/MM/DD') PAY_DAY
             , (SELECT CELL FROM MEMBER M WHERE M.MEM_NO = MPA.MEM_NO) AS CELL
             , (SELECT EMAIL FROM MEMBER M WHERE M.MEM_NO = MPA.MEM_NO) AS EMAIL
             , P.PROD_CD AS PROD_CD
             , P.PROD_NM AS PROD_NM
             , P.PROD_CL AS PROD_CL
             , CASE WHEN (SELECT COUNT(ACCNT_NO)
                            FROM CARD_WDRW_REQ
                           WHERE ACCNT_NO =MPA.ACCNT_NO
                             AND STAT IN ('01','02')
                             AND INV_NO=1 AND CL=5 ) <![CDATA[>]]> 0
                    THEN 'C'
                    WHEN (SELECT COUNT(ACCNT_NO)
                            FROM WDRW_REQ
                           WHERE ACCNT_NO =MPA.ACCNT_NO
                             AND STAT IN ('01','02')
                             AND INV_NO=1 AND CL=5 ) <![CDATA[>]]> 0
                    THEN 'C'
                    WHEN FN_EVENT(MPA.ACCNT_NO) !=''
                    THEN 'E'
                    WHEN (SELECT COUNT(ACCNT_NO) FROM TAXT_PROC WHERE ACCNT_NO =MPA.ACCNT_NO AND REVL_DAY IS NULL ) <![CDATA[>]]> 0
                    THEN 'T'
                    WHEN ( NVL((SELECT COUNT(*) FROM WDRW_REQ_CALL_CENTER WHERE ACCNT_NO = MPA.ACCNT_NO AND WDRW_REQ_YN = 'N' AND DEL_FG IS NULL), 0) ) <![CDATA[>]]> 0
                    THEN 'CS'
                    ELSE ''
                 END AS ACCNT_STAT
          FROM MEM_PROD_ACCNT MPA
              LEFT OUTER JOIN (SELECT VAD.ACCNT_NO
                                 FROM NICE_VRTL_ACCNT_WDRW_REQ_DTL VAD
                                INNER JOIN NICE_VRTL_ACCNT_WDRW_REQ_MST VAM ON VAM.SEQ = VAD.SEQ AND ((VAM.STAT = '02' AND VAM.EXPIRY_YYYYMMDD || VAM.EXPIRY_HHMMSS <![CDATA[>]]> TO_CHAR(SYSDATE - (1/24), 'YYYYMMDDHH24MISS')) OR VAM.STAT = '01')
                              ) VAD ON MPA.ACCNT_NO = VAD.ACCNT_NO
              JOIN PRODUCT P ON P.PROD_CD = MPA.PROD_CD AND P.DEL_FG = 'N'
              LEFT OUTER JOIN (SELECT * FROM (SELECT WDRW_REQ.*,ROW_NUMBER() OVER(PARTITION BY ACCNT_NO ORDER BY SEQ DESC) CNT
                                                FROM WDRW_REQ )
                                WHERE CNT = 1 ) WDRW ON MPA.ACCNT_NO = WDRW.ACCNT_NO
              LEFT OUTER JOIN  (SELECT * FROM (SELECT WDRW_REQ.*,ROW_NUMBER() OVER(PARTITION BY ACCNT_NO ORDER BY SEQ DESC) CNT
                                                FROM WDRW_REQ )
                                WHERE CNT = 1 ) WDRW1 ON MPA.ACCNT_NO = WDRW1.ACCNT_NO
         WHERE MPA.DEL_FG='N'
           AND VAD.ACCNT_NO IS NULL
           AND FN_EVENT(MPA.ACCNT_NO) != '청약철회'
           <!-- 콜센터 산출중인건은 조회되지 않는다 -->
           AND NVL((SELECT COUNT(*) FROM WDRW_REQ_CALL_CENTER WHERE ACCNT_NO = MPA.ACCNT_NO AND WDRW_REQ_YN = 'N' AND DEL_FG IS NULL), 0) = 0
           AND MPA.ACCNT_NO = #{accnt_no}

    </select>


    <!-- ================================================================
     * 날짜 : 20181031
     * 이름 : 정승철
     * 추가내용 : 빌키 생성정보 조회
     * ================================================================
     * -->
    <select id="DlwPayMap.getBillKeyCrtnInfo"  parameterType="map" resultType="resultMap">

        SELECT /* DlwPayMap.getBillKeyCrtnInfo */
               MB.EMAIL
             , MB.CELL
             , IDN_NO AS IDN_NO
             , FN_PROD_NM(MPA.PROD_CD) PROD_NM
             , MPA.PROD_CD PROD_CD
             , MB.MEM_NM MEM_NM
          FROM MEM_PROD_ACCNT MPA
          JOIN MEMBER MB ON MPA.MEM_NO= MB.MEM_NO
         WHERE MPA.ACCNT_NO = #{accnt_no}

    </select>


    <!-- ================================================================
     * 날짜 : 20181031
     * 이름 : 정승철
     * 추가내용 : 빌키 MID 와 KEY 조회
     * ================================================================
     * -->
    <select id="DlwPayMap.getAccntMid" parameterType="map" resultType="String">
        <!-- DM sql-id : selectAccntStat -->

            SELECT MAX(MID_KEY)
            FROM
            (
                SELECT
                    'dmlife001m'||'Zq7E5qjYbqPMZWHvlZtt1HbC8jJIPfAkVkkGOvf7gRoKfweOMCiHu/VPob5uGrIDyYQyplxnknTXxX2D8F+emA==' AS MID_KEY
                FROM DUAL

                UNION ALL

                SELECT CML.MID || CML.KEY AS MID_KEY

                FROM CARD_MID_LIST CML INNER JOIN
                    PRODUCT PD ON CML.MID = PD.MID
                WHERE 1=1

            <if test="menu_gbn == null or menu_gbn == ''">
                <if test="pay_no lt 36">
                    AND PD.PROD_CD = #{prod_cd}
                </if>
                 <if test="pay_no gte 36">
                    AND PD.PROD_CD = 'MID'
                </if>
            </if>

            <if test="menu_gbn != ''">
                AND CML.MID = SUBSTR(#{bid},5,10)
            </if>
            ) TBL

        <!--
            <if test="gbn_batch == null or gbn_batch == ''">
                AND nvl(WDRW1.STAT,'00') NOT IN ('01','02')
            </if>
            <if test="gbn_batch != null and gbn_batch != ''">
                AND nvl(WDRW1.STAT,'00')='01'
                AND NOT EXISTS ( SELECT  ACCNT_NO FROM RT_CARD_PAY_LOG WHERE ACCNT_NO =#{accnt_no} AND RESULT_CODE ='99' )
            </if>
        -->

    </select>

    <!-- ================================================================
     * 날짜 : 20181101
     * 이름 : 송준빈
     * 추가내용 : 두구좌 상품관리 현황 조회건수
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_WDRW_REQ
     * ================================================================
     * -->
    <select id="DlwPayMap.getDoubleAccntListCount" parameterType="map" resultType="int">
        SELECT COUNT(*)
          FROM ( SELECT ROW_NUMBER() OVER(ORDER BY A.MEM_NO ASC) PAGE_INDX /* PAGE INDX                                        */
                       ,A.MEM_NO                                           /* 고유번호                                         */
                       ,A.ACCNT_NO                                         /* 회원번호                                         */
                       ,C.MEM_NM                                           /* 회원명                                           */
                       ,B.PROD_CD                                          /* 상품코드                                         */
                       ,LF_DMUSER.FN_PROD_NM(B.PROD_CD) AS PROD_NM         /* 상품명                                           */
                       ,A.JOIN_DT                                          /* 가입일자                                         */
                       ,A.KSTBIT                                           /* 회원상태 01:대기 02:가입 03:해약 04:행사 09:만기 */
                       ,D.STAT                                             /* 해피콜상태                                       */
                       ,A.PAY_MTHD
                       ,(TRUNC(MONTHS_BETWEEN(LAST_DAY(SYSDATE),(SUBSTR(A.JOIN_DT,0,6) || '01')))+ 1) AS MONTH_COUNT         -- 상조기준 당월 회차
                       ,NVL((SELECT COUNT(NO) FROM PAY_MNG WHERE ACCNT_NO = A.ACCNT_NO AND DEL_FG = 'N'),0) AS LAST_NO       -- 항목별 입금회차(상조)
                       --,NVL((SELECT COUNT(NO) FROM PAY_MNG_DTL WHERE ACCNT_NO = A.ACCNT_NO AND DEL_FG = 'N'),0) AS LAST_NO2  -- 항목별 입금회차(결합)
                       --,NVL((SELECT COUNT(NO) FROM PAY_MNG_DTL1 WHERE ACCNT_NO = A.ACCNT_NO AND DEL_FG = 'N'),0) AS LAST_NO3 -- 항목별 입금회차(추가)
                       ,CASE WHEN B.PROD_CD = 'EI' THEN (SELECT ACCNT_NO FROM LF_DMUSER.TB_MEM_TWIN_ACCNT WHERE 1=1 AND TWIN_SEQ = E.TWIN_SEQ AND PROD_CD = 'EJ')
                             WHEN B.PROD_CD = 'EJ' THEN (SELECT ACCNT_NO FROM LF_DMUSER.TB_MEM_TWIN_ACCNT WHERE 1=1 AND TWIN_SEQ = E.TWIN_SEQ AND PROD_CD = 'EI')
                         END AS TWIN_ACCNT
                       ,(SELECT COUNT(NO)
                           FROM PAY_MNG
                          WHERE DEL_FG = 'N'
                            AND ACCNT_NO = (CASE WHEN B.PROD_CD = 'EI' THEN (SELECT ACCNT_NO FROM LF_DMUSER.TB_MEM_TWIN_ACCNT WHERE 1=1 AND TWIN_SEQ = E.TWIN_SEQ AND PROD_CD = 'EJ')
                                                 WHEN B.PROD_CD = 'EJ' THEN (SELECT ACCNT_NO FROM LF_DMUSER.TB_MEM_TWIN_ACCNT WHERE 1=1 AND TWIN_SEQ = E.TWIN_SEQ AND PROD_CD = 'EI')
                                             END)
                        ) AS LAST_NO1
                       ,(SELECT PAY_MTHD
                           FROM LF_DMUSER.MEM_PROD_ACCNT
                          WHERE DEL_FG = 'N'
                            AND ACCNT_NO = (CASE WHEN B.PROD_CD = 'EI' THEN (SELECT ACCNT_NO FROM LF_DMUSER.TB_MEM_TWIN_ACCNT WHERE 1=1 AND TWIN_SEQ = E.TWIN_SEQ AND PROD_CD = 'EJ')
                                                 WHEN B.PROD_CD = 'EJ' THEN (SELECT ACCNT_NO FROM LF_DMUSER.TB_MEM_TWIN_ACCNT WHERE 1=1 AND TWIN_SEQ = E.TWIN_SEQ AND PROD_CD = 'EI')
                                             END)
                        ) AS PAY_MTHD1
                       ,(SELECT STAT
                           FROM LF_DMUSER.HP_CALL
                          WHERE DEL_FG = 'N'
                            AND ACCNT_NO = (CASE WHEN B.PROD_CD = 'EI' THEN (SELECT ACCNT_NO FROM LF_DMUSER.TB_MEM_TWIN_ACCNT WHERE 1=1 AND TWIN_SEQ = E.TWIN_SEQ AND PROD_CD = 'EJ')
                                                 WHEN B.PROD_CD = 'EJ' THEN (SELECT ACCNT_NO FROM LF_DMUSER.TB_MEM_TWIN_ACCNT WHERE 1=1 AND TWIN_SEQ = E.TWIN_SEQ AND PROD_CD = 'EI')
                                             END)
                        ) AS STAT1
                   FROM LF_DMUSER.MEM_PROD_ACCNT A
                   INNER JOIN LF_DMUSER.PRODUCT B
                           ON A.PROD_CD = B.PROD_CD
                   INNER JOIN MEMBER C
                           ON A.MEM_NO = C.MEM_NO
                   INNER JOIN HP_CALL D
                           ON A.ACCNT_NO = D.ACCNT_NO
                   LEFT OUTER JOIN LF_DMUSER.TB_MEM_TWIN_ACCNT E
                           ON A.ACCNT_NO = E.ACCNT_NO
                  WHERE 1=1
                    AND A.DEL_FG = 'N'
                    AND B.DEL_FG = 'N'
                    AND C.DEL_FG = 'N'
                  <if test="join_dt_stt != null and join_dt_stt != '' and join_dt_end != null and join_dt_end != ''">
                      AND A.JOIN_DT BETWEEN #{join_dt_stt} AND #{join_dt_end}
                  </if>
                  <if test="prod_cd == null or prod_cd == ''">
                      AND B.PROD_CD IN ('EI','EJ')
                  </if>
                  <if test="prod_cd != null and prod_cd != ''">
                      AND B.PROD_CD = #{prod_cd}
                  </if>
                  <if test="mem_no != null and mem_no != ''">
                      AND A.MEM_NO = #{mem_no}
                  </if>
                  <if test="accnt_no != null and accnt_no != ''">
                      AND A.ACCNT_NO = #{accnt_no}
                  </if>
                  <if test="mem_nm != null and mem_nm != ''">
                      AND C.MEM_NM = #{mem_nm}
                  </if>
               ) TBL
         WHERE 1=1
    </select>

    <!-- ================================================================
     * 날짜 : 20181101
     * 이름 : 송준빈
     * 추가내용 : 두구좌 상품관리 현황 조회 리스트
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_WDRW_REQ
     * ================================================================
     * -->
    <select id="DlwPayMap.getDoubleAccntList" parameterType="map" resultType="resultMap">
        SELECT TBL.*
          FROM ( SELECT ROW_NUMBER() OVER(ORDER BY A.MEM_NO ASC) PAGE_INDX /* PAGE INDX                                        */
                       ,A.MEM_NO                                           /* 고유번호                                         */
                       ,A.ACCNT_NO                                         /* 회원번호                                         */
                       ,C.MEM_NM                                           /* 회원명                                           */
                       ,B.PROD_CD                                          /* 상품코드                                         */
                       ,LF_DMUSER.FN_PROD_NM(B.PROD_CD) AS PROD_NM         /* 상품명                                           */
                       ,A.JOIN_DT                                          /* 가입일자                                         */
                       ,A.KSTBIT                                           /* 회원상태 01:대기 02:가입 03:해약 04:행사 09:만기 */
                       ,D.STAT                                             /* 해피콜상태                                       */
                       ,A.PAY_MTHD
                       ,(TRUNC(MONTHS_BETWEEN(LAST_DAY(SYSDATE),(SUBSTR(A.JOIN_DT,0,6) || '01')))+ 1) AS MONTH_COUNT         -- 상조기준 당월 회차
                       ,NVL((SELECT COUNT(NO) FROM PAY_MNG WHERE ACCNT_NO = A.ACCNT_NO AND DEL_FG = 'N'),0) AS LAST_NO       -- 항목별 입금회차(상조)
                       --,NVL((SELECT COUNT(NO) FROM PAY_MNG_DTL WHERE ACCNT_NO = A.ACCNT_NO AND DEL_FG = 'N'),0) AS LAST_NO2  -- 항목별 입금회차(결합)
                       --,NVL((SELECT COUNT(NO) FROM PAY_MNG_DTL1 WHERE ACCNT_NO = A.ACCNT_NO AND DEL_FG = 'N'),0) AS LAST_NO3 -- 항목별 입금회차(추가)
                       ,CASE WHEN B.PROD_CD = 'EI' THEN (SELECT ACCNT_NO FROM LF_DMUSER.TB_MEM_TWIN_ACCNT WHERE 1=1 AND TWIN_SEQ = E.TWIN_SEQ AND PROD_CD = 'EJ')
                             WHEN B.PROD_CD = 'EJ' THEN (SELECT ACCNT_NO FROM LF_DMUSER.TB_MEM_TWIN_ACCNT WHERE 1=1 AND TWIN_SEQ = E.TWIN_SEQ AND PROD_CD = 'EI')
                         END AS TWIN_ACCNT
                       ,(SELECT COUNT(NO)
                           FROM PAY_MNG
                          WHERE DEL_FG = 'N'
                            AND ACCNT_NO = (CASE WHEN B.PROD_CD = 'EI' THEN (SELECT ACCNT_NO FROM LF_DMUSER.TB_MEM_TWIN_ACCNT WHERE 1=1 AND TWIN_SEQ = E.TWIN_SEQ AND PROD_CD = 'EJ')
                                                 WHEN B.PROD_CD = 'EJ' THEN (SELECT ACCNT_NO FROM LF_DMUSER.TB_MEM_TWIN_ACCNT WHERE 1=1 AND TWIN_SEQ = E.TWIN_SEQ AND PROD_CD = 'EI')
                                             END)
                        ) AS LAST_NO1
                       ,(SELECT PAY_MTHD
                           FROM LF_DMUSER.MEM_PROD_ACCNT
                          WHERE DEL_FG = 'N'
                            AND ACCNT_NO = (CASE WHEN B.PROD_CD = 'EI' THEN (SELECT ACCNT_NO FROM LF_DMUSER.TB_MEM_TWIN_ACCNT WHERE 1=1 AND TWIN_SEQ = E.TWIN_SEQ AND PROD_CD = 'EJ')
                                                 WHEN B.PROD_CD = 'EJ' THEN (SELECT ACCNT_NO FROM LF_DMUSER.TB_MEM_TWIN_ACCNT WHERE 1=1 AND TWIN_SEQ = E.TWIN_SEQ AND PROD_CD = 'EI')
                                             END)
                        ) AS PAY_MTHD1
                       ,(SELECT STAT
                           FROM LF_DMUSER.HP_CALL
                          WHERE DEL_FG = 'N'
                            AND ACCNT_NO = (CASE WHEN B.PROD_CD = 'EI' THEN (SELECT ACCNT_NO FROM LF_DMUSER.TB_MEM_TWIN_ACCNT WHERE 1=1 AND TWIN_SEQ = E.TWIN_SEQ AND PROD_CD = 'EJ')
                                                 WHEN B.PROD_CD = 'EJ' THEN (SELECT ACCNT_NO FROM LF_DMUSER.TB_MEM_TWIN_ACCNT WHERE 1=1 AND TWIN_SEQ = E.TWIN_SEQ AND PROD_CD = 'EI')
                                             END)
                        ) AS STAT1
                   FROM LF_DMUSER.MEM_PROD_ACCNT A
                   INNER JOIN LF_DMUSER.PRODUCT B
                           ON A.PROD_CD = B.PROD_CD
                   INNER JOIN MEMBER C
                           ON A.MEM_NO = C.MEM_NO
                   INNER JOIN HP_CALL D
                           ON A.ACCNT_NO = D.ACCNT_NO
                   LEFT OUTER JOIN LF_DMUSER.TB_MEM_TWIN_ACCNT E
                           ON A.ACCNT_NO = E.ACCNT_NO
                  WHERE 1=1
                    AND A.DEL_FG = 'N'
                    AND B.DEL_FG = 'N'
                    AND C.DEL_FG = 'N'
                  <if test="join_dt_stt != null and join_dt_stt != '' and join_dt_end != null and join_dt_end != ''">
                      AND A.JOIN_DT BETWEEN #{join_dt_stt} AND #{join_dt_end}
                  </if>
                  <if test="prod_cd == null or prod_cd == ''">
                      AND B.PROD_CD IN ('EI','EJ')
                  </if>
                  <if test="prod_cd != null and prod_cd != ''">
                      AND B.PROD_CD = #{prod_cd}
                  </if>
                  <if test="mem_no != null and mem_no != ''">
                      AND A.MEM_NO = #{mem_no}
                  </if>
                  <if test="accnt_no != null and accnt_no != ''">
                      AND A.ACCNT_NO = #{accnt_no}
                  </if>
                  <if test="mem_nm != null and mem_nm != ''">
                      AND C.MEM_NM = #{mem_nm}
                  </if>
               ) TBL
         WHERE 1=1
         <if test="startLine != null and startLine != '' and endLine != null and endLine != ''">
             AND PAGE_INDX <![CDATA[>=]]> #{startLine}
             AND PAGE_INDX <![CDATA[<]]> #{endLine}
         </if>
    </select>

    <!-- 카드 결제취소시 -->
    <update id="DlwPayMap.updateCardResult" parameterType="map" >
        BEGIN
        /* DlwPayMap.updateCardResult */

        /* 2018.11.30 정승철 - (환불테이블) 실시간 취소일자 UPDATE */
        UPDATE TB_MEMBER_REQ_REFUND
           SET CANCEL_DT = SYSDATE
             , REFUND_DT = SYSDATE
         WHERE 1=1
         AND PAY_MTHD = '06'
         AND REQ_DAY = #{req_day}
         AND RESULT_KEY = #{result_key};

        UPDATE TB_MEMBER_WDRW_REQ
        SET DEL_FG = 'X',
            UPD_MAN =  #{emple_no},
            UPD_DM = SYSDATE
        WHERE 1=1
        AND PAY_MTHD = '06'
        AND DEL_FG = 'C'
        AND REQ_DAY = #{req_day}
        AND RESULT_KEY = #{result_key};

        <!--

        UPDATE TB_MEMBER_WDRW_RESULT
        SET CANCEL_DT = SYSDATE,
            UPD_MAN =  #{emple_no},
            UPD_DM = SYSDATE,
            ETC = #{result_msg} || '취소시간 : ' || #{cncl_day} || ' ' ||  #{cncl_tm}
        WHERE 1=1
        AND PAY_MTHD = '06'
        AND REQ_DAY = #{req_day}
        AND RESULT_KEY = #{result_key};

         -->

        <!-- 2018.11.30 카드 환불처리시 (결제취소시) 입금쪽 테이블은 일단 처리되지 않도록
        UPDATE PAY_MNG PM
        SET DEL_FG = 'Y',
            PAY_CANCEL_CD = '0004',
            PAY_CANCEL_NOTE = '환불등록입금삭제'
        WHERE EXISTS (

            SELECT *
            FROM
            (
                SELECT
                    ACCNT_NO,
                    REQ.PROD_CD,
                    REQ_PAY_NO,
                    PAY_MTHD,
                    REQ_DAY,
                    DEL_FG,
                    CASE WHEN (MONTH_CNT - REQ_PAY_NO) = 0 THEN '0'
                    WHEN (MONTH_CNT - REQ_PAY_NO) <![CDATA[<]]> 0 THEN '1'
                    ELSE '2' END AS STAT ,

                    (SELECT MAX(NVL(SEQ,0)) FROM LF_DMUSER.PAY_MNG WHERE ACCNT_NO = REQ.ACCNT_NO) AS TRUE_CNT,
                    (SELECT MAX(NVL(SEQ,0)) FROM LF_DMUSER.PAY_MNG_DTL WHERE ACCNT_NO = REQ.ACCNT_NO) AS REL_CNT,
                    (SELECT MAX(NVL(SEQ,0)) FROM LF_DMUSER.PAY_MNG_DTL1 WHERE ACCNT_NO = REQ.ACCNT_NO) AS ADD_CNT,
                    (CASE WHEN SUBSTR(PAY_BIT,1,1) != 'X' THEN PND.AMT ELSE 0 END) AS TRUE_AMT,
                    (CASE WHEN SUBSTR(PAY_BIT,2,1) != 'X' THEN PND.REL_AMT ELSE 0 END) AS REL_AMT,
                    (CASE WHEN SUBSTR(PAY_BIT,3,1) != 'X' THEN PND.ADD_AMT ELSE 0 END) AS ADD_AMT
                FROM TB_MEMBER_WDRW_REQ REQ INNER JOIN
                PRODUCT_NO_DATA PND ON REQ.PROD_CD = PND.PROD_CD AND PND.NO = REQ.REQ_PAY_NO
                WHERE 1=1
                AND RESULT_KEY = #{tid}
            ) TBL
            WHERE TBL.ACCNT_NO = PM.ACCNT_NO AND TBL.TRUE_CNT = PM.NO
           );


        UPDATE PAY_MNG_DTL PM
        SET DEL_FG = 'Y',
            PAY_CANCEL_CD = '0004',
            PAY_CANCEL_NOTE = '환불등록입금삭제'
        WHERE EXISTS (

            SELECT *
            FROM
            (
                SELECT
                    ACCNT_NO,
                    REQ.PROD_CD,
                    REQ_PAY_NO,
                    PAY_MTHD,
                    REQ_DAY,
                    DEL_FG,
                    CASE WHEN (MONTH_CNT - REQ_PAY_NO) = 0 THEN '0'
                    WHEN (MONTH_CNT - REQ_PAY_NO) <![CDATA[<]]> 0 THEN '1'
                    ELSE '2' END AS STAT ,

                    (SELECT MAX(NVL(SEQ,0)) FROM LF_DMUSER.PAY_MNG WHERE ACCNT_NO = REQ.ACCNT_NO) AS TRUE_CNT,
                    (SELECT MAX(NVL(SEQ,0)) FROM LF_DMUSER.PAY_MNG_DTL WHERE ACCNT_NO = REQ.ACCNT_NO) AS REL_CNT,
                    (SELECT MAX(NVL(SEQ,0)) FROM LF_DMUSER.PAY_MNG_DTL1 WHERE ACCNT_NO = REQ.ACCNT_NO) AS ADD_CNT,
                    (CASE WHEN SUBSTR(PAY_BIT,1,1) != 'X' THEN PND.AMT ELSE 0 END) AS TRUE_AMT,
                    (CASE WHEN SUBSTR(PAY_BIT,2,1) != 'X' THEN PND.REL_AMT ELSE 0 END) AS REL_AMT,
                    (CASE WHEN SUBSTR(PAY_BIT,3,1) != 'X' THEN PND.ADD_AMT ELSE 0 END) AS ADD_AMT
                FROM TB_MEMBER_WDRW_REQ REQ INNER JOIN
                PRODUCT_NO_DATA PND ON REQ.PROD_CD = PND.PROD_CD AND PND.NO = REQ.REQ_PAY_NO
                WHERE 1=1
                AND RESULT_KEY = #{tid}
            ) TBL
            WHERE TBL.ACCNT_NO = PM.ACCNT_NO AND TBL.TRUE_CNT = PM.NO
           );


        UPDATE PAY_MNG_DTL1 PM
        SET DEL_FG = 'Y',
            PAY_CANCEL_CD = '0004',
            PAY_CANCEL_NOTE = '환불등록입금삭제'
        WHERE EXISTS (

            SELECT *
            FROM
            (
                SELECT
                    ACCNT_NO,
                    REQ.PROD_CD,
                    REQ_PAY_NO,
                    PAY_MTHD,
                    REQ_DAY,
                    DEL_FG,
                    CASE WHEN (MONTH_CNT - REQ_PAY_NO) = 0 THEN '0'
                    WHEN (MONTH_CNT - REQ_PAY_NO) <![CDATA[<]]> 0 THEN '1'
                    ELSE '2' END AS STAT ,

                    (SELECT MAX(NVL(SEQ,0)) FROM LF_DMUSER.PAY_MNG WHERE ACCNT_NO = REQ.ACCNT_NO) AS TRUE_CNT,
                    (SELECT MAX(NVL(SEQ,0)) FROM LF_DMUSER.PAY_MNG_DTL WHERE ACCNT_NO = REQ.ACCNT_NO) AS REL_CNT,
                    (SELECT MAX(NVL(SEQ,0)) FROM LF_DMUSER.PAY_MNG_DTL1 WHERE ACCNT_NO = REQ.ACCNT_NO) AS ADD_CNT,
                    (CASE WHEN SUBSTR(PAY_BIT,1,1) != 'X' THEN PND.AMT ELSE 0 END) AS TRUE_AMT,
                    (CASE WHEN SUBSTR(PAY_BIT,2,1) != 'X' THEN PND.REL_AMT ELSE 0 END) AS REL_AMT,
                    (CASE WHEN SUBSTR(PAY_BIT,3,1) != 'X' THEN PND.ADD_AMT ELSE 0 END) AS ADD_AMT
                FROM TB_MEMBER_WDRW_REQ REQ INNER JOIN
                PRODUCT_NO_DATA PND ON REQ.PROD_CD = PND.PROD_CD AND PND.NO = REQ.REQ_PAY_NO
                WHERE 1=1
                AND RESULT_KEY = #{tid}
            ) TBL
            WHERE TBL.ACCNT_NO = PM.ACCNT_NO AND TBL.TRUE_CNT = PM.NO
           );
        -->

        END ;

    </update>

     <!-- ================================================================
     * 날짜 : 20181113
     * 이름 : 송준빈
     * 추가내용 : 회원고객정보 탭 (청구이력)
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_WDRW_REQ, LF_DMUSER.TB_MEMBER_WDRW_RESULT
     * ================================================================
     * -->
    <select id="DlwPayMap.getMainWdrwLogList" parameterType="map" resultType="resultMap">


        SELECT /* DlwPayMap.getMainWdrwLogList */
               *
          FROM (SELECT ROW_NUMBER() OVER(ORDER BY REQ_DAY DESC, REG_DM DESC, ACCNT_NO) PAGE_INDX,
                       X.*
                  FROM (
          SELECT REQ.ACCNT_NO,
                                   REQ.MEM_NO,
                                   REQ_BIT,
                                   TRUE_CNT,                                            /* 실납입횟수 */
                                   REQ.REQ_PAY_NO,                                          /* 청구회차 */
                                     (SELECT MAX(REQ_PAY_NO) FROM TB_MEMBER_WDRW_REQ WHERE 1=1 AND ACCNT_NO = REQ.ACCNT_NO AND DEL_FG  !=  'Y' AND REQ_PAY_NO != 999) AS MAX_REQ_PAY_NO,                                 /* 회원번호 기준 MAX 청구회차 */                                 /* 회원번호 기준 MAX 청구회차 */
                                   TO_CHAR(RST.REG_DM, 'YYYYMMDDHH24MISS') AS REG_DM,   /* 결과입력시간*/
                                   ( SELECT TO_CHAR(MAX(REG_DM), 'YYYYMMDDHH24MISS')    /* 회원번호 기준 MAX 결과입력시간 */
                                     FROM TB_MEMBER_WDRW_RESULT
                                    WHERE 1=1
                                      AND ACCNT_NO = REQ.ACCNT_NO
                                   ) AS MAX_REG_DM,
                                   PAY_BIT,
                                   REQ.ICHAE_NO,
                                   REQ.REQ_DAY,
                                   PAY_AMT,
                                   REQ.RESULT_KEY,
                                   RST.TID,
                                   RST.PAY_KIND AS RESULT_KIND,
                                   RST.RESULT_CD,
                                   AUTH_DT,
                                   AUTH_CD,
                                   REQ.ICHAE_CD,
                                   TO_CHAR(RFD.CANCEL_DT, 'YYYYMMDD') AS CANCEL_DT,
                                   RST.ETC,
                                   REQ.DEL_FG,
                                     REQ.PAY_MTHD,
                                   CASE WHEN REQ.PAY_MTHD = '04'  THEN FN_COM_NM('15', RST.RESULT_CD)
                                        WHEN REQ.PAY_MTHD = '06'  THEN RST.RESULT_MSG
                                   ELSE '' END AS RESULT_MSG
                              FROM TB_MEMBER_WDRW_REQ REQ LEFT OUTER JOIN
                                TB_MEMBER_WDRW_RESULT RST ON REQ.PAY_MTHD = RST.PAY_MTHD AND REQ.REQ_DAY = RST.REQ_DAY AND REQ.RESULT_KEY = RST.RESULT_KEY LEFT OUTER JOIN
                                TB_MEMBER_REQ_REFUND RFD ON REQ.PAY_MTHD = RFD.PAY_MTHD AND REQ.REQ_DAY = RFD.REQ_DAY AND REQ.RESULT_KEY = RFD.RESULT_KEY AND RFD.DEL_FG = 'N'    
                             WHERE 1=1           
                                 AND REQ.ACCNT_NO = #{accnt_no}
                                 AND REQ.DEL_FG != 'Y'     
                    ) X
                ) Z
    </select>

    <!-- ================================================================
     * 날짜 : 20181114
     * 이름 : 정승철
     * 추가내용 : 결제 취소 완료 시 결과 반영 (CMS)
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_WDRW_RESULT
     * ================================================================
     * -->
    <insert id="DlwPayMap.insertCmsResultByPayCancel" parameterType="map" >

        /* DlwPayMap.insertCmsResultByPayCancel */
        INSERT
          INTO TB_MEMBER_WDRW_RESULT
             ( ACCNT_NO
             , REQ_DAY
             , REQ_NO
             , PAY_KIND
             , RESULT_KEY
             , RESULT_MSG
             , PAY_MTHD
             , ETC
             , REG_DM
             , REG_MAN
             , CANCEL_DT )

        VALUES
             ( #{accnt_no}
             , #{req_day}
             , #{req_pay_no}
             , '01'
             , #{result_key}
             , '환불등록'
             , '04'
             , '환불등록일자/시간/내용 : ' || #{pay_cancel_day} || ' ' ||  #{cncl_tm}  ||  ' ' ||  #{pay_cancel_note}
             , SYSDATE
             , #{emple_no}
             , SYSDATE )

    </insert>

    <!-- ================================================================
     * 날짜 : 20181116
     * 이름 : 정승철
     * 추가내용 : 결제 취소 완료 시 산출관리 반영
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_WDRW_REQ
     * ================================================================
     * -->
    <update id="DlwPayMap.updateWdrwReqByPayCancel" parameterType="map" >
        /* DlwPayMap.updateWdrwReqByPayCancel */
        UPDATE TB_MEMBER_WDRW_REQ
        SET DEL_FG = 'X',            /* X:입금취소 */
            UPD_MAN =  #{emple_no},
            UPD_DM = SYSDATE
        WHERE ACCNT_NO = #{accnt_no}
          AND PAY_MTHD = #{pay_mthd}
          AND DEL_FG = 'C'
          AND REQ_DAY = #{req_day}
          AND RESULT_KEY = #{result_key}
    </update>

    <!-- ================================================================
     * 날짜 : 20181116
     * 이름 : 정승철
     * 추가내용 : CMS 환불완료시 처리
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_WDRW_REQ
     *               LF_DMUSER.PAY_MNG
     *               LF_DMUSER.PAY_MNG_DTL
     *               LF_DMUSER.PAY_MNG_DTL1
     * ================================================================
     * -->
    <update id="DlwPayMap.updateCmsPayCancel" parameterType="map" >

        /* DlwPayMap.updateCmsPayCancel */
        BEGIN

            /* 2018.11.30 정승철 - (환불테이블) 실시간 취소일자 UPDATE */
            UPDATE TB_MEMBER_REQ_REFUND
               SET CANCEL_DT = SYSDATE
             WHERE ACCNT_NO = #{accnt_no}
               AND PAY_MTHD = #{pay_mthd}
               AND REQ_DAY = #{req_day}
               AND RESULT_KEY = #{result_key}
               AND DEL_FG = 'N';

            UPDATE TB_MEMBER_WDRW_REQ
               SET DEL_FG = 'X',            /* X:입금취소 */
                   UPD_MAN =  #{emple_no},
                   UPD_DM = SYSDATE
             WHERE ACCNT_NO = #{accnt_no}
               AND PAY_MTHD = #{pay_mthd}
               AND DEL_FG = 'C'
               AND REQ_DAY = #{req_day}
               AND RESULT_KEY = #{result_key};

            <if test="req_pay_no != '1'">
                    UPDATE PAY_MNG
                    SET DEL_FG = 'Y',
                        UPD_MAN =  #{emple_no},
                        UPD_DM = SYSDATE,
                        PAY_CANCEL_DAY = TO_CHAR(SYSDATE, 'YYYYMMDD')
                    WHERE ACCNT_NO = #{accnt_no}
                      AND DEL_FG = 'N'
                      AND PAY_MTHD = '04'
                      AND NO = #{req_pay_no}
                      AND REG_MAN = 'FILE_AUTO';

                    UPDATE PAY_MNG_DTL
                    SET DEL_FG = 'Y',
                        UPD_MAN =  #{emple_no},
                        UPD_DM = SYSDATE,
                        PAY_CANCEL_DAY = TO_CHAR(SYSDATE, 'YYYYMMDD')
                    WHERE ACCNT_NO = #{accnt_no}
                      AND DEL_FG = 'N'
                      AND PAY_MTHD = '04'
                      AND NO = #{req_pay_no}
                      AND REG_MAN = 'FILE_AUTO';

                   UPDATE PAY_MNG_DTL1
                    SET DEL_FG = 'Y',
                        UPD_MAN =  #{emple_no},
                        UPD_DM = SYSDATE,
                        PAY_CANCEL_DAY = TO_CHAR(SYSDATE, 'YYYYMMDD')
                    WHERE ACCNT_NO = #{accnt_no}
                      AND DEL_FG = 'N'
                      AND PAY_MTHD = '04'
                      AND NO = #{req_pay_no}
                      AND REG_MAN = 'FILE_AUTO';
            </if>

            <!-- 2018.11.30 CMS 환불처리시 (입금반영시) 입금쪽 테이블은 일단 처리되지 않도록
            UPDATE PAY_MNG
            SET DEL_FG = 'Y',
                UPD_MAN =  #{emple_no},
                UPD_DM = SYSDATE,
                PAY_CANCEL_DAY = TO_CHAR(SYSDATE, 'YYYYMMDD'),
                PAY_CANCEL_CD = ( SELECT REFUND_REASON FROM TB_MEMBER_REQ_REFUND WHERE ACCNT_NO = #{accnt_no} AND PAY_MTHD = #{pay_mthd} AND DEL_FG = 'N' AND REQ_DAY = #{req_day} AND RESULT_KEY = #{result_key} ),
                PAY_CANCEL_NOTE = ( SELECT REFUND_ETC FROM TB_MEMBER_REQ_REFUND WHERE ACCNT_NO = #{accnt_no} AND PAY_MTHD = #{pay_mthd} AND DEL_FG = 'N' AND REQ_DAY = #{req_day} AND RESULT_KEY = #{result_key} )
            WHERE ACCNT_NO = #{accnt_no}
              AND DEL_FG = 'N'
              AND PAY_MTHD = '04'
              AND NO = #{req_pay_no}
              AND REG_MAN = 'FILE_AUTO';

            UPDATE PAY_MNG_DTL
            SET DEL_FG = 'Y',
                UPD_MAN =  #{emple_no},
                UPD_DM = SYSDATE,
                PAY_CANCEL_DAY = TO_CHAR(SYSDATE, 'YYYYMMDD'),
                PAY_CANCEL_CD = ( SELECT REFUND_REASON FROM TB_MEMBER_REQ_REFUND WHERE ACCNT_NO = #{accnt_no} AND PAY_MTHD = #{pay_mthd} AND DEL_FG = 'N' AND REQ_DAY = #{req_day} AND RESULT_KEY = #{result_key} ),
                PAY_CANCEL_NOTE = ( SELECT REFUND_ETC FROM TB_MEMBER_REQ_REFUND WHERE ACCNT_NO = #{accnt_no} AND PAY_MTHD = #{pay_mthd} AND DEL_FG = 'N' AND REQ_DAY = #{req_day} AND RESULT_KEY = #{result_key} )
            WHERE ACCNT_NO = #{accnt_no}
              AND DEL_FG = 'N'
              AND PAY_MTHD = '04'
              AND NO = #{req_pay_no}
              AND REG_MAN = 'FILE_AUTO';

           UPDATE PAY_MNG_DTL1
            SET DEL_FG = 'Y',
                UPD_MAN =  #{emple_no},
                UPD_DM = SYSDATE,
                PAY_CANCEL_DAY = TO_CHAR(SYSDATE, 'YYYYMMDD'),
                PAY_CANCEL_CD = ( SELECT REFUND_REASON FROM TB_MEMBER_REQ_REFUND WHERE ACCNT_NO = #{accnt_no} AND PAY_MTHD = #{pay_mthd} AND DEL_FG = 'N' AND REQ_DAY = #{req_day} AND RESULT_KEY = #{result_key} ),
                PAY_CANCEL_NOTE = ( SELECT REFUND_ETC FROM TB_MEMBER_REQ_REFUND WHERE ACCNT_NO = #{accnt_no} AND PAY_MTHD = #{pay_mthd} AND DEL_FG = 'N' AND REQ_DAY = #{req_day} AND RESULT_KEY = #{result_key} )
            WHERE ACCNT_NO = #{accnt_no}
              AND DEL_FG = 'N'
              AND PAY_MTHD = '04'
              AND NO = #{req_pay_no}
              AND REG_MAN = 'FILE_AUTO';
           -->

        END;

    </update>

    <!-- ================================================================
     * 날짜 : 20181120
     * 이름 : 정승철
     * 추가내용 : 환불 등록
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_REQ_REFUND
     * ================================================================
     * -->
    <!-- <insert id="DlwPayMap.insertGasuAmtByPayCancel" parameterType="map" > -->
    <insert id="DlwPayMap.insertRefundByPayCancel" parameterType="map" >

        INSERT /* DlwPayMap.insertRefundByPayCancel */
          INTO TB_MEMBER_REQ_REFUND
             ( ACCNT_NO
             , PAY_MTHD
             , REQ_DAY
             , RESULT_KEY
             , REFUND_LOC     /* 환불 경로(01:결과파일환불,02:해약등록,03:청약철회등록,04:행사등록) */
             , ICHAE_NO       /* 은행이체번호(CMS) */
             , ICHAE_CD       /* 은행이체코드(CMS) */
             , DEPR           /* 예금주(CMS) */
             , REFUND_DT      /* 환불일자 */
             , REFUND_ETC     /* 비고 */
             , DEL_FG
             , REG_DM
             , REG_MAN
             , REFUND_REASON  /* 환불사유(0001:환불,0002:입력오류,0003:기타,0004:매입취소) */
             , REQ_PAY_NO     /* 청구회차 */
             , AUTH_YN
             , FRANCHISEE_NO
             )
        VALUES
             (
               #{accnt_no}
             , #{pay_mthd}
             , #{req_day}
             , #{result_key}
             , '01'
             , ''                    /* ICHAE_NO */
             , ''                    /* ICHAE_CD */
             , ''                    /* DEPR */
             , #{pay_cancel_day}     /* REFUND_DT */
             , #{pay_cancel_note}
             , 'N'
             , SYSDATE
             , #{emple_no}
             , #{pay_cancel_cd}
             , #{req_pay_no}
             , #{auth_yn}
             , #{franchisee_no}
             )

        <!--
        INSERT /* DlwPayMap.insertGasuAmtByPayCancel */
          INTO GASU_AMT_REG
             ( SEQ
             , ACCNT_NO
             , GASU_AMT
             , GASU_ALLT_AMT
             , GASU_ADD_AMT
             , REG_DM
             , REG_MAN
             , UPD_DM
             , UPD_MAN
             , DEL_FG
             , PAY_DAY
             , NOTE
             , PAY_NO
             , PAY_MTHD
             )
      SELECT ( SELECT NVL(MAX(SEQ) + 1, '1')
                 FROM GASU_AMT_REG )
           , #{accnt_no}
           , NVL( (SELECT PAY_AMT FROM PAY_MNG      WHERE ACCNT_NO = #{accnt_no} AND NO = #{req_pay_no} AND PAY_MTHD = #{pay_mthd} AND DEL_FG = 'N') ,0)
           , NVL( (SELECT PAY_AMT FROM PAY_MNG_DTL  WHERE ACCNT_NO = #{accnt_no} AND NO = #{req_pay_no} AND PAY_MTHD = #{pay_mthd} AND DEL_FG = 'N') ,0)
           , NVL( (SELECT PAY_AMT FROM PAY_MNG_DTL1 WHERE ACCNT_NO = #{accnt_no} AND NO = #{req_pay_no} AND PAY_MTHD = #{pay_mthd} AND DEL_FG = 'N') ,0)
           , SYSDATE
           , #{emple_no}
           , ''
           , ''
           , 'N'
           /* , ( SELECT PAY_DAY FROM PAY_MNG WHERE ACCNT_NO = #{accnt_no} AND NO = #{req_pay_no} AND PAY_MTHD = #{pay_mthd} AND DEL_FG = 'N' ) */
           , CASE
                  WHEN ( SELECT PAY_DAY FROM PAY_MNG      WHERE ACCNT_NO = #{accnt_no} AND NO = #{req_pay_no} AND PAY_MTHD = #{pay_mthd} AND DEL_FG = 'N' ) IS NOT NULL
                  THEN ( SELECT PAY_DAY FROM PAY_MNG      WHERE ACCNT_NO = #{accnt_no} AND NO = #{req_pay_no} AND PAY_MTHD = #{pay_mthd} AND DEL_FG = 'N' )
                  WHEN ( SELECT PAY_DAY FROM PAY_MNG_DTL  WHERE ACCNT_NO = #{accnt_no} AND NO = #{req_pay_no} AND PAY_MTHD = #{pay_mthd} AND DEL_FG = 'N' ) IS NOT NULL
                  THEN ( SELECT PAY_DAY FROM PAY_MNG_DTL  WHERE ACCNT_NO = #{accnt_no} AND NO = #{req_pay_no} AND PAY_MTHD = #{pay_mthd} AND DEL_FG = 'N' )
                  WHEN ( SELECT PAY_DAY FROM PAY_MNG_DTL1 WHERE ACCNT_NO = #{accnt_no} AND NO = #{req_pay_no} AND PAY_MTHD = #{pay_mthd} AND DEL_FG = 'N' ) IS NOT NULL
                  THEN ( SELECT PAY_DAY FROM PAY_MNG_DTL1 WHERE ACCNT_NO = #{accnt_no} AND NO = #{req_pay_no} AND PAY_MTHD = #{pay_mthd} AND DEL_FG = 'N' )
                  ELSE '99991231'
             END
           , #{pay_cancel_note}
           , #{req_pay_no}
           , #{pay_mthd}
        FROM DUAL

        -->

    </insert>
    
    <!-- ================================================================
     * 날짜 : 20191209
     * 이름 : 송준빈
     * 추가내용 : 카드 무승인 결제 취소 처리
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_REQ_NAUTH_CNCL
     * ================================================================
     * -->
    <insert id="DlwPayMap.insertNauthPayCancel" parameterType="map" >   
     	/* DlwPayMap.insertNauthPayCancel */           
        INSERT INTO LF_DMUSER.TB_MEMBER_REQ_NAUTH_CNCL(ACCNT_NO, PAY_MTHD, PRE_REQ_DAY, REQ_DAY, RESULT_KEY, REFUND_LOC, REFUND_DT, REFUND_CD, REFUND_ETC, DEL_FG, REG_DM, REG_MAN, CANCEL_DT, REQ_PAY_NO, PAY_AMT, FRANCHISEE_NO)
        VALUES (#{accnt_no}, #{pay_mthd}, #{req_day}, '', #{result_key}, '01', '', #{pay_cancel_cd}, #{pay_cancel_note}, 'P', SYSDATE, #{emple_no}, '', #{req_pay_no}, #{pay_amt} , #{franchisee_no}) 
    </insert>
    
    <!-- ================================================================
     * 날짜 : 20191209
     * 이름 : 송준빈
     * 추가내용 : 카드 무승인 결제 취소건 조회
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_REQ_NAUTH_CNCL
     * ================================================================
     * -->
    <select id="DlwPayMap.getNauthPayCancel" parameterType="map" resultType="resultMap">
        SELECT /* DlwPayMap.getNauthPayCancel */
        	MAIN_TBL.*
        FROM 
        (
        	SELECT 
        		ACCNT_NO,
				PAY_MTHD,
				PRE_REQ_DAY,
				REQ_DAY,
				RESULT_KEY,
				REFUND_LOC,
				REFUND_DT,
				REFUND_CD,
				REFUND_ETC,
				DEL_FG,
				REG_DM,
				REG_MAN,
				CANCEL_DT,
				REQ_PAY_NO,
				PAY_AMT
        	FROM LF_DMUSER.TB_MEMBER_REQ_NAUTH_CNCL 
        	WHERE 1=1
        	<if test="del_fg == null or del_fg == ''">
                AND DEL_FG != 'Y'                
            </if>
        	<if test="del_fg != null and del_fg != ''">
                AND DEL_FG = #{del_fg}          
            </if>
        	
        	
        	<if test="data_type == '01'">
                AND REG_DM BETWEEN TO_DATE(#{refund_dt_from} || '000000', 'YYYYMMDDHH24MISS') AND TO_DATE(#{refund_dt_to} || '235959', 'YYYYMMDDHH24MISS')
            </if>
            <if test="data_type == '02'">
                AND REQ_DAY BETWEEN #{refund_dt_from} AND #{refund_dt_to}
            </if>
        ) MAIN_TBL
        WHERE 1=1
    </select>


    <!-- ================================================================
     * 날짜 : 20181122
     * 이름 : 정승철
     * 추가내용 : 결제 취소 완료 시 결과 반영 (카드)
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_WDRW_RESULT
     * ================================================================
     * -->
    <update id="DlwPayMap.updateCardResultByPayCancel" parameterType="map" >

        /* DlwPayMap.updateCardResultByPayCancel */
        UPDATE TB_MEMBER_WDRW_RESULT
           SET CANCEL_DT = SYSDATE
             , ETC = '환불등록일자/시간/내용 : ' || #{pay_cancel_day} || ' ' ||  #{cncl_tm}  ||  ' ' ||  #{pay_cancel_note}
             , UPD_DM = SYSDATE
             , UPD_MAN = #{emple_no}
         WHERE 1=1
           AND RESULT_KEY = #{result_key}
           AND REQ_DAY = #{req_day}
           AND ACCNT_NO = #{accnt_no}
           AND PAY_MTHD = '06'
           AND RESULT_CD = '3001'

    </update>

        <!-- ===============================================================
     * 날짜 : 메인
     * 이름 : /dlw/cust/cust-acnt/list
     * 추가내용 :
     * 대상 테이블 :
     * ================================================================
     * -->
    <select id="DlwPayMap.getMemberRefundListCount" parameterType="map" resultType="int">
        SELECT /* DlwPayMap.getMemberRefundListCount */
               COUNT(*) AS ICNT
          FROM (

            SELECT *

              FROM ( SELECT MRR.ACCNT_NO      /* 회원번호                                                                   */
                           ,MBR.MEM_NO        /* 고유번호                                                                   */
                           ,MBR.MEM_NM        /* 회원명                                                                     */
                           ,MRR.PAY_MTHD      /* 납입방법(04:CMS, 06:Card)                                                  */
                           ,CASE WHEN MRR.CANCEL_DT IS NOT NULL
                                 THEN CASE WHEN MWR.RESULT_KIND = '01' AND TO_CHAR(MRR.CANCEL_DT, 'YYMMDD') > TO_CHAR(TO_DATE(AUTH_DT), 'YYMMDD')
                                           THEN '후취소'
                                           WHEN MWR.RESULT_KIND != '01' AND TO_CHAR(MRR.CANCEL_DT, 'YYMMDD') > SUBSTR(AUTH_DT, 1, 6)
                                           THEN '후취소'
                                           WHEN MWR.RESULT_KIND = '01' AND TO_CHAR(MRR.CANCEL_DT, 'YYMMDD') = TO_CHAR(TO_DATE(AUTH_DT), 'YYMMDD')
                                           THEN '취소'
                                           WHEN MWR.RESULT_KIND != '01' AND TO_CHAR(MRR.CANCEL_DT, 'YYMMDD') = SUBSTR(AUTH_DT, 1, 6)
                                           THEN '취소'
                                           ELSE ''
                                       END
                                 ELSE ''
                             END AS CANCEL_GB /* 취소구분 */
                           ,MWR.PAY_BIT       /* PAYBIT                                                                     */
                           ,MRR.REQ_DAY       /* 청구일자                                                                   */
                           ,MWR.PAY_AMT       /* 청구금액                                                                   */
                           ,MWR.KSTBIT        /* 회원상태(01:대기, 02:가입, 03:해약, 04:행사, 09:만기)                      */
                           ,MRR.RESULT_KEY    /* 결과키                                                                     */
                           ,MRR.REFUND_LOC    /* 환불 경로(01:결과파일환불,02:해약등록,03:청약철회등록,04:행사등록)         */
                           ,MRR.ICHAE_NO      /* 은행이체번호(CMS)                                                          */
                           ,MRR.ICHAE_CD      /* 은행이체코드(CMS)                                                          */
                           ,MRR.DEPR          /* 예금주(CMS)                                                                */
                           ,MRR.REFUND_DT     /* 환불일자                                                                   */
                           ,MRR.REG_DM        /* 등록일자                                                                   */
                           ,MRR.REG_MAN       /* 등록자ID                                                                   */
                           ,MWR.DEL_FG        /* 청구여부(N:청구전 Y:삭제 R:청구 C:완료(변환/입금) F:완료(실패) X:입금취소) */
                           ,MWR.REQ_PAY_NO    /* 산출청구회차                                                               */
                           ,MWS.RESULT_CD     /* 결과코드                                                                   */
                           ,MWS.RESULT_MSG    /* 결과메세지                                                                 */
                           <!-- ,TO_CHAR(MWS.CANCEL_DT, 'YYYYMMDD') AS CANCEL_DT /* 실시간 취소 일자                             */ -->
                           ,TO_CHAR(MRR.CANCEL_DT, 'YYYYMMDDHH24MISS') AS CANCEL_DT                    /* 실시간 취소 일자  */
                           ,MWS.TID           /* 결과키(TID, CMS결과키)                                                     */
                           ,AUTH_DT     /* 승인일자          */
                           ,MWS.AUTH_CD       /* 승인번호                                                                   */
                           ,MRR.REFUND_REASON /* 환불사유(환불사유코드)                                                     */
                           ,MRR.REFUND_ETC    /* 비고                                                                       */
                           ,MRR.AUTH_YN
                           ,(SELECT DEL_FG FROM TB_MEMBER_REQ_NAUTH_CNCL CNCL WHERE 1=1 AND CNCL.ACCNT_NO = MRR.ACCNT_NO  AND CNCL.REQ_PAY_NO = MRR.REQ_PAY_NO AND CNCL.DEL_FG != 'Y') AS CNCL_DEL_FG
                       FROM TB_MEMBER_REQ_REFUND MRR              /* 고객환불정보                                           */
                       LEFT OUTER JOIN TB_MEMBER_WDRW_REQ MWR     /* 고객청구요청정보                                       */
                               ON MRR.ACCNT_NO = MWR.ACCNT_NO
                              AND MRR.PAY_MTHD = MWR.PAY_MTHD
                              AND MRR.REQ_DAY = MWR.REQ_DAY
                              AND MRR.REQ_PAY_NO = MWR.REQ_PAY_NO
                              AND MRR.RESULT_KEY = MWR.RESULT_KEY
                       LEFT OUTER JOIN TB_MEMBER_WDRW_RESULT MWS  /* 고객청구결과정보                                       */
                               ON MWR.ACCNT_NO = MWS.ACCNT_NO
                              AND MWR.RESULT_KEY = MWS.RESULT_KEY
                              AND MWR.REQ_DAY = MWS.REQ_DAY
                       INNER JOIN MEM_PROD_ACCNT MPA              /* 고객가입상품정보                                       */
                               ON MPA.ACCNT_NO = MRR.ACCNT_NO
                              AND MPA.DEL_FG = 'N'
                       INNER JOIN MEMBER MBR                      /* 고객기본정보                                           */
                               ON MBR.MEM_NO = MPA.MEM_NO
                              AND MBR.DEL_FG = 'N'
                       LEFT OUTER JOIN PRODUCT_NO_DATA PND        /* 상품회차별정보                                         */
                               ON MWR.PROD_CD = PND.PROD_CD
                              AND MWR.REQ_PAY_NO = PND.NO
                      WHERE 1=1
                      <if test="data_type == '01'">
                          <if test="reg_dm_stt != null and reg_dm_stt != '' and reg_dm_end != null and reg_dm_end != ''">
                          AND TO_CHAR(MRR.REG_DM,'YYYYMMDD') BETWEEN #{reg_dm_stt} AND #{reg_dm_end}
                          </if>
                      </if>
                      <if test="data_type == '02'">
                          <if test="reg_dm_stt != null and reg_dm_stt != '' and reg_dm_end != null and reg_dm_end != ''">
                          AND TO_CHAR(MRR.CANCEL_DT,'YYYYMMDD') BETWEEN #{reg_dm_stt} AND #{reg_dm_end}
                          </if>
                      </if>
                      <if test="accnt_no != null and accnt_no != ''">
                          AND MRR.ACCNT_NO = #{accnt_no}
                      </if>
                      <if test="mem_nm != null and mem_nm != ''">
                          AND MBR.MEM_NM = #{mem_nm}
                      </if>
                      <if test="refund_loc != null and refund_loc != ''">
                          AND MRR.REFUND_LOC = #{refund_loc}
                      </if>
                      <if test="req_stat != null and req_stat != ''">
                          AND MWR.DEL_FG = #{req_stat}                  /* 청구여부(N:청구전 Y:삭제 R:청구 C:완료(변환/입금) F:완료(실패) X:입금취소) */
                      </if>
                      <!--
                      <if test="del_fg != null and del_fg != ''">
                          AND MRR.DEL_FG = #{del_fg}
                      </if>
                       -->
                      <if test="req_day != null and req_day != ''">
                          AND MRR.REQ_DAY = #{req_day}                  /* 청구일자 */
                      </if>
                      <if test="pay_mthd != null and pay_mthd != ''">
                          AND MRR.PAY_MTHD = #{pay_mthd}                /* 납입방법(04:CMS, 06:Card) */
                      </if>
                      <if test="auth_yn != null and auth_yn != ''">
	                      AND MRR.AUTH_YN = #{auth_yn}
	                  </if>
                      AND MRR.DEL_FG = 'N'
                   ) MAIN_TBL
             )
             WHERE 1=1
               <if test="cancel_gb != null and cancel_gb != ''">
               AND CANCEL_GB = #{cancel_gb}
               </if>
    </select>

    <select id="DlwPayMap.getMemberRefundList" parameterType="map" resultType="resultMap">
        SELECT /* DlwPayMap.getMemberRefundList */
               *
          FROM

          ( SELECT ROW_NUMBER() OVER(ORDER BY ${orderBy} ${orderDirection}) PAGE_INDX /* PAGE INDX                 */
                 , MAIN_TBL.*
              FROM
               ( SELECT MRR.ACCNT_NO      /* 회원번호                                                                   */
                       ,MWR.PROD_CD
                       ,(SELECT MAX(PD.PROD_NM) FROM PRODUCT PD WHERE 1=1 AND PD.PROD_CD = MWR.PROD_CD) AS PROD_NM
                       ,MWR.ICHAE_NO AS BID
                       ,MBR.MEM_NO        /* 고유번호                                                                   */
                       ,MBR.MEM_NM        /* 회원명                                                                     */
                       ,MRR.PAY_MTHD      /* 납입방법(04:CMS, 06:Card)                                                  */
                       ,CASE WHEN MRR.CANCEL_DT IS NOT NULL
                             THEN CASE WHEN MWR.RESULT_KIND = '01' AND TO_CHAR(MRR.CANCEL_DT, 'YYMMDD') > TO_CHAR(TO_DATE(AUTH_DT), 'YYMMDD')
                                       THEN '후취소'
                                       WHEN MWR.RESULT_KIND != '01' AND TO_CHAR(MRR.CANCEL_DT, 'YYMMDD') > SUBSTR(AUTH_DT, 1, 6)
                                       THEN '후취소'
                                       WHEN MWR.RESULT_KIND = '01' AND TO_CHAR(MRR.CANCEL_DT, 'YYMMDD') = TO_CHAR(TO_DATE(AUTH_DT), 'YYMMDD')
                                       THEN '취소'
                                       WHEN MWR.RESULT_KIND != '01' AND TO_CHAR(MRR.CANCEL_DT, 'YYMMDD') = SUBSTR(AUTH_DT, 1, 6)
                                       THEN '취소'
                                       ELSE ''
                                   END
                             ELSE ''
                         END AS CANCEL_GB /* 취소구분 */
                       ,MWR.PAY_BIT       /* PAYBIT                                                                       */
                       ,MRR.REQ_DAY       /* 청구일자                                                                   */
                       ,MWR.PAY_AMT       /* 청구금액                                                                   */
                       ,(CASE WHEN SUBSTR(MWR.PAY_BIT,1,1) != 'X' THEN PND.AMT     ELSE 0 END) AS TRUE_AMT    /* 상조금 */
                       ,(CASE WHEN SUBSTR(MWR.PAY_BIT,2,1) != 'X' THEN PND.REL_AMT ELSE 0 END) AS REL_AMT     /* 결합금 */
                       ,(CASE WHEN SUBSTR(MWR.PAY_BIT,3,1) != 'X' THEN PND.ADD_AMT ELSE 0 END) AS ADD_AMT     /* 추가금 */
                       ,MWR.KSTBIT        /* 회원상태(01:대기, 02:가입, 03:해약, 04:행사, 09:만기)                      */
                       ,MRR.RESULT_KEY    /* 결과키                                                                     */
                       ,MWR.RESULT_KIND   /* 결과유형 (01:파일, 02:실시간, 03:자유,04:기타)                             */
                       ,MRR.REFUND_LOC    /* 환불 경로(01:결과파일환불,02:해약등록,03:청약철회등록,04:행사등록)         */
                       <!--
                       ,MRR.ICHAE_NO      /* 은행이체번호(CMS)                                                          */
                       ,MRR.ICHAE_CD      /* 은행이체코드(CMS)                                                          */
                        -->
                       ,CASE WHEN MWR.PAY_MTHD = '04'
                             THEN CASE WHEN NVL(MRR.ICHAE_NO, 'N') = 'N'
                                       THEN MWR.ICHAE_NO
                                       ELSE MRR.ICHAE_NO
                                   END
                             ELSE ''
                         END AS ICHAE_NO
                       ,CASE WHEN MWR.PAY_MTHD = '04'
                             THEN CASE WHEN NVL(MRR.ICHAE_CD, 'N') = 'N'
                                       THEN MWR.ICHAE_CD
                                       ELSE MRR.ICHAE_CD
                                  END
                             ELSE ''
                         END AS ICHAE_CD
                       ,MRR.DEPR          /* 예금주(CMS)                                                                */
                       ,MRR.REFUND_DT     /* 환불일자                                                                   */
                       ,MRR.REG_DM        /* 등록일자                                                                   */
                       ,MRR.REG_MAN       /* 등록자ID                                                                   */
                       ,MWR.DEL_FG        /* 청구여부(N:청구전 Y:삭제 R:청구 C:완료(변환/입금) F:완료(실패) X:입금취소) */
                       ,MWR.REQ_PAY_NO    /* 산출청구회차                                                               */
                       ,MWS.RESULT_CD     /* 결과코드                                                                   */
                       ,MWS.RESULT_MSG    /* 결과메세지                                                                 */
                       <!-- ,TO_CHAR(MWS.CANCEL_DT, 'YYYYMMDD') AS CANCEL_DT /* 실시간 취소 일자                             */ -->
                       ,TO_CHAR(MRR.CANCEL_DT, 'YYYYMMDDHH24MISS') AS CANCEL_DT                    /* 실시간 취소 일자  */
                       ,MWS.TID           /* 결과키(TID, CMS결과키)                                                     */
                       ,AUTH_DT     /* 승인일자          */
                       ,MWS.AUTH_CD       /* 승인번호                                                                   */
                       ,MRR.REFUND_REASON /* 환불사유(환불사유코드)                                                     */
                       ,MRR.REFUND_ETC    /* 비고                                                                       */
                       ,MRR.AUTH_YN
                       ,MWR.FRANCHISEE_NO
                       ,(SELECT DEL_FG FROM TB_MEMBER_REQ_NAUTH_CNCL CNCL WHERE 1=1 AND CNCL.ACCNT_NO = MRR.ACCNT_NO  AND CNCL.REQ_PAY_NO = MRR.REQ_PAY_NO AND CNCL.DEL_FG != 'Y') AS CNCL_DEL_FG
                   FROM TB_MEMBER_REQ_REFUND MRR              /* 고객환불정보                                           */
                   LEFT OUTER JOIN TB_MEMBER_WDRW_REQ MWR     /* 고객청구요청정보                                       */
                           ON MRR.ACCNT_NO = MWR.ACCNT_NO
                          AND MRR.PAY_MTHD = MWR.PAY_MTHD
                          AND MRR.REQ_DAY = MWR.REQ_DAY
                          AND MRR.REQ_PAY_NO = MWR.REQ_PAY_NO
                          AND MRR.RESULT_KEY = MWR.RESULT_KEY
                   LEFT OUTER JOIN TB_MEMBER_WDRW_RESULT MWS  /* 고객청구결과정보                                       */
                           ON MWR.ACCNT_NO = MWS.ACCNT_NO
                          AND MWR.RESULT_KEY = MWS.RESULT_KEY
                          AND MWR.REQ_DAY = MWS.REQ_DAY
                   INNER JOIN MEM_PROD_ACCNT MPA              /* 고객가입상품정보                                       */
                           ON MPA.ACCNT_NO = MRR.ACCNT_NO
                          AND MPA.DEL_FG = 'N'
                   INNER JOIN MEMBER MBR                      /* 고객기본정보                                           */
                           ON MBR.MEM_NO = MPA.MEM_NO
                          AND MBR.DEL_FG = 'N'
                   LEFT OUTER JOIN PRODUCT_NO_DATA PND        /* 상품회차별정보                                         */
                           ON MWR.PROD_CD = PND.PROD_CD
                          AND MWR.REQ_PAY_NO = PND.NO
                  WHERE 1=1
                  <if test="data_type == '01'">
                      <if test="reg_dm_stt != null and reg_dm_stt != '' and reg_dm_end != null and reg_dm_end != ''">
                      AND TO_CHAR(MRR.REG_DM,'YYYYMMDD') BETWEEN #{reg_dm_stt} AND #{reg_dm_end}
                      </if>
                  </if>
                  <if test="data_type == '02'">
                      <if test="reg_dm_stt != null and reg_dm_stt != '' and reg_dm_end != null and reg_dm_end != ''">
                      AND TO_CHAR(MRR.CANCEL_DT,'YYYYMMDD') BETWEEN #{reg_dm_stt} AND #{reg_dm_end}
                      </if>
                  </if>
                  <if test="accnt_no != null and accnt_no != ''">
                      AND MRR.ACCNT_NO = #{accnt_no}
                  </if>
                  <if test="mem_nm != null and mem_nm != ''">
                      AND MBR.MEM_NM = #{mem_nm}
                  </if>
                  <if test="refund_loc != null and refund_loc != ''">
                      AND MRR.REFUND_LOC = #{refund_loc}
                  </if>
                  <if test="req_stat != null and req_stat != ''">
                      AND MWR.DEL_FG = #{req_stat}                  /* 청구여부(N:청구전 Y:삭제 R:청구 C:완료(변환/입금) F:완료(실패) X:입금취소) */
                  </if>
                  <!--
                  <if test="del_fg != null and del_fg != ''">
                      AND MRR.DEL_FG = #{del_fg}
                  </if>
                  -->
                  <if test="req_day != null and req_day != ''">
                      AND MRR.REQ_DAY = #{req_day}
                  </if>
                  <if test="pay_mthd != null and pay_mthd != ''">
                      AND MRR.PAY_MTHD = #{pay_mthd}
                  </if>
                  <if test="auth_yn != null and auth_yn != ''">
                      AND MRR.AUTH_YN = #{auth_yn}
                  </if>
                  AND MRR.DEL_FG = 'N'
               ) MAIN_TBL

            WHERE 1=1
              <if test="cancel_gb != null and cancel_gb != ''">
              AND CANCEL_GB = #{cancel_gb}
              </if>
         )

         WHERE 1=1
         <if test="startLine != null and startLine != '' and endLine != null and endLine != ''">
             <![CDATA[
                 AND PAGE_INDX >= #{startLine}
                 AND PAGE_INDX < #{endLine}
             ]]>
         </if>
    </select>

    <!-- ================================================================
     * 날짜 : 메인
     * 이름 : /dlw/cms/gasu-dtl/list
     * 추가내용 :
     * 대상 테이블 :
     * ================================================================
     * -->
    <select id="DlwPayMap.getEmplDtptList" parameterType="map" resultType="resultMap">


        SELECT /* DlwEmplMap.getEmplDtptList */
               B.*
          FROM (SELECT 	<choose>
                            <when test="orderBy != null and orderBy != ''">
                                ROW_NUMBER() OVER(ORDER BY ${orderBy} ${orderDirection}) PAGE_INDX
                            </when>
                            <otherwise>
                                ROW_NUMBER() OVER(ORDER BY UPD_DM DESC) PAGE_INDX
                            </otherwise>
                        </choose>
                     , A.*
                  FROM (SELECT EMPLE_NO, DEPT_CD, EMPLE_NM
                             , FN_DEPT_NM(DEPT_CD) AS DEPT_NM
                             , CELL
                             , UPD_DM
                             , APPFORM_DAY
                          FROM EMPLOYEE EMP
                        WHERE 1=1
            <if test="emple_no != null and emple_no != ''">
                AND (EMPLE_NO LIKE '%' || #{emple_no} || '%' OR GRP_EMPLE_NO = #{emple_no})
            </if>
            <if test="not_in_emple_no != null and not_in_emple_no != ''">
                AND EMPLE_NO <![CDATA[<>]]> #{not_in_emple_no}
            </if>
            <if test="dept_cd != null and dept_cd != ''">
                AND DEPT_CD = #{dept_cd}
            </if>
            <if test="emple_nm != null and emple_nm != ''">
                AND EMPLE_NM LIKE '%'||#{emple_nm}||'%'
            </if>
            <if test="dataAthrQury != null and dataAthrQury != ''">
                ${dataAthrQury}
            </if>
            <if test='grpEmpYn == "N"'>
             <![CDATA[   AND (EMP.GRP_EMPLE_NO IS NOT NULL
                     AND REPLACE(EMP.GRP_EMPLE_NO, ' ', '') <> ' ')  ]]>
            </if>
                        ) A
                ) B
        <if test="startLine != null and startLine != '' and endLine != null and endLine != ''">
            <![CDATA[
             WHERE PAGE_INDX >= #{startLine}
               AND PAGE_INDX < #{endLine}
            ]]>
        </if>
    </select>

    <select id="DlwPayMap.getDataAthrFunc" parameterType="map" resultType="String">
        SELECT /* DlwPayMap.getDataAthrFunc */
               NVL(FN_DATA_AUTH_COND_GEN(#{paramEmpleNo}, #{paramAs}), ' ') dataAuthQry
          FROM DUAL
    </select>

    <select id="DlwPayMap.getDlwCustAccntListCount" parameterType="map" resultType="int">

        SELECT /* DlwPayMap.getDlwCustAccntListCount */
               COUNT(*)
          FROM MEM_PROD_ACCNT A JOIN MEMBER B
                                  ON A.MEM_NO = B.MEM_NO
                                 AND B.DEL_FG = 'N'
                                JOIN PRODUCT C
                                  ON A.PROD_CD = C.PROD_CD
                                JOIN EMPLOYEE EMP
                                  ON EMP.EMPLE_NO = A.EMPLE_NO
                     LEFT OUTER JOIN CMS_MEM D
                                  ON A.ACCNT_NO = D.ACCNT_NO
                                 AND D.DEL_FG = 'N'
                     LEFT OUTER JOIN CARD_MEM E
                                  ON A.ACCNT_NO = E.ACCNT_NO
                                 AND E.DEL_FG = 'N'
         WHERE A.DEL_FG = 'N'
        <if test="dataAthrQury != null and dataAthrQury != '' and user_athrCd != 'TM40'">	 <!-- 2018.03.20 TM40이면 제외  -->
             ${dataAthrQury}
         </if>
         <if test="ns_yn != null and ns_yn.equalsIgnoreCase('Y')">
             AND EMP.DEPT_CD = '1602'
         </if>
         <if test="srch_vl != null and srch_vl != ''">
             <if test="srch_typ == 'all'">
                 AND (A.ACCNT_NO = #{srch_vl}
                      OR  A.MEM_NO = #{srch_vl}
                      OR  B.MEM_NM LIKE '%' || #{srch_vl} || '%'
                      OR  B.IDN_NO LIKE '%' || #{srch_vl} || '%'
                      OR  D.BANK_ACCNT_NO = #{srch_vl}
                      )
             </if>
             <if test="srch_typ == 'mem_nm'">
                 AND B.MEM_NM LIKE #{srch_vl} || '%'
             </if>
             <if test="srch_typ == 'accnt_no'">
                 AND A.ACCNT_NO = #{srch_vl}
             </if>
             <if test="srch_typ == 'mem_no'">
                 AND A.MEM_NO = #{srch_vl}
             </if>
             <if test="srch_typ == 'birth'">
                 AND B.IDN_NO LIKE '%' || #{srch_vl} || '%'
             </if>
             <if test="srch_typ == 'bank_accnt_no'">
                 AND  D.BANK_ACCNT_NO LIKE '%' || #{srch_vl} || '%'
             </if>
             <if test="srch_typ == 'pre_accnt_no'">
                 AND A.OLD_MID LIKE '%' || #{srch_vl} || '%'
             </if>
         </if>
         <if test="srch_typ == 'ichae_dt'">
             <if test="ichae_stt_dt != null and ichae_stt_dt != '' and ichae_end_dt != null and ichae_end_dt != ''">
                 AND  TO_NUMBER(A.ICHAE_DT) <![CDATA[>=]]> #{ichae_stt_dt}
                 AND  TO_NUMBER(A.ICHAE_DT) <![CDATA[<=]]> #{ichae_end_dt}
             </if>
         </if>

         <if test="option == 'cms_non'">
             AND a.accnt_no NOT IN (SELECT accnt_no
                                      FROM CMS_MEM
                                     WHERE del_fg = 'N')
             AND a.accnt_no NOT IN (SELECT accnt_no
                                      FROM NEW_CANCL_APP
                                     WHERE stat IN ('01', '02'))
         </if>
         <if test="option == 'cms'">
             AND a.accnt_no IN (SELECT accnt_no
                                  FROM CMS_MEM
                                 WHERE del_fg = 'N')
             AND a.accnt_no NOT IN (SELECT accnt_no
                                      FROM wdrw_req
                                     WHERE stat IN ('01', '02'))
             AND a.accnt_no NOT IN (SELECT accnt_no
                                      FROM card_wdrw_req
                                     WHERE stat IN ('01', '02'))
         </if>

         <if test="option == 'card_non'">
             AND a.accnt_no NOT IN (SELECT accnt_no
                                      FROM CARD_MEM
                                     WHERE del_fg = 'N')
         </if>
         <if test="option == 'card'">
             AND a.accnt_no IN (SELECT accnt_no
                                  FROM CARD_MEM
                                 WHERE del_fg = 'N')
             AND a.accnt_no NOT IN (SELECT accnt_no
                                      FROM card_wdrw_req
                                     WHERE stat IN ('01', '02'))
             AND a.accnt_no NOT IN (SELECT accnt_no
                                      FROM card_wdrw_req
                                     WHERE stat IN ('01', '02'))
         </if>
         <if test="option == 'call'">
             <!-- 수정 : 고객만족센터 파일 산출에 카드산출 포함 by lbk_2013_06_19  -->
             AND
             (
                 (
                 a.PAY_MTHD = '04'
                 AND a.accnt_no IN (SELECT accnt_no
                                      FROM CMS_MEM
                                     WHERE del_fg = 'N')
                 AND a.accnt_no NOT IN (SELECT accnt_no
                                          FROM wdrw_req
                                         WHERE stat IN ('01', '02'))
                 and a.accnt_no NOT IN (SELECT accnt_no
                                          FROM wdrw_req_call_center
                                         WHERE WDRW_REQ_YN = 'N'
                                           AND DEL_FG IS NULL)
                 )
                 OR
                 (
                 a.PAY_MTHD = '06'
                 AND a.accnt_no IN (SELECT accnt_no
                                      FROM CARD_MEM
                                     WHERE del_fg = 'N')
                 AND a.accnt_no NOT IN (SELECT accnt_no
                                          FROM card_wdrw_req
                                         WHERE stat IN ('01', '02'))
                 and a.accnt_no NOT IN (SELECT accnt_no
                                          FROM wdrw_req_call_center
                                         WHERE WDRW_REQ_YN = 'N'
                                           AND DEL_FG IS NULL)
                 )
             )

         </if>
         <if test="option == 'pay_able'">
             <!-- AND FN_ACCNT_STAT(a.accnt_no) in ('Y','E') //청약철회가 아니면 조회되도록 수정 by lbk_2012_07_31 -->
             AND FN_EVENT(a.accnt_no) != '청약철회'
         </if>
         <if test="option == 'cms_card_non'">
             AND a.accnt_no NOT IN (SELECT accnt_no
                                      FROM CMS_MEM
                                     WHERE del_fg = 'N')
             AND a.accnt_no NOT IN (SELECT accnt_no
                                      FROM NEW_CANCL_APP
                                     WHERE stat IN ('01', '02'))
             AND a.accnt_no NOT IN (SELECT accnt_no
                                      FROM CARD_MEM
                                     WHERE del_fg = 'N')
         </if>
         <if test="option == 'event'">
             AND a.accnt_no IN (SELECT accnt_no
                                      FROM EVENT
                                     WHERE del_fg = 'N')
         </if>
         <if test="option == 'prod_trans'">
             <!-- 상품변경은 정상 구좌이면서 출금이체 신청전,중이 아니면서 양도양수 공제 신고된건만 조회  -->
             AND FN_ACCNT_STAT(a.accnt_no) = 'Y'
             AND a.accnt_no NOT IN (SELECT accnt_no
                                      FROM CMS_MEM
                                     WHERE del_fg = 'N')
             AND a.accnt_no NOT IN (SELECT accnt_no
                                      FROM NEW_CANCL_APP
                                     WHERE stat IN ('01', '02'))
             AND a.accnt_no NOT IN (SELECT ACCNT_NO FROM TRANSFER_BRKDN WHERE NEW_YN IN ('Y', 'S', 'E'))
         </if>
         <!-- ORDER BY b.mem_nm -->
    </select>

    <select id="DlwPayMap.getDlwCustAccntList" parameterType="map" resultType="resultMap">
        <!-- sql-common.xml selectAccntInfo -->

        SELECT /* DlwPayMap.getDlwCustAccntList */
               B.*
          FROM (SELECT A.*,
                    <choose>
                        <when test="orderBy != null and orderBy != ''">
                            ROW_NUMBER() OVER(ORDER BY ${orderBy} ${orderDirection}) AS PAGE_INDX
                        </when>
                        <otherwise>
                            ROW_NUMBER() OVER(ORDER BY UPD_DM DESC) AS PAGE_INDX
                        </otherwise>
                    </choose>
                 FROM (SELECT A.ACCNT_NO
                            , A.MEM_NO
                            , A.RESORT_NO
                            , B.MEM_NM
                            , B.HOME_TEL
                            , B.CELL AS CELL
                            , B.WRPL_TEL
                            , CASE WHEN LENGTH(NVL(TO_CHAR(B.IDN_NO), '')) = 10
                                   THEN B.IDN_NO
                                   ELSE SUBSTR(B.BRTH_MON_DAY, -6)
                               END IDN_NO
                            , A.PROD_CD
                            , C.PROD_NM
                            , C.PROD_AMT
                            , C.MON_PAY_AMT
                            , C.EXPR_NO
                            , A.EMPLE_NO
                            , EMP.EMPLE_NM
                            , A.APPFM_NO
                            , JOIN_DT
                            , COMPT_DT
                            , A.BEF_EMPLE_CD
                            , A.PAY_PERD
                            , A.PAY_MTHD
                            , A.JOIN_PROD
                            , A.NEW_CHAN_GUNSU
                            , A.CERTF_RCV_CHK
                            , A.PAY_STAT_1NO
                            , D.ICHAE_DT
                            , A.BANK_ACCNT_NO AS BANK_ACCNT_NO
                            , A.OLD_MID
                            , A.REG_DM
                            , A.REG_MAN
                            , A.UPD_DM
                            , A.UPD_MAN
                              , FN_ACCNT_STAT(A.ACCNT_NO) AS ACCNT_STAT
                            , (SELECT NVL(MAX (NO),1)
                                 FROM PAY_MNG
                                WHERE ACCNT_NO = A.ACCNT_NO
                                  AND DEL_FG = 'N') * C.MON_PAY_AMT AS TOTAL_PAY
                            , (SELECT NVL(MAX (NO),1)
                                 FROM PAY_MNG
                                WHERE ACCNT_NO = A.ACCNT_NO
                                  AND DEL_FG = 'N') LAST_NO
                            , (SELECT NVL(MAX (NO),0)
                                 FROM PAY_MNG
                                WHERE ACCNT_NO = A.ACCNT_NO
                                  AND DEL_FG = 'N') REAL_PAY_NO
                            , A.DED_NO
                            , NVL(A.JOIN_CL,'01') AS JOIN_CL
                            , CASE WHEN (SELECT COUNT(ACCNT_NO) FROM TRANSFER_BRKDN WHERE ACCNT_NO = A.ACCNT_NO) > 0
                                   THEN 'Y'
                                   ELSE 'N'
                               END AS TRANS_GUBUN
                            , B.BRTH_MON_DAY
                            , NVL((SELECT CELL
                                        FROM EMPLOYEE
                                       WHERE EMPLE_NO = A.EMPLE_NO), '') AS EMP_CELL
                            , FN_EVENT(A.ACCNT_NO) AS JOIN_STAT
                            , FN_EVENT(A.ACCNT_NO) AS STAT
                            , FN_YEN_CHE(A.ACCNT_NO) AS PAY_STAT
                            , (SELECT NVL(MAX (NO),0)
                                 FROM PAY_MNG
                                WHERE ACCNT_NO = A.ACCNT_NO
                                  AND DEL_FG = 'N') AS PAY_NO
                            , (SELECT NVL(MAX (NO),0)
                                 FROM PAY_MNG_DTL
                                WHERE ACCNT_NO = A.ACCNT_NO
                                  AND DEL_FG = 'N') AS PAY_ALLT_NO
                            , (SELECT NVL(MAX (NO),0)
                                 FROM PAY_MNG_DTL1
                                WHERE ACCNT_NO = A.ACCNT_NO
                                  AND DEL_FG = 'N') AS PAY_ADD_NO
                            , (SELECT NVL(SUM (PAY_AMT),0)
                                 FROM PAY_MNG
                                WHERE ACCNT_NO = A.ACCNT_NO
                                  AND DEL_FG = 'N') AS PAY_AMT
                            , (SELECT NVL(SUM (PAY_AMT),0)
                                 FROM PAY_MNG_DTL
                                WHERE ACCNT_NO = A.ACCNT_NO
                                  AND DEL_FG = 'N') AS PAY_ALLT_AMT
                            , (SELECT NVL(SUM (PAY_AMT),0)
                                 FROM PAY_MNG_DTL1
                                WHERE ACCNT_NO = A.ACCNT_NO
                                  AND DEL_FG = 'N') AS PAY_ADD_AMT
                            , NVL((SELECT MODEL_CL_NM
                                        FROM PRODUCT_MODEL_CL_CD
                                       WHERE MODEL_CL_CD = A.PROD_MODEL_KIND), '') AS MODEL_CL_NM
                             , CASE WHEN A.KSTBIT = '01' THEN '대기'
                                    WHEN A.KSTBIT = '02' THEN '가입'
                                    WHEN A.KSTBIT = '03' THEN '해약'
                                    WHEN A.KSTBIT = '04' THEN '행사'
                                    WHEN A.KSTBIT = '09' THEN '만기' ELSE A.KSTBIT END KSTBIT
                              , FN_CMS_CARD_MEM(A.ACCNT_NO) YN
                         FROM MEM_PROD_ACCNT A
                         JOIN MEMBER B
                              ON A.MEM_NO = B.MEM_NO
                             AND B.DEL_FG = 'N'
                         JOIN PRODUCT C
                              ON A.PROD_CD = C.PROD_CD
                         JOIN EMPLOYEE EMP
                              ON EMP.EMPLE_NO = A.EMPLE_NO
              LEFT OUTER JOIN CMS_MEM D
                              ON A.ACCNT_NO = D.ACCNT_NO
                              AND D.DEL_FG = 'N'
              LEFT OUTER JOIN CARD_MEM E
                              ON A.ACCNT_NO = E.ACCNT_NO
                              AND E.DEL_FG = 'N'
                         <!-- 2018.02.08 임의 등록시 고객 선택 할 때 해피콜 상태가 01,011 인것만 조회 -->
                         <!-- 2018.02.13 임의 등록시 고객 선택 할 때만 해피콜 조인 / hp_join_gb 구분자 추가 -->
                        <if test="hp_join_gb != null and hp_join_gb != ''">
                         INNER JOIN HP_CALL HP
                              ON A.ACCNT_NO = HP.ACCNT_NO AND HP.STAT IN ('01', '011')
                        </if>

                         <!-- 2018.03.20 TM40:MG권한 일 경우 -->
                         <if test="user_athrCd != null and user_athrCd == 'TM40'">
                                  INNER JOIN LF_DMUSER.RESN_CREDIT_LIST K
                                  ON K.ACCNT_NO = A.ACCNT_NO
                                  AND K.DEL_FG = 'N'
                                  AND K.TARGET_YM = TO_CHAR(SYSDATE, 'YYYYMM')
                         </if>

                        WHERE A.DEL_FG = 'N'
                        <if test="dataAthrQury != null and dataAthrQury != '' and user_athrCd != 'TM40'">	 <!-- 2018.03.20 TM40이면 제외  -->

                            ${dataAthrQury}
                        </if>
                        <if test="ns_yn != null and ns_yn.equalsIgnoreCase('Y')">
                            AND EMP.DEPT_CD = '1602'
                        </if>
                        <if test="srch_vl != null and srch_vl != ''">
                            <if test="srch_typ == 'all'">
                                AND (A.ACCNT_NO = #{srch_vl}
                                     OR  A.MEM_NO = #{srch_vl}
                                     OR  B.MEM_NM LIKE '%' || #{srch_vl} || '%'
                                     OR  B.IDN_NO LIKE '%' || #{srch_vl} || '%'
                                     OR  D.BANK_ACCNT_NO = #{srch_vl}
                                     )
                            </if>
                            <if test="srch_typ == 'mem_nm'">
                                AND B.MEM_NM LIKE #{srch_vl} || '%'
                            </if>
                            <if test="srch_typ == 'accnt_no'">
                                AND A.ACCNT_NO = #{srch_vl}
                            </if>
                            <if test="srch_typ == 'mem_no'">
                                AND A.MEM_NO = #{srch_vl}
                            </if>
                            <if test="srch_typ == 'birth'">
                                AND B.IDN_NO LIKE '%' || #{srch_vl} || '%'
                            </if>
                            <if test="srch_typ == 'bank_accnt_no'">
                                AND D.BANK_ACCNT_NO LIKE '%' || #{srch_vl} || '%'
                            </if>
                            <if test="srch_typ == 'pre_accnt_no'">
                                AND A.OLD_MID LIKE '%' || #{srch_vl} || '%'
                            </if>
                        </if>
                        <if test="srch_typ == 'ichae_dt'">
                            <if test="ichae_stt_dt != null and ichae_stt_dt != '' and ichae_end_dt != null and ichae_end_dt != ''">
                                AND TO_NUMBER(A.ICHAE_DT) <![CDATA[>=]]> #{ichae_stt_dt}
                                AND TO_NUMBER(A.ICHAE_DT) <![CDATA[<=]]> #{ichae_end_dt}
                            </if>
                        </if>


                        <if test="option == 'cms_non'">
                            AND a.accnt_no NOT IN (SELECT accnt_no
                                                     FROM CMS_MEM
                                                    WHERE del_fg = 'N')
                            AND a.accnt_no NOT IN (SELECT accnt_no
                                                     FROM NEW_CANCL_APP
                                                    WHERE stat IN ('01', '02'))
                        </if>
                        <if test="option == 'cms'">
                            AND a.accnt_no IN (SELECT accnt_no
                                                 FROM CMS_MEM
                                                WHERE del_fg = 'N')
                            AND a.accnt_no NOT IN (SELECT accnt_no
                                                     FROM wdrw_req
                                                    WHERE stat IN ('01', '02'))
                            AND a.accnt_no NOT IN (SELECT accnt_no
                                                     FROM card_wdrw_req
                                                    WHERE stat IN ('01', '02'))
                        </if>

                        <if test="option == 'card_non'">
                            AND a.accnt_no NOT IN (SELECT accnt_no
                                                     FROM CARD_MEM
                                                    WHERE del_fg = 'N')
                        </if>
                        <if test="option == 'card'">
                            AND a.accnt_no IN (SELECT accnt_no
                                                 FROM CARD_MEM
                                                WHERE del_fg = 'N')
                            AND a.accnt_no NOT IN (SELECT accnt_no
                                                     FROM card_wdrw_req
                                                    WHERE stat IN ('01', '02'))
                            AND a.accnt_no NOT IN (SELECT accnt_no
                                                     FROM card_wdrw_req
                                                    WHERE stat IN ('01', '02'))
                        </if>
                        <if test="option == 'call'">
                            <!-- 수정 : 고객만족센터 파일 산출에 카드산출 포함 by lbk_2013_06_19  -->
                            AND
                            (
                                (
                                a.PAY_MTHD = '04'
                                AND a.accnt_no IN (SELECT accnt_no
                                                     FROM CMS_MEM
                                                    WHERE del_fg = 'N')
                                AND a.accnt_no NOT IN (SELECT accnt_no
                                                         FROM wdrw_req
                                                        WHERE stat IN ('01', '02'))
                                and a.accnt_no NOT IN (SELECT accnt_no
                                                         FROM wdrw_req_call_center
                                                        WHERE WDRW_REQ_YN = 'N'
                                                          AND DEL_FG IS NULL)
                                )
                                OR
                                (
                                a.PAY_MTHD = '06'
                                AND a.accnt_no IN (SELECT accnt_no
                                                     FROM CARD_MEM
                                                    WHERE del_fg = 'N')
                                AND a.accnt_no NOT IN (SELECT accnt_no
                                                         FROM card_wdrw_req
                                                        WHERE stat IN ('01', '02'))
                                and a.accnt_no NOT IN (SELECT accnt_no
                                                         FROM wdrw_req_call_center
                                                        WHERE WDRW_REQ_YN = 'N'
                                                          AND DEL_FG IS NULL)
                                )
                            )

                        </if>
                        <if test="option == 'pay_able'">
                            <!-- AND FN_ACCNT_STAT(a.accnt_no) in ('Y','E') //청약철회가 아니면 조회되도록 수정 by lbk_2012_07_31 -->
                            AND FN_EVENT(a.accnt_no) != '청약철회'
                        </if>
                        <if test="option == 'cms_card_non'">
                            AND a.accnt_no NOT IN (SELECT accnt_no
                                                     FROM CMS_MEM
                                                    WHERE del_fg = 'N')
                            AND a.accnt_no NOT IN (SELECT accnt_no
                                                     FROM NEW_CANCL_APP
                                                    WHERE stat IN ('01', '02'))
                            AND a.accnt_no NOT IN (SELECT accnt_no
                                                     FROM CARD_MEM
                                                    WHERE del_fg = 'N')
                        </if>
                        <if test="option == 'event'">
                            AND a.accnt_no IN (SELECT accnt_no
                                                     FROM EVENT
                                                    WHERE del_fg = 'N')
                        </if>
                        <if test="option == 'prod_trans'">
                            <!-- 상품변경은 정상 구좌이면서 출금이체 신청전,중이 아니면서 양도양수 공제 신고된건만 조회  -->
                            AND FN_ACCNT_STAT(a.accnt_no) = 'Y'
                            AND a.accnt_no NOT IN (SELECT accnt_no
                                                     FROM CMS_MEM
                                                    WHERE del_fg = 'N')
                            AND a.accnt_no NOT IN (SELECT accnt_no
                                                     FROM NEW_CANCL_APP
                                                    WHERE stat IN ('01', '02'))
                            AND a.accnt_no NOT IN (SELECT ACCNT_NO FROM TRANSFER_BRKDN WHERE NEW_YN IN ('Y', 'S', 'E'))
                        </if>
                        <!-- ORDER BY b.mem_nm -->
                       ) A
                ) B
        <if test="startLine != null and startLine != '' and endLine != null and endLine != ''">
            <![CDATA[
            WHERE PAGE_INDX >= #{startLine}
              AND PAGE_INDX < #{endLine}
            ]]>
        </if>
    </select>

    <!-- ================================================================
     * 날짜 : 팝업
     * 이름 : /dlw/cms/gasu-dtl/list
     * 추가내용 :
     * 대상 테이블 :
     * ================================================================
     * -->
    <!-- 가수금 환불 내역조회 -->
    <select id="DlwPayMap.getMemberRefundDetail" parameterType="map" resultType="resultMap">
    <!-- sql-life.xml  : selectGasuDetail -->
        SELECT /* DlwPayMap.getMemberRefundDetail */
               GR.SEQ AS GASU_SEQ
             , RF.SEQ
             , RF.REFUND_DAY AS REFUND_DAY
             , REFUND_AMT
             , BANK_ACCNT_NO
             , RF.BANK_CD
             , FN_COM_NM('63',BANK_CD) AS BANK_NM
             , DEPR
             , RF.NOTE
             , TO_CHAR(RF.REG_DM, 'YYYYMMDD') AS REG_DM
             , FN_EMPLE_NM(RF.REG_MAN) AS REG_MAN
             , 'N' AS CHK_YN
          FROM REFUND RF
          JOIN GASU_AMT_REG GR ON GR.SEQ = RF.MST_SEQ AND GR.DEL_FG='N'
         WHERE RF.MST_SEQ = #{seq}
           AND RF.DEL_FG='N'
    </select>


    <!-- ================================================================
     * 날짜 : 팝업
     * 이름 : /dlw/cms/gasu-dtl/merge
     * 추가내용 :
     * 대상 테이블 :
     * ================================================================
     * -->
    <!-- 가수 환불 상세 내역 수정 -->
    <update id="DlwPayMap.updateMemberRefundDtl" parameterType="map">
        <!-- DM sql-id : updateGasuDtl -->
        UPDATE /* DlwPayMap.updateMemberRefundDtl */
               TB_MEMBER_REQ_REFUND
           SET ICHAE_CD   = #{ichae_cd}
              ,ICHAE_NO   = #{ichae_no}
              ,DEPR       = #{depr}
              ,REFUND_DT  = #{refund_dt}   /* 환불일자 */
              ,REFUND_ETC = #{refund_etc}  /* 비고     */
         WHERE ACCNT_NO = #{accnt_no}
           AND PAY_MTHD = #{pay_mthd}
           AND DEL_FG = 'N'
           AND REQ_DAY = #{req_day}
           AND RESULT_KEY = #{result_key}
    </update>

    <!-- 가수 환불 상세 내역 입금 -->
    <insert id="DlwPayMap.insertMemberRefundDtl" parameterType="map">
        <!-- DM sql-id : insertGasuDtl -->
        INSERT /* DlwPayMap.insertMemberRefundDtl */
          INTO REFUND
             ( MST_SEQ
             , SEQ
             , REFUND_DAY
             , REFUND_AMT
             , BANK_CD
             , BANK_ACCNT_NO
             , DEPR
             , REG_DM
             , REG_MAN
             , UPD_DM
             , UPD_MAN
             , DEL_FG
             , NOTE
             )
        SELECT #{gasu_seq}
             , A.SEQ
             , REPLACE(#{refund_day},'/','')
             , CAST(#{refund_amt} AS NUMERIC)
             , #{bank_cd}
             , #{bank_accnt_no}
             , #{depr}
             , SYSDATE
             , #{reg_man}
             , SYSDATE
             , #{upd_man}
             , 'N'
             , #{note}
          FROM (SELECT NVL(MAX(SEQ) + 1, '1') AS SEQ
                  FROM REFUND WHERE MST_SEQ = #{gasu_seq}
               ) A
    </insert>

    <!-- ================================================================
     * 날짜 : 팝업
     * 이름 : /dlw/cms/gasu-dtl/delete
     * 추가내용 :
     * 대상 테이블 :
     * ================================================================
     * -->
    <!-- 가수 환불 상세 내역 삭제(논리) -->
    <update id="DlwPayMap.deleteMemberRefundDtl" parameterType="map">
        <!-- DM sql-id : deleteGasuDtl -->
        UPDATE /* DlwPayMap.deleteMemberRefundDtl */
               REFUND
           SET DEL_Fg = 'Y'
             , UPD_DM  = SYSDATE
             , UPD_MAN = #{upd_man}
        WHERE MST_SEQ = #{gasu_seq}
        <if test="seq != null and seq != ''">
           AND SEQ = #{seq}
        </if>
    </update>

    <!-- ================================================================
     * 날짜 : 팝업
     * 이름 : /dlw/cms/gasu-mng/merge
     * 추가내용 :
     * 대상 테이블 :
     * ================================================================
     * -->
    <!-- 가수 입금 -->
    <insert id="DlwPayMap.insertMemberRefundMng" parameterType="map">
        <!-- DM sql-id : insertGasuMng -->
            INSERT /* DlwPayMap.insertMemberRefundMng */
              INTO GASU_AMT_REG
                 ( SEQ
                 , ACCNT_NO
                 , GASU_AMT
                 , GASU_ALLT_AMT
                 , GASU_ADD_AMT
                 , REG_DM
                 , REG_MAN
                 , UPD_DM
                 , UPD_MAN
                 , DEL_FG
                 , PAY_DAY
                 , NOTE
                 , PAY_NO
                 , PAY_MTHD
                 )
            SELECT A.SEQ
                 , #{accnt_no}
                 , CAST(#{gasu_amt} AS INT)
                 , CAST(#{gasu_allt_amt} AS INT)
                 , CAST(#{gasu_add_amt} AS INT)
                 , SYSDATE
                 , #{reg_man}
                 , SYSDATE
                 , #{upd_man}
                 , 'N'
                 , #{pay_day}
                 , #{note}
                 , CAST(#{pay_no} AS INT)
                 , #{payt_mthd}
              FROM (SELECT NVL(MAX(SEQ) + 1, '1') AS SEQ
                    FROM  GASU_AMT_REG
                   ) A
    </insert>

    <!-- 가수 수정 -->
    <update id="DlwPayMap.updateMemberRefundMng" parameterType="map">
        <!-- DM sql-id : updateGasuMng -->
        UPDATE /* DlwPayMap.updateMemberRefundMng */
               GASU_AMT_REG
           SET GASU_AMT      = CAST(#{gasu_amt} AS INT)
             , GASU_ALLT_AMT = CAST(#{gasu_allt_amt} AS INT)
             , GASU_ADD_AMT  = CAST(#{gasu_add_amt} AS INT)
             , UPD_DM        = SYSDATE
             , UPD_MAN       = #{upd_man}
             , PAY_DAY       = #{pay_day}
             , NOTE          = #{note}
             , PAY_NO        = CAST(#{pay_no} AS INT)
        WHERE seq = #{gasu_seq}
    </update>

    <!-- ================================================================
     * 날짜 : 팝업
     * 이름 : /dlw/cms/gasu-mng/delete
     * 추가내용 :
     * 대상 테이블 :
     * ================================================================
     * -->
    <!-- 가수 삭제 -->
    <update id="DlwPayMap.deleteMemberRefundMng" parameterType="map">
        <!-- DM sql-id : deleteGasuMng -->
        UPDATE /* DlwPayMap.deleteMemberRefundMng */
               TB_MEMBER_REQ_REFUND
           SET DEL_FG  = 'Y'
         WHERE ACCNT_NO = #{accnt_no}
           AND PAY_MTHD = #{pay_mthd}
           AND DEL_FG = 'N'
           AND REQ_DAY = #{req_day}
           AND RESULT_KEY = #{result_key}
    </update>

    <!-- ================================================================
     * 날짜 : 팝업
     * 이름 : /dlw-syst/cd/cd-list
     * 추가내용 :
     * 대상 테이블 :
     * ================================================================
     * -->
    <select id="DlwPayMap.getDlwCodeListCount" parameterType="map" resultType="int">
        SELECT /* DlwPayMap.getDlwCodeListCount */
               COUNT(*)
          FROM (SELECT A.*
                  FROM (SELECT GRP_CD AS CD_SET_CD , '' AS CNTR_CD, COM_CD AS CD, CD_NM, ORDR_TURN AS CD_SQNC
                             , USE_YN , CON AS CD_EXPI, '' AS ADTL_CD, '' AS ADTL_CD_NM
                          FROM COM_CD
                         WHERE 1=1
                        <if test="AllFg != 'ALL'">
                            AND USE_YN = 'Y'
                        </if>
                        <if test="grp_cd != null and grp_cd != ''">
                            AND GRP_CD = #{grp_cd}
                        </if>
                        <if test="cd_nm != null and cd_nm != ''">
                            AND CD_NM LIKE '%' || #{cd_nm} || '%'
                        </if>
                        <if test="cd != null and cd != ''">
                            AND COM_CD = #{cd}
                        </if>
                        ) A
                ) B
    </select>

    <select id="DlwPayMap.getDlwCodeList" parameterType="map" resultType="resultMap">
        SELECT /* DlwPayMap.getDlwCodeList */
               B.*
          FROM (SELECT A.*,
                    <choose>
                        <when test="orderBy != null and orderBy != ''">
                            ROW_NUMBER() OVER(ORDER BY ${orderBy} ${orderDirection}) PAGE_INDX
                        </when>
                        <otherwise>
                            ROW_NUMBER() OVER(ORDER BY CD) PAGE_INDX
                        </otherwise>
                    </choose>
                 FROM (SELECT GRP_CD AS CD_SET_CD , '' AS CNTR_CD, COM_CD AS CD, CD_NM, ORDR_TURN AS CD_SQNC
                            , USE_YN , CON AS CD_EXPI, '' AS ADTL_CD, '' AS ADTL_CD_NM
                         FROM COM_CD
                        WHERE USE_YN = 'Y'
                        <if test="grp_cd != null and grp_cd != ''">
                            AND GRP_CD = #{grp_cd}
                        </if>
                        <if test="cd_nm != null and cd_nm != ''">
                            AND CD_NM LIKE '%' || #{cd_nm} || '%'
                        </if>
                        <if test="cd != null and cd != ''">
                            AND COM_CD = #{cd}
                        </if>
                       ) A
                ) B
        <if test="startLine != null and startLine != '' and endLine != null and endLine != ''">
            <![CDATA[
            WHERE PAGE_INDX >= #{startLine}
              AND PAGE_INDX < #{endLine}
            ]]>
        </if>
    </select>

    <!-- ================================================================
       /**
     *  가상계좌 강제 입금 처리
     * 임동진
     */
     * ================================================================
     * -->
    <!-- 가수 삭제 -->
    <update id="DlwPayMap.updateVirtualDirectInsert" parameterType="map">
        BEGIN
            <!--     DM sql-id : deleteGasuMng      -->
                UPDATE NICE_VRTL_ACCNT_WDRW_REQ_MST
                SET STAT =   '04' ,
                    AUTH_DATE = #{auth_dt}  ,
                    RESULT_MSG = '가상계좌 강제 입금등록'  ,
                    UPD_DM = SYSDATE,
                    UPD_MAN = 'VD_AUTO'
                WHERE TID = #{tid}  AND
                STAT != '04' ;

             <!-- 입금 insert -->
                INSERT ALL
                    WHEN TRUE_AMT <![CDATA[>]]> 0 THEN
                    INTO
                        PAY_MNG(SEQ,ACCNT_NO, NO, PAY_AMT,PAY_DAY,PAY_MTHD,STAT,REG_DM,REG_MAN,DEL_FG,NEW_YN)
                    VALUES (
                                NVL(TRUE_CNT,0) + 1,
                                ACCNT_NO,
                                REQ_PAY_NO,
                                TRUE_AMT,
                                REQ_DAY,
                                PAY_MTHD,
                                STAT, 		--STAT
                                SYSDATE,
                                REG_MAN,
                                'N',  		--DEL_FG
                                'Y'  		--NEW_N
                            )
                WHEN REL_AMT <![CDATA[>]]> 0 THEN
                    INTO
                        PAY_MNG_DTL(SEQ,ACCNT_NO, NO, PAY_AMT,PAY_DAY,PAY_MTHD,STAT,REG_DM,REG_MAN,DEL_FG)
                    VALUES (
                                NVL(REL_CNT,0) + 1,
                                ACCNT_NO,
                                REQ_PAY_NO,
                                REL_AMT,
                                REQ_DAY,
                                PAY_MTHD,
                                STAT, 		--STAT
                                SYSDATE,
                                REG_MAN,
                                'N'  		--DEL_FG
                            )
                WHEN ADD_AMT <![CDATA[>]]> 0 THEN
                    INTO
                        PAY_MNG_DTL1(SEQ,ACCNT_NO, NO, PAY_AMT,PAY_DAY,PAY_MTHD,STAT,REG_DM,REG_MAN,DEL_FG)
                    VALUES (
                                NVL(ADD_CNT,0) + 1,
                                ACCNT_NO,
                                REQ_PAY_NO,
                                ADD_AMT,
                                REQ_DAY,
                                PAY_MTHD,
                                STAT, 		--STAT
                                SYSDATE,
                                REG_MAN,
                                'N'  		--DEL_FG
                            )
                 SELECT
                    ACCNT_NO,
                    PROD_CD,
                    REQ_PAY_NO,
                    PAY_MTHD,
                    REQ_DAY,
                    DEL_FG,
                    REG_MAN,
                    MONTH_CNT,
                    STAT,
                    (TRUE_CNT + ROWNUM) AS TRUE_CNT,
                    (REL_CNT + ROWNUM) AS REL_CNT,
                    (ADD_CNT + ROWNUM) AS ADD_CNT,
                    TRUE_AMT,
                    REL_AMT,
                    ADD_AMT

                FROM
                (
                    SELECT
                        DTL.ACCNT_NO,
                        DTL.PROD_CD,
                        REQ_PAY_NO,
                        '07' AS PAY_MTHD,
                        --TO_CHAR(SYSDATE,'YYYYMMDD') AS REQ_DAY,
                        TO_CHAR('20'||SUBSTR(#{auth_dt},0,6)) AS REQ_DAY,
                        'N' AS DEL_FG,
                        'VD_AUTO' AS REG_MAN,
                        DTL.MONTH_CNT,
                                   CASE WHEN (MONTH_CNT - REQ_PAY_NO) = 0 THEN '0'
                                             WHEN (MONTH_CNT - REQ_PAY_NO) <![CDATA[<]]> 0 THEN '1'
                                        ELSE '2' END AS STAT ,
                        (SELECT COUNT(NVL(SEQ,0)) FROM LF_DMUSER.PAY_MNG WHERE ACCNT_NO = DTL.ACCNT_NO) AS TRUE_CNT,
                        (SELECT COUNT(NVL(SEQ,0)) FROM LF_DMUSER.PAY_MNG_DTL WHERE ACCNT_NO = DTL.ACCNT_NO) AS REL_CNT,
                        (SELECT COUNT(NVL(SEQ,0)) FROM LF_DMUSER.PAY_MNG_DTL1 WHERE ACCNT_NO = DTL.ACCNT_NO) AS ADD_CNT,
                        (CASE WHEN SUBSTR(DTL.PAY_BIT,1,1) != 'X' THEN PND.AMT ELSE 0 END) AS TRUE_AMT,
                        (CASE WHEN SUBSTR(DTL.PAY_BIT,2,1) != 'X' THEN PND.REL_AMT ELSE 0 END) AS REL_AMT,
                        (CASE WHEN SUBSTR(DTL.PAY_BIT,3,1) != 'X' THEN PND.ADD_AMT ELSE 0 END) AS ADD_AMT
                    FROM LF_DMUSER.NICE_VRTL_ACCNT_WDRW_REQ_MST MST INNER JOIN
                    LF_DMUSER.TB_MEMBER_WDRW_REQ DTL ON TO_CHAR(MST.SEQ) = DTL.RESULT_KEY AND PAY_MTHD = '07' INNER JOIN
                    PRODUCT_NO_DATA PND ON DTL.PROD_CD = PND.PROD_CD AND PND.NO = DTL.REQ_PAY_NO
                    WHERE TID = #{tid}
                ) ;

                <!-- 청구 업데이트 -->
                UPDATE TB_MEMBER_WDRW_REQ
                SET DEL_FG = 'C',
                    UPD_DM = SYSDATE,
                    UPD_MAN = 'VD_AUTO'
                WHERE 1=1
                    AND PAY_MTHD = '07'
                    AND DEL_FG = 'R'
                    AND RESULT_KEY IN  TO_CHAR((SELECT SEQ FROM NICE_VRTL_ACCNT_WDRW_REQ_MST WHERE TID = #{tid}));
        END;
    </update>

    <insert id="DlwPayMap.insertMemberReqRefund"  parameterType="map">
        INSERT INTO TB_MEMBER_REQ_REFUND (ACCNT_NO, PAY_MTHD, REQ_DAY, RESULT_KEY, REFUND_LOC, REFUND_DT, REFUND_ETC, DEL_FG, REG_DM, REG_MAN, REQ_PAY_NO, AUTH_YN)
        SELECT ACCNT_NO
              ,PAY_MTHD
              ,REQ_DAY
              ,RESULT_KEY
              <if test="auto_name != null and auto_name != '' and auto_name.equalsIgnoreCase('resn')">
              ,'02'
              </if>
              <if test="auto_name != null and auto_name != '' and auto_name.equalsIgnoreCase('resn_02')">
              ,'02'
              </if>
              <if test="auto_name != null and auto_name != '' and auto_name.equalsIgnoreCase('evnt')">
              ,'04'
              </if>
              ,SYSDATE
              <if test="auto_name != null and auto_name != '' and auto_name.equalsIgnoreCase('resn')">
              ,'해약 완료 처리 가수금'
              </if>
              <if test="auto_name != null and auto_name != '' and auto_name.equalsIgnoreCase('resn_02')">
              ,'청약철회로 인한 가수금 등록'
              </if>
              <if test="auto_name != null and auto_name != '' and auto_name.equalsIgnoreCase('evnt')">
              ,'행사 완료 처리 가수금'
              </if>
              ,'N'
              ,SYSDATE
              <if test="auto_name != null and auto_name != '' and auto_name.equalsIgnoreCase('resn')">
              ,'R_AUTO'
              </if>
              <if test="auto_name != null and auto_name != '' and auto_name.equalsIgnoreCase('resn_02')">
              ,'R02_AUTO'
              </if>
              <if test="auto_name != null and auto_name != '' and auto_name.equalsIgnoreCase('evnt')">
              ,'E_AUTO'
              </if>
              ,REQ_PAY_NO
              ,AUTH_YN
           FROM LF_DMUSER.TB_MEMBER_WDRW_REQ MWR
          WHERE 1=1
            AND ACCNT_NO = #{accnt_no}
            AND DEL_FG = 'R'
            AND NOT EXISTS ( SELECT ACCNT_NO
                               FROM TB_MEMBER_REQ_REFUND RF
                              WHERE MWR.ACCNT_NO = RF.ACCNT_NO
                                AND MWR.REQ_DAY = RF.REQ_DAY
                                AND DEL_FG = 'N'
                           )
    </insert>

    <!-- ================================================================
     * 날짜 : 20181127
     * 이름 : 정승철
     * 추가내용 : 회원의 환불회차정보를 검색
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_REQ_REFUND
     * ================================================================
     * -->
    <select id="DlwPayMap.getRefundReqNoOfAccnt" parameterType="map" resultType="resultMap">
        /* DlwPayMap.getRefundReqNoOfAccnt */
            SELECT       
               MRR.ACCNT_NO      /* 회원번호          */
             , MIN(MWR.REQ_PAY_NO) AS MIN_REQ_PAY_NO   /* 산출청구회차(MIN) */
             , MAX(MWR.REQ_PAY_NO) -    
               (SELECT COUNT(*) FROM TB_MEMBER_REQ_NAUTH_CNCL WHERE ACCNT_NO = MRR.ACCNT_NO AND DEL_FG  IN ('P', 'N', 'R')) AS MAX_REQ_PAY_NO  
          FROM TB_MEMBER_REQ_REFUND MRR              /* 고객환불정보     */
          LEFT OUTER JOIN TB_MEMBER_WDRW_REQ MWR     /* 고객청구요청정보 */
                       ON MRR.ACCNT_NO = MWR.ACCNT_NO
                      AND MRR.REQ_DAY = MWR.REQ_DAY
                      AND MRR.RESULT_KEY = MWR.RESULT_KEY
                      AND MWR.DEL_FG = 'C'
                      AND MWR.REQ_PAY_NO != '999'    /* 2018.12.05 자유결제는 제외 */
          LEFT OUTER JOIN TB_MEMBER_WDRW_RESULT MWS  /* 고객청구결과정보 */
                       ON MWR.ACCNT_NO = MWS.ACCNT_NO
                      AND MWR.REQ_DAY = MWS.REQ_DAY
                      AND MWR.RESULT_KEY = MWS.RESULT_KEY          
         WHERE MRR.ACCNT_NO = #{accnt_no}
           AND MRR.DEL_FG = 'N'
         GROUP BY MRR.ACCNT_NO          
    </select>

       <!-- ================================================================
     * 날짜 : 20181204
     * 이름 : 송준빈
     * 추가내용 : 일일청구기준데이터 조회 조회건수
     * 대상 테이블 : LF_DMUSER.TB_MBID_CSV_FILE_LIST
     * ================================================================
     * -->
    <select id="DlwPayMap.getMbidCsvFileListCount" parameterType="map" resultType="int">
         SELECT /* DlwPayMap.getMbidCsvFileListCount */
                COUNT(*) AS ICNT
           FROM ( SELECT ROW_NUMBER() OVER(ORDER BY ${orderBy} ${orderDirection}) PAGE_INDX /* PAGE INDX */
                        ,EXT_DT
                        ,FILE_TYPE
                        ,FILE_PATH
                        ,FILE_NAME
                        ,DNLD_DM
                        ,DNLD_MAN
                        ,REG_DM
                        ,REG_MAN
                        ,DEL_FG
                        ,'' AS DOWN_BUTTON
                    FROM LF_DMUSER.TB_MBID_CSV_FILE_LIST
                   WHERE 1=1
                   <if test="ext_dt != null and ext_dt != ''">
                     AND EXT_DT = #{ext_dt}
                   </if>
                   <if test="file_type != null and file_type != ''">
                     AND FILE_TYPE = #{file_type}
                   </if>
                ) MAIN_TBL
          WHERE 1=1
         <if test="startLine != null and startLine != '' and endLine != null and endLine != ''">
             <![CDATA[
                 AND PAGE_INDX >= #{startLine}
                 AND PAGE_INDX < #{endLine}
             ]]>
         </if>
    </select>

       <!-- ================================================================
     * 날짜 : 20181204
     * 이름 : 송준빈
     * 추가내용 : 일일청구기준데이터 조회 조회건수
     * 대상 테이블 : LF_DMUSER.TB_MBID_CSV_FILE_LIST
     * ================================================================
     * -->
    <select id="DlwPayMap.getMbidCsvFileList" parameterType="map" resultType="resultMap">
         SELECT /* DlwPayMap.getMbidCsvFileList */
                MAIN_TBL.*
           FROM ( SELECT ROW_NUMBER() OVER(ORDER BY ${orderBy} ${orderDirection}) PAGE_INDX /* PAGE INDX */
                        ,EXT_DT
                        ,FILE_TYPE
                        ,FILE_PATH
                        ,FILE_NAME
                        ,DNLD_DM
                        ,DNLD_MAN
                        ,REG_DM
                        ,REG_MAN
                        ,DEL_FG
                        ,'' AS DOWN_BUTTON
                    FROM LF_DMUSER.TB_MBID_CSV_FILE_LIST
                   WHERE 1=1
                   <if test="ext_dt != null and ext_dt != ''">
                     AND EXT_DT = #{ext_dt}
                   </if>
                   <if test="file_type != null and file_type != ''">
                     AND FILE_TYPE = #{file_type}
                   </if>
                ) MAIN_TBL
          WHERE 1=1
         <if test="startLine != null and startLine != '' and endLine != null and endLine != ''">
             <![CDATA[
                 AND PAGE_INDX >= #{startLine}
                 AND PAGE_INDX < #{endLine}
             ]]>
         </if>
    </select>

       <!-- ================================================================
     * 날짜 : 20181204
     * 이름 : 송준빈
     * 추가내용 : 일일청구기준데이터 다운로드시행자 업데이트
     * 대상 테이블 : LF_DMUSER.TB_MBID_CSV_FILE_LIST
     * ================================================================
     * -->
    <update id="DlwPayMap.updateDownLoadEmplFileList" parameterType="map">
        UPDATE /* DlwPayMap.updateDownLoadEmplFileList */
               LF_DMUSER.TB_MBID_CSV_FILE_LIST
           SET DNLD_DM  = SYSDATE
              ,DNLD_MAN = #{rgsr_id}
         WHERE 1=1
           AND DEL_FG = 'N'
           AND EXT_DT = #{ext_dt}
           AND FILE_TYPE = #{file_type}
    </update>

       <!-- ================================================================
     * 날짜 : 20181204
     * 이름 : 송준빈
     * 추가내용 : 일일청구기준데이터 다운로드시행자 이력정보 등록
     * 대상 테이블 : LF_DMUSER.TB_MBID_CSV_DNDL_HIST
     * ================================================================
     * -->
    <insert id="DlwPayMap.insertDownLoadEmplHist"  parameterType="map">
        INSERT INTO /* DlwPayMap.insertDownLoadEmplHist */
                    LF_DMUSER.TB_MBID_CSV_DNDL_HIST(EXT_DT, FILE_TYPE, DNLD_SEQ, DNLD_DM, DNLD_MAN, REG_DM, REG_MAN, DEL_FG)
             VALUES (#{ext_dt}, #{file_type}, (SELECT NVL(MAX(DNLD_SEQ) , 0) + 1 FROM LF_DMUSER.TB_MBID_CSV_DNDL_HIST WHERE 1=1 AND EXT_DT = #{ext_dt} AND FILE_TYPE = #{file_type}),
                     SYSDATE, #{rgsr_id}, SYSDATE, #{rgsr_id}, 'N')
    </insert>

    <!-- ================================================================
     * 날짜 : 20181213
     * 이름 : 송준빈
     * 추가내용 : 일일청구기준데이터 처리일자 조회
     * 대상 테이블 : LF_DMUSER.TB_CSV_FILE_BATCH_DAY
     * ================================================================
     * -->
    <select id="DlwPayMap.getCsvFileBatchDay" parameterType="map" resultType="resultMap">
        SELECT /* DlwPayMap.getCsvFileBatchDay */
               BAT_PROC_DT
              ,BAT_CAL_YN
              ,REG_MAN
              ,REG_DM
              ,DEL_FG
          FROM LF_DMUSER.TB_CSV_FILE_BATCH_DAY
         WHERE 1=1
           AND DEL_FG = 'N'
           AND SUBSTR(BAT_PROC_DT,1,6) = #{ext_req_month}
        ORDER BY BAT_PROC_DT, BAT_CAL_YN
    </select>

    <!-- ================================================================
     * 날짜 : 20181213
     * 이름 : 송준빈
     * 추가내용 : 일일청구기준데이터 처리일자 등록
     * 대상 테이블 : LF_DMUSER.TB_CSV_FILE_BATCH_DAY
     * ================================================================
     * -->
    <insert id="DlwPayMap.insertCsvFileBatchDay" parameterType="map">
        INSERT INTO /* DlwPayMap.insertCsvFileBatchDay */
                    LF_DMUSER.TB_CSV_FILE_BATCH_DAY(BAT_PROC_DT, BAT_CAL_YN, REG_MAN, REG_DM, DEL_FG)
             VALUES(#{bat_proc_dt}, #{bat_cal_yn}, #{reg_man}, SYSDATE, 'N')
    </insert>

    <!-- ================================================================
     * 날짜 : 20181213
     * 이름 : 송준빈
     * 추가내용 : 일일청구기준데이터 처리일자 삭제
     * 대상 테이블 : LF_DMUSER.TB_CSV_FILE_BATCH_DAY
     * ================================================================
     * -->
    <delete id="DlwPayMap.deleteCsvFileBatchDay" parameterType="map">
        UPDATE /* DlwPayMap.deleteCsvFileBatchDay */
               LF_DMUSER.TB_CSV_FILE_BATCH_DAY
           SET DEL_FG = 'Y'
         WHERE 1=1
           AND DEL_FG = 'N'
           AND BAT_PROC_DT = #{bat_proc_dt}
    </delete>

    <!-- ================================================================
     * 날짜 : 20181213
     * 이름 : 송준빈
     * 추가내용 : 일일청구기준데이터 유효성 체크
     * 대상 테이블 : LF_DMUSER.TB_CSV_FILE_BATCH_DAY
     * ================================================================
     * -->
    <select id="DlwPayMap.validationInsertCsvFile" parameterType="map" resultType="int">
        SELECT /* DlwPayMap.validationInsertCsvFile */
               COUNT(*) AS ICNT
          FROM LF_DMUSER.TB_CSV_FILE_BATCH_DAY
         WHERE 1=1
           AND DEL_FG = 'N'
           AND BAT_PROC_DT = #{bat_proc_dt}
    </select>
    
    <!-- ================================================================
     * 날짜 : 20180407
     * 이름 : 송준빈
     * 추가내용 : U+ 선납전송관리 산출시 전월 결과반영 여부 확인
     * 대상 테이블 : TB_UPLUS_PREPAY_MST
     * ================================================================
     * -->
    <select id="DlwPayMap.getPreMonthResultReflect" parameterType="map" resultType="int">
        SELECT /* DlwPayMap.getPreMonthResultReflect */
            COUNT(*) AS ICNT
        FROM TB_UPLUS_PREPAY_MST UPM
        WHERE 1=1
        AND UPM.DEL_FG = 'N'
        AND UPM.TYPE = '2'
        AND UPM.RETURNVAL = 'Y'
        AND UPM.CALC_MONTH = TO_CHAR(ADD_MONTHS(TO_DATE(#{stt_reg_dt}, 'YYYYMM'), -1), 'YYYYMM')
    </select>

    <!-- ================================================================
     * 날짜 : 20181220
     * 이름 : 송준빈
     * 추가내용 : U+ 선납전송관리 산출 초기화
     * 대상 테이블 : LF_DMUSER.TB_UPLUS_PREPAY_LIST
     * ================================================================
     * -->
    <update id="DlwPayMap.updateInitUplusPrepaymentData" parameterType="map">
        UPDATE /* DlwPayMap.updateInitUplusPrepaymentData */
               LF_DMUSER.TB_UPLUS_PREPAY_LIST
           SET DEL_FG = 'Y'
              ,UPD_MAN = #{rgsr_id}
              ,UPD_DM = SYSDATE
         WHERE 1=1
           AND DEL_FG = 'N'
           AND PREPAY_YN IS NULL
           AND CALC_MONTH = #{stt_reg_dt}
    </update>

    <!--
     * ================================================================
     * 날짜 : 20181220
     * 이름 : 송준빈
     * 추가내용 : U+ 선납전송관리 산출 TB insert
     * 대상 테이블 : LF_DMUSER.TB_UPLUS_PREPAY_LIST
     * ================================================================
     * -->
    <parameterMap id="selectPrepaymentBasic" type="resultMap">
        <parameter property="stt_reg_dt" mode="IN" jdbcType="VARCHAR" javaType="java.lang.String" />
        <parameter property="rgsr_id" mode="IN" jdbcType="VARCHAR" javaType="java.lang.String" />
    </parameterMap>

    <select id="DlwPayMap.insertUplusPrepaymentData" statementType="CALLABLE" parameterMap="selectPrepaymentBasic">
        { CALL LF_DMUSER.SP_LGUPLUS_MEMBER_CALC(?,?) }
    </select>
     
    <!--
    <insert id="DlwPayMap.insertUplusPrepaymentData" parameterType="map">
        INSERT INTO LF_DMUSER.TB_UPLUS_PREPAY_LIST
            /* DlwPayMap.insertUplusPrepaymentData */
        (
            CALC_MONTH, FILE_NO, ACCNT_NO, PROD_CD, PROD_NM, KSTBIT, KB_NO, CELL, BRTH_MON_DAY, MEM_NM,
             DTL_NO, DTL_PAY_AMT, RSLT_CD, SEND_DTTM, PREPAY_YN, PREPAY_REASON, RSLT_REG_DTTM,
             REG_MAN, REG_DM, UPD_MAN, UPD_DM, DEL_FG
        )
        SELECT #{stt_reg_dt}
              ,'' AS FILE_NO
              ,MPA.ACCNT_NO
              ,MPA.PROD_CD
              ,PD.PROD_NM
              ,MPA.KSTBIT
              ,CASE WHEN TRIM(REPLACE(MPA.KB_NO, ' ', '')) IS NOT NULL AND SUBSTR(TRIM(REPLACE(MPA.KB_NO, '-', '')), 0, 3) = '010' /* CTN은 존재하지만 전화번호로 들어있는 경우 */
                        THEN RPAD(SUBSTR(TRIM(REPLACE(MPA.KB_NO, '-', '')), 0, 3), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MPA.KB_NO, '-', '')), 4, 4), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MPA.KB_NO, '-', '')), 8, 4), 4, 0)
                    WHEN TRIM(REPLACE(MPA.KB_NO, ' ', '')) IS NOT NULL AND SUBSTR(TRIM(REPLACE(MPA.KB_NO, '-', '')), 0, 3) != '010' /* CTN은 존재하고 전화번호로 들어가있지 않은 경우 */
                        THEN TRIM(REPLACE(MPA.KB_NO, '-', ''))
                    WHEN TRIM(REPLACE(MPA.KB_NO, ' ', '')) IS NULL AND SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 0, 3) = '010' /* CTN이 존재하지않고 전화번호는 존재하는 경우 */
                        THEN RPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 0, 3), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 4, 4), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 8, 4), 4, 0)
                    WHEN TRIM(REPLACE(MPA.KB_NO, ' ', '')) IS NULL AND SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 0, 3) = '019' /* CTN이 존재하지않고 전화번호는 존재하는 경우 */
                        THEN RPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 0, 3), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 4, 4), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 8, 4), 4, 0)
                    WHEN TRIM(REPLACE(MPA.KB_NO, ' ', '')) = '' AND SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 0, 3) = '010' /* CTN이 존재하지않고 전화번호는 존재하는 경우 */
                        THEN RPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 0, 3), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 4, 4), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 8, 4), 4, 0)
                    ELSE 
                        TRIM(REPLACE(MPA.KB_NO, '-', ''))
               END AS KB_NO
              ,MPA.INSPL_PHONE
              ,MB.BRTH_MON_DAY
              ,MB.MEM_NM
              ,PMD.NO AS DTL_NO
              ,PMD.PAY_AMT AS DTL_PAY_AMT
              ,'N' AS RSLT_CD
              ,'' AS SEND_DTTM
              ,'' AS PREPAY_YN
              ,'' AS PREPAY_REASON
              ,'' AS RSLT_REG_DTTM
              ,#{rgsr_id}
              ,SYSDATE
              ,''
              ,''
              ,'N'
          FROM MEM_PROD_ACCNT MPA
          INNER JOIN PAY_MNG_DTL PMD
                  ON PMD.ACCNT_NO = MPA.ACCNT_NO
                 AND PMD.DEL_FG = 'N'
                 AND (TRIM(MPA.KB_NO) IS NOT NULL OR NVL(TRIM(MPA.KB_NO), ' ') != ' ')
          INNER JOIN MEMBER MB
                  ON MPA.MEM_NO = MB.MEM_NO
                 AND MB.DEL_FG = 'N'
          INNER JOIN PRODUCT PD
                  ON MPA.PROD_CD = PD.PROD_CD
        LEFT OUTER JOIN RESCISSION RS ON MPA.ACCNT_NO = RS.ACCNT_NO AND RS.DEL_FG = 'N'
                 WHERE 1=1
                   AND MPA.DEL_FG = 'N'
                   AND MPA.PROD_CD IN ('FD','GT')  /* 테스트 데이터 넣은뒤 FD 로 교환 */
                   AND NVL(RS.RESN_CL,'00') != '02'
                   AND MPA.ACCNT_NO NOT IN (SELECT ACCNT_NO FROM TB_UPLUS_PRYPAY_HOLD_LIST WHERE 1=1 AND DEL_FG = 'N')
           AND SUBSTR(PMD.PAY_DAY,0,6) = #{stt_reg_dt}
    </insert>
    -->

    <!-- ================================================================
     * 날짜 : 20181220
     * 이름 : 송준빈
     * 추가내용 : U+ 선납전송관리 산출 현황 조회수
     * 대상 테이블 : LF_DMUSER.TB_UPLUS_PREPAY_LIST
     * ================================================================
     * -->
    <select id="DlwPayMap.getUplusPrepaymentDataListCount" parameterType="map" resultType="int">
         SELECT /* DlwPayMap.getUplusPrepaymentDataListCount */
                COUNT(*) AS ICNT
           FROM ( SELECT ROW_NUMBER() OVER(ORDER BY ${orderBy} ${orderDirection}) AS PAGE_INDX
                        ,UPL.CALC_MONTH
                        ,UPL.FILE_NO
                        ,UPL.ACCNT_NO
                        ,UPL.PROD_CD
                        ,UPL.PROD_NM
                        ,UPL.KSTBIT
                        ,UPL.KB_NO
                        
                        /*
                        ,CASE WHEN SUBSTR(UPL.KB_NO, 0, 4) = '0100' THEN ''
                              ELSE UPL.KB_NO
                          END AS KB_NO
                        ,CASE WHEN SUBSTR(UPL.KB_NO, 0, 4) != '0100' THEN ''
                              ELSE UPL.KB_NO
                          END AS CELL
                        */
                        
                        ,UPL.BRTH_MON_DAY
                        ,UPL.MEM_NM
                        ,UPL.DTL_NO
                        ,UPL.DTL_PAY_AMT
                        ,UPL.RSLT_CD
                        ,UPL.SEND_DTTM
                        ,UPR.PREPAY_YN
                        ,UPR.PREPAY_REASON
                        ,UPR.RSLT_REG_DTTM
                        ,UPL.REG_MAN
                        ,UPL.REG_DM
                        ,UPL.UPD_MAN
                        ,UPL.UPD_DM
                        ,UPL.DEL_FG
                    FROM LF_DMUSER.TB_UPLUS_PREPAY_LIST UPL LEFT OUTER JOIN
                        LF_DMUSER.TB_UPLUS_PREPAY_RESULT UPR ON UPL.CALC_MONTH = UPR.CALC_MONTH AND UPL.FILE_NO = UPR.FILE_NO AND UPL.ACCNT_NO = UPR.ACCNT_NO AND UPL.DTL_NO = UPR.DTL_NO
                   WHERE 1=1
                     AND UPL.DEL_FG = 'N'
                     <if test="stt_reg_dt != null and stt_reg_dt != '' and (accnt_no == null or accnt_no == '')">
                       AND UPL.CALC_MONTH = #{stt_reg_dt}
                     </if>
                     <if test="accnt_no != null and accnt_no != '' and (stt_reg_dt == null or stt_reg_dt == '')">
                       AND UPL.ACCNT_NO = #{accnt_no}
                     </if>
                     <if test="(stt_reg_dt != null and stt_reg_dt != '') and (accnt_no != null and accnt_no != '')">
                       AND UPL.ACCNT_NO = #{accnt_no}
                     </if>
                     <if test="kb_no != null and kb_no != ''">
                       AND UPL.KB_NO = #{kb_no}
                     </if>
                     <if test="rslt_cd != null and rslt_cd != ''">
                       AND UPL.RSLT_CD = #{rslt_cd}
                     </if>
                     <if test="prepay_yn != null and prepay_yn != ''">
                       AND UPR.PREPAY_YN = #{prepay_yn}
                     </if>
                ) MAIN_TBL
          WHERE 1=1
    </select>

    <!-- ================================================================
     * 날짜 : 20181220
     * 이름 : 송준빈
     * 추가내용 : U+ 선납전송관리 산출 현황 리스트
     * 대상 테이블 : LF_DMUSER.TB_UPLUS_PREPAY_LIST
     * ================================================================
     * -->
    <select id="DlwPayMap.getUplusPrepaymentDataList" parameterType="map" resultType="resultMap">
         SELECT /* DlwPayMap.getUplusPrepaymentDataList */
                MAIN_TBL.*
           FROM ( SELECT ROW_NUMBER() OVER(ORDER BY ${orderBy} ${orderDirection}) AS PAGE_INDX
                        ,UPL.CALC_MONTH
                        ,UPL.FILE_NO
                        ,UPL.ACCNT_NO
                        ,UPL.PROD_CD
                        ,UPL.PROD_NM
                        ,UPL.KSTBIT
                        ,UPL.KB_NO
                        
                        /*
                        ,CASE WHEN SUBSTR(UPL.KB_NO, 0, 4) = '0100' THEN ''
                              ELSE UPL.KB_NO
                          END AS KB_NO
                        ,CASE WHEN SUBSTR(UPL.KB_NO, 0, 4) != '0100' THEN ''
                              ELSE UPL.KB_NO
                          END AS CELL
                        */
                        
                        ,UPL.BRTH_MON_DAY
                        ,UPL.MEM_NM
                        ,UPL.DTL_NO
                        ,UPL.DTL_PAY_AMT
                        ,UPL.RSLT_CD
                        ,UPL.SEND_DTTM
                        ,UPR.PREPAY_YN
                        ,UPR.PREPAY_REASON
                        ,UPR.RSLT_REG_DTTM
                        ,UPL.REG_MAN
                        ,UPL.REG_DM
                        ,UPL.UPD_MAN
                        ,UPL.UPD_DM
                        ,UPL.DEL_FG
                    FROM LF_DMUSER.TB_UPLUS_PREPAY_LIST UPL LEFT OUTER JOIN
                        LF_DMUSER.TB_UPLUS_PREPAY_RESULT UPR ON UPL.CALC_MONTH = UPR.CALC_MONTH AND UPL.FILE_NO = UPR.FILE_NO AND UPL.ACCNT_NO = UPR.ACCNT_NO AND UPL.DTL_NO = UPR.DTL_NO
                   WHERE 1=1
                     AND UPL.DEL_FG = 'N'
                     <if test="stt_reg_dt != null and stt_reg_dt != '' and (accnt_no == null or accnt_no == '')">
                       AND UPL.CALC_MONTH = #{stt_reg_dt}
                     </if>
                     <if test="accnt_no != null and accnt_no != '' and (stt_reg_dt == null or stt_reg_dt == '')">
                       AND UPL.ACCNT_NO = #{accnt_no}
                     </if>
                     <if test="(stt_reg_dt != null and stt_reg_dt != '') and (accnt_no != null and accnt_no != '')">
                       AND UPL.ACCNT_NO = #{accnt_no}
                     </if>
                     <if test="kb_no != null and kb_no != ''">
                       AND UPL.KB_NO = #{kb_no}
                     </if>
                     <if test="rslt_cd != null and rslt_cd != ''">
                       AND UPL.RSLT_CD = #{rslt_cd}
                     </if>
                     <if test="prepay_yn != null and prepay_yn != ''">
                       AND UPR.PREPAY_YN = #{prepay_yn}
                     </if>
                ) MAIN_TBL
          WHERE 1=1
         <if test="startLine != null and startLine != '' and endLine != null and endLine != ''">
             AND PAGE_INDX <![CDATA[>=]]> #{startLine}
             AND PAGE_INDX <![CDATA[<]]> #{endLine}
         </if>
    </select>

    <!-- ================================================================
     * 날짜 : 20181220
     * 이름 : 송준빈
     * 추가내용 : U+ 선납전송관리 산출 현황 리스트
     * 대상 테이블 : LF_DMUSER.TB_UPLUS_PREPAY_LIST
     * ================================================================
     * -->
    <select id="DlwPayMap.getUplusPrepaymentDataListExcel" parameterType="map" resultType="resultMap">
         SELECT /* DlwPayMap.getUplusPrepaymentDataListExcel */
                MAIN_TBL.*
           FROM ( SELECT ROW_NUMBER() OVER(ORDER BY ${orderBy} ${orderDirection}) AS PAGE_INDX
                        ,UPL.CALC_MONTH
                        ,UPL.FILE_NO
                        ,UPL.ACCNT_NO
                        ,UPL.PROD_CD
                        ,UPL.PROD_NM
                        ,(CASE WHEN UPL.KSTBIT = '01' THEN '대기'
                               WHEN UPL.KSTBIT = '02' THEN '가입'
                               WHEN UPL.KSTBIT = '03' THEN '해약'
                               WHEN UPL.KSTBIT = '04' THEN '행사'
                               WHEN UPL.KSTBIT = '09' THEN '만기'
                               ELSE ''
                           END) AS KSTBIT
						,UPL.KB_NO
						
						/*
                        ,CASE WHEN SUBSTR(UPL.KB_NO, 0, 4) = '0100' THEN ''
                              ELSE UPL.KB_NO
                          END AS KB_NO
                        ,CASE WHEN SUBSTR(UPL.KB_NO, 0, 4) != '0100' THEN ''
                              ELSE UPL.KB_NO
                          END AS CELL
                        */

                        ,UPL.BRTH_MON_DAY
                        ,UPL.MEM_NM
                        ,UPL.DTL_NO
                        ,UPL.DTL_PAY_AMT
                        ,(CASE WHEN UPL.RSLT_CD = 'N' THEN '산출완료'
                               WHEN UPL.RSLT_CD = 'S' THEN '전송완료'
                               WHEN UPL.RSLT_CD = 'E' THEN '반영성공'
                               WHEN UPL.RSLT_CD = 'F' THEN '반영실패'
                               WHEN UPL.RSLT_CD = 'R' THEN '미송신'
                               WHEN UPL.RSLT_CD = 'X' THEN '오류'
                               ELSE ''
                           END) AS RSLT_CD
                        ,UPL.SEND_DTTM
                        ,(CASE WHEN UPR.PREPAY_YN = 'Y' THEN '완료'
                               WHEN UPR.PREPAY_YN = 'N' THEN '미완료'
                               WHEN UPR.PREPAY_YN = 'M' THEN '이관된데이터'
                               ELSE ''
                           END) AS PREPAY_YN
                        ,(CASE WHEN UPR.PREPAY_REASON = '00' THEN '정상'
                               WHEN UPR.PREPAY_REASON = '01' THEN '가입번호, CTN으로 가입정보 불일치 제외처리'
                               WHEN UPR.PREPAY_REASON = '02' THEN '해지고객 제외처리'
                               WHEN UPR.PREPAY_REASON = '03' THEN '생년월일 불일치 제외처리'
                               WHEN UPR.PREPAY_REASON = '04' THEN '법인폰 제외처리'
                               WHEN UPR.PREPAY_REASON = '05' THEN '선불고객 제외처리'
                               WHEN UPR.PREPAY_REASON = '06' THEN '상품번호로 가입정보 미존재 제외처리'
                               WHEN UPR.PREPAY_REASON = '07' THEN '상품번호로 가입정보 2건 이상 존재 제외처리'
                               WHEN UPR.PREPAY_REASON = '99' THEN '기타오류'
                               ELSE ''
                           END) AS PREPAY_REASON
                        ,UPR.RSLT_REG_DTTM
                        ,UPL.REG_MAN
                        ,UPL.REG_DM
                        ,UPL.UPD_MAN
                        ,UPL.UPD_DM
                        ,UPL.DEL_FG
                    FROM LF_DMUSER.TB_UPLUS_PREPAY_LIST UPL LEFT OUTER JOIN
                        LF_DMUSER.TB_UPLUS_PREPAY_RESULT UPR ON UPL.CALC_MONTH = UPR.CALC_MONTH AND UPL.FILE_NO = UPR.FILE_NO AND UPL.ACCNT_NO = UPR.ACCNT_NO AND UPL.DTL_NO = UPR.DTL_NO
                   WHERE 1=1
                     AND UPL.DEL_FG = 'N'
                     <if test="stt_reg_dt != null and stt_reg_dt != '' and (accnt_no == null or accnt_no == '')">
                       AND UPL.CALC_MONTH = #{stt_reg_dt}
                     </if>
                     <if test="accnt_no != null and accnt_no != '' and (stt_reg_dt == null or stt_reg_dt == '')">
                       AND UPL.ACCNT_NO = #{accnt_no}
                     </if>
                     <if test="(stt_reg_dt != null and stt_reg_dt != '') and (accnt_no != null and accnt_no != '')">
                       AND UPL.ACCNT_NO = #{accnt_no}
                     </if>
                     <if test="kb_no != null and kb_no != ''">
                       AND UPL.KB_NO = #{kb_no}
                     </if>
                     <if test="rslt_cd != null and rslt_cd != ''">
                       AND UPL.RSLT_CD = #{rslt_cd}
                     </if>
                     <if test="prepay_yn != null and prepay_yn != ''">
                       AND UPR.PREPAY_YN = #{prepay_yn}
                     </if>
                ) MAIN_TBL
          WHERE 1=1
         <if test="startLine != null and startLine != '' and endLine != null and endLine != ''">
             AND PAGE_INDX <![CDATA[>=]]> #{startLine}
             AND PAGE_INDX <![CDATA[<]]> #{endLine}
         </if>
    </select>

    <!-- ================================================================
     * 날짜 : 20190318
     * 이름 : 송준빈
     * 추가내용 : U+ 선납전송관리 산출 현황 리스트 (산출 전송시 사용.)
     * 대상 테이블 : LF_DMUSER.TB_UPLUS_PREPAY_LIST
     * ================================================================
     * -->
    <select id="DlwPayMap.getUplusPrepaymentDataListCalc" parameterType="map" resultType="resultMap">
         SELECT /* DlwPayMap.getUplusPrepaymentDataListCalc */
                MAIN_TBL.*
           FROM ( SELECT ROW_NUMBER() OVER(ORDER BY ${orderBy} ${orderDirection}) AS PAGE_INDX
                        ,CALC_MONTH
                        ,FILE_NO
                        ,ACCNT_NO
                        ,PROD_CD
                        ,PROD_NM
                        ,KSTBIT
                        ,KB_NO
                        ,CELL
                        ,BRTH_MON_DAY
                        ,MEM_NM
                        ,DTL_NO
                        ,DTL_PAY_AMT
                        ,RSLT_CD
                        ,SEND_DTTM
                        ,PREPAY_YN
                        ,PREPAY_REASON
                        ,RSLT_REG_DTTM
                        ,REG_MAN
                        ,REG_DM
                        ,UPD_MAN
                        ,UPD_DM
                        ,DEL_FG
                    FROM LF_DMUSER.TB_UPLUS_PREPAY_LIST
                   WHERE 1=1
                     AND DEL_FG = 'N'
                     AND CALC_MONTH = #{stt_reg_dt}
                ) MAIN_TBL
          WHERE 1=1
         <if test="startLine != null and startLine != '' and endLine != null and endLine != ''">
             AND PAGE_INDX <![CDATA[>=]]> #{startLine}
             AND PAGE_INDX <![CDATA[<]]> #{endLine}
         </if>
    </select>

    <!-- ================================================================
     * 날짜 : 20181220
     * 이름 : 송준빈
     * 추가내용 : U+ 선납전송관리 산출 현황 리스트
     * 대상 테이블 : LF_DMUSER.TB_UPLUS_PREPAY_LIST
     * ================================================================
     * -->
    <select id="DlwPayMap.getUplusNonPrepaymentMember" parameterType="map" resultType="resultMap">
         SELECT /* DlwPayMap.getUplusNonPrepaymentMember */
                MAIN_TBL.*
           FROM ( SELECT '' AS CHK
                        ,ROW_NUMBER() OVER(ORDER BY ${orderBy} ${orderDirection}) AS PAGE_INDX
                        ,UPL.CALC_MONTH
                        ,UPL.FILE_NO
                        ,UPL.ACCNT_NO
                        ,UPL.PROD_CD
                        ,UPL.PROD_NM
                        ,UPL.KSTBIT
                        /* ,(SELECT KB_NO FROM MEM_PROD_ACCNT WHERE ACCNT_NO = UPL.ACCNT_NO AND DEL_FG = 'N') AS KB_NO */
                        ,(
                             SELECT 
                             	CASE WHEN TRIM(REPLACE(MPA.KB_NO, ' ', '')) IS NOT NULL AND SUBSTR(TRIM(REPLACE(MPA.KB_NO, '-', '')), 0, 3) = '010' /* CTN은 존재하지만 전화번호로 들어있는 경우 */
                                         THEN RPAD(SUBSTR(TRIM(REPLACE(MPA.KB_NO, '-', '')), 0, 3), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MPA.KB_NO, '-', '')), 4, 4), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MPA.KB_NO, '-', '')), 8, 4), 4, 0)
                                     WHEN TRIM(REPLACE(MPA.KB_NO, ' ', '')) IS NOT NULL AND SUBSTR(TRIM(REPLACE(MPA.KB_NO, '-', '')), 0, 3) != '010' /* CTN은 존재하고 전화번호로 들어가있지 않은 경우 */
                                         THEN TRIM(REPLACE(MPA.KB_NO, '-', ''))
                                     WHEN TRIM(REPLACE(MPA.KB_NO, ' ', '')) IS NULL AND SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 0, 3) = '010' /* CTN이 존재하지않고 전화번호는 존재하는 경우 */
                                         THEN RPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 0, 3), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 4, 4), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 8, 4), 4, 0)
                                     WHEN TRIM(REPLACE(MPA.KB_NO, ' ', '')) IS NULL AND SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 0, 3) = '019' /* CTN이 존재하지않고 전화번호는 존재하는 경우 */
                                         THEN RPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 0, 3), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 4, 4), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 8, 4), 4, 0)
                                     WHEN TRIM(REPLACE(MPA.KB_NO, ' ', '')) = '' AND SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 0, 3) = '010' /* CTN이 존재하지않고 전화번호는 존재하는 경우 */
                                         THEN RPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 0, 3), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 4, 4), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 8, 4), 4, 0)
                                     ELSE 
                                         TRIM(REPLACE(MPA.KB_NO, '-', ''))
                                END AS KB_NO 
                             FROM MEM_PROD_ACCNT MPA INNER JOIN
                             	 MEMBER MB ON MPA.MEM_NO = MB.MEM_NO AND MPA.DEL_FG = 'N'
                             WHERE 1=1 
                             AND MPA.ACCNT_NO = UPL.ACCNT_NO
                         ) AS KB_NO
                        ,UPL.CELL
                        ,UPL.BRTH_MON_DAY
                        ,UPL.MEM_NM
                        ,UPL.DTL_NO
                        ,UPL.DTL_PAY_AMT
                        ,UPL.RSLT_CD
                        ,UPL.SEND_DTTM
                        ,UPR.PREPAY_YN
                        ,UPR.PREPAY_REASON
                        ,UPR.RSLT_REG_DTTM
                        ,UPL.REG_MAN
                        ,UPL.REG_DM
                        ,UPL.UPD_MAN
                        ,UPL.UPD_DM
                        ,UPL.DEL_FG
                    FROM LF_DMUSER.TB_UPLUS_PREPAY_LIST UPL LEFT OUTER JOIN
                        LF_DMUSER.TB_UPLUS_PREPAY_RESULT UPR ON UPL.CALC_MONTH = UPR.CALC_MONTH AND UPL.FILE_NO = UPR.FILE_NO AND UPL.ACCNT_NO = UPR.ACCNT_NO AND UPL.DTL_NO = UPR.DTL_NO
                   WHERE 1=1
                     AND UPL.DEL_FG = 'N'
                     AND (UPR.PREPAY_YN = 'N' OR UPL.RSLT_CD = 'R')
                     AND UPL.CALC_MONTH = #{stt_reg_dt}
                     <if test="kstbit != null and kstbit != ''">
                         AND UPL.KSTBIT = #{kstbit}
                     </if>
                ) MAIN_TBL
          WHERE 1=1
    </select>

    <!-- ================================================================
     * 날짜 : 20190118
     * 이름 : 송준빈
     * 추가내용 : U+ 선납전송관리 파일 전송후 상태값 업데이트
     * 대상 테이블 : LF_DMUSER.TB_UPLUS_PREPAY_LIST
     * ================================================================
     * -->
    <update id="DlwPayMap.updateUplusPrepaymentDataList" parameterType="map">
        UPDATE /* DlwPayMap.updateUplusPrepaymentDataList */
               LF_DMUSER.TB_UPLUS_PREPAY_LIST
           SET FILE_NO = #{file_no}
              ,RSLT_CD = 'S'
              ,SEND_DTTM = SYSDATE
         WHERE 1=1
           AND DEL_FG = 'N'
           AND CALC_MONTH = #{calc_month}
           AND FILE_NO IS NULL
           AND RSLT_CD = 'N'
    </update>

    <!-- ================================================================
     * 날짜 : 20181220
     * 이름 : 송준빈
     * 추가내용 : U+ 선납전송관리 KB_NO 가져오기
     * 대상 테이블 : LF_DMUSER.TB_UPLUS_PREPAY_LIST
     * ================================================================
     * -->
    <select id="DlwPayMap.getCurrntKbNo" parameterType="map" resultType="resultMap">
         SELECT /* DlwPayMap.getCurrntKbNo */
         	 MPA.ACCNT_NO,
             CASE WHEN TRIM(REPLACE(MPA.KB_NO, ' ', '')) IS NOT NULL AND SUBSTR(TRIM(REPLACE(MPA.KB_NO, '-', '')), 0, 3) = '010' /* CTN은 존재하지만 전화번호로 들어있는 경우 */
                      THEN RPAD(SUBSTR(TRIM(REPLACE(MPA.KB_NO, '-', '')), 0, 3), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MPA.KB_NO, '-', '')), 4, 4), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MPA.KB_NO, '-', '')), 8, 4), 4, 0)
                  WHEN TRIM(REPLACE(MPA.KB_NO, ' ', '')) IS NOT NULL AND SUBSTR(TRIM(REPLACE(MPA.KB_NO, '-', '')), 0, 3) != '010' /* CTN은 존재하고 전화번호로 들어가있지 않은 경우 */
                      THEN TRIM(REPLACE(MPA.KB_NO, '-', ''))
                  WHEN TRIM(REPLACE(MPA.KB_NO, ' ', '')) IS NULL AND SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 0, 3) = '010' /* CTN이 존재하지않고 전화번호는 존재하는 경우 */
                      THEN RPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 0, 3), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 4, 4), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 8, 4), 4, 0)
                  WHEN TRIM(REPLACE(MPA.KB_NO, ' ', '')) IS NULL AND SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 0, 3) = '019' /* CTN이 존재하지않고 전화번호는 존재하는 경우 */
                      THEN RPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 0, 3), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 4, 4), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 8, 4), 4, 0)
                  WHEN TRIM(REPLACE(MPA.KB_NO, ' ', '')) = '' AND SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 0, 3) = '010' /* CTN이 존재하지않고 전화번호는 존재하는 경우 */
                      THEN RPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 0, 3), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 4, 4), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 8, 4), 4, 0)
                  ELSE 
                      TRIM(REPLACE(MPA.KB_NO, '-', ''))
             END AS KB_NO 
         FROM MEM_PROD_ACCNT MPA INNER JOIN
             MEMBER MB ON MPA.MEM_NO = MB.MEM_NO AND MPA.DEL_FG = 'N'
         WHERE 1=1 
         AND MPA.ACCNT_NO = #{accnt_no}
    </select>

    <!-- ================================================================
     * 날짜 : 20181220
     * 이름 : 송준빈
     * 추가내용 : U+ 선납전송관리 미선납회원 이관작업
     * 대상 테이블 : LF_DMUSER.TB_UPLUS_PREPAY_LIST
     * ================================================================
     * -->
    <insert id="DlwPayMap.insertUplusNonPrepaymentMember" parameterType="map">
        INSERT INTO LF_DMUSER.TB_UPLUS_PREPAY_LIST /* DlwPayMap.insertUplusNonPrepaymentMember */
                                                  (CALC_MONTH, FILE_NO, ACCNT_NO, PROD_CD, PROD_NM, KSTBIT, KB_NO, CELL, BRTH_MON_DAY, MEM_NM,
                                                   DTL_NO, DTL_PAY_AMT, RSLT_CD, SEND_DTTM, PREPAY_YN, PREPAY_REASON, RSLT_REG_DTTM,
                                                   REG_MAN, REG_DM, UPD_MAN, UPD_DM, DEL_FG)
             VALUES(#{parent_calc_month}, '', #{accnt_no}, #{prod_cd}, #{prod_nm}, #{kstbit}, #{kb_no}, #{cell}, #{brth_mon_day}, #{mem_nm},
                    #{dtl_no}, #{dtl_pay_amt}, 'N', '', 'M', '', '', #{rgsr_id}, SYSDATE, '', '', 'N')
    </insert>

    <!-- ================================================================
     * 날짜 : 20181220
     * 이름 : 송준빈
     * 추가내용 : U+ 선납전송관리 미선납회원 이관작업
     * 대상 테이블 : LF_DMUSER.TB_UPLUS_PREPAY_LIST
     * ================================================================
     * -->
    <update id="DlwPayMap.updateUplusNonPrepaymentMember" parameterType="map">
        UPDATE /* DlwPayMap.updateUplusNonPrepaymentMember */
               LF_DMUSER.TB_UPLUS_PREPAY_LIST
           SET DEL_FG = 'Y'
              ,KB_NO = #{kb_no}
              ,UPD_MAN = #{rgsr_id}
              ,UPD_DM = SYSDATE
         WHERE 1=1
           AND DEL_FG = 'N'
           AND PREPAY_YN = 'N'
           AND CALC_MONTH = #{calc_month}
           AND ACCNT_NO   = #{accnt_no}
    </update>

    <!-- ================================================================
     * 날짜 : 20190117
     * 이름 : 송준빈
     * 추가내용 : U+ 선납전송관리 마스터 데이터 입력
     * 대상 테이블 : LF_DMUSER.TB_UPLUS_PREPAY_MST
     * ================================================================
     * -->
    <insert id="DlwPayMap.insertUplusPrepaymentMst" parameterType="map">
         INSERT INTO /* DlwPayMap.insertUplusPrepaymentMst */
                     LF_DMUSER.TB_UPLUS_PREPAY_MST(SEQ, CALC_MONTH, FILE_NO, FILE_NAME, TYPE, COUNT, RETURNVAL, REG_DM, REG_MAN, UPD_DM, UPD_MAN, DEL_FG)
              VALUES ((SELECT NVL(MAX(SEQ) , 0) + 1 FROM LF_DMUSER.TB_UPLUS_PREPAY_MST WHERE 1=1),
                      #{calc_month}, #{file_no}, #{file_name}, #{type}, #{count}, #{returnval}, SYSDATE, #{reg_man}, '', '', 'N')
    </insert>

    <!-- ================================================================
     * 날짜 : 20190118
     * 이름 : 송준빈
     * 추가내용 : U+ 선납전송관리 전송한 파일 목록 조회(결과 미도착)
     * 대상 테이블 : LF_DMUSER.TB_UPLUS_PREPAY_MST
     * ================================================================
     * -->
    <select id="DlwPayMap.getSendFileUplusPrepaymentList" parameterType="map" resultType="resultMap">
        SELECT /* DlwPayMap.getSendFileUplusPrepaymentList */
               *
          FROM LF_DMUSER.TB_UPLUS_PREPAY_MST
         WHERE CALC_MONTH = #{stt_reg_dt}
                AND TYPE ='1'
                AND RETURNVAL = 'N'
    </select>

    <!-- ================================================================
     * 날짜 : 20190118
     * 이름 : 송준빈
     * 추가내용 : U+ 선납전송관리 수신된 파일마스터 저장
     * 대상 테이블 : LF_DMUSER.TB_UPLUS_PREPAY_MST
     * ================================================================
     * -->
    <insert id="DlwPayMap.insertUplusPrepaymentRecvLog" parameterType="map">
        INSERT INTO /* DlwPayMap.insertUplusPrepaymentRecvLog */
                    LF_DMUSER.TB_UPLUS_PREPAY_MST(SEQ, CALC_MONTH, FILE_NO, FILE_NAME, TYPE, COUNT, RETURNVAL, REG_DM, REG_MAN, UPD_DM, UPD_MAN, DEL_FG)
             VALUES ((SELECT NVL(MAX(SEQ) , 0) + 1 FROM LF_DMUSER.TB_UPLUS_PREPAY_MST WHERE 1=1),
                      #{calc_month}, #{file_no}, #{file_name}, #{type}, #{count}, #{returnval}, SYSDATE, #{reg_man}, '', '', 'N')
    </insert>

    <!-- ================================================================
     * 날짜 : 20190118
     * 이름 : 송준빈
     * 추가내용 : U+ 선납전송관리 수신된 날짜의 데이터의 수신상태를 수신상태로 전환
     * 대상 테이블 : LF_DMUSER.TB_UPLUS_PREPAY_MST
     * ================================================================
     * -->
    <update id="DlwPayMap.sendUplusPrepaymentFileUpdate" parameterType="map">
        UPDATE /* DlwPayMap.sendUplusPrepaymentFileUpdate */
               LF_DMUSER.TB_UPLUS_PREPAY_MST
           SET RETURNVAL ='Y'
              ,UPD_DM = SYSDATE
              ,UPD_MAN = 'SYSTEM'
         WHERE CALC_MONTH = #{calc_month} AND TYPE ='1' AND FILE_NO = #{file_no}
    </update>

    <!-- ================================================================
     * 날짜 : 20190118
     * 이름 : 송준빈
     * 추가내용 : U+ 선납전송관리 해당월에 송/수신된 데이터 모두 보기
     * 대상 테이블 : LF_DMUSER.TB_UPLUS_PREPAY_MST
     * ================================================================
     * -->
    <select id="DlwPayMap.getAllUplusPrepaymentList" parameterType="map" resultType="resultMap">
        SELECT /* DlwPayMap.getAllUplusPrepaymentList */
               *
          FROM LF_DMUSER.TB_UPLUS_PREPAY_MST
         WHERE CALC_MONTH = #{stt_reg_dt}
        ORDER BY SEQ
    </select>

    <!-- ================================================================
     * 날짜 : 20190130
     * 이름 : 송준빈
     * 추가내용 : U+ 선납전송관리 데이터 결과 반영
     * 대상 테이블 : LF_DMUSER.TB_UPLUS_PREPAY_LIST
     * ================================================================
     * -->
    <update id="DlwPayMap.resultUplusPrepaymentDtlUpdate" parameterType="map">
        UPDATE /* DlwPayMap.resultUplusPrepaymentDtlUpdate */
               LF_DMUSER.TB_UPLUS_PREPAY_LIST
           SET RSLT_CD = #{rslt_cd}
                 ,PREPAY_YN = #{prepay_yn}
                 ,PREPAY_REASON = #{prepay_reason}
                 ,RSLT_REG_DTTM = TO_CHAR(SYSDATE, 'YYYYMMDD')
              ,UPD_MAN = #{reg_man}
              ,UPD_DM = SYSDATE
         WHERE FILE_NO = #{file_no}
           AND ACCNT_NO = #{accnt_no}
           AND LPAD(TRIM(KB_NO), 12, '0') = #{kb_no}
           AND RSLT_CD IN ('S', 'R')
    </update>

    <!-- ================================================================
     * 날짜 : 20190130
     * 이름 : 송준빈
     * 추가내용 : U+ 선납전송관리 결과반영 MASTER 상태 변경
     * 대상 테이블 : LF_DMUSER.TB_UPLUS_PREPAY_MST
     * ================================================================
     * -->
    <update id="DlwPayMap.resultUplusPrepaymentMstUpdate" parameterType="map">
        UPDATE /* DlwPayMap.resultUplusPrepaymentMstUpdate */
               LF_DMUSER.TB_UPLUS_PREPAY_MST
           SET RETURNVAL = #{returnval}
              ,UPD_DM = SYSDATE
              ,UPD_MAN = #{reg_man}
         WHERE FILE_NO = #{file_no}
           AND TYPE = '2'
    </update>

    <!-- ================================================================
     * 날짜 : 20190130
     * 이름 : 송준빈
     * 추가내용 : U+ 선납전송관리 결과가 오지 않은 데이터 업데이트
     * 대상 테이블 : LF_DMUSER.TB_UPLUS_PREPAY_LIST
     * ================================================================
     * -->
    <update id="DlwPayMap.noResultUplusPrepaymentFileChange" parameterType="map">
        UPDATE /* DlwPayMap.noResultUplusPrepaymentFileChange (사용안함)*/
               LF_DMUSER.TB_UPLUS_PREPAY_LIST
           SET RSLT_CD = 'R'
              ,UPD_DM = SYSDATE
              ,UPD_MAN = #{reg_man}
         WHERE FILE_NO = #{file_no}
           AND RSLT_CD IN ('N', 'S')
    </update>
    
    <!-- ================================================================
     * 날짜 : 20190130
     * 이름 : 송준빈
     * 추가내용 : U+ 선납전송관리 결과가 오지 않은 데이터 업데이트
     * 대상 테이블 : LF_DMUSER.TB_UPLUS_PREPAY_LIST
     * ================================================================
     * -->
    <update id="DlwPayMap.updateResultReflectionRequestData" parameterType="map">
        BEGIN 
        	UPDATE /* DlwPayMap.updateResultReflectionRequestData */
        		LF_DMUSER.TB_UPLUS_PREPAY_LIST 
          	SET RSLT_CD = 'E' 
          	   ,UPD_DM = SYSDATE
               ,UPD_MAN = #{reg_man}
          	WHERE 1=1
          	AND DEL_FG = 'N'
          	AND (CALC_MONTH, FILE_NO, ACCNT_NO, DTL_NO) 
          		IN (SELECT 
          				CALC_MONTH, 
          				FILE_NO, 
          				ACCNT_NO, 
          				DTL_NO 
          			FROM LF_DMUSER.TB_UPLUS_PREPAY_RESULT 
          			WHERE 1=1 
          			AND DEL_FG = 'N' 
          			AND CALC_MONTH = #{calc_month} 
          			AND FILE_NO = #{file_no}
          			AND RSLT_CD = 'E');
            
            UPDATE LF_DMUSER.TB_UPLUS_PREPAY_LIST 
            SET RSLT_CD = 'R' 
               ,UPD_DM = SYSDATE
               ,UPD_MAN = #{reg_man}
            WHERE 1=1 
            AND CALC_MONTH = #{calc_month} 
            AND FILE_NO = #{file_no}
            AND RSLT_CD IN ('N', 'S');
        END;
    </update>

    <!-- ================================================================
     * 날짜 : 20191105
     * 이름 : 송준빈
     * 추가내용 : 해당 결과 파일의 정산 년월 확인
     * 대상 테이블 : LF_DMUSER.TB_UPLUS_PREPAY_MST
     * ================================================================
     * -->
    <select id="DlwPayMap.getUplusTargetCalcMonth" parameterType="map" resultType="resultMap">
        SELECT /* DlwPayMap.getUplusTargetCalcMonth */
               CALC_MONTH
          FROM LF_DMUSER.TB_UPLUS_PREPAY_MST
         WHERE DEL_FG = 'N'
           AND FILE_NAME = #{file_name}
        ORDER BY SEQ
    </select>

    <!-- ================================================================
     * 날짜 : 20190102
     * 이름 : 송준빈
     * 추가내용 : 고객미납관리(NEW) 현황 조회수
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_YENCHE_MNG
     * ================================================================
     * -->
    <select id="DlwPayMap.getMemberYencheMngDataListCount" parameterType="map" resultType="int">
        SELECT /* DlwPayMap.getMemberYencheMngDataListCount */
               COUNT(*) AS ICNT
          FROM ( SELECT ROW_NUMBER() OVER(ORDER BY ${orderBy} ${orderDirection}) AS PAGE_INDX
                       ,ACCNT_NO

                   FROM TB_MEMBER_YENCHE_MNG
                  WHERE 1=1
                  <if test="accnt_no != null and accnt_no != ''">
                     AND ACCNT_NO = #{accnt_no}
                  </if>
                  <if test="pay_mthd != null and pay_mthd != ''">
                     AND PAY_MTHD = #{pay_mthd}
                  </if>
                  <if test="type_a != null and type_a != ''">
                     AND TYPE_A = #{type_a}
                  </if>
                  <if test="type_b != null and type_b != ''">
                     AND TYPE_B = #{type_b}
                  </if>
                  <if test="type_c != null and type_c != ''">
                     AND TYPE_C = #{type_c}
                  </if>
                  <if test="diff_cnt_stt != null and diff_cnt_stt != '' and diff_cnt_end != null and diff_cnt_end != ''">
                     AND DIFF_CNT BETWEEN #{diff_cnt_stt} AND #{diff_cnt_end}
                  </if>
               ) MAIN_TBL
         WHERE 1=1
    </select>

    <!-- ================================================================
     * 날짜 : 20190102
     * 이름 : 송준빈
     * 추가내용 : 고객미납관리(NEW) 현황 리스트
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_YENCHE_MNG
     * ================================================================
     * -->
    <select id="DlwPayMap.getMemberYencheMngDataList" parameterType="map" resultType="resultMap">
        SELECT	/* DlwPayMap.getMemberYencheMngDataList */
            *
        FROM
        (
            SELECT
                ROW_NUMBER() OVER(ORDER BY TBL2.ACCNT_NO ASC) AS PAGE_INDX,
                TBL2.ACCNT_NO,
                TBL2.REAL_CNT,
                TBL2.ICHAE_DT,
                TBL2.KSTBIT,
                TBL2.PAY_MTHD,
                TBL2.DIFF_CNT,
                TBL2.PAY_DAY,
                (SELECT JOIN_DT FROM MEM_PROD_ACCNT MPA WHERE 1=1 AND MPA.DEL_FG = 'N' AND MPA.ACCNT_NO = TBL2.ACCNT_NO) AS JOIN_DT,
                REPLACE(TBL2.MEM_NM,CHR(0),'') AS MEM_NM,
                REPLACE(TBL2.PROD_NM,CHR(0),'') AS PROD_NM,
                REPLACE(TBL2.CELL,CHR(0),'') AS CELL,
                TBL2.MEM_NO,
                TBL2.DIFF_AMT,
                TBL2.PAY_BIT,
                REPLACE(TBL2.TYPE_A,CHR(0),'') AS TYPE_A,
                REPLACE(TBL2.TYPE_B,CHR(0),'') AS TYPE_B,
                REPLACE(TBL2.TYPE_C,CHR(0),'') AS TYPE_C,
                TBL2.TRUE_AMT,
                TBL2.REL_AMT,
                TBL2.ADD_AMT,
                TBL2.EXT_YN,
                REPLACE(TBL2.EXT_ID,CHR(0),'') AS EXT_ID,
                REPLACE(TBL2.SUB_TRGT_LIST_ID,CHR(0),'') AS SUB_TRGT_LIST_ID,
                REPLACE(TBL2.TRGT_LIST_ID,CHR(0),'') AS TRGT_LIST_ID,
                REPLACE((NVL(TRUE_AMT_1,0) + NVL(REL_AMT_1,0) + NVL(ADD_AMT_1,0)),CHR(0),'') AS MON_PAY_AMT,
                REPLACE((CASE WHEN PAY_BIT LIKE 'N%' THEN TRUE_DAY_1 ELSE REL_DAY_1 END ),CHR(0),'') AS MON_PAY_DAY,
               CMPG_TYP_NM,
               HGRN_HRCH_NM,
               TCA.USER_NM,
               (SELECT MAX(EXCP_EXPI) FROM PS_WILLVI.TB_TRGT_EXCP WHERE EXCP_ID = TBL2.ACCNT_NO AND  USER_DEFN2_CNTN  = '02' AND USE_YN = 'Y') AS EXCP_REASON,
               TRGT_LIST_NM AS TRGT_NM,
               (SELECT MAX(SUB_TRGT_LIST_NM) FROM PS_WILLVI.TB_SUB_TRGT_LIST_DTL STL WHERE TBL2.SUB_TRGT_LIST_ID = STL.SUB_TRGT_LIST_ID ) AS SUB_TRGT_NM,
               NVL((SELECT 'Y' FROM TB_MEMBER_EXT_SPECIAL WHERE TBL2.ACCNT_NO = ACCNT_NO AND SPECIAL_BIT = '01' AND DEL_FG = 'N'),'N') AS SPECIAL_YN,
               DECODE(MB.SEX, '0001', '1', '0002', '0', '') AS SEX,
               MB.BRTH_MON_DAY,
               REPLACE(MB.HOME_ADDR,CHR(0),'') || ' ' || REPLACE(MB.HOME_ADDR2,CHR(0),'') AS ADDR,
               REPLACE(MB.HOME_ADDR,CHR(0),'') AS ADDR1,
               REPLACE(MB.HOME_ADDR2,CHR(0),'') AS ADDR2,
               REPLACE(MB.HOME_ZIP,CHR(0),'') AS HOME_ZIP
            FROM
            TB_MEMBER_YENCHE_MNG TBL2 LEFT OUTER JOIN
            (
             SELECT
                ACCNT_NO,
                SUM(CASE WHEN GNG = 'PM' THEN PAY_AMT ELSE 0 END) AS TRUE_AMT_1,
                SUM(CASE WHEN GNG = 'PM1' THEN PAY_AMT ELSE 0 END) AS REL_AMT_1,
                SUM(CASE WHEN GNG = 'PM2' THEN PAY_AMT ELSE 0 END) AS ADD_AMT_1,
                MAX(CASE WHEN GNG = 'PM' THEN PAY_DAY ELSE '' END) AS TRUE_DAY_1,
                MAX(CASE WHEN GNG = 'PM1' THEN PAY_DAY ELSE '' END) AS REL_DAY_1,
                MAX(CASE WHEN GNG = 'PM2' THEN PAY_DAY ELSE '' END) AS ADD_DAY_1
                FROM
                (
                    SELECT
                        MYM.ACCNT_NO,
                        SUM(PAY_AMT) AS PAY_AMT,
                        MAX(PM.PAY_DAY) AS PAY_DAY,
                        'PM' AS GNG
                    FROM TB_MEMBER_YENCHE_MNG MYM LEFT OUTER JOIN
                    PAY_MNG PM ON MYM.ACCNT_NO = PM.ACCNT_NO AND PM.DEL_FG = 'N'
                    GROUP BY  MYM.ACCNT_NO, PM.PAY_DAY
                    HAVING PM.PAY_DAY >= TO_CHAR(SYSDATE,'YYYYMM') || '01'

                    UNION

                    SELECT
                        MYM.ACCNT_NO,
                        SUM(PAY_AMT) AS PAY_AMT,
                        MAX(PM.PAY_DAY) AS PAY_DAY,
                        'PM1' AS GNG
                    FROM TB_MEMBER_YENCHE_MNG MYM LEFT OUTER JOIN
                    PAY_MNG_DTL PM ON MYM.ACCNT_NO = PM.ACCNT_NO AND PM.DEL_FG = 'N'
                    GROUP BY  MYM.ACCNT_NO, PM.PAY_DAY
                    HAVING PM.PAY_DAY >= TO_CHAR(SYSDATE,'YYYYMM') || '01'

                    UNION

                    SELECT
                        MYM.ACCNT_NO,
                        SUM(PAY_AMT) AS PAY_AMT,
                        MAX(PM.PAY_DAY) AS PAY_DAY,
                        'PM2' AS GNG
                    FROM TB_MEMBER_YENCHE_MNG MYM LEFT OUTER JOIN
                    PAY_MNG_DTL1 PM ON MYM.ACCNT_NO = PM.ACCNT_NO AND PM.DEL_FG = 'N'
                    GROUP BY  MYM.ACCNT_NO, PM.PAY_DAY
                    HAVING PM.PAY_DAY >= TO_CHAR(SYSDATE,'YYYYMM') || '01'
                )
                GROUP BY ACCNT_NO
            ) TBL ON TBL.ACCNT_NO = TBL2.ACCNT_NO LEFT OUTER JOIN
            (
                SELECT
                    TRGT_LIST_ID,
                    TRGT_LIST_NM,
                    PS_WILLVI.FN_GETHRCHCDNM('CAM990', TL.CMPG_TYP_CD, 'CCA') AS CMPG_TYP_NM,
                    PS_WILLVI.FN_GETHRCHCDNM('CAM990', HC.HGRN_HRCH_CD, 'CCA') AS HGRN_HRCH_NM
                FROM PS_WILLVI.TB_TRGT_LIST_DTL TL INNER JOIN
                    PS_WILLVI.TB_HRCH_CD HC ON TL.CMPG_TYP_CD = HC.HRCH_CD
            ) TLI ON TBL2.TRGT_LIST_ID = TLI.TRGT_LIST_ID LEFT OUTER JOIN

            (
                SELECT
                    AA.SUB_TRGT_LIST_ID,
                    BB.ACCNT_NO,
                    USER_NM
                FROM PS_WILLVI.TB_TRGT_CUST_ALCT AA  INNER JOIN
                    PS_WILLVI.TB_TRGT_CUST_DTPT BB ON AA.TRGT_CUST_DTPT_ID = BB.TRGT_CUST_DTPT_ID INNER JOIN
                    PS_WILLVI.TB_USER USR ON AA.CNSR_ID = USER_ID
            ) TCA ON TCA.SUB_TRGT_LIST_ID = TBL2.SUB_TRGT_LIST_ID AND TCA.ACCNT_NO = TBL2.ACCNT_NO LEFT OUTER JOIN

            MEMBER MB ON MB.MEM_NO = TBL2.MEM_NO



            WHERE 1=1
                  <if test="accnt_no != null and accnt_no != ''">
                     AND TBL2.ACCNT_NO = #{accnt_no}
                  </if>
                  <if test="pay_mthd != null and pay_mthd != ''">
                     AND PAY_MTHD = #{pay_mthd}
                  </if>
                  <if test="type_a != null and type_a != ''">
                     AND TYPE_A = #{type_a}
                  </if>
                  <if test="type_b != null and type_b != ''">
                     AND TYPE_B = #{type_b}
                  </if>
                  <if test="type_c != null and type_c != ''">
                     AND TYPE_C = #{type_c}
                  </if>
                  <if test="diff_cnt_stt != null and diff_cnt_stt != '' and diff_cnt_end != null and diff_cnt_end != ''">
                     AND DIFF_CNT BETWEEN #{diff_cnt_stt} AND #{diff_cnt_end}
                  </if>
        )
        WHERE 1=1
         <if test="special_yn != null and special_yn != ''">
             AND SPECIAL_YN = #{special_yn}
         </if>
         <if test="startLine != null and startLine != '' and endLine != null and endLine != ''">
             AND PAGE_INDX <![CDATA[>=]]> #{startLine}
             AND PAGE_INDX <![CDATA[<]]> #{endLine}
         </if>



        <!--
        SELECT /* DlwPayMap.getMemberYencheMngDataList */
               MAIN_TBL.*
          FROM ( SELECT ROW_NUMBER() OVER(ORDER BY ${orderBy} ${orderDirection}) AS PAGE_INDX
                       ,ACCNT_NO
                       ,REAL_CNT
                       ,ICHAE_DT
                       ,KSTBIT
                       ,PAY_MTHD
                       ,DIFF_CNT
                       ,PAY_DAY
                       ,MEM_NM
                       ,PROD_NM
                       ,CELL
                       ,MEM_NO
                       ,DIFF_AMT
                       ,PAY_BIT
                       ,TYPE_A
                       ,TYPE_B
                       ,TYPE_C
                       ,PAY_AMT
                       ,REL_AMT
                       ,ADD_AMT
                   FROM TB_MEMBER_YENCHE_MNG
                  WHERE 1=1
                  <if test="accnt_no != null and accnt_no != ''">
                     AND ACCNT_NO = #{accnt_no}
                  </if>
                  <if test="pay_mthd != null and pay_mthd != ''">
                     AND PAY_MTHD = #{pay_mthd}
                  </if>
                  <if test="type_a != null and type_a != ''">
                     AND TYPE_A = #{type_a}
                  </if>
                  <if test="type_b != null and type_b != ''">
                     AND TYPE_B = #{type_b}
                  </if>
                  <if test="type_c != null and type_c != ''">
                     AND TYPE_C = #{type_c}
                  </if>
                  <if test="diff_cnt_stt != null and diff_cnt_stt != '' and diff_cnt_end != null and diff_cnt_end != ''">
                     AND DIFF_CNT BETWEEN #{diff_cnt_stt} AND #{diff_cnt_end}
                  </if>
               ) MAIN_TBL
         WHERE 1=1
         <if test="startLine != null and startLine != '' and endLine != null and endLine != ''">
             AND PAGE_INDX <![CDATA[>=]]> #{startLine}
             AND PAGE_INDX <![CDATA[<]]> #{endLine}
         </if>
          -->
    </select>

    <!-- ================================================================
     * 날짜 : 20190121
     * 이름 : 송준빈
     * 추가내용 : 고객미납관리(NEW) 청구실행
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_YENCHE_MNG
     * ================================================================
     * -->
    <insert id="DlwPayMap.insertMemberYencheMngDataList" parameterType="map">
        /* 미납 관리 */

        /* 001 상조부금 결제 회원 당월 미납 조회*/
        INSERT INTO LF_DMUSER.TB_MEMBER_YENCHE_MNG
        SELECT
            TBL.*,
            'N' AS EXT_YN,
            ('UNP' || TO_CHAR(SYSDATE, 'YYYYMMDD') || SUBSTR('0000000' || ROWNUM,-7)) AS UNPY_ID,
            '' AS SUB_TRGT_LIST_ID,
            '' AS TRGT_LIST_ID
        FROM
        (
            SELECT
                REQ.ACCNT_NO,
                REQ.REQ_PAY_NO,
                REQ.ICHAE_DT,
                MBID.KSTBIT,
                MBID.PAY_MTHD,
                1 AS DIFF_CNT,
                MBID.TRUE_DAY,
                MB.MEM_NM,
                PD.PROD_NM,
                REPLACE(MB.CELL,'-','') AS CELL,
                MB.MEM_NO,
                REQ.PAY_AMT AS DIFF_AMT,
                REQ.PAY_BIT,
                (CASE WHEN SECTION_F = '0003' THEN '일반' ELSE '결합' END) AS TYPE_A,
                '당월미납' AS TYPE_B,
                '비채권' AS TYPE_C,
                (SELECT SUM(AMT) FROM PRODUCT_NO_DATA PND WHERE MBID.PROD_CD = PND.PROD_CD AND NO <![CDATA[<=]]> REAL_CNT) AS TRUE_AMT,
                (SELECT SUM(REL_AMT) FROM PRODUCT_NO_DATA PND WHERE MBID.PROD_CD = PND.PROD_CD AND NO <![CDATA[<=]]> REAL_CNT) AS REL_AMT,
                (SELECT SUM(ADD_AMT) FROM PRODUCT_NO_DATA PND WHERE MBID.PROD_CD = PND.PROD_CD AND NO <![CDATA[<=]]> REAL_CNT) AS ADD_AMT
            FROM TB_MEMBER_WDRW_REQ REQ INNER JOIN
                LF_DMUSER.TB_MEMBER_BASIC_INFO_DAY MBID ON REQ.ACCNT_NO = MBID.ACCNT_NO INNER JOIN
                MEMBER MB ON MBID.MEM_NO = MB.MEM_NO AND MB.DEL_FG = 'N' INNER JOIN
                PRODUCT PD ON MBID.PROD_CD = PD.PROD_CD INNER JOIN
                PRODUCT_NO_DATA PND ON MBID.PROD_CD = PND.PROD_CD AND MBID.TRUE_CNT = PND.NO INNER JOIN
                (
                    SELECT ACCNT_NO,
                           MAX(PAY_DAY) AS PAY_DAY
                      FROM PAY_MNG
                     WHERE DEL_FG = 'N'
                    GROUP BY ACCNT_NO
                ) PM ON PM.ACCNT_NO = REQ.ACCNT_NO
            WHERE 1=1
            AND REQ.DEL_FG = 'F'
            AND REQ.REQ_DAY = #{req_day}
            AND REQ.PAY_BIT = 'NXX'
            AND REQ.RESULT_KIND = '01'
            AND REQ.REQ_PAY_NO = REQ.MONTH_CNT
            AND REQ.KSTBIT = '02'
            AND MBID.STAT IN ('01','11','011')
            AND PM.PAY_DAY <![CDATA[<]]> TO_CHAR(SYSDATE,'YYYYMM') || '01'
            AND NOT EXISTS (SELECT ACCNT_NO FROM TB_MEMBER_YENCHE_MNG WHERE ACCNT_NO = REQ.ACCNT_NO)
            AND NOT EXISTS (SELECT * FROM PS_WILLVI.TB_TRGT_EXCP WHERE REQ.ACCNT_NO = EXCP_ID  AND USER_DEFN2_CNTN = '01')

             UNION ALL

            /* 002 채권(X)상품 정상건*/
            SELECT
                REQ.ACCNT_NO,
                REQ.REQ_PAY_NO,
                REQ.ICHAE_DT,
                MBID.KSTBIT,
                MBID.PAY_MTHD,
                1 AS DIFF_CNT,
                MBID.TRUE_DAY,
                MB.MEM_NM,
                PD.PROD_NM,
                REPLACE(MB.CELL,'-','') AS CELL,
                MB.MEM_NO,
                REQ.PAY_AMT AS DIFF_AMT,
                REQ.PAY_BIT,
                '결합' AS TYPE_A,
                '당월미납' AS TYPE_B,
                '비채권' AS TYPE_C,
                (SELECT SUM(AMT) FROM PRODUCT_NO_DATA PND WHERE MBID.PROD_CD = PND.PROD_CD AND NO <![CDATA[<=]]> REAL_CNT) AS TRUE_AMT,
                (SELECT SUM(REL_AMT) FROM PRODUCT_NO_DATA PND WHERE MBID.PROD_CD = PND.PROD_CD AND NO <![CDATA[<=]]> REAL_CNT) AS REL_AMT,
                (SELECT SUM(ADD_AMT) FROM PRODUCT_NO_DATA PND WHERE MBID.PROD_CD = PND.PROD_CD AND NO <![CDATA[<=]]> REAL_CNT) AS ADD_AMT
            FROM TB_MEMBER_WDRW_REQ REQ INNER JOIN
                LF_DMUSER.TB_MEMBER_BASIC_INFO_DAY MBID ON REQ.ACCNT_NO = MBID.ACCNT_NO INNER JOIN
                MEMBER MB ON MBID.MEM_NO = MB.MEM_NO AND MB.DEL_FG = 'N' INNER JOIN
                PRODUCT PD ON MBID.PROD_CD = PD.PROD_CD INNER JOIN
                PRODUCT_NO_DATA PND ON MBID.PROD_CD = PND.PROD_CD AND MBID.TRUE_CNT = PND.NO INNER JOIN
                (
                    SELECT ACCNT_NO,
                           MAX(PAY_DAY) AS PAY_DAY
                      FROM PAY_MNG
                     WHERE DEL_FG = 'N'
                    GROUP BY ACCNT_NO
                ) PM ON PM.ACCNT_NO = REQ.ACCNT_NO
            WHERE 1=1
            AND REQ.DEL_FG = 'F'
            AND REQ.REQ_DAY = #{req_day}
            AND REQ.PAY_BIT IN ('NRX','NRA')
            AND PD.SECTION_T != '0002'
            AND REQ.RESULT_KIND = '01'
            AND REQ.REQ_PAY_NO = REQ.MONTH_CNT
            AND REQ.KSTBIT = '02'
            AND MBID.STAT IN ('01','11','011')
            AND PM.PAY_DAY <![CDATA[<]]> TO_CHAR(SYSDATE,'YYYYMM') || '01'
            AND NOT EXISTS (SELECT ACCNT_NO FROM TB_MEMBER_YENCHE_MNG WHERE ACCNT_NO = REQ.ACCNT_NO)
            AND NOT EXISTS (SELECT * FROM PS_WILLVI.TB_TRGT_EXCP WHERE REQ.ACCNT_NO = EXCP_ID  AND USER_DEFN2_CNTN = '01')

             UNION ALL

             /* 003 채권(O)상품 정상건*/
             SELECT
                REQ.ACCNT_NO,
                REQ.REQ_PAY_NO,
                REQ.ICHAE_DT,
                MBID.KSTBIT,
                MBID.PAY_MTHD,
                1 AS DIFF_CNT,
                MBID.TRUE_DAY,
                MB.MEM_NM,
                PD.PROD_NM,
                REPLACE(MB.CELL,'-','') AS CELL,
                MB.MEM_NO,
                REQ.PAY_AMT AS DIFF_AMT,
                REQ.PAY_BIT,
                '결합' AS TYPE_A,
                '당월미납' AS TYPE_B,
                '채권' AS TYPE_C,
                (SELECT SUM(AMT) FROM PRODUCT_NO_DATA PND WHERE MBID.PROD_CD = PND.PROD_CD AND NO <![CDATA[<=]]> REAL_CNT) AS TRUE_AMT,
                (SELECT SUM(REL_AMT) FROM PRODUCT_NO_DATA PND WHERE MBID.PROD_CD = PND.PROD_CD AND NO <![CDATA[<=]]> REAL_CNT) AS REL_AMT,
                (SELECT SUM(ADD_AMT) FROM PRODUCT_NO_DATA PND WHERE MBID.PROD_CD = PND.PROD_CD AND NO <![CDATA[<=]]> REAL_CNT) AS ADD_AMT
            FROM TB_MEMBER_WDRW_REQ REQ INNER JOIN
                LF_DMUSER.TB_MEMBER_BASIC_INFO_DAY MBID ON REQ.ACCNT_NO = MBID.ACCNT_NO INNER JOIN
                MEMBER MB ON MBID.MEM_NO = MB.MEM_NO AND MB.DEL_FG = 'N' INNER JOIN
                PRODUCT PD ON MBID.PROD_CD = PD.PROD_CD INNER JOIN
                PRODUCT_NO_DATA PND ON MBID.PROD_CD = PND.PROD_CD AND MBID.TRUE_CNT = PND.NO INNER JOIN
                (
                    SELECT ACCNT_NO,
                              MAX(PAY_DAY) AS PAY_DAY
                      FROM PAY_MNG
                     WHERE DEL_FG = 'N'
                    GROUP BY ACCNT_NO
                ) PM ON PM.ACCNT_NO = REQ.ACCNT_NO
            WHERE 1=1
            AND REQ.DEL_FG = 'F'
            AND REQ.REQ_DAY = #{req_day}
            AND REQ.PAY_BIT IN ('NRX','NRA')
            AND PD.SECTION_T = '0002'
            AND REQ.RESULT_KIND = '01'
            AND REQ.REQ_PAY_NO = REQ.MONTH_CNT
            AND REQ.KSTBIT = '02'
               AND MBID.STAT IN ('01','11','011')
            AND PM.PAY_DAY <![CDATA[<]]> TO_CHAR(SYSDATE,'YYYYMM') || '01'
            AND NOT EXISTS (SELECT ACCNT_NO FROM TB_MEMBER_YENCHE_MNG WHERE ACCNT_NO = REQ.ACCNT_NO)
            AND NOT EXISTS (SELECT * FROM PS_WILLVI.TB_TRGT_EXCP WHERE REQ.ACCNT_NO = EXCP_ID  AND USER_DEFN2_CNTN = '01')

             UNION ALL

              /* 004 채권 상품 해약 건*/
            SELECT
                REQ.ACCNT_NO,
                REQ.REQ_PAY_NO,
                REQ.ICHAE_DT,
                MBID.KSTBIT,
                MBID.PAY_MTHD,
                1 AS DIFF_CNT,
                MBID.TRUE_DAY,
                MB.MEM_NM,
                PD.PROD_NM,
                REPLACE(MB.CELL,'-','') AS CELL,
                MB.MEM_NO,
                REQ.PAY_AMT AS DIFF_AMT,
                REQ.PAY_BIT,
                '결합' AS TYPE_A,
                '당월미납' AS TYPE_B,
                '채권' AS TYPE_C,
                (SELECT SUM(AMT) FROM PRODUCT_NO_DATA PND WHERE MBID.PROD_CD = PND.PROD_CD AND NO <![CDATA[<=]]> REAL_CNT) AS TRUE_AMT,
                (SELECT SUM(REL_AMT) FROM PRODUCT_NO_DATA PND WHERE MBID.PROD_CD = PND.PROD_CD AND NO <![CDATA[<=]]> REAL_CNT) AS REL_AMT,
                (SELECT SUM(ADD_AMT) FROM PRODUCT_NO_DATA PND WHERE MBID.PROD_CD = PND.PROD_CD AND NO <![CDATA[<=]]> REAL_CNT) AS ADD_AMT
            FROM TB_MEMBER_WDRW_REQ REQ INNER JOIN
                LF_DMUSER.TB_MEMBER_BASIC_INFO_DAY MBID ON REQ.ACCNT_NO = MBID.ACCNT_NO INNER JOIN
                MEMBER MB ON MBID.MEM_NO = MB.MEM_NO AND MB.DEL_FG = 'N' INNER JOIN
                RESCISSION RS ON REQ.ACCNT_NO = RS.ACCNT_NO AND RS.DEL_FG = 'N' AND RESN_CL != '02' INNER JOIN
                PRODUCT PD ON MBID.PROD_CD = PD.PROD_CD INNER JOIN
                PRODUCT_NO_DATA PND ON MBID.PROD_CD = PND.PROD_CD AND MBID.TRUE_CNT = PND.NO INNER JOIN
                (
                    SELECT ACCNT_NO,
                           MAX(PAY_DAY) AS PAY_DAY
                      FROM PAY_MNG
                     WHERE DEL_FG = 'N'
                    GROUP BY ACCNT_NO
                ) PM ON PM.ACCNT_NO = REQ.ACCNT_NO
            WHERE 1=1
            AND REQ.DEL_FG = 'F'
            AND REQ.REQ_DAY = #{req_day}
            AND PD.SECTION_T = '0002'
            AND REQ.RESULT_KIND = '01'
            AND REQ.REQ_PAY_NO = REQ.MONTH_CNT
            AND REQ.KSTBIT = '03'
            AND MBID.STAT IN ('01','11','011')
            AND PM.PAY_DAY <![CDATA[<]]> TO_CHAR(SYSDATE,'YYYYMM') || '01'
            AND NOT EXISTS (SELECT ACCNT_NO FROM TB_MEMBER_YENCHE_MNG WHERE ACCNT_NO = REQ.ACCNT_NO)
            AND NOT EXISTS (SELECT * FROM PS_WILLVI.TB_TRGT_EXCP WHERE REQ.ACCNT_NO = EXCP_ID  AND USER_DEFN2_CNTN = '01')
         ) TBL
    </insert>

    <!-- ================================================================
     * 날짜 : 20190305
     * 이름 : 송준빈
     * 추가내용 : 고객미납이력(NEW) 현황 조회수
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_YENCHE_HSTR
     * ================================================================
     * -->
     <select id="DlwPayMap.getMemberYencheHstrDataListCount" parameterType="map" resultType="int">
        SELECT /* DlwPayMap.getMemberYencheHstrDataListCount */
               COUNT(*) AS ICNT
          FROM ( SELECT ROW_NUMBER() OVER(ORDER BY ${orderBy} ${orderDirection}) AS PAGE_INDX
                       ,YEN_DT
                       ,ACCNT_NO
                       ,REAL_CNT
                       ,ICHAE_DT
                       ,KSTBIT
                       ,PAY_MTHD
                       ,DIFF_CNT
                       ,PAY_DAY
                       ,MEM_NM
                       ,PROD_NM
                       ,CELL
                       ,MEM_NO
                       ,DIFF_AMT
                       ,PAY_BIT
                       ,TYPE_A
                       ,TYPE_B
                       ,TYPE_C
                       ,TRUE_AMT
                       ,REL_AMT
                       ,ADD_AMT
                       ,EXT_YN
                       ,EXT_ID
                       ,SUB_TRGT_LIST_ID
                       ,TRGT_LIST_ID
                       ,MON_PAY_AMT
                       ,MON_PAY_DAY
                       ,CNSR_ID
                       ,EXCP_REASON
                       ,TRGT_NM
                       ,SUB_TRGT_NM
                       ,SPECIAL_YN
                   FROM LF_DMUSER.TB_MEMBER_YENCHE_HSTR
                  WHERE 1=1
                    AND SUBSTR(YEN_DT, 0, 6) = #{yen_dt}
               ) MAIN_TBL
         WHERE 1=1
    </select>

     <!-- ================================================================
     * 날짜 : 20190305
     * 이름 : 송준빈
     * 추가내용 : 고객미납이력(NEW) 현황 리스트
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_YENCHE_HSTR
     * ================================================================
     * -->
     <select id="DlwPayMap.getMemberYencheHstrDataList" parameterType="map" resultType="resultMap">
        SELECT /* DlwPayMap.getMemberYencheHstrDataList */
               MAIN_TBL.*
          FROM ( SELECT ROW_NUMBER() OVER(ORDER BY ${orderBy} ${orderDirection}) AS PAGE_INDX
                       ,YEN_DT
                       ,ACCNT_NO
                       ,REAL_CNT
                       ,ICHAE_DT
                       ,KSTBIT
                       ,PAY_MTHD
                       ,DIFF_CNT
                       ,PAY_DAY
                       ,MEM_NM
                       ,PROD_NM
                       ,CELL
                       ,MEM_NO
                       ,DIFF_AMT
                       ,PAY_BIT
                       ,TYPE_A
                       ,TYPE_B
                       ,TYPE_C
                       ,TRUE_AMT
                       ,REL_AMT
                       ,ADD_AMT
                       ,EXT_YN
                       ,EXT_ID
                       ,SUB_TRGT_LIST_ID
                       ,TRGT_LIST_ID
                       ,MON_PAY_AMT
                       ,MON_PAY_DAY
                       ,CNSR_ID
                       ,EXCP_REASON
                       ,TRGT_NM
                       ,SUB_TRGT_NM
                       ,SPECIAL_YN
                   FROM LF_DMUSER.TB_MEMBER_YENCHE_HSTR
                  WHERE 1=1
                    AND SUBSTR(YEN_DT, 0, 6) = #{yen_dt}
               ) MAIN_TBL
         WHERE 1=1
         <if test="startLine != null and startLine != '' and endLine != null and endLine != ''">
           AND PAGE_INDX <![CDATA[>=]]> #{startLine}
           AND PAGE_INDX <![CDATA[<]]> #{endLine}
         </if>
    </select>

    <!-- ================================================================
     * 날짜 : 20190103
     * 이름 : 송준빈
     * 추가내용 : 만기연장 관리회원 현황 조회수
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_MANGI_EXT
     * ================================================================
     * -->
    <select id="DlwPayMap.getMemberMangiExtDataListCount" parameterType="map" resultType="int">
        SELECT /* DlwPayMap.getMemberMangiExtDataListCount */
               COUNT(*) AS ICNT
          FROM ( SELECT 
                     ROW_NUMBER() OVER(ORDER BY MME.ACCNT_NO ASC) AS PAGE_INDX,
                     MME.ACCNT_NO,
                     MME.CELL,
                     MME.ZIP_CODE,
                     MME.ADRESS,
                     MME.EXT_YN,
                     MME.EXT_DAY,
                     MME.INSERT_GBN,
                     MMD.GIFT_CODE,
                     MMG.GIFT_NM,
                     MMD.GIFT_PERIOD,
                     MMD.RECEIVER_NM,
                     MMD.RECEIVER_CELL,
                     MMD.ORDR_DAY,
                     MMD.INVOICE_NUM,
                     MMD.DELIVERY_CORP,
                     MME.EXT_PERIOD,
                     MME.TX_ETC,
                     MME.DEL_FG,
                     MME.REG_DM,
                     MME.CANCEL_DT,
                     MMD.TX_ETC AS TX_ETC_DTL,
                     MBR.MEM_NO,
                     MBR.MEM_NM,
                     (SELECT CD_NM FROM COM_CD WHERE USE_YN = 'Y' AND GRP_CD = '0123' AND COM_CD = MBR.SEX) AS SEX_NM,
                     TO_NUMBER(TO_CHAR(SYSDATE, 'YYYY')) - TO_NUMBER(SUBSTR(MBR.BRTH_MON_DAY, 0,4)) + 1 AS AGE,
                     TRUNC(TO_NUMBER(TO_CHAR(SYSDATE, 'YYYY')) - TO_NUMBER(SUBSTR(MBR.BRTH_MON_DAY, 0,4)) + 1, -1) AS AGE_GROUP,
                     PROD_NM,
                     MPA.JOIN_DT,
                     DECODE(MPA.KSTBIT,'01','접수','02','가입','03','해약','04','행사','접수(문의)') AS KSTBIT,
                     (SELECT COUNT(*) FROM PAY_MNG WHERE ACCNT_NO = MME.ACCNT_NO AND DEL_FG = 'N') AS PAY_COUNT,
                     (SELECT EMPLE_NM FROM EMPLOYEE WHERE EMPLE_NO = MME.REG_MAN) AS REG_MAN,
                     RS.RESN_ACPT_DAY,
                     EV.EVENT_REG_DAY
                 FROM TB_MEMBER_MANGI_EXT MME LEFT OUTER JOIN 
                      TB_MEMBER_MANGI_DTL MMD ON MME.ACCNT_NO = MMD.ACCNT_NO AND MMD.DEL_FG = 'N' LEFT OUTER JOIN 
                      TB_MEMBER_MANGI_GIFTSET MMG ON MMD.GIFT_CODE = MMG.GIFT_CODE INNER JOIN 
                      MEM_PROD_ACCNT MPA ON MME.ACCNT_NO = MPA.ACCNT_NO AND MPA.DEL_FG = 'N' INNER JOIN 
                      MEMBER MBR ON MPA.MEM_NO = MBR.MEM_NO AND MBR.DEL_FG = 'N' INNER JOIN
                      PRODUCT PD ON MPA.PROD_CD = PD.PROD_CD LEFT OUTER JOIN
                      RESCISSION RS ON MPA.ACCNT_NO = RS.ACCNT_NO AND RS.DEL_FG = 'N' LEFT OUTER JOIN
                      EVENT EV ON MPA.ACCNT_NO = EV.ACCNT_NO AND EV.DEL_FG = 'N'
                  WHERE 1=1
                    AND MME.DEL_FG = 'N'
                  <if test="accnt_no != null and accnt_no != ''">
                     AND MME.ACCNT_NO = #{accnt_no}
                  </if>
                  <if test="cell != null and cell != ''">
                     AND MME.CELL = #{cell}
                  </if>
                  <if test="insert_gbn != null and insert_gbn != ''">
                     AND MME.INSERT_GBN = #{insert_gbn}
                  </if>
                  <if test="(stt_dt != null and stt_dt != '') and (end_dt != null and end_dt != '')">
                       <if test="dt_typ == '01'">
                           AND TO_CHAR(MME.REG_DM, 'YYYYMMDD') BETWEEN #{stt_dt} AND #{end_dt}
                       </if>
                       <if test="dt_typ == '02'">
                           AND TO_CHAR(MME.EXT_DAY, 'YYYYMMDD') BETWEEN #{stt_dt} AND #{end_dt}
                       </if>
                       <if test="dt_typ == '03'">
                           AND TO_CHAR(MMD.ORDR_DAY, 'YYYYMMDD') BETWEEN #{stt_dt} AND #{end_dt}
                       </if>
                       <if test="dt_typ == '04'">
                           AND TO_CHAR(MME.CANCEL_DT, 'YYYYMMDD') BETWEEN #{stt_dt} AND #{end_dt}
                       </if>
                       <if test="dt_typ == '05'"> 
			             AND RS.RESN_ACPT_DAY BETWEEN #{stt_dt} AND #{end_dt} 
			           </if>
			           <if test="dt_typ == '06'"> 
			             AND EV.EVENT_REG_DAY BETWEEN #{stt_dt} AND #{end_dt} 
			           </if>                       
                   </if> 
               ) MAIN_TBL
         WHERE 1=1
    </select>

    <!-- ================================================================
     * 날짜 : 20190103
     * 이름 : 송준빈
     * 추가내용 : 만기연장 관리회원 현황 리스트
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_MANGI_EXT
     * ================================================================
     * -->
    <select id="DlwPayMap.getMemberMangiExtDataList" parameterType="map" resultType="resultMap">
        SELECT /* DlwPayMap.getMemberMangiExtDataList */
               MAIN_TBL.*
          FROM ( SELECT 
                     ROW_NUMBER() OVER(ORDER BY MME.ACCNT_NO ASC) AS PAGE_INDX,
                     MME.ACCNT_NO,
                     MME.CELL,
                     MME.ZIP_CODE,
                     MME.ADRESS,
                     MME.EXT_YN,
                     MME.EXT_DAY,
                     MME.INSERT_GBN,
                     MMD.GIFT_CODE,
                     MMG.GIFT_NM,
                     MMD.GIFT_PERIOD,
                     MMD.RECEIVER_NM,
                     MMD.RECEIVER_CELL,
                     MMD.ORDR_DAY,
                     MMD.INVOICE_NUM,
                     MMD.DELIVERY_CORP,
                     MME.EXT_PERIOD,
                     MME.TX_ETC,
                     MME.DEL_FG,
                     MME.REG_DM,
                     MME.CANCEL_DT,
                     MMD.TX_ETC AS TX_ETC_DTL,
                     MBR.MEM_NO,
                     MBR.MEM_NM,
                     (SELECT CD_NM FROM COM_CD WHERE USE_YN = 'Y' AND GRP_CD = '0123' AND COM_CD = MBR.SEX) AS SEX_NM,
                     TO_NUMBER(TO_CHAR(SYSDATE, 'YYYY')) - TO_NUMBER(SUBSTR(MBR.BRTH_MON_DAY, 0,4)) + 1 AS AGE,
                     TRUNC(TO_NUMBER(TO_CHAR(SYSDATE, 'YYYY')) - TO_NUMBER(SUBSTR(MBR.BRTH_MON_DAY, 0,4)) + 1, -1) AS AGE_GROUP,
                     PROD_NM,
                     MPA.JOIN_DT,
                     DECODE(MPA.KSTBIT,'01','접수','02','가입','03','해약','04','행사','접수(문의)') AS KSTBIT,
                     (SELECT COUNT(*) FROM PAY_MNG WHERE ACCNT_NO = MME.ACCNT_NO AND DEL_FG = 'N') AS PAY_COUNT,
                     (SELECT EMPLE_NM FROM EMPLOYEE WHERE EMPLE_NO = MME.REG_MAN) AS REG_MAN,
                     RS.RESN_ACPT_DAY,
                     EV.EVENT_REG_DAY
                 FROM TB_MEMBER_MANGI_EXT MME LEFT OUTER JOIN 
                      TB_MEMBER_MANGI_DTL MMD ON MME.ACCNT_NO = MMD.ACCNT_NO AND MMD.DEL_FG = 'N' LEFT OUTER JOIN 
                      TB_MEMBER_MANGI_GIFTSET MMG ON MMD.GIFT_CODE = MMG.GIFT_CODE INNER JOIN 
                      MEM_PROD_ACCNT MPA ON MME.ACCNT_NO = MPA.ACCNT_NO AND MPA.DEL_FG = 'N' INNER JOIN 
                      MEMBER MBR ON MPA.MEM_NO = MBR.MEM_NO AND MBR.DEL_FG = 'N' INNER JOIN
                      PRODUCT PD ON MPA.PROD_CD = PD.PROD_CD LEFT OUTER JOIN
                      RESCISSION RS ON MPA.ACCNT_NO = RS.ACCNT_NO AND RS.DEL_FG = 'N' LEFT OUTER JOIN
                      EVENT EV ON MPA.ACCNT_NO = EV.ACCNT_NO AND EV.DEL_FG = 'N'
                  WHERE 1=1
                    AND MME.DEL_FG = 'N'
                  <if test="accnt_no != null and accnt_no != ''">
                     AND MME.ACCNT_NO = #{accnt_no}
                  </if>
                  <if test="cell != null and cell != ''">
                     AND MME.CELL = #{cell}
                  </if>
                  <if test="insert_gbn != null and insert_gbn != ''">
                     AND MME.INSERT_GBN = #{insert_gbn}
                  </if>
                  <if test="(stt_dt != null and stt_dt != '') and (end_dt != null and end_dt != '')">
                       <if test="dt_typ == '01'">
                           AND TO_CHAR(MME.REG_DM, 'YYYYMMDD') BETWEEN #{stt_dt} AND #{end_dt}
                       </if>
                       <if test="dt_typ == '02'">
                           AND TO_CHAR(MME.EXT_DAY, 'YYYYMMDD') BETWEEN #{stt_dt} AND #{end_dt}
                       </if>
                       <if test="dt_typ == '03'">
                           AND TO_CHAR(MMD.ORDR_DAY, 'YYYYMMDD') BETWEEN #{stt_dt} AND #{end_dt}
                       </if>
                       <if test="dt_typ == '04'">
                           AND TO_CHAR(MME.CANCEL_DT, 'YYYYMMDD') BETWEEN #{stt_dt} AND #{end_dt}
                       </if>
                       <if test="dt_typ == '05'"> 
			             AND RS.RESN_ACPT_DAY BETWEEN #{stt_dt} AND #{end_dt} 
			           </if>
			           <if test="dt_typ == '06'"> 
			             AND EV.EVENT_REG_DAY BETWEEN #{stt_dt} AND #{end_dt} 
			           </if>    
                   </if>
               ) MAIN_TBL
         WHERE 1=1
                  
         <if test="startLine != null and startLine != '' and endLine != null and endLine != ''">
             AND PAGE_INDX <![CDATA[>=]]> #{startLine}
             AND PAGE_INDX <![CDATA[<]]> #{endLine}
         </if>
    </select>

    <!-- ================================================================
     * 날짜 : 20190123
     * 이름 : 송준빈
     * 추가내용 : 만기연장 관리회원 현황 조회수 엑셀 OUTPUT
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_MANGI_EXT
     * ================================================================
     * -->
    <select id="DlwPayMap.getMemberMangiExtDataListExcelCount" parameterType="map" resultType="int">
        SELECT /* DlwPayMap.getMemberMangiExtDataListCount */
               COUNT(*) AS ICNT 
          FROM ( SELECT ROW_NUMBER() OVER(ORDER BY MME.ACCNT_NO ASC) AS PAGE_INDX
                       ,MME.ACCNT_NO
                       ,MME.CELL
                       ,MME.ZIP_CODE
                       ,MME.ADRESS
                       ,MME.EXT_YN
                       ,MME.EXT_DAY
                       ,MME.INSERT_GBN
                       ,CASE WHEN MME.INSERT_GBN = 'A' THEN '인바운드'
                             WHEN MME.INSERT_GBN = 'B' THEN '아웃바운드'
                             ELSE ''
                        END AS INSERT_GBN_NM
                       ,MMD.GIFT_CODE
                       ,MMG.GIFT_NM
                       ,MMD.GIFT_PERIOD
                       ,MMD.RECEIVER_NM
                       ,MMD.RECEIVER_CELL
                       ,MMD.ORDR_DAY
                       ,MMD.INVOICE_NUM
                       ,MMD.DELIVERY_CORP
                       ,CASE WHEN MMD.DELIVERY_CORP = 'DELI0001' THEN '우체국택배'
                             WHEN MMD.DELIVERY_CORP = 'DELI0002' THEN 'CJ대한통운'
                             WHEN MMD.DELIVERY_CORP = 'DELI0003' THEN '한진택배'
                             WHEN MMD.DELIVERY_CORP = 'DELI0004' THEN '롯데택배'
                             WHEN MMD.DELIVERY_CORP = 'DELI0005' THEN '로젠택배'
                             WHEN MMD.DELIVERY_CORP = 'DELI0006' THEN 'KGB택배'
                             WHEN MMD.DELIVERY_CORP = 'DELI0007' THEN '포스트박스'
                             WHEN MMD.DELIVERY_CORP = 'DELI0008' THEN '경동합동택배'
                             WHEN MMD.DELIVERY_CORP = 'DELI0009' THEN 'KTX 특송서비스'
                             WHEN MMD.DELIVERY_CORP = 'DELI0010' THEN 'SLX로지스'
                             WHEN MMD.DELIVERY_CORP = 'DELI0011' THEN '판토스'
                             WHEN MMD.DELIVERY_CORP = 'DELI0012' THEN '아주택배'
                             WHEN MMD.DELIVERY_CORP = 'DELI0013' THEN '고려택배'
                             WHEN MMD.DELIVERY_CORP = 'DELI0014' THEN '하나로택배'
                             WHEN MMD.DELIVERY_CORP = 'DELI0015' THEN '대신택배'
                             WHEN MMD.DELIVERY_CORP = 'DELI0016' THEN '천일택배'
                             WHEN MMD.DELIVERY_CORP = 'DELI0017' THEN '건영택배'
                             WHEN MMD.DELIVERY_CORP = 'DELI0018' THEN '한의사랑택배'
                             WHEN MMD.DELIVERY_CORP = 'DELI0019' THEN '용마로지스'
                             WHEN MMD.DELIVERY_CORP = 'DELI0020' THEN '일양로지스'
                             WHEN MMD.DELIVERY_CORP = 'DELI0021' THEN 'ACIExpress'
                             WHEN MMD.DELIVERY_CORP = 'DELI0022' THEN '한신택배'
                             WHEN MMD.DELIVERY_CORP = 'DELI0023' THEN '성화기업택배'
                             WHEN MMD.DELIVERY_CORP = 'DELI0024' THEN '기타'
                             ELSE ''
                         END AS DELIVERY_CORP_NM
                       ,MME.EXT_PERIOD
                       ,MME.TX_ETC
                       ,MME.DEL_FG
                       ,MME.REG_DM
                       ,MME.CANCEL_DT
                       ,MMD.TX_ETC AS TX_ETC_DTL
                       
                       ,MBR.MEM_NO
                       ,MBR.MEM_NM
                       ,(SELECT CD_NM
                           FROM COM_CD
                          WHERE USE_YN = 'Y'
                            AND GRP_CD = '0123'
                            AND COM_CD = MBR.SEX) AS SEX_NM
                       ,TO_NUMBER(TO_CHAR(SYSDATE, 'YYYY')) - TO_NUMBER(SUBSTR(MBR.BRTH_MON_DAY, 0,4)) + 1 AS  AGE
                       ,TRUNC(TO_NUMBER(TO_CHAR(SYSDATE, 'YYYY')) - TO_NUMBER(SUBSTR(MBR.BRTH_MON_DAY, 0,4)) + 1, -1) AS AGE_GROUP                                    
                       ,FN_PROD_NM(MPA.PROD_CD) AS PROD_NM
                       ,MPA.JOIN_DT
                       , (SELECT COUNT(*)
                          FROM PAY_MNG
                         WHERE ACCNT_NO = MME.ACCNT_NO
                           AND DEL_FG = 'N') AS PAY_COUNT
                       ,DECODE(MPA.KSTBIT,'01','접수'
                                         ,'02','가입'
                                         ,'03','해약'
                                         ,'04','행사'
                                         ,'접수(문의)') AS KSTBIT
                       ,LF_DMUSER.FN_EMPLE_NM(MME.REG_MAN) AS REG_MAN
                       ,RS.RESN_ACPT_DAY
                       ,EV.EVENT_REG_DAY
                   FROM LF_DMUSER.TB_MEMBER_MANGI_EXT MME
                   LEFT OUTER JOIN TB_MEMBER_MANGI_DTL MMD
                           ON MME.ACCNT_NO = MMD.ACCNT_NO
                           AND MMD.DEL_FG = 'N'
                   LEFT OUTER JOIN LF_DMUSER.TB_MEMBER_MANGI_GIFTSET MMG
                           ON MMD.GIFT_CODE = MMG.GIFT_CODE
                   INNER JOIN MEM_PROD_ACCNT MPA
                           ON MME.ACCNT_NO = MPA.ACCNT_NO AND MPA.DEL_FG = 'N'
                   INNER JOIN MEMBER MBR
                           ON MPA.MEM_NO = MBR.MEM_NO AND MBR.DEL_FG = 'N'
                   LEFT OUTER JOIN RESCISSION RS 
                           ON MPA.ACCNT_NO = RS.ACCNT_NO AND RS.DEL_FG = 'N' 
                   LEFT OUTER JOIN EVENT EV 
                           ON MPA.ACCNT_NO = EV.ACCNT_NO AND EV.DEL_FG = 'N'
                  WHERE 1=1
                    AND MME.DEL_FG = 'N'
                  <if test="accnt_no != null and accnt_no != ''">
                     AND MME.ACCNT_NO = #{accnt_no}
                  </if>
                  <if test="cell != null and cell != ''">
                     AND MME.CELL = #{cell}
                  </if>
                  <if test="insert_gbn != null and insert_gbn != ''">
                     AND MME.INSERT_GBN = #{insert_gbn}
                  </if>
                  <if test="(stt_dt != null and stt_dt != '') and (end_dt != null and end_dt != '')">
                       <if test="dt_typ == '01'">
                           AND TO_CHAR(MME.REG_DM, 'YYYYMMDD') BETWEEN #{stt_dt} AND #{end_dt}
                       </if>
                       <if test="dt_typ == '02'">
                           AND TO_CHAR(MME.EXT_DAY, 'YYYYMMDD') BETWEEN #{stt_dt} AND #{end_dt}
                       </if>
                       <if test="dt_typ == '03'">
                           AND TO_CHAR(MMD.ORDR_DAY, 'YYYYMMDD') BETWEEN #{stt_dt} AND #{end_dt}
                       </if>
                       <if test="dt_typ == '04'">
                           AND TO_CHAR(MME.CANCEL_DT, 'YYYYMMDD') BETWEEN #{stt_dt} AND #{end_dt}
                       </if>
                       <if test="dt_typ == '05'"> 
			             AND RS.RESN_ACPT_DAY BETWEEN #{stt_dt} AND #{end_dt} 
			           </if>
			           <if test="dt_typ == '06'"> 
			             AND EV.EVENT_REG_DAY BETWEEN #{stt_dt} AND #{end_dt} 
			           </if>
                   </if>
               ) MAIN_TBL
         WHERE 1=1
    </select>

    <!-- ================================================================
     * 날짜 : 20190123
     * 이름 : 송준빈
     * 추가내용 : 만기연장 관리회원 현황 리스트 엑셀 OUTPUT
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_MANGI_EXT
     * ================================================================
     * -->
    <select id="DlwPayMap.getMemberMangiExtDataListExcel" parameterType="map" resultType="resultMap">
        SELECT /* DlwPayMap.getMemberMangiExtDataList */
               MAIN_TBL.*
          FROM ( SELECT ROW_NUMBER() OVER(ORDER BY MME.ACCNT_NO ASC) AS PAGE_INDX
                       ,MME.ACCNT_NO
                       ,MME.CELL
                       ,MME.ZIP_CODE
                       ,MME.ADRESS
                       ,MME.EXT_YN
                       ,MME.EXT_DAY
                       ,MME.INSERT_GBN
                       ,CASE WHEN MME.INSERT_GBN = 'A' THEN '인바운드'
                             WHEN MME.INSERT_GBN = 'B' THEN '아웃바운드'
                             ELSE ''
                        END AS INSERT_GBN_NM
                       ,MMD.GIFT_CODE
                       ,MMG.GIFT_NM
                       ,MMD.GIFT_PERIOD
                       ,MMD.RECEIVER_NM
                       ,MMD.RECEIVER_CELL
                       ,MMD.ORDR_DAY
                       ,MMD.INVOICE_NUM
                       ,MMD.DELIVERY_CORP
                       ,CASE WHEN MMD.DELIVERY_CORP = 'DELI0001' THEN '우체국택배'
                             WHEN MMD.DELIVERY_CORP = 'DELI0002' THEN 'CJ대한통운'
                             WHEN MMD.DELIVERY_CORP = 'DELI0003' THEN '한진택배'
                             WHEN MMD.DELIVERY_CORP = 'DELI0004' THEN '롯데택배'
                             WHEN MMD.DELIVERY_CORP = 'DELI0005' THEN '로젠택배'
                             WHEN MMD.DELIVERY_CORP = 'DELI0006' THEN 'KGB택배'
                             WHEN MMD.DELIVERY_CORP = 'DELI0007' THEN '포스트박스'
                             WHEN MMD.DELIVERY_CORP = 'DELI0008' THEN '경동합동택배'
                             WHEN MMD.DELIVERY_CORP = 'DELI0009' THEN 'KTX 특송서비스'
                             WHEN MMD.DELIVERY_CORP = 'DELI0010' THEN 'SLX로지스'
                             WHEN MMD.DELIVERY_CORP = 'DELI0011' THEN '판토스'
                             WHEN MMD.DELIVERY_CORP = 'DELI0012' THEN '아주택배'
                             WHEN MMD.DELIVERY_CORP = 'DELI0013' THEN '고려택배'
                             WHEN MMD.DELIVERY_CORP = 'DELI0014' THEN '하나로택배'
                             WHEN MMD.DELIVERY_CORP = 'DELI0015' THEN '대신택배'
                             WHEN MMD.DELIVERY_CORP = 'DELI0016' THEN '천일택배'
                             WHEN MMD.DELIVERY_CORP = 'DELI0017' THEN '건영택배'
                             WHEN MMD.DELIVERY_CORP = 'DELI0018' THEN '한의사랑택배'
                             WHEN MMD.DELIVERY_CORP = 'DELI0019' THEN '용마로지스'
                             WHEN MMD.DELIVERY_CORP = 'DELI0020' THEN '일양로지스'
                             WHEN MMD.DELIVERY_CORP = 'DELI0021' THEN 'ACIExpress'
                             WHEN MMD.DELIVERY_CORP = 'DELI0022' THEN '한신택배'
                             WHEN MMD.DELIVERY_CORP = 'DELI0023' THEN '성화기업택배'
                             WHEN MMD.DELIVERY_CORP = 'DELI0024' THEN '기타'
                             ELSE ''
                         END AS DELIVERY_CORP_NM
                       ,MME.EXT_PERIOD
                       ,MME.TX_ETC
                       ,MME.DEL_FG
                       ,MME.REG_DM
                       ,MME.CANCEL_DT
                       ,MMD.TX_ETC AS TX_ETC_DTL
                       
                       ,MBR.MEM_NO
                       ,MBR.MEM_NM
                       ,(SELECT CD_NM
                           FROM COM_CD
                          WHERE USE_YN = 'Y'
                            AND GRP_CD = '0123'
                            AND COM_CD = MBR.SEX) AS SEX_NM
                       ,TO_NUMBER(TO_CHAR(SYSDATE, 'YYYY')) - TO_NUMBER(SUBSTR(MBR.BRTH_MON_DAY, 0,4)) + 1 AS  AGE
                       ,TRUNC(TO_NUMBER(TO_CHAR(SYSDATE, 'YYYY')) - TO_NUMBER(SUBSTR(MBR.BRTH_MON_DAY, 0,4)) + 1, -1) AS AGE_GROUP                                    
                       ,FN_PROD_NM(MPA.PROD_CD) AS PROD_NM
                       ,MPA.JOIN_DT
                       , (SELECT COUNT(*)
                          FROM PAY_MNG
                         WHERE ACCNT_NO = MME.ACCNT_NO
                           AND DEL_FG = 'N') AS PAY_COUNT
                       ,DECODE(MPA.KSTBIT,'01','접수'
                                         ,'02','가입'
                                         ,'03','해약'
                                         ,'04','행사'
                                         ,'접수(문의)') AS KSTBIT
                       ,LF_DMUSER.FN_EMPLE_NM(MME.REG_MAN) AS REG_MAN
                       ,RS.RESN_ACPT_DAY
                       ,EV.EVENT_REG_DAY
                   FROM LF_DMUSER.TB_MEMBER_MANGI_EXT MME
                   LEFT OUTER JOIN TB_MEMBER_MANGI_DTL MMD
                           ON MME.ACCNT_NO = MMD.ACCNT_NO
                           AND MMD.DEL_FG = 'N'
                   LEFT OUTER JOIN LF_DMUSER.TB_MEMBER_MANGI_GIFTSET MMG
                           ON MMD.GIFT_CODE = MMG.GIFT_CODE
                   INNER JOIN MEM_PROD_ACCNT MPA
                           ON MME.ACCNT_NO = MPA.ACCNT_NO AND MPA.DEL_FG = 'N'
                   INNER JOIN MEMBER MBR
                           ON MPA.MEM_NO = MBR.MEM_NO AND MBR.DEL_FG = 'N'
                   LEFT OUTER JOIN RESCISSION RS 
                           ON MPA.ACCNT_NO = RS.ACCNT_NO AND RS.DEL_FG = 'N' 
                   LEFT OUTER JOIN EVENT EV 
                           ON MPA.ACCNT_NO = EV.ACCNT_NO AND EV.DEL_FG = 'N'
                  WHERE 1=1
                    AND MME.DEL_FG = 'N'
                  <if test="accnt_no != null and accnt_no != ''">
                     AND MME.ACCNT_NO = #{accnt_no}
                  </if>
                  <if test="cell != null and cell != ''">
                     AND MME.CELL = #{cell}
                  </if>
                  <if test="insert_gbn != null and insert_gbn != ''">
                     AND MME.INSERT_GBN = #{insert_gbn}
                  </if>
                  <if test="(stt_dt != null and stt_dt != '') and (end_dt != null and end_dt != '')">
                       <if test="dt_typ == '01'">
                           AND TO_CHAR(MME.REG_DM, 'YYYYMMDD') BETWEEN #{stt_dt} AND #{end_dt}
                       </if>
                       <if test="dt_typ == '02'">
                           AND TO_CHAR(MME.EXT_DAY, 'YYYYMMDD') BETWEEN #{stt_dt} AND #{end_dt}
                       </if>
                       <if test="dt_typ == '03'">
                           AND TO_CHAR(MMD.ORDR_DAY, 'YYYYMMDD') BETWEEN #{stt_dt} AND #{end_dt}
                       </if>
                       <if test="dt_typ == '04'">
                           AND TO_CHAR(MME.CANCEL_DT, 'YYYYMMDD') BETWEEN #{stt_dt} AND #{end_dt}
                       </if>
                       <if test="dt_typ == '05'"> 
			             AND RS.RESN_ACPT_DAY BETWEEN #{stt_dt} AND #{end_dt} 
			           </if>
			           <if test="dt_typ == '06'"> 
			             AND EV.EVENT_REG_DAY BETWEEN #{stt_dt} AND #{end_dt} 
			           </if>
                   </if>
               ) MAIN_TBL
         WHERE 1=1
         <if test="startLine != null and startLine != '' and endLine != null and endLine != ''">
             AND PAGE_INDX <![CDATA[>=]]> #{startLine}
             AND PAGE_INDX <![CDATA[<]]> #{endLine}
         </if>
    </select>

    <!-- ================================================================
     * 날짜 : 20190103
     * 이름 : 송준빈
     * 추가내용 : 만기연장 관리회원 등록 여부 조회
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_MANGI_EXT
     * ================================================================
     * -->
    <select id="DlwPayMap.getMemberMangiExtConfirmCount" parameterType="map" resultType="int">
        SELECT /* DlwPayMap.getMemberMangiExtConfirmCount */
               COUNT(*) AS ICNT
          FROM ( SELECT ACCNT_NO
                       ,CELL
                       ,ZIP_CODE
                       ,ADRESS
                       ,EXT_YN
                       ,EXT_PERIOD
                       ,EXT_DAY
                       ,INSERT_GBN
                       ,TX_ETC
                       ,DEL_FG
                       ,REG_DM
                       ,CANCEL_DT
                   FROM LF_DMUSER.TB_MEMBER_MANGI_EXT MME
                  WHERE 1=1
                    AND DEL_FG = 'N'
                    AND ACCNT_NO = #{accnt_no}
               ) MAIN_TBL
         WHERE 1=1
    </select>

    <!-- ================================================================
     * 날짜 : 20190103
     * 이름 : 송준빈
     * 추가내용 : 만기연장 관리회원 등록 여부 데이터 조회 (메인화면에서 사용함)
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_MANGI_EXT
     * ================================================================
     * -->
    <select id="DlwPayMap.getMemberMangiExtConfirmList" parameterType="map" resultType="resultMap">
        SELECT /* DlwPayMap.getMemberMangiExtConfirmList */
               MAIN_TBL.*
          FROM ( SELECT ACCNT_NO
                       ,CELL
                       ,ZIP_CODE
                       ,ADRESS
                       ,EXT_YN
                       ,EXT_PERIOD
                       ,EXT_DAY
                       ,INSERT_GBN
                       ,TX_ETC
                       ,DEL_FG
                       ,REG_DM
                       ,CANCEL_DT
                   FROM LF_DMUSER.TB_MEMBER_MANGI_EXT MME
                  WHERE 1=1
                    AND DEL_FG = 'N'
                    AND ACCNT_NO = #{accnt_no}
               ) MAIN_TBL
         WHERE 1=1
    </select>

    <!-- ================================================================
     * 날짜 : 20190103
     * 이름 : 송준빈
     * 추가내용 : 만기연장 관리회원 엑셀 업로드
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_MANGI_EXT
     * ================================================================
     * -->
    <insert id="DlwPayMap.insertUserExcelUpload" parameterType="map">
        INSERT /* DlwPayMap.insertUserExcelUpload */
          INTO LF_DMUSER.TB_MEMBER_MANGI_EXT(ACCNT_NO, CELL, ZIP_CODE, ADRESS, EXT_YN, EXT_PERIOD, EXT_DAY, INSERT_GBN, TX_ETC, DEL_FG, REG_DM, CANCEL_DT, REG_MAN, UPD_MAN, UPD_DM)
        VALUES(#{accnt_no}, #{cell}, #{zip_code}, #{adress}, '', '', '', 'A', '', 'N', SYSDATE, '', #{rgsr_id}, #{rgsr_id}, SYSDATE)
    </insert>

    <!-- ================================================================
     * 날짜 : 20190103
     * 이름 : 송준빈
     * 추가내용 : 만기연장 관리회원 엑셀 업로드
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_MANGI_EXT
     * ================================================================
     * -->
    <insert id="DlwPayMap.insertProdExcelUpload" parameterType="map">
        BEGIN
              DECLARE N_TOT_PERIOD NUMBER;

              BEGIN
                  SELECT NVL(EXT_PERIOD, 0) +
                         NVL((SELECT EXT_PERIOD FROM LF_DMUSER.TB_MEMBER_MANGI_EXT MME WHERE 1=1 AND MME.DEL_FG = 'N' AND MME.ACCNT_NO = #{accnt_no}), 0) AS TOT_PERIOD
                    INTO N_TOT_PERIOD
                    FROM LF_DMUSER.TB_MEMBER_MANGI_GIFTSET MMG WHERE 1=1 AND DEL_FG = 'N' AND GIFT_CODE = #{gift_code};

                  IF N_TOT_PERIOD <![CDATA[<=]]> 4 THEN
                      INSERT INTO LF_DMUSER.TB_MEMBER_MANGI_DTL(ACCNT_NO, ACCNT_SEQ, GIFT_CODE, GIFT_PERIOD, RECEIVER_NM, RECEIVER_CELL, ORDR_DAY, INVOICE_NUM, DELIVERY_CORP, TX_ETC, DEL_FG, REG_MAN, REG_DM, UPD_MAN, UPD_DM)
                           VALUES (#{accnt_no},
                                   (SELECT NVL(MAX(ACCNT_SEQ) , 0) + 1 FROM LF_DMUSER.TB_MEMBER_MANGI_DTL WHERE 1=1 AND ACCNT_NO = #{accnt_no}),
                                   #{gift_code},
                                   (SELECT EXT_PERIOD FROM LF_DMUSER.TB_MEMBER_MANGI_GIFTSET MMG WHERE 1=1 AND DEL_FG = 'N' AND GIFT_CODE = #{gift_code}),
                                   #{receiver_nm}, #{receiver_cell}, '', '', '', '', 'N', #{rgsr_id}, SYSDATE, #{rgsr_id}, SYSDATE);
                  END IF;
              END;
          END;
    </insert>

    <!-- ================================================================
     * 날짜 : 20190103
     * 이름 : 송준빈
     * 추가내용 : 만기연장 발주,송장정보 엑셀 업로드
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_MANGI_DTL
     * ================================================================
     * -->
    <insert id="DlwPayMap.mergeOrderExcelUpload" parameterType="map">
        BEGIN /* DlwPayMap.mergeOrderExcelUpload */
            MERGE INTO LF_DMUSER.TB_MEMBER_MANGI_DTL MMDA
            USING DUAL MMDB
                  ON (MMDA.DEL_FG = 'N' AND MMDA.ACCNT_NO = #{accnt_no} AND MMDA.GIFT_CODE = #{gift_code})
            WHEN MATCHED THEN
                UPDATE
                      SET DELIVERY_CORP = #{delivery_corp}
                      ,INVOICE_NUM   = #{invoice_num}
                      ,TX_ETC        = #{tx_etc}
                      ,ORDR_DAY      = TO_DATE(#{ordr_day}, 'YYYYMMDD');
                      ,UPD_MAN       = #{rgsr_id}
                      ,UPD_DM        = SYSDATE
        END;
    </insert>

    <!-- ================================================================
     * 날짜 : 20190103
     * 이름 : 송준빈
     * 추가내용 : 만기연장 상품등록 팝업 조회
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_MANGI_GIFTSET
     * ================================================================
     * -->
    <select id="DlwPayMap.getMemberMangiGiftset" parameterType="map" resultType="resultMap">
        SELECT /* DlwPayMap.getMemberMangiGiftset */
               SERIAL_NUM
              ,GIFT_CODE
              ,GIFT_NM
              ,EXT_PERIOD
              ,EXT_PERIOD || '년' AS EXT_PERIOD_NM
              ,RGSR_TYPE
              ,REG_MAN
              ,REG_DM
              ,UPD_MAN
              ,UPD_DM
              ,DEL_FG
          FROM LF_DMUSER.TB_MEMBER_MANGI_GIFTSET
         WHERE 1=1
           AND DEL_FG = 'N'
           <if test="gift_nm != null and gift_nm != ''">
               AND GIFT_NM LIKE '%' || #{gift_nm} || '%'
           </if>
           <if test="ext_period != null and ext_period != ''">
               AND EXT_PERIOD = #{ext_period}
           </if>
        ORDER BY SERIAL_NUM DESC
    </select>

    <!-- ================================================================
     * 날짜 : 20190103
     * 이름 : 송준빈
     * 추가내용 : 만기연장 상품등록 팝업 등록
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_MANGI_GIFTSET
     * ================================================================
     * -->
    <insert id="DlwPayMap.insertMemberMangiGiftset" parameterType="map">
        INSERT INTO /* DlwPayMap.insertMemberMangiGiftset */
                    LF_DMUSER.TB_MEMBER_MANGI_GIFTSET
             VALUES( (SELECT NVL(MAX(SERIAL_NUM) , 0) + 1 FROM LF_DMUSER.TB_MEMBER_MANGI_GIFTSET WHERE 1=1),
                     (SELECT LPAD((SELECT NVL(MAX(SERIAL_NUM) , 0) + 1 FROM LF_DMUSER.TB_MEMBER_MANGI_GIFTSET WHERE 1=1), 5, '0') FROM DUAL),
                     #{gift_nm}, #{ext_period}, #{rgsr_type}, #{rgsr_id}, SYSDATE, '', '', 'N')
    </insert>

    <!-- ================================================================
     * 날짜 : 20190103
     * 이름 : 송준빈
     * 추가내용 : 만기연장 상품등록 팝업 삭제
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_MANGI_GIFTSET
     * ================================================================
     * -->
    <delete id="DlwPayMap.deleteMemberMangiGiftset" parameterType="map">
        UPDATE /* DlwPayMap.deleteMemberMangiGiftset */
               LF_DMUSER.TB_MEMBER_MANGI_GIFTSET
           SET DEL_FG = 'Y'
              ,UPD_MAN = #{rgsr_id}
              ,UPD_DM = SYSDATE
         WHERE 1=1
           AND DEL_FG = 'N'
           AND SERIAL_NUM = #{serial_num}
    </delete>

    <!-- ================================================================
     * 날짜 : 20190103
     * 이름 : 송준빈
     * 추가내용 : 만기연장 관리회원정보 수정
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_MANGI_EXT
     * ================================================================
     * -->
    <update id="DlwPayMap.updateMemberMangiExtDataList" parameterType="map">
        /* DlwPayMap.updateMemberMangiExtDataList */
        MERGE INTO LF_DMUSER.TB_MEMBER_MANGI_EXT MMEA
            USING DUAL MMEB
                  ON (MMEA.DEL_FG = 'N' AND MMEA.ACCNT_NO = #{accnt_no})
            WHEN MATCHED THEN
                UPDATE
                   SET
                       CELL        = #{cell}
                      ,ZIP_CODE    = #{zip_code}
                      ,ADRESS      = #{adress}
                      ,EXT_YN      = #{ext_yn}
                      ,EXT_PERIOD  = (SELECT SUM(MMD.GIFT_PERIOD) AS SUM_PERIOD FROM LF_DMUSER.TB_MEMBER_MANGI_DTL MMD WHERE 1=1 AND MMD.DEL_FG = 'N' AND MMD.ACCNT_NO = #{accnt_no})
                      ,TX_ETC      = #{tx_etc}
                      <if test="ext_yn != null and ext_yn != '' and ext_yn.equalsIgnoreCase('Y')">
                          ,EXT_DAY    = NVL2(EXT_DAY, EXT_DAY, SYSDATE)
                          ,CANCEL_DT  = ''
                      </if>
                      <if test="ext_yn != null and ext_yn != '' and ext_yn.equalsIgnoreCase('N')">
                          ,EXT_DAY    = ''
                          ,CANCEL_DT  = SYSDATE
                      </if>
                      ,INSERT_GBN  = #{insert_gbn}
                      ,UPD_MAN     = #{rgsr_id}
                      ,UPD_DM      = SYSDATE
            WHEN NOT MATCHED THEN
                INSERT(ACCNT_NO
                      ,CELL
                      ,ZIP_CODE
                      ,ADRESS
                      ,EXT_YN
                      ,EXT_PERIOD
                      <!-- 
                      <if test="ext_yn != null and ext_yn != ''">
                          ,EXT_DAY
                          ,CANCEL_DT
                      </if>
                       -->
                      ,EXT_DAY
                      ,CANCEL_DT
                      ,INSERT_GBN
                      ,TX_ETC
                      ,DEL_FG
                      ,REG_DM
                      ,REG_MAN
                      ,UPD_MAN
                      ,UPD_DM) 
                VALUES(#{accnt_no}
                      ,#{cell}
                      ,#{zip_code}
                      ,#{adress}
                      ,#{ext_yn}
                      ,(SELECT SUM(MMD.GIFT_PERIOD) AS SUM_PERIOD FROM LF_DMUSER.TB_MEMBER_MANGI_DTL MMD WHERE 1=1 AND MMD.DEL_FG = 'N' AND MMD.ACCNT_NO = #{accnt_no})
                      ,SYSDATE
                      ,''                       
                      <!-- 
                      <if test="ext_yn != null and ext_yn != '' and ext_yn.equalsIgnoreCase('Y')">
                          ,SYSDATE
                          ,''
                      </if>
                      <if test="ext_yn != null and ext_yn != '' and ext_yn.equalsIgnoreCase('N')">
                          ,SYSDATE
                          ,SYSDATE
                      </if>
                       -->
                      ,#{insert_gbn}
                      ,#{tx_etc}
                      ,'N'
                      ,SYSDATE
                      ,#{rgsr_id}
                      ,#{rgsr_id}
                      ,SYSDATE)
    </update>

    <!-- ================================================================
     * 날짜 : 20190115
     * 이름 : 송준빈
     * 추가내용 : 만기연장 상품등록 팝업 조회
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_MANGI_DTL
     * ================================================================
     * -->
    <select id="DlwPayMap.getMemberMangiProdDetail" parameterType="map" resultType="resultMap">
        SELECT /* DlwPayMap.getMemberMangiProdDetail */
               MMD.ACCNT_NO
              ,MMD.ACCNT_SEQ
              ,MMD.GIFT_CODE
              ,MMG.GIFT_NM
              ,MMD.GIFT_PERIOD
              ,MMD.GIFT_PERIOD || '년' AS GIFT_PERIOD_NM
              ,MMD.RECEIVER_NM
              ,MMD.RECEIVER_CELL
              ,MMD.ORDR_DAY
              ,MMD.INVOICE_NUM
              ,MMD.DELIVERY_CORP
              ,MMD.TX_ETC
              ,MMD.DEL_FG
          FROM LF_DMUSER.TB_MEMBER_MANGI_DTL MMD
          LEFT OUTER JOIN LF_DMUSER.TB_MEMBER_MANGI_GIFTSET MMG
                  ON MMD.GIFT_CODE = MMG.GIFT_CODE
         WHERE 1=1
           AND MMD.ACCNT_NO = #{accnt_no}
           AND MMD.DEL_FG = 'N'
        ORDER BY MMD.ACCNT_SEQ ASC
    </select>

    <!-- ================================================================
     * 날짜 : 20190116
     * 이름 : 송준빈
     * 추가내용 : 만기연장 관리회원 상품 팝업 입력
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_MANGI_DTL
     * ================================================================
     * -->
    <insert id="DlwPayMap.insertMemberMangiProdDetail" parameterType="map">
        BEGIN /* DlwPayMap.insertMemberMangiProdDetail */
            INSERT INTO LF_DMUSER.TB_MEMBER_MANGI_DTL(ACCNT_NO, ACCNT_SEQ, GIFT_CODE, GIFT_PERIOD, RECEIVER_NM, RECEIVER_CELL, ORDR_DAY, INVOICE_NUM, DELIVERY_CORP, TX_ETC, DEL_FG, REG_MAN, REG_DM, UPD_MAN, UPD_DM)
                 VALUES (#{accnt_no},
                         (SELECT NVL(MAX(ACCNT_SEQ) , 0) + 1 FROM LF_DMUSER.TB_MEMBER_MANGI_DTL WHERE 1=1 AND ACCNT_NO = #{accnt_no}),
                         #{gift_code},
                         (SELECT EXT_PERIOD FROM LF_DMUSER.TB_MEMBER_MANGI_GIFTSET MMG WHERE 1=1 AND DEL_FG = 'N' AND GIFT_CODE = #{gift_code}),
                         #{receiver_nm}, #{receiver_cell}, TO_DATE(SUBSTR(#{ordr_day}, 0, 8), 'YYYYMMDD'), #{invoice_num}, #{delivery_corp}, #{tx_etc}, 'N', #{rgsr_id}, SYSDATE, #{rgsr_id}, SYSDATE);

            UPDATE LF_DMUSER.TB_MEMBER_MANGI_EXT
               SET EXT_PERIOD  = (SELECT SUM(MMD.GIFT_PERIOD) AS SUM_PERIOD FROM LF_DMUSER.TB_MEMBER_MANGI_DTL MMD WHERE 1=1 AND MMD.DEL_FG = 'N' AND MMD.ACCNT_NO = #{accnt_no})
                  ,CANCEL_DT   = ''
                  ,UPD_MAN     = #{rgsr_id}
                  ,UPD_DM      = SYSDATE
             WHERE 1=1
               AND DEL_FG = 'N'
               AND ACCNT_NO   = #{accnt_no};
        END;
    </insert>

    <!-- ================================================================
     * 날짜 : 20190116
     * 이름 : 송준빈
     * 추가내용 : 만기연장 관리회원 상품 팝업 수정
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_MANGI_DTL
     * ================================================================
     * -->
    <update id="DlwPayMap.updateMemberMangiProdDetail" parameterType="map">
        BEGIN /* DlwPayMap.updateMemberMangiProdDetail */
            UPDATE LF_DMUSER.TB_MEMBER_MANGI_DTL
               SET GIFT_CODE     = #{gift_code}
                     ,GIFT_PERIOD   = #{gift_period}
                     ,RECEIVER_NM   = #{receiver_nm}
                     ,RECEIVER_CELL = #{receiver_cell}
                     ,ORDR_DAY      = TO_DATE(SUBSTR(#{ordr_day}, 0, 8), 'YYYYMMDD')
                     ,INVOICE_NUM   = #{invoice_num}
                     ,DELIVERY_CORP = #{delivery_corp}
                     ,TX_ETC        = #{tx_etc}
                     ,UPD_MAN       = #{rgsr_id}
                     ,UPD_DM        = SYSDATE
             WHERE 1=1
               AND DEL_FG = 'N'
               AND ACCNT_NO   = #{accnt_no}
               AND ACCNT_SEQ  = #{accnt_seq};

            UPDATE LF_DMUSER.TB_MEMBER_MANGI_EXT
               SET EXT_PERIOD  = (SELECT SUM(MMD.GIFT_PERIOD) AS SUM_PERIOD FROM LF_DMUSER.TB_MEMBER_MANGI_DTL MMD WHERE 1=1 AND MMD.DEL_FG = 'N' AND MMD.ACCNT_NO = #{accnt_no})
                  ,UPD_MAN     = #{rgsr_id}
                  ,UPD_DM      = SYSDATE
             WHERE 1=1
               AND DEL_FG = 'N'
               AND ACCNT_NO   = #{accnt_no};
         END;
    </update>

    <!-- ================================================================
     * 날짜 : 20190116
     * 이름 : 송준빈
     * 추가내용 : 만기연장 관리회원 상품 팝업 삭제
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_MANGI_DTL
     * ================================================================
     * -->
    <delete id="DlwPayMap.deleteMemberMangiProdDetail" parameterType="map">
        BEGIN /* DlwPayMap.deleteMemberMangiProdDetail */
            UPDATE LF_DMUSER.TB_MEMBER_MANGI_DTL
               SET DEL_FG = 'Y'
                  ,UPD_MAN = #{rgsr_id}
                  ,UPD_DM  = SYSDATE
             WHERE 1=1
               AND DEL_FG = 'N'
               AND ACCNT_NO   = #{accnt_no}
               AND ACCNT_SEQ  = #{accnt_seq};

           UPDATE LF_DMUSER.TB_MEMBER_MANGI_EXT
               SET EXT_PERIOD  = (SELECT SUM(MMD.GIFT_PERIOD) AS SUM_PERIOD FROM LF_DMUSER.TB_MEMBER_MANGI_DTL MMD WHERE 1=1 AND MMD.DEL_FG = 'N' AND MMD.ACCNT_NO = #{accnt_no})
                  ,EXT_YN = 'N'
                  ,EXT_DAY    = ''
                  ,CANCEL_DT = SYSDATE
                  ,UPD_MAN = #{rgsr_id}
                  ,UPD_DM = SYSDATE
             WHERE 1=1
               AND DEL_FG = 'N'
               AND ACCNT_NO   = #{accnt_no};
        END;
    </delete>

    <!-- ================================================================
     * 날짜 : 20190222
     * 이름 : 송준빈
     * 추가내용 : 장례이행보증현황 조회수
     * 대상 테이블 : LF_DMUSER.TB_PERF_MAIN
     * ================================================================
     * -->
    <select id="DlwPayMap.getPerfMainDataCount" parameterType="map" resultType="int">
        SELECT /* DlwPayMap.getPerfMainDataCount */
               COUNT(*) AS ICNT
          FROM ( SELECT ROW_NUMBER() OVER(ORDER BY TPM.ACCNT_NO ASC) AS PAGE_INDX
                       ,TPM.ACCNT_NO
                       ,TPM.PERF_DAY
                       ,TPM.PERF_AMT
                       ,(TPM.PERF_AMT*2) AS PERF_IN_AMT
                       ,(PD.PROD_AMT-(TPM.PERF_AMT*2)) AS PERF_DTL_AMT
                       ,TPM.PERF_ETC
                       ,TPM.DEL_FG
                       ,NVL2(EV.ACCNT_NO, 'Y', 'N') AS EV_YN
                       ,EV.EVENT_REG_DAY
                       ,EV.EVENT_PROC_DAY
                       ,EV.EVENT_COMP_DAY
                   FROM LF_DMUSER.TB_PERF_MAIN TPM
                   INNER JOIN LF_DMUSER.MEM_PROD_ACCNT MPA ON TPM.ACCNT_NO = MPA.ACCNT_NO AND MPA.DEL_FG = 'N'
                   INNER JOIN LF_DMUSER.PRODUCT PD ON MPA.PROD_CD = PD.PROD_CD AND PD.DEL_FG = 'N'
                   LEFT OUTER JOIN EVENT EV ON MPA.ACCNT_NO = EV.ACCNT_NO AND EV.DEL_FG = 'N'
                  WHERE 1=1
                    AND TPM.DEL_FG = 'N'
                  <if test="accnt_no != null and accnt_no != ''">
                      AND TPM.ACCNT_NO = #{accnt_no}
                  </if>
               ) MAIN_TBL
         WHERE 1=1
    </select>

    <!-- ================================================================
     * 날짜 : 20190222
     * 이름 : 송준빈
     * 추가내용 : 장례이행보증현황 리스트
     * 대상 테이블 : LF_DMUSER.TB_PERF_MAIN
     * ================================================================
     * -->
    <select id="DlwPayMap.getPerfMainDataList" parameterType="map" resultType="resultMap">
        SELECT /* DlwPayMap.getPerfMainDataList */
               MAIN_TBL.*
          FROM ( SELECT ROW_NUMBER() OVER(ORDER BY TPM.ACCNT_NO ASC) AS PAGE_INDX
                       ,TPM.ACCNT_NO
                       ,TPM.PERF_DAY
                       ,TPM.PERF_AMT
                       ,(TPM.PERF_AMT*2) AS PERF_IN_AMT
                       ,(PD.PROD_AMT-(TPM.PERF_AMT*2)) AS PERF_DTL_AMT
                       ,TPM.PERF_ETC
                       ,TPM.DEL_FG
                       ,NVL2(EV.ACCNT_NO, 'Y', 'N') AS EV_YN
                       ,EV.EVENT_REG_DAY
                       ,EV.EVENT_PROC_DAY
                       ,EV.EVENT_COMP_DAY
                   FROM LF_DMUSER.TB_PERF_MAIN TPM
                   INNER JOIN LF_DMUSER.MEM_PROD_ACCNT MPA ON TPM.ACCNT_NO = MPA.ACCNT_NO AND MPA.DEL_FG = 'N'
                   INNER JOIN LF_DMUSER.PRODUCT PD ON MPA.PROD_CD = PD.PROD_CD AND PD.DEL_FG = 'N'
                   LEFT OUTER JOIN EVENT EV ON MPA.ACCNT_NO = EV.ACCNT_NO AND EV.DEL_FG = 'N'
                  WHERE 1=1
                    AND TPM.DEL_FG = 'N'
                  <if test="accnt_no != null and accnt_no != ''">
                      AND TPM.ACCNT_NO = #{accnt_no}
                  </if>
               ) MAIN_TBL
         WHERE 1=1
         <if test="startLine != null and startLine != '' and endLine != null and endLine != ''">
             AND PAGE_INDX <![CDATA[>=]]> #{startLine}
             AND PAGE_INDX <![CDATA[<]]> #{endLine}
         </if>
    </select>

    <!-- ================================================================
     * 날짜 : 20190222
     * 이름 : 송준빈
     * 추가내용 :  장례이행보증현황 추가
     * 대상 테이블 : LF_DMUSER.TB_PERF_MAIN
     * ================================================================
     * -->
    <insert id="DlwPayMap.insertPerfMainDataList" parameterType="map">
        INSERT /* DlwPayMap.insertPerfMainDataList */
          INTO LF_DMUSER.TB_PERF_MAIN(ACCNT_NO, PERF_DAY, PERF_AMT, PERF_ETC, DEL_FG)
        VALUES (#{accnt_no}, #{perf_day}, #{perf_amt}, #{perf_etc}, 'N')
    </insert>

    <!-- ================================================================
     * 날짜 : 20190222
     * 이름 : 송준빈
     * 추가내용 : 장례이행보증현황 수정
     * 대상 테이블 : LF_DMUSER.TB_PERF_MAIN
     * ================================================================
     * -->
    <update id="DlwPayMap.updatePerfMainDataList" parameterType="map">
        UPDATE /* DlwPayMap.updatePerfMainDataList */
               LF_DMUSER.TB_PERF_MAIN
           SET PERF_DAY = #{perf_day}
              ,PERF_AMT = #{perf_amt}
              ,PERF_ETC = #{perf_etc}
         WHERE 1=1
           AND DEL_FG = 'N'
           AND ACCNT_NO = #{accnt_no}
    </update>

    <!-- ================================================================
     * 날짜 : 20190222
     * 이름 : 송준빈
     * 추가내용 : 장례이행보증현황 삭제
     * 대상 테이블 : LF_DMUSER.TB_PERF_MAIN
     * ================================================================
     * -->
    <delete id="DlwPayMap.deletePerfMainDataList" parameterType="map">
        UPDATE /* "DlwPayMap.deletePerfMainDataList" */
               LF_DMUSER.TB_PERF_MAIN
           SET DEL_FG = 'Y'
         WHERE 1=1
           AND DEL_FG = 'N'
           AND ACCNT_NO = #{accnt_no}
    </delete>

    <!-- ================================================================
     * 날짜 : 20190222
     * 이름 : 송준빈
     * 추가내용 : 장례이행보증현황 팝업 조회
     * 대상 테이블 : LF_DMUSER.TB_PERF_MAIN
     * ================================================================
     * -->
    <select id="DlwPayMap.getPerfMainConfirmList" parameterType="map" resultType="resultMap">
        SELECT /* DlwPayMap.getPerfMainConfirmList */
               ACCNT_NO
              ,PERF_DAY
              ,PERF_AMT
              ,PERF_ETC
              ,DEL_FG
          FROM LF_DMUSER.TB_PERF_MAIN
         WHERE 1=1
           AND DEL_FG = 'N'
           AND ACCNT_NO = #{accnt_no}
    </select>

    <!-- ================================================================
     * 날짜 : 20181022
     * 이름 : 송준빈
     * 추가내용 : 출금이체의뢰내역(산출, 청구(행사, 해약)) 조회
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_WDRW_REQ
     * ================================================================
     * -->
    <select id="DlwPayMap.getPerfMainPayAmt" parameterType="String" resultType="resultMap">
        SELECT /* DlwPayMap.getPerfMainPayAmt */
               ACCNT_NO
              ,PERF_DAY
              ,PERF_AMT
              ,PERF_ETC
              ,DEL_FG
          FROM LF_DMUSER.TB_PERF_MAIN
         WHERE 1=1
           AND DEL_FG = 'N'
           AND ACCNT_NO = #{accnt_no}
    </select>

    <!-- ================================================================
     * 날짜 : 20190226
     * 이름 : 송준빈
     * 추가내용 : 증서출력-일괄출력 증서상품등록 팝업 조회
     * 대상 테이블 : LF_DMUSER.CL_COND_DATA
     * ================================================================
     * -->
    <select id="DlwPayMap.getCodeClCdDataset" parameterType="map" resultType="resultMap">
        SELECT /* DlwPayMap.getClCondData */
               DISTINCT CCD.MENU_CD
              ,CCD.CL_CD
              ,CC.CL_NM
          FROM CL_COND_DATA CCD
          INNER JOIN CL_CD CC
                  ON CCD.MENU_CD = CC.MENU_CD
                 AND CCD.CL_CD = CC.CL_CD
                 AND LVL = 2
         WHERE 1=1
           AND CCD.MENU_CD = #{menu_cd}
           AND CC.DEL_FG = 'N'
        ORDER BY CCD.CL_CD
    </select>

    <!-- ================================================================
     * 날짜 : 20190226
     * 이름 : 송준빈
     * 추가내용 : 증서출력-일괄출력 증서상품등록 팝업 조회
     * 대상 테이블 : LF_DMUSER.CL_COND_DATA
     * ================================================================
     * -->
    <select id="DlwPayMap.getClCondData" parameterType="map" resultType="resultMap">
        SELECT /* DlwPayMap.getClCondData */
               CCD.MENU_CD
              ,CCD.CL_CD
              ,CCD.SEQ
              ,CCD.COND_CD
              ,CCD.COND_DATA
              ,PD.PROD_NM
          FROM LF_DMUSER.CL_COND_DATA CCD
          LEFT OUTER JOIN LF_DMUSER.PRODUCT PD
                  ON CCD.COND_DATA = PD.PROD_CD
                 AND PD.DEL_FG = 'N'
         WHERE 1=1
           AND CCD.MENU_CD = #{menu_cd}
           <if test="cl_cd != null and cl_cd != ''">
               AND CCD.CL_CD = #{cl_cd}
           </if>
        ORDER BY CCD.MENU_CD, CCD.CL_CD ASC, CCD.SEQ
    </select>

    <!-- ================================================================
     * 날짜 : 20190226
     * 이름 : 송준빈
     * 추가내용 : 증서출력-일괄출력 증서상품등록 팝업 등록
     * 대상 테이블 : LF_DMUSER.CL_COND_DATA
     * ================================================================
     * -->
    <insert id="DlwPayMap.insertClCondData" parameterType="map">
        INSERT INTO /* DlwPayMap.insertClCondData */
                    LF_DMUSER.CL_COND_DATA
             VALUES (#{menu_cd}, #{cl_cd},
                     (SELECT NVL(MAX(SEQ) , 0) + 1 FROM LF_DMUSER.CL_COND_DATA WHERE 1=1 AND MENU_CD = #{menu_cd} AND CL_CD = #{cl_cd} AND COND_CD = #{cond_cd}), #{cond_cd}, #{cond_data})
    </insert>

    <!-- ================================================================
     * 날짜 : 20190226
     * 이름 : 송준빈
     * 추가내용 : 증서출력-일괄출력 증서상품등록 팝업 삭제
     * 대상 테이블 : LF_DMUSER.CL_COND_DATA
     * ================================================================
     * -->
    <delete id="DlwPayMap.deleteClCondData" parameterType="map">
        DELETE /* DlwPayMap.deleteClCondData */
          FROM LF_DMUSER.CL_COND_DATA
         WHERE 1=1
           AND MENU_CD   = #{menu_cd}
           AND CL_CD     = #{cl_cd}
           AND SEQ       = #{seq}
           AND COND_CD   = #{cond_cd}
    </delete>

    <!-- ================================================================
     * 날짜 : 20190319
     * 이름 : 송준빈
     * 추가내용 : 카드 청구 파일 다운로드시 기준 파일 가져오기
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_EXT_CHECK
     * ================================================================
     * -->
    <select id="DlwPayMap.getCardSendMakeFileDt" parameterType="map" resultType="resultMap">
        SELECT EXT_WRITE_CARD FROM LF_DMUSER.TB_MEMBER_EXT_CHECK WHERE 1=1 AND EXT_REQ_DT = #{yymmdd}
    </select>
    
    <!-- ================================================================
     * 날짜 : 20191212
     * 이름 : 송준빈
     * 추가내용 : 카드 무승인 청구 파일 다운로드시 기준 파일 가져오기
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_EXT_CHECK
     * ================================================================
     * -->
    <select id="DlwPayMap.getCardNauthSendMakeFileDt" parameterType="map" resultType="resultMap">
        SELECT EXT_WRITE_CARD_NAUTH FROM LF_DMUSER.TB_MEMBER_EXT_CHECK WHERE 1=1 AND EXT_REQ_DT = #{yymmdd}
    </select>

    <!-- ================================================================
     * 날짜 : 20190401
     * 이름 : 송준빈
     * 추가내용 : 회원 정보 파일 리스트 삭제
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_UPLOAD_TEMP
     * ================================================================
     * -->
    <delete id="DlwPayMap.deleteRegTempData" parameterType="map">
        DELETE /* DlwPayMap.deleteRegTempData */
          FROM LF_DMUSER.TB_MEMBER_UPLOAD_TEMP
         WHERE 1=1
           AND REG_MAN = #{reg_man}
    </delete>

    <!-- ================================================================
     * 날짜 : 20190401
     * 이름 : 송준빈
     * 추가내용 : 회원 정보 파일 리스트 업로드
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_UPLOAD_TEMP
     * ================================================================
     * -->
    <insert id="DlwPayMap.insertMemberExcelUpload" parameterType="map">
        INSERT INTO /* DlwPayMap.insertMemberExcelUpload */
                    LF_DMUSER.TB_MEMBER_UPLOAD_TEMP
             VALUES (#{accnt_no}, #{reg_man}, SYSDATE)
    </insert>

    <!-- ================================================================
     * 날짜 : 20190401
     * 이름 : 송준빈
     * 추가내용 : 회원 입금정보 업로드 리스트 조회수
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_UPLOAD_TEMP
     * ================================================================
     * -->
     <select id="DlwPayMap.getMemberUploadDataListCount" parameterType="map" resultType="int">
        SELECT /* DlwPayMap.getMemberUploadDataListCount */
               COUNT(*) AS ICNT
          FROM ( SELECT MAIN_TBL.*
                       ,ROW_NUMBER() OVER(ORDER BY MAIN_TBL.ACCNT_NO ASC) AS PAGE_INDX
                   FROM ( SELECT TBL.*
                                ,(SELECT MAX(PAY_DAY) FROM PAY_MNG WHERE ACCNT_NO = TBL.ACCNT_NO AND DEL_FG = 'N' AND NO = TRUE_NO) AS TRUE_DAY
                                ,(SELECT MAX(PAY_DAY) FROM PAY_MNG_DTL WHERE ACCNT_NO = TBL.ACCNT_NO AND DEL_FG = 'N' AND NO = REL_NO) AS REL_DAY
                                ,(SELECT MAX(PAY_DAY) FROM PAY_MNG_DTL1 WHERE ACCNT_NO = TBL.ACCNT_NO AND DEL_FG = 'N' AND NO = ADD_NO) AS ADD_DAY

                                ,NVL((SELECT SUM(AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD =TBL.PROD_CD AND NO BETWEEN (TRUE_NO - TRUE_CNT + 1) AND TRUE_NO ), 0) AS AMT
                                ,NVL((SELECT SUM(REL_AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD =TBL.PROD_CD AND NO BETWEEN (REL_NO - REL_CNT + 1) AND REL_NO ), 0) AS REL_AMT
                                ,NVL((SELECT SUM(ADD_AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD =TBL.PROD_CD AND NO BETWEEN (ADD_NO - ADD_CNT + 1) AND ADD_NO ), 0) AS ADD_AMT

                                ,NVL((SELECT SUM(AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD =TBL.PROD_CD AND NO BETWEEN (TRUE_NO - TRUE_CNT + 1) AND TRUE_NO ), 0) +
                                 NVL((SELECT SUM(REL_AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD =TBL.PROD_CD AND NO BETWEEN (REL_NO - REL_CNT + 1) AND REL_NO ), 0) +
                                 NVL((SELECT SUM(ADD_AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD =TBL.PROD_CD AND NO BETWEEN (ADD_NO - ADD_CNT + 1) AND ADD_NO ), 0) AS TOT_AMT
                            FROM ( SELECT A.ACCNT_NO
                                         ,MPA.MEM_NO
                                         ,MPA.JOIN_DT
                                         ,MPA.PROD_CD
                                         ,PD.PROD_NM
                                         /* MAX 한달 기준*/
                                         ,(SELECT COUNT(*) FROM PAY_MNG WHERE ACCNT_NO = A.ACCNT_NO AND DEL_FG = 'N'
                                                                          AND PAY_DAY BETWEEN TO_DATE(#{stt_pay_day} || '000000', 'YYYYMMDDHH24MISS') AND TO_DATE(#{end_pay_day} || '235959', 'YYYYMMDDHH24MISS') ) AS TRUE_CNT
                                         ,(SELECT COUNT(*) FROM PAY_MNG_DTL WHERE ACCNT_NO = A.ACCNT_NO AND DEL_FG = 'N'
                                                                          AND PAY_DAY BETWEEN TO_DATE(#{stt_pay_day} || '000000', 'YYYYMMDDHH24MISS') AND TO_DATE(#{end_pay_day} || '235959', 'YYYYMMDDHH24MISS') ) AS REL_CNT
                                         ,(SELECT COUNT(*) FROM PAY_MNG_DTL1 WHERE ACCNT_NO = A.ACCNT_NO AND DEL_FG = 'N'
                                                                          AND PAY_DAY BETWEEN TO_DATE(#{stt_pay_day} || '000000', 'YYYYMMDDHH24MISS') AND TO_DATE(#{end_pay_day} || '235959', 'YYYYMMDDHH24MISS') ) AS ADD_CNT
                                         ,(SELECT MAX(NO) FROM PAY_MNG WHERE ACCNT_NO = A.ACCNT_NO AND DEL_FG = 'N'
                                                                          AND PAY_DAY BETWEEN TO_DATE(#{stt_pay_day} || '000000', 'YYYYMMDDHH24MISS') AND TO_DATE(#{end_pay_day} || '235959', 'YYYYMMDDHH24MISS') ) AS TRUE_NO
                                         ,(SELECT MAX(NO) FROM PAY_MNG_DTL WHERE ACCNT_NO = A.ACCNT_NO AND DEL_FG = 'N'
                                                                          AND PAY_DAY BETWEEN TO_DATE(#{stt_pay_day} || '000000', 'YYYYMMDDHH24MISS') AND TO_DATE(#{end_pay_day} || '235959', 'YYYYMMDDHH24MISS') ) AS REL_NO
                                         ,(SELECT MAX(NO) FROM PAY_MNG_DTL1 WHERE ACCNT_NO = A.ACCNT_NO AND DEL_FG = 'N'
                                                                          AND PAY_DAY BETWEEN TO_DATE(#{stt_pay_day} || '000000', 'YYYYMMDDHH24MISS') AND TO_DATE(#{end_pay_day} || '235959', 'YYYYMMDDHH24MISS') ) AS ADD_NO
                                         ,A.REG_MAN
                                         ,A.REG_DM
                                     FROM TB_MEMBER_UPLOAD_TEMP A
                                     LEFT OUTER JOIN MEM_PROD_ACCNT MPA
                                             ON A.ACCNT_NO = MPA.ACCNT_NO
                                            AND MPA.DEL_FG = 'N'
                                     INNER JOIN MEMBER MB
                                             ON MPA.MEM_NO = MB.MEM_NO
                                            AND MB.DEL_FG = 'N'
                                     INNER JOIN PRODUCT PD
                                             ON MPA.PROD_CD = PD.PROD_CD
                                    WHERE 1=1
                                    <if test="accnt_no != null and accnt_no != ''">
                                        AND A.ACCNT_NO = #{accnt_no}
                                    </if>
                                    <if test="reg_man != null and reg_man != ''">
                                        AND A.REG_MAN = #{reg_man}
                                    </if>
                                    <if test="stt_reg_dm != null and stt_reg_dm != '' and end_reg_dm != null and end_reg_dm != ''">
                                        AND A.REG_DM BETWEEN TO_DATE(#{stt_reg_dm} || '000000', 'YYYYMMDDHH24MISS') AND TO_DATE(#{end_reg_dm} || '235959', 'YYYYMMDDHH24MISS')
                                    </if>
                                 ) TBL
                        ) MAIN_TBL
                  WHERE 1=1
               )
         WHERE 1=1
    </select>

     <!-- ================================================================
     * 날짜 : 20190401
     * 이름 : 송준빈
     * 추가내용 : 회원 입금정보 업로드 리스트
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_UPLOAD_TEMP
     * ================================================================
     * -->
     <select id="DlwPayMap.getMemberUploadDataList" parameterType="map" resultType="resultMap">
        SELECT /* DlwPayMap.getMemberUploadDataList */
               *
          FROM ( SELECT MAIN_TBL.*
                       ,ROW_NUMBER() OVER(ORDER BY MAIN_TBL.ACCNT_NO ASC) AS PAGE_INDX
                   FROM ( SELECT TBL.*
                                ,(SELECT MAX(PAY_DAY) FROM PAY_MNG WHERE ACCNT_NO = TBL.ACCNT_NO AND DEL_FG = 'N' AND NO = TRUE_NO) AS TRUE_DAY
                                ,(SELECT MAX(PAY_DAY) FROM PAY_MNG_DTL WHERE ACCNT_NO = TBL.ACCNT_NO AND DEL_FG = 'N' AND NO = REL_NO) AS REL_DAY
                                ,(SELECT MAX(PAY_DAY) FROM PAY_MNG_DTL1 WHERE ACCNT_NO = TBL.ACCNT_NO AND DEL_FG = 'N' AND NO = ADD_NO) AS ADD_DAY

                                ,NVL((SELECT SUM(AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD =TBL.PROD_CD AND NO BETWEEN (TRUE_NO - TRUE_CNT + 1) AND TRUE_NO ), 0) AS AMT
                                ,NVL((SELECT SUM(REL_AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD =TBL.PROD_CD AND NO BETWEEN (REL_NO - REL_CNT + 1) AND REL_NO ), 0) AS REL_AMT
                                ,NVL((SELECT SUM(ADD_AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD =TBL.PROD_CD AND NO BETWEEN (ADD_NO - ADD_CNT + 1) AND ADD_NO ), 0) AS ADD_AMT

                                ,NVL((SELECT SUM(AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD =TBL.PROD_CD AND NO BETWEEN (TRUE_NO - TRUE_CNT + 1) AND TRUE_NO ), 0) +
                                 NVL((SELECT SUM(REL_AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD =TBL.PROD_CD AND NO BETWEEN (REL_NO - REL_CNT + 1) AND REL_NO ), 0) +
                                 NVL((SELECT SUM(ADD_AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD =TBL.PROD_CD AND NO BETWEEN (ADD_NO - ADD_CNT + 1) AND ADD_NO ), 0) AS TOT_AMT
                            FROM ( SELECT A.ACCNT_NO
                                         ,MPA.MEM_NO
                                         ,MPA.JOIN_DT
                                         ,MPA.PROD_CD
                                         ,PD.PROD_NM
                                         /* MAX 한달 기준*/
                                         ,(SELECT COUNT(*) FROM PAY_MNG WHERE ACCNT_NO = A.ACCNT_NO AND DEL_FG = 'N'
                                                                          AND PAY_DAY BETWEEN TO_DATE(#{stt_pay_day} || '000000', 'YYYYMMDDHH24MISS') AND TO_DATE(#{end_pay_day} || '235959', 'YYYYMMDDHH24MISS') ) AS TRUE_CNT
                                         ,(SELECT COUNT(*) FROM PAY_MNG_DTL WHERE ACCNT_NO = A.ACCNT_NO AND DEL_FG = 'N'
                                                                          AND PAY_DAY BETWEEN TO_DATE(#{stt_pay_day} || '000000', 'YYYYMMDDHH24MISS') AND TO_DATE(#{end_pay_day} || '235959', 'YYYYMMDDHH24MISS') ) AS REL_CNT
                                         ,(SELECT COUNT(*) FROM PAY_MNG_DTL1 WHERE ACCNT_NO = A.ACCNT_NO AND DEL_FG = 'N'
                                                                          AND PAY_DAY BETWEEN TO_DATE(#{stt_pay_day} || '000000', 'YYYYMMDDHH24MISS') AND TO_DATE(#{end_pay_day} || '235959', 'YYYYMMDDHH24MISS') ) AS ADD_CNT
                                         ,(SELECT MAX(NO) FROM PAY_MNG WHERE ACCNT_NO = A.ACCNT_NO AND DEL_FG = 'N'
                                                                          AND PAY_DAY BETWEEN TO_DATE(#{stt_pay_day} || '000000', 'YYYYMMDDHH24MISS') AND TO_DATE(#{end_pay_day} || '235959', 'YYYYMMDDHH24MISS') ) AS TRUE_NO
                                         ,(SELECT MAX(NO) FROM PAY_MNG_DTL WHERE ACCNT_NO = A.ACCNT_NO AND DEL_FG = 'N'
                                                                          AND PAY_DAY BETWEEN TO_DATE(#{stt_pay_day} || '000000', 'YYYYMMDDHH24MISS') AND TO_DATE(#{end_pay_day} || '235959', 'YYYYMMDDHH24MISS') ) AS REL_NO
                                         ,(SELECT MAX(NO) FROM PAY_MNG_DTL1 WHERE ACCNT_NO = A.ACCNT_NO AND DEL_FG = 'N'
                                                                          AND PAY_DAY BETWEEN TO_DATE(#{stt_pay_day} || '000000', 'YYYYMMDDHH24MISS') AND TO_DATE(#{end_pay_day} || '235959', 'YYYYMMDDHH24MISS') ) AS ADD_NO
                                         ,A.REG_MAN
                                         ,A.REG_DM
                                     FROM TB_MEMBER_UPLOAD_TEMP A
                                     LEFT OUTER JOIN MEM_PROD_ACCNT MPA
                                             ON A.ACCNT_NO = MPA.ACCNT_NO
                                            AND MPA.DEL_FG = 'N'
                                     INNER JOIN MEMBER MB
                                             ON MPA.MEM_NO = MB.MEM_NO
                                            AND MB.DEL_FG = 'N'
                                     INNER JOIN PRODUCT PD
                                             ON MPA.PROD_CD = PD.PROD_CD
                                    WHERE 1=1
                                    <if test="accnt_no != null and accnt_no != ''">
                                        AND A.ACCNT_NO = #{accnt_no}
                                    </if>
                                    <if test="reg_man != null and reg_man != ''">
                                        AND A.REG_MAN = #{reg_man}
                                    </if>
                                    <if test="stt_reg_dm != null and stt_reg_dm != '' and end_reg_dm != null and end_reg_dm != ''">
                                        AND A.REG_DM BETWEEN TO_DATE(#{stt_reg_dm} || '000000', 'YYYYMMDDHH24MISS') AND TO_DATE(#{end_reg_dm} || '235959', 'YYYYMMDDHH24MISS')
                                    </if>
                                 ) TBL
                        ) MAIN_TBL
                  WHERE 1=1
               )
         WHERE 1=1
         <if test="startLine != null and startLine != '' and endLine != null and endLine != ''">
           AND PAGE_INDX <![CDATA[>=]]> #{startLine}
           AND PAGE_INDX <![CDATA[<]]> #{endLine}
         </if>
    </select>

    <!-- ================================================================
     * 날짜 : 20190410
     * 이름 : 송준빈
     * 추가내용 : 고객 미납 월마감 전체 집계
     * 대상 테이블 : LF_DMUSER.TB_CLOSE_MEMBER_MON
     * ================================================================
     * -->
    <select id="DlwPayMap.getTotalMemberList" parameterType="map" resultType="resultMap">
      WITH TBL_MAIN AS
        (
            SELECT
                ACCNT_NO,
                PROD_CD,
                SECTION_T,
                SECTION_THR,
                KSTBIT,
                SALE_TYPE,
                MONTH_COUNT,
                (CASE WHEN MONTH_COUNT <![CDATA[<=]]> TOT_REL_CNT THEN MONTH_COUNT ELSE TOT_REL_CNT END) AS MONTH_COUNT2,
                TRUE_CNT,
                REL_CNT,
                ADD_CNT,
                CASE WHEN KSTBIT = '02' AND (MONTH_COUNT - TRUE_CNT) > 0 THEN 'YEN1'
                     WHEN KSTBIT = '03' AND SECTION_T = '0002' AND ((CASE WHEN MONTH_COUNT <![CDATA[<=]]> TOT_REL_CNT THEN MONTH_COUNT ELSE TOT_REL_CNT END) - REL_CNT) > 0 THEN 'YEN2'
                ELSE 'NOR'
                END AS DIFF_BIT,
                TOT_TRUE_CNT,
                TOT_REL_CNT,
                TOT_ADD_CNT,
                RESN_AMT
            FROM
            (
                SELECT
                    /*+INDEX(CMN IDX_CLOSE_MEMMON_EXT_DT)*/
                    CMN.ACCNT_NO,
                    CMN.PROD_CD,
                    PD.SECTION_T,
                    PD.SECTION_THR,
                    CMN.KSTBIT,
                    NVL(B2B.SALE_TYPE,'9999') AS SALE_TYPE,
                    (TRUNC(MONTHS_BETWEEN(SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),0,6) || '01',SUBSTR(CMN.JOIN_DT,0,6) || '01'))) AS MONTH_COUNT,
                    CMN.TRUE_CNT,
                    CMN.REL_CNT,
                    CMN.ADD_CNT,
                    (SELECT COUNT(*) FROM PRODUCT_NO_DATA WHERE PROD_CD = CMN.PROD_CD) AS TOT_TRUE_CNT,
                    (SELECT COUNT(*) FROM PRODUCT_NO_DATA WHERE PROD_CD = CMN.PROD_CD AND REL_AMT > 0) AS TOT_REL_CNT,
                    (SELECT COUNT(*) FROM PRODUCT_NO_DATA WHERE PROD_CD = CMN.PROD_CD AND ADD_AMT > 0) AS TOT_ADD_CNT,
                    CMN.RESN_AMT
                FROM TB_CLOSE_MEMBER_MON CMN INNER JOIN
                PRODUCT PD ON CMN.PROD_CD = PD.PROD_CD LEFT OUTER JOIN
                B2BCOMCD B2B ON CMN.B2B_COMP_CD = B2B.COM_CD
                WHERE 1=1
                AND EXT_DT =  #{ext_dt}
                AND TRUE_CNT > 0
                AND (KSTBIT = '02' OR (KSTBIT = '03' AND SECTION_T = '0002'))
                AND STAT IN ('01','11','011')
                AND NOT EXISTS (SELECT * FROM PS_WILLVI.TB_TRGT_EXCP WHERE CMN.ACCNT_NO = EXCP_ID  AND USER_DEFN2_CNTN = '01')

            )
        )

        SELECT
            SECTION_NM, -- 회사명
            COUNT(ACCNT_NO) AS TOT_CNT, -- 전체구좌수
            SUM(YEN_BIT) AS YEN_CNT,    -- 연체구좌수

            SUM(NVL(TRUE_AMT,0)) AS TRUE_AMT, -- 총계약금액상조
            SUM(NVL(REL_AMT,0)) AS REL_AMT,   -- 총계약금액결합
            SUM(NVL(ADD_AMT,0)) AS ADD_AMT,   -- 총계약금액추가

            SUM(NVL(MON_TRUE_AMT,0)) AS MON_TRUE_AMT, -- 실납입액상조
            SUM(NVL(MON_REL_AMT,0)) AS MON_REL_AMT,   -- 실납입액결합
            SUM(NVL(MON_ADD_AMT,0)) AS MON_ADD_AMT,   -- 실납입액추가

            SUM(NVL(TOT_TRUE_AMT,0)) AS TOT_TRUE_AMT, -- 연체자실납입금액상조
            SUM(NVL(TOT_REL_AMT,0)) AS TOT_REL_AMT,   -- 연체자실납입금액결합
            SUM(NVL(TOT_ADD_AMT,0)) AS TOT_ADD_AMT,   -- 연체자실납입금액추가

            SUM(NVL(YEN_TRUE_AMT,0)) AS YEN_TRUE_AMT, -- 연체금액상조
            SUM(NVL(YEN_REL_AMT,0)) AS YEN_REL_AMT,   -- 연체금액결합
            SUM(NVL(YEN_ADD_AMT,0)) AS YEN_ADD_AMT,   -- 연체금액추가

            SUM(NVL(RESN_AMT,0)) AS RESN_AMT
        FROM
        (
            SELECT
                ACCNT_NO,
                CASE WHEN SECTION_THR = '0008' THEN 'LGU'
                    WHEN SECTION_THR = '0010' THEN 'SDP'
                    WHEN SECTION_THR = '0022' THEN '한샘'
                    WHEN SECTION_THR IN ('0023','0024') THEN '여행'
                    WHEN SECTION_THR IN ('0005','0012') THEN '일반상품외'
                    WHEN SECTION_THR = '0007' THEN 'LGB'
                    WHEN SECTION_THR IN ('0017','0018','0006') THEN '기타결합'
                    WHEN SECTION_THR = '0013' THEN '후불제'
                    WHEN SECTION_THR = '0028' THEN '더원라이프'
                    WHEN SECTION_THR = '0029' THEN '스페셜라이프'
                    WHEN SECTION_THR = '0027' THEN '다이렉트'
                    ELSE '표기안됨' END SECTION_NM,
                RESN_AMT,
                (CASE WHEN DIFF_BIT = 'NOR' THEN 0 ELSE 1 END) AS YEN_BIT,
                --실납입금액
                (SELECT SUM(AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD AND NO <![CDATA[<=]]> A.TRUE_CNT) AS TRUE_AMT,
                (SELECT SUM(REL_AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD AND NO <![CDATA[<=]]> A.REL_CNT) AS REL_AMT,
                (SELECT SUM(ADD_AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD AND NO <![CDATA[<=]]> A.ADD_CNT) AS ADD_AMT,

                --당월회차까지 납입되어야 하는 금액
                (
                    SELECT SUM(NVL(AMT,0))
                    FROM PRODUCT_NO_DATA
                    WHERE PROD_CD = A.PROD_CD
                    AND NO <![CDATA[<=]]> CASE WHEN DIFF_BIT = 'YEN1' THEN A.MONTH_COUNT
                              ELSE 0 END
                ) AS MON_TRUE_AMT,
                (
                    SELECT SUM(NVL(REL_AMT,0))
                    FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD
                    AND NO <![CDATA[<=]]> CASE WHEN DIFF_BIT = 'YEN2' THEN A.MONTH_COUNT2
                              ELSE 0 END
                ) AS MON_REL_AMT,
                (
                    SELECT SUM(NVL(ADD_AMT,0))
                    FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD
                    AND NO <![CDATA[<=]]> CASE WHEN DIFF_BIT = 'YEN2' THEN A.MONTH_COUNT2
                              ELSE 0 END
                ) AS MON_ADD_AMT,

                --상품 금액
                (SELECT SUM(AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD AND NO <![CDATA[<=]]> A.TOT_TRUE_CNT) AS TOT_TRUE_AMT,
                (SELECT SUM(REL_AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD AND NO <![CDATA[<=]]> A.TOT_REL_CNT) AS TOT_REL_AMT,
                (SELECT SUM(ADD_AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD AND NO <![CDATA[<=]]> A.TOT_ADD_CNT) AS TOT_ADD_AMT,

                --연체자 납입 금액
                (
                    SELECT SUM(NVL(AMT,0))
                    FROM PRODUCT_NO_DATA
                    WHERE PROD_CD = A.PROD_CD
                    AND NO <![CDATA[<=]]> CASE WHEN DIFF_BIT = 'YEN1' THEN A.TRUE_CNT ELSE 0 END
                ) AS YEN_TRUE_AMT,
                (
                    SELECT SUM(NVL(REL_AMT,0))
                    FROM PRODUCT_NO_DATA
                    WHERE PROD_CD = A.PROD_CD
                    AND NO <![CDATA[<=]]> CASE WHEN DIFF_BIT = 'YEN2' THEN A.REL_CNT ELSE 0 END
                ) AS YEN_REL_AMT,
                (
                    SELECT SUM(NVL(ADD_AMT,0))
                    FROM PRODUCT_NO_DATA
                    WHERE PROD_CD = A.PROD_CD
                    AND NO <![CDATA[<=]]> CASE WHEN DIFF_BIT = 'YEN2' THEN A.ADD_CNT ELSE 0 END
                ) AS YEN_ADD_AMT

            FROM TBL_MAIN A
            WHERE SECTION_THR IN ('0005','0012','0008','0010','0022','0023','0024','0007','0017','0018','0006','0013','0028','0029','0027')

            UNION ALL

            SELECT
                ACCNT_NO,
                '결합S(기타)' SECTION_NM,
                RESN_AMT,
                (CASE WHEN DIFF_BIT = 'NOR' THEN 0 ELSE 1 END) AS YEN_BIT,
                --실납입금액
                (SELECT SUM(AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD AND NO <![CDATA[<=]]> A.TRUE_CNT) AS TRUE_AMT,
                (SELECT SUM(REL_AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD AND NO <![CDATA[<=]]> A.REL_CNT) AS REL_AMT,
                (SELECT SUM(ADD_AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD AND NO <![CDATA[<=]]> A.ADD_CNT) AS ADD_AMT,

                --당월회차까지 납입되어야 하는 금액
                (
                    SELECT SUM(NVL(AMT,0))
                    FROM PRODUCT_NO_DATA
                    WHERE PROD_CD = A.PROD_CD
                    AND NO <![CDATA[<=]]> CASE WHEN DIFF_BIT = 'YEN1' THEN A.MONTH_COUNT
                              ELSE 0 END
                ) AS MON_TRUE_AMT,
                (
                    SELECT SUM(NVL(REL_AMT,0))
                    FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD
                    AND NO <![CDATA[<=]]> CASE WHEN DIFF_BIT = 'YEN2' THEN A.MONTH_COUNT2
                              ELSE 0 END
                ) AS MON_REL_AMT,
                (
                    SELECT SUM(NVL(ADD_AMT,0))
                    FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD
                    AND NO <![CDATA[<=]]> CASE WHEN DIFF_BIT = 'YEN2' THEN A.MONTH_COUNT2
                              ELSE 0 END
                ) AS MON_ADD_AMT,

                --상품 금액
                (SELECT SUM(AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD AND NO <![CDATA[<=]]> A.TOT_TRUE_CNT) AS TOT_TRUE_AMT,
                (SELECT SUM(REL_AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD AND NO <![CDATA[<=]]> A.TOT_REL_CNT) AS TOT_REL_AMT,
                (SELECT SUM(ADD_AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD AND NO <![CDATA[<=]]> A.TOT_ADD_CNT) AS TOT_ADD_AMT,

                --연체자 납입 금액
                (
                    SELECT SUM(NVL(AMT,0))
                    FROM PRODUCT_NO_DATA
                    WHERE PROD_CD = A.PROD_CD
                    AND NO <![CDATA[<=]]> CASE WHEN DIFF_BIT = 'YEN1' THEN A.TRUE_CNT ELSE 0 END
                ) AS YEN_TRUE_AMT,
                (
                    SELECT SUM(NVL(REL_AMT,0))
                    FROM PRODUCT_NO_DATA
                    WHERE PROD_CD = A.PROD_CD
                    AND NO <![CDATA[<=]]> CASE WHEN DIFF_BIT = 'YEN2' THEN A.REL_CNT ELSE 0 END
                ) AS YEN_REL_AMT,
                (
                    SELECT SUM(NVL(ADD_AMT,0))
                    FROM PRODUCT_NO_DATA
                    WHERE PROD_CD = A.PROD_CD
                    AND NO <![CDATA[<=]]> CASE WHEN DIFF_BIT = 'YEN2' THEN A.ADD_CNT ELSE 0 END
                ) AS YEN_ADD_AMT

            FROM TBL_MAIN A
            WHERE SECTION_THR = '0002' AND NVL(SALE_TYPE,'9999') NOT IN ('0046','0027','0012')

            UNION ALL

            SELECT
                ACCNT_NO,
                '결합L(기타)' SECTION_NM,
                RESN_AMT,
                (CASE WHEN DIFF_BIT = 'NOR' THEN 0 ELSE 1 END) AS YEN_BIT,
                --실납입금액
                (SELECT SUM(AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD AND NO <![CDATA[<=]]> A.TRUE_CNT) AS TRUE_AMT,
                (SELECT SUM(REL_AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD AND NO <![CDATA[<=]]> A.REL_CNT) AS REL_AMT,
                (SELECT SUM(ADD_AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD AND NO <![CDATA[<=]]> A.ADD_CNT) AS ADD_AMT,

                --당월회차까지 납입되어야 하는 금액
                (
                    SELECT SUM(NVL(AMT,0))
                    FROM PRODUCT_NO_DATA
                    WHERE PROD_CD = A.PROD_CD
                    AND NO <![CDATA[<=]]> CASE WHEN DIFF_BIT = 'YEN1' THEN A.MONTH_COUNT
                              ELSE 0 END
                ) AS MON_TRUE_AMT,
                (
                    SELECT SUM(NVL(REL_AMT,0))
                    FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD
                    AND NO <![CDATA[<=]]> CASE WHEN DIFF_BIT = 'YEN2' THEN A.MONTH_COUNT2
                              ELSE 0 END
                ) AS MON_REL_AMT,
                (
                    SELECT SUM(NVL(ADD_AMT,0))
                    FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD
                    AND NO <![CDATA[<=]]> CASE WHEN DIFF_BIT = 'YEN2' THEN A.MONTH_COUNT2
                              ELSE 0 END
                ) AS MON_ADD_AMT,

                --상품 금액
                (SELECT SUM(AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD AND NO <![CDATA[<=]]> A.TOT_TRUE_CNT) AS TOT_TRUE_AMT,
                (SELECT SUM(REL_AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD AND NO <![CDATA[<=]]> A.TOT_REL_CNT) AS TOT_REL_AMT,
                (SELECT SUM(ADD_AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD AND NO <![CDATA[<=]]> A.TOT_ADD_CNT) AS TOT_ADD_AMT,

                --연체자 납입 금액
                (
                    SELECT SUM(NVL(AMT,0))
                    FROM PRODUCT_NO_DATA
                    WHERE PROD_CD = A.PROD_CD
                    AND NO <![CDATA[<=]]> CASE WHEN DIFF_BIT = 'YEN1' THEN A.TRUE_CNT ELSE 0 END
                ) AS YEN_TRUE_AMT,
                (
                    SELECT SUM(NVL(REL_AMT,0))
                    FROM PRODUCT_NO_DATA
                    WHERE PROD_CD = A.PROD_CD
                    AND NO <![CDATA[<=]]> CASE WHEN DIFF_BIT = 'YEN2' THEN A.REL_CNT ELSE 0 END
                ) AS YEN_REL_AMT,
                (
                    SELECT SUM(NVL(ADD_AMT,0))
                    FROM PRODUCT_NO_DATA
                    WHERE PROD_CD = A.PROD_CD
                    AND NO <![CDATA[<=]]> CASE WHEN DIFF_BIT = 'YEN2' THEN A.ADD_CNT ELSE 0 END
                ) AS YEN_ADD_AMT

            FROM TBL_MAIN A
            WHERE SECTION_THR = '0001'  AND NVL(SALE_TYPE,'9999') != '0046'

            UNION ALL

            SELECT
                ACCNT_NO,
                '홈쇼핑' SECTION_NM,
                RESN_AMT,
                (CASE WHEN DIFF_BIT = 'NOR' THEN 0 ELSE 1 END) AS YEN_BIT,
                --실납입금액
                (SELECT SUM(AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD AND NO <![CDATA[<=]]> A.TRUE_CNT) AS TRUE_AMT,
                (SELECT SUM(REL_AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD AND NO <![CDATA[<=]]> A.REL_CNT) AS REL_AMT,
                (SELECT SUM(ADD_AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD AND NO <![CDATA[<=]]> A.ADD_CNT) AS ADD_AMT,

                --당월회차까지 납입되어야 하는 금액
                (
                    SELECT SUM(NVL(AMT,0))
                    FROM PRODUCT_NO_DATA
                    WHERE PROD_CD = A.PROD_CD
                    AND NO <![CDATA[<=]]> CASE WHEN DIFF_BIT = 'YEN1' THEN A.MONTH_COUNT
                              ELSE 0 END
                ) AS MON_TRUE_AMT,
                (
                    SELECT SUM(NVL(REL_AMT,0))
                    FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD
                    AND NO <![CDATA[<=]]> CASE WHEN DIFF_BIT = 'YEN2' THEN A.MONTH_COUNT2
                              ELSE 0 END
                ) AS MON_REL_AMT,
                (
                    SELECT SUM(NVL(ADD_AMT,0))
                    FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD
                    AND NO <![CDATA[<=]]> CASE WHEN DIFF_BIT = 'YEN2' THEN A.MONTH_COUNT2
                              ELSE 0 END
                ) AS MON_ADD_AMT,

                --상품 금액
                (SELECT SUM(AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD AND NO <![CDATA[<=]]> A.TOT_TRUE_CNT) AS TOT_TRUE_AMT,
                (SELECT SUM(REL_AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD AND NO <![CDATA[<=]]> A.TOT_REL_CNT) AS TOT_REL_AMT,
                (SELECT SUM(ADD_AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD AND NO <![CDATA[<=]]> A.TOT_ADD_CNT) AS TOT_ADD_AMT,

                --연체자 납입 금액
                (
                    SELECT SUM(NVL(AMT,0))
                    FROM PRODUCT_NO_DATA
                    WHERE PROD_CD = A.PROD_CD
                    AND NO <![CDATA[<=]]> CASE WHEN DIFF_BIT = 'YEN1' THEN A.TRUE_CNT ELSE 0 END
                ) AS YEN_TRUE_AMT,
                (
                    SELECT SUM(NVL(REL_AMT,0))
                    FROM PRODUCT_NO_DATA
                    WHERE PROD_CD = A.PROD_CD
                    AND NO <![CDATA[<=]]> CASE WHEN DIFF_BIT = 'YEN2' THEN A.REL_CNT ELSE 0 END
                ) AS YEN_REL_AMT,
                (
                    SELECT SUM(NVL(ADD_AMT,0))
                    FROM PRODUCT_NO_DATA
                    WHERE PROD_CD = A.PROD_CD
                    AND NO <![CDATA[<=]]> CASE WHEN DIFF_BIT = 'YEN2' THEN A.ADD_CNT ELSE 0 END
                ) AS YEN_ADD_AMT

            FROM TBL_MAIN A
            WHERE SECTION_THR = '0020' OR ( SECTION_THR = '0002' AND NVL(SALE_TYPE,'9999') IN ('0027','0012'))

            UNION ALL

            SELECT
                ACCNT_NO,
                'POM' SECTION_NM,
                RESN_AMT,
                (CASE WHEN DIFF_BIT = 'NOR' THEN 0 ELSE 1 END) AS YEN_BIT,
                --실납입금액
                (SELECT SUM(AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD AND NO <![CDATA[<=]]> A.TRUE_CNT) AS TRUE_AMT,
                (SELECT SUM(REL_AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD AND NO <![CDATA[<=]]> A.REL_CNT) AS REL_AMT,
                (SELECT SUM(ADD_AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD AND NO <![CDATA[<=]]> A.ADD_CNT) AS ADD_AMT,

                --당월회차까지 납입되어야 하는 금액
                (
                    SELECT SUM(NVL(AMT,0))
                    FROM PRODUCT_NO_DATA
                    WHERE PROD_CD = A.PROD_CD
                    AND NO <![CDATA[<=]]> CASE WHEN DIFF_BIT = 'YEN1' THEN A.MONTH_COUNT
                              ELSE 0 END
                ) AS MON_TRUE_AMT,
                (
                    SELECT SUM(NVL(REL_AMT,0))
                    FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD
                    AND NO <![CDATA[<=]]> CASE WHEN DIFF_BIT = 'YEN2' THEN A.MONTH_COUNT2
                              ELSE 0 END
                ) AS MON_REL_AMT,
                (
                    SELECT SUM(NVL(ADD_AMT,0))
                    FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD
                    AND NO <![CDATA[<=]]> CASE WHEN DIFF_BIT = 'YEN2' THEN A.MONTH_COUNT2
                              ELSE 0 END
                ) AS MON_ADD_AMT,

                --상품 금액
                (SELECT SUM(AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD AND NO <![CDATA[<=]]> A.TOT_TRUE_CNT) AS TOT_TRUE_AMT,
                (SELECT SUM(REL_AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD AND NO <![CDATA[<=]]> A.TOT_REL_CNT) AS TOT_REL_AMT,
                (SELECT SUM(ADD_AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD AND NO <![CDATA[<=]]> A.TOT_ADD_CNT) AS TOT_ADD_AMT,

                --연체자 납입 금액
                (
                    SELECT SUM(NVL(AMT,0))
                    FROM PRODUCT_NO_DATA
                    WHERE PROD_CD = A.PROD_CD
                    AND NO <![CDATA[<=]]> CASE WHEN DIFF_BIT = 'YEN1' THEN A.TRUE_CNT ELSE 0 END
                ) AS YEN_TRUE_AMT,
                (
                    SELECT SUM(NVL(REL_AMT,0))
                    FROM PRODUCT_NO_DATA
                    WHERE PROD_CD = A.PROD_CD
                    AND NO <![CDATA[<=]]> CASE WHEN DIFF_BIT = 'YEN2' THEN A.REL_CNT ELSE 0 END
                ) AS YEN_REL_AMT,
                (
                    SELECT SUM(NVL(ADD_AMT,0))
                    FROM PRODUCT_NO_DATA
                    WHERE PROD_CD = A.PROD_CD
                    AND NO <![CDATA[<=]]> CASE WHEN DIFF_BIT = 'YEN2' THEN A.ADD_CNT ELSE 0 END
                ) AS YEN_ADD_AMT

            FROM TBL_MAIN A
            WHERE SECTION_THR = '0021' OR ( SECTION_THR IN ('0001', '0002') AND NVL(SALE_TYPE,'9999') = '0046' )
         )
         GROUP BY SECTION_NM
    </select>

    <!-- ================================================================
     * 날짜 : 20190410
     * 이름 : 송준빈
     * 추가내용 : 고객 미납 월마감 결합 집계
     * 대상 테이블 : LF_DMUSER.TB_CLOSE_MEMBER_MON
     * ================================================================
     * -->
    <select id="DlwPayMap.getRelMemberList" parameterType="map" resultType="resultMap">
             WITH TBL_MAIN AS
        (
            SELECT
                ACCNT_NO,
                PROD_CD,
                SECTION_T,
                SECTION_THR,
                KSTBIT,
                SALE_TYPE,
                MONTH_COUNT,
                (CASE WHEN MONTH_COUNT <![CDATA[<=]]> TOT_REL_CNT THEN MONTH_COUNT ELSE TOT_REL_CNT END) AS MONTH_COUNT2,
                TRUE_CNT,
                REL_CNT,
                ADD_CNT,
                CASE WHEN KSTBIT = '02' AND (MONTH_COUNT - TRUE_CNT) > 0 THEN 'YEN1'
                     WHEN KSTBIT = '03' AND SECTION_T = '0002' AND ((CASE WHEN MONTH_COUNT <![CDATA[<=]]> TOT_REL_CNT THEN MONTH_COUNT ELSE TOT_REL_CNT END) - REL_CNT) > 0 THEN 'YEN2'
                ELSE 'NOR'
                END AS DIFF_BIT,
                TOT_TRUE_CNT,
                TOT_REL_CNT,
                TOT_ADD_CNT,
                RESN_AMT
            FROM
            (
                SELECT
                    /*+INDEX(CMN IDX_CLOSE_MEMMON_EXT_DT)*/
                    CMN.ACCNT_NO,
                    CMN.PROD_CD,
                    PD.SECTION_T,
                    PD.SECTION_THR,
                    CMN.KSTBIT,
                    NVL(B2B.SALE_TYPE,'9999') AS SALE_TYPE,
                    (TRUNC(MONTHS_BETWEEN(SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),0,6) || '01',SUBSTR(CMN.JOIN_DT,0,6) || '01'))) AS MONTH_COUNT,
                    CMN.TRUE_CNT,
                    CMN.REL_CNT,
                    CMN.ADD_CNT,
                    (SELECT COUNT(*) FROM PRODUCT_NO_DATA WHERE PROD_CD = CMN.PROD_CD) AS TOT_TRUE_CNT,
                    (SELECT COUNT(*) FROM PRODUCT_NO_DATA WHERE PROD_CD = CMN.PROD_CD AND REL_AMT > 0) AS TOT_REL_CNT,
                    (SELECT COUNT(*) FROM PRODUCT_NO_DATA WHERE PROD_CD = CMN.PROD_CD AND ADD_AMT > 0) AS TOT_ADD_CNT,
                    CMN.RESN_AMT
                FROM TB_CLOSE_MEMBER_MON CMN INNER JOIN
                PRODUCT PD ON CMN.PROD_CD = PD.PROD_CD LEFT OUTER JOIN
                B2BCOMCD B2B ON CMN.B2B_COMP_CD = B2B.COM_CD
                WHERE 1=1
                AND EXT_DT =  #{ext_dt}
                AND TRUE_CNT > 0
                AND KSTBIT IN ('02','03') AND SECTION_T = '0002'
                AND STAT IN ('01','11','011')
                AND NOT EXISTS (SELECT * FROM PS_WILLVI.TB_TRGT_EXCP WHERE CMN.ACCNT_NO = EXCP_ID  AND USER_DEFN2_CNTN = '01')
            )
        )

        SELECT
            SECTION_NM, -- 회사명
            COUNT(ACCNT_NO) AS TOT_CNT, -- 전체구좌수
            SUM(YEN_BIT) AS YEN_CNT,    -- 연체구좌수

            SUM(NVL(TRUE_AMT,0)) AS TRUE_AMT, -- 총계약금액상조
            SUM(NVL(REL_AMT,0)) AS REL_AMT,   -- 총계약금액결합
            SUM(NVL(ADD_AMT,0)) AS ADD_AMT,   -- 총계약금액추가

            SUM(NVL(MON_TRUE_AMT,0)) AS MON_TRUE_AMT, -- 실납입액상조
            SUM(NVL(MON_REL_AMT,0)) AS MON_REL_AMT,   -- 실납입액결합
            SUM(NVL(MON_ADD_AMT,0)) AS MON_ADD_AMT,   -- 실납입액추가

            SUM(NVL(TOT_TRUE_AMT,0)) AS TOT_TRUE_AMT, -- 연체자실납입금액상조
            SUM(NVL(TOT_REL_AMT,0)) AS TOT_REL_AMT,   -- 연체자실납입금액결합
            SUM(NVL(TOT_ADD_AMT,0)) AS TOT_ADD_AMT,   -- 연체자실납입금액추가

            SUM(NVL(YEN_TRUE_AMT,0)) AS YEN_TRUE_AMT, -- 연체금액상조
            SUM(NVL(YEN_REL_AMT,0)) AS YEN_REL_AMT,   -- 연체금액결합
            SUM(NVL(YEN_ADD_AMT,0)) AS YEN_ADD_AMT,   -- 연체금액추가

            SUM(NVL(RESN_AMT,0)) AS RESN_AMT
        FROM
        (
            SELECT
                ACCNT_NO,
                CASE WHEN SECTION_THR = '0008' THEN 'LGU'
                    WHEN SECTION_THR = '0010' THEN 'SDP'
                    WHEN SECTION_THR = '0022' THEN '한샘'
                    WHEN SECTION_THR IN ('0023','0024') THEN '여행'
                    WHEN SECTION_THR IN ('0005','0012') THEN '일반상품외'
                    WHEN SECTION_THR = '0007' THEN 'LGB'
                    WHEN SECTION_THR IN ('0017','0018','0006') THEN '기타결합'
                    WHEN SECTION_THR = '0013' THEN '후불제'
                    WHEN SECTION_THR = '0028' THEN '더원라이프'
                    WHEN SECTION_THR = '0029' THEN '스페셜라이프'
                    WHEN SECTION_THR = '0027' THEN '다이렉트'
                    ELSE '표기안됨' END SECTION_NM,
                RESN_AMT,
                (CASE WHEN DIFF_BIT = 'NOR' THEN 0 ELSE 1 END) AS YEN_BIT,
                --실납입금액
                (SELECT SUM(AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD AND NO <![CDATA[<=]]> A.TRUE_CNT) AS TRUE_AMT,
                (SELECT SUM(REL_AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD AND NO <![CDATA[<=]]> A.REL_CNT) AS REL_AMT,
                (SELECT SUM(ADD_AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD AND NO <![CDATA[<=]]> A.ADD_CNT) AS ADD_AMT,

                --당월회차까지 납입되어야 하는 금액
                (
                    SELECT SUM(NVL(AMT,0))
                    FROM PRODUCT_NO_DATA
                    WHERE PROD_CD = A.PROD_CD
                    AND NO <![CDATA[<=]]> CASE WHEN DIFF_BIT = 'YEN1' THEN A.MONTH_COUNT
                              ELSE 0 END
                ) AS MON_TRUE_AMT,
                (
                    SELECT SUM(NVL(REL_AMT,0))
                    FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD
                    AND NO <![CDATA[<=]]> CASE WHEN DIFF_BIT = 'YEN2' THEN A.MONTH_COUNT2
                              ELSE 0 END
                ) AS MON_REL_AMT,
                (
                    SELECT SUM(NVL(ADD_AMT,0))
                    FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD
                    AND NO <![CDATA[<=]]> CASE WHEN DIFF_BIT = 'YEN2' THEN A.MONTH_COUNT2
                              ELSE 0 END
                ) AS MON_ADD_AMT,

                --상품 금액
                (SELECT SUM(AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD AND NO <![CDATA[<=]]> A.TOT_TRUE_CNT) AS TOT_TRUE_AMT,
                (SELECT SUM(REL_AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD AND NO <![CDATA[<=]]> A.TOT_REL_CNT) AS TOT_REL_AMT,
                (SELECT SUM(ADD_AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD AND NO <![CDATA[<=]]> A.TOT_ADD_CNT) AS TOT_ADD_AMT,

                --연체자 납입 금액
                (
                    SELECT SUM(NVL(AMT,0))
                    FROM PRODUCT_NO_DATA
                    WHERE PROD_CD = A.PROD_CD
                    AND NO <![CDATA[<=]]> CASE WHEN DIFF_BIT = 'YEN1' THEN A.TRUE_CNT ELSE 0 END
                ) AS YEN_TRUE_AMT,
                (
                    SELECT SUM(NVL(REL_AMT,0))
                    FROM PRODUCT_NO_DATA
                    WHERE PROD_CD = A.PROD_CD
                    AND NO <![CDATA[<=]]> CASE WHEN DIFF_BIT = 'YEN2' THEN A.REL_CNT ELSE 0 END
                ) AS YEN_REL_AMT,
                (
                    SELECT SUM(NVL(ADD_AMT,0))
                    FROM PRODUCT_NO_DATA
                    WHERE PROD_CD = A.PROD_CD
                    AND NO <![CDATA[<=]]> CASE WHEN DIFF_BIT = 'YEN2' THEN A.ADD_CNT ELSE 0 END
                ) AS YEN_ADD_AMT

            FROM TBL_MAIN A
            WHERE SECTION_THR IN ('0005','0012','0008','0010','0022','0023','0024','0007','0017','0018','0006','0013','0028','0029','0027')

            UNION ALL

            SELECT
                ACCNT_NO,
                '결합S(기타)' SECTION_NM,
                RESN_AMT,
                (CASE WHEN DIFF_BIT = 'NOR' THEN 0 ELSE 1 END) AS YEN_BIT,
                --실납입금액
                (SELECT SUM(AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD AND NO <![CDATA[<=]]> A.TRUE_CNT) AS TRUE_AMT,
                (SELECT SUM(REL_AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD AND NO <![CDATA[<=]]> A.REL_CNT) AS REL_AMT,
                (SELECT SUM(ADD_AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD AND NO <![CDATA[<=]]> A.ADD_CNT) AS ADD_AMT,

                --당월회차까지 납입되어야 하는 금액
                (
                    SELECT SUM(NVL(AMT,0))
                    FROM PRODUCT_NO_DATA
                    WHERE PROD_CD = A.PROD_CD
                    AND NO <![CDATA[<=]]> CASE WHEN DIFF_BIT = 'YEN1' THEN A.MONTH_COUNT
                              ELSE 0 END
                ) AS MON_TRUE_AMT,
                (
                    SELECT SUM(NVL(REL_AMT,0))
                    FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD
                    AND NO <![CDATA[<=]]> CASE WHEN DIFF_BIT = 'YEN2' THEN A.MONTH_COUNT2
                              ELSE 0 END
                ) AS MON_REL_AMT,
                (
                    SELECT SUM(NVL(ADD_AMT,0))
                    FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD
                    AND NO <![CDATA[<=]]> CASE WHEN DIFF_BIT = 'YEN2' THEN A.MONTH_COUNT2
                              ELSE 0 END
                ) AS MON_ADD_AMT,

                --상품 금액
                (SELECT SUM(AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD AND NO <![CDATA[<=]]> A.TOT_TRUE_CNT) AS TOT_TRUE_AMT,
                (SELECT SUM(REL_AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD AND NO <![CDATA[<=]]> A.TOT_REL_CNT) AS TOT_REL_AMT,
                (SELECT SUM(ADD_AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD AND NO <![CDATA[<=]]> A.TOT_ADD_CNT) AS TOT_ADD_AMT,

                --연체자 납입 금액
                (
                    SELECT SUM(NVL(AMT,0))
                    FROM PRODUCT_NO_DATA
                    WHERE PROD_CD = A.PROD_CD
                    AND NO <![CDATA[<=]]> CASE WHEN DIFF_BIT = 'YEN1' THEN A.TRUE_CNT ELSE 0 END
                ) AS YEN_TRUE_AMT,
                (
                    SELECT SUM(NVL(REL_AMT,0))
                    FROM PRODUCT_NO_DATA
                    WHERE PROD_CD = A.PROD_CD
                    AND NO <![CDATA[<=]]> CASE WHEN DIFF_BIT = 'YEN2' THEN A.REL_CNT ELSE 0 END
                ) AS YEN_REL_AMT,
                (
                    SELECT SUM(NVL(ADD_AMT,0))
                    FROM PRODUCT_NO_DATA
                    WHERE PROD_CD = A.PROD_CD
                    AND NO <![CDATA[<=]]> CASE WHEN DIFF_BIT = 'YEN2' THEN A.ADD_CNT ELSE 0 END
                ) AS YEN_ADD_AMT

            FROM TBL_MAIN A
            WHERE SECTION_THR = '0002' AND NVL(SALE_TYPE,'9999') NOT IN ('0046','0027','0012')

            UNION ALL

            SELECT
                ACCNT_NO,
                '결합L(기타)' SECTION_NM,
                RESN_AMT,
                (CASE WHEN DIFF_BIT = 'NOR' THEN 0 ELSE 1 END) AS YEN_BIT,
                --실납입금액
                (SELECT SUM(AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD AND NO <![CDATA[<=]]> A.TRUE_CNT) AS TRUE_AMT,
                (SELECT SUM(REL_AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD AND NO <![CDATA[<=]]> A.REL_CNT) AS REL_AMT,
                (SELECT SUM(ADD_AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD AND NO <![CDATA[<=]]> A.ADD_CNT) AS ADD_AMT,

                --당월회차까지 납입되어야 하는 금액
                (
                    SELECT SUM(NVL(AMT,0))
                    FROM PRODUCT_NO_DATA
                    WHERE PROD_CD = A.PROD_CD
                    AND NO <![CDATA[<=]]> CASE WHEN DIFF_BIT = 'YEN1' THEN A.MONTH_COUNT
                              ELSE 0 END
                ) AS MON_TRUE_AMT,
                (
                    SELECT SUM(NVL(REL_AMT,0))
                    FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD
                    AND NO <![CDATA[<=]]> CASE WHEN DIFF_BIT = 'YEN2' THEN A.MONTH_COUNT2
                              ELSE 0 END
                ) AS MON_REL_AMT,
                (
                    SELECT SUM(NVL(ADD_AMT,0))
                    FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD
                    AND NO <![CDATA[<=]]> CASE WHEN DIFF_BIT = 'YEN2' THEN A.MONTH_COUNT2
                              ELSE 0 END
                ) AS MON_ADD_AMT,

                --상품 금액
                (SELECT SUM(AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD AND NO <![CDATA[<=]]> A.TOT_TRUE_CNT) AS TOT_TRUE_AMT,
                (SELECT SUM(REL_AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD AND NO <![CDATA[<=]]> A.TOT_REL_CNT) AS TOT_REL_AMT,
                (SELECT SUM(ADD_AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD AND NO <![CDATA[<=]]> A.TOT_ADD_CNT) AS TOT_ADD_AMT,

                --연체자 납입 금액
                (
                    SELECT SUM(NVL(AMT,0))
                    FROM PRODUCT_NO_DATA
                    WHERE PROD_CD = A.PROD_CD
                    AND NO <![CDATA[<=]]> CASE WHEN DIFF_BIT = 'YEN1' THEN A.TRUE_CNT ELSE 0 END
                ) AS YEN_TRUE_AMT,
                (
                    SELECT SUM(NVL(REL_AMT,0))
                    FROM PRODUCT_NO_DATA
                    WHERE PROD_CD = A.PROD_CD
                    AND NO <![CDATA[<=]]> CASE WHEN DIFF_BIT = 'YEN2' THEN A.REL_CNT ELSE 0 END
                ) AS YEN_REL_AMT,
                (
                    SELECT SUM(NVL(ADD_AMT,0))
                    FROM PRODUCT_NO_DATA
                    WHERE PROD_CD = A.PROD_CD
                    AND NO <![CDATA[<=]]> CASE WHEN DIFF_BIT = 'YEN2' THEN A.ADD_CNT ELSE 0 END
                ) AS YEN_ADD_AMT

            FROM TBL_MAIN A
            WHERE SECTION_THR = '0001'  AND NVL(SALE_TYPE,'9999') != '0046'

            UNION ALL

            SELECT
                ACCNT_NO,
                '홈쇼핑' SECTION_NM,
                RESN_AMT,
                (CASE WHEN DIFF_BIT = 'NOR' THEN 0 ELSE 1 END) AS YEN_BIT,
                --실납입금액
                (SELECT SUM(AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD AND NO <![CDATA[<=]]> A.TRUE_CNT) AS TRUE_AMT,
                (SELECT SUM(REL_AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD AND NO <![CDATA[<=]]> A.REL_CNT) AS REL_AMT,
                (SELECT SUM(ADD_AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD AND NO <![CDATA[<=]]> A.ADD_CNT) AS ADD_AMT,

                --당월회차까지 납입되어야 하는 금액
                (
                    SELECT SUM(NVL(AMT,0))
                    FROM PRODUCT_NO_DATA
                    WHERE PROD_CD = A.PROD_CD
                    AND NO <![CDATA[<=]]> CASE WHEN DIFF_BIT = 'YEN1' THEN A.MONTH_COUNT
                              ELSE 0 END
                ) AS MON_TRUE_AMT,
                (
                    SELECT SUM(NVL(REL_AMT,0))
                    FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD
                    AND NO <![CDATA[<=]]> CASE WHEN DIFF_BIT = 'YEN2' THEN A.MONTH_COUNT2
                              ELSE 0 END
                ) AS MON_REL_AMT,
                (
                    SELECT SUM(NVL(ADD_AMT,0))
                    FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD
                    AND NO <![CDATA[<=]]> CASE WHEN DIFF_BIT = 'YEN2' THEN A.MONTH_COUNT2
                              ELSE 0 END
                ) AS MON_ADD_AMT,

                --상품 금액
                (SELECT SUM(AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD AND NO <![CDATA[<=]]> A.TOT_TRUE_CNT) AS TOT_TRUE_AMT,
                (SELECT SUM(REL_AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD AND NO <![CDATA[<=]]> A.TOT_REL_CNT) AS TOT_REL_AMT,
                (SELECT SUM(ADD_AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD AND NO <![CDATA[<=]]> A.TOT_ADD_CNT) AS TOT_ADD_AMT,

                --연체자 납입 금액
                (
                    SELECT SUM(NVL(AMT,0))
                    FROM PRODUCT_NO_DATA
                    WHERE PROD_CD = A.PROD_CD
                    AND NO <![CDATA[<=]]> CASE WHEN DIFF_BIT = 'YEN1' THEN A.TRUE_CNT ELSE 0 END
                ) AS YEN_TRUE_AMT,
                (
                    SELECT SUM(NVL(REL_AMT,0))
                    FROM PRODUCT_NO_DATA
                    WHERE PROD_CD = A.PROD_CD
                    AND NO <![CDATA[<=]]> CASE WHEN DIFF_BIT = 'YEN2' THEN A.REL_CNT ELSE 0 END
                ) AS YEN_REL_AMT,
                (
                    SELECT SUM(NVL(ADD_AMT,0))
                    FROM PRODUCT_NO_DATA
                    WHERE PROD_CD = A.PROD_CD
                    AND NO <![CDATA[<=]]> CASE WHEN DIFF_BIT = 'YEN2' THEN A.ADD_CNT ELSE 0 END
                ) AS YEN_ADD_AMT

            FROM TBL_MAIN A
            WHERE SECTION_THR = '0020' OR ( SECTION_THR = '0002' AND NVL(SALE_TYPE,'9999') IN ('0027','0012'))

            UNION ALL

            SELECT
                ACCNT_NO,
                'POM' SECTION_NM,
                RESN_AMT,
                (CASE WHEN DIFF_BIT = 'NOR' THEN 0 ELSE 1 END) AS YEN_BIT,
                --실납입금액
                (SELECT SUM(AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD AND NO <![CDATA[<=]]> A.TRUE_CNT) AS TRUE_AMT,
                (SELECT SUM(REL_AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD AND NO <![CDATA[<=]]> A.REL_CNT) AS REL_AMT,
                (SELECT SUM(ADD_AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD AND NO <![CDATA[<=]]> A.ADD_CNT) AS ADD_AMT,

                --당월회차까지 납입되어야 하는 금액
                (
                    SELECT SUM(NVL(AMT,0))
                    FROM PRODUCT_NO_DATA
                    WHERE PROD_CD = A.PROD_CD
                    AND NO <![CDATA[<=]]> CASE WHEN DIFF_BIT = 'YEN1' THEN A.MONTH_COUNT
                              ELSE 0 END
                ) AS MON_TRUE_AMT,
                (
                    SELECT SUM(NVL(REL_AMT,0))
                    FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD
                    AND NO <![CDATA[<=]]> CASE WHEN DIFF_BIT = 'YEN2' THEN A.MONTH_COUNT2
                              ELSE 0 END
                ) AS MON_REL_AMT,
                (
                    SELECT SUM(NVL(ADD_AMT,0))
                    FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD
                    AND NO <![CDATA[<=]]> CASE WHEN DIFF_BIT = 'YEN2' THEN A.MONTH_COUNT2
                              ELSE 0 END
                ) AS MON_ADD_AMT,

                --상품 금액
                (SELECT SUM(AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD AND NO <![CDATA[<=]]> A.TOT_TRUE_CNT) AS TOT_TRUE_AMT,
                (SELECT SUM(REL_AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD AND NO <![CDATA[<=]]> A.TOT_REL_CNT) AS TOT_REL_AMT,
                (SELECT SUM(ADD_AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = A.PROD_CD AND NO <![CDATA[<=]]> A.TOT_ADD_CNT) AS TOT_ADD_AMT,

                --연체자 납입 금액
                (
                    SELECT SUM(NVL(AMT,0))
                    FROM PRODUCT_NO_DATA
                    WHERE PROD_CD = A.PROD_CD
                    AND NO <![CDATA[<=]]> CASE WHEN DIFF_BIT = 'YEN1' THEN A.TRUE_CNT ELSE 0 END
                ) AS YEN_TRUE_AMT,
                (
                    SELECT SUM(NVL(REL_AMT,0))
                    FROM PRODUCT_NO_DATA
                    WHERE PROD_CD = A.PROD_CD
                    AND NO <![CDATA[<=]]> CASE WHEN DIFF_BIT = 'YEN2' THEN A.REL_CNT ELSE 0 END
                ) AS YEN_REL_AMT,
                (
                    SELECT SUM(NVL(ADD_AMT,0))
                    FROM PRODUCT_NO_DATA
                    WHERE PROD_CD = A.PROD_CD
                    AND NO <![CDATA[<=]]> CASE WHEN DIFF_BIT = 'YEN2' THEN A.ADD_CNT ELSE 0 END
                ) AS YEN_ADD_AMT

            FROM TBL_MAIN A
            WHERE SECTION_THR = '0021' OR ( SECTION_THR IN ('0001', '0002') AND NVL(SALE_TYPE,'9999') = '0046' )
         )
         GROUP BY SECTION_NM
    </select>

    <!-- ================================================================
     * 날짜 : 20190412
     * 이름 : 송준빈
     * 추가내용 : 일일청구 카드 회신 데이터 리스트 INSERT
     * 대상 테이블 : LF_DMUSER.TB_CARD_RECV_FILE_LIST
     * ================================================================
     * -->
    <insert id="DlwPayMap.insertCardRecvFileList"  parameterType="map">
        INSERT INTO /* DlwPayMap.insertCardRecvFileList */
        	<if test="pay_mthd_auth.equalsIgnoreCase('Y')">
            	LF_DMUSER.TB_CARD_RECV_FILE_LIST
           	</if>
           	<if test="pay_mthd_auth.equalsIgnoreCase('N')">
            	LF_DMUSER.TB_CARDNAUTH_RECV_FILE_LIST
           	</if>
             VALUES (#{req_month}, #{date}, #{file_name}, #{count}, #{rslt_yn})
    </insert>

    <!-- ================================================================
     * 날짜 : 20190412
     * 이름 : 송준빈
     * 추가내용 : 일일청구 카드 회신 데이터 리스트 조회
     * 대상 테이블 : LF_DMUSER.TB_CARD_RECV_FILE_LIST
     * ================================================================
     * -->
    <select id="DlwPayMap.getCardRecvFileList" parameterType="map" resultType="resultMap">
        SELECT /* DlwPayMap.getCardRecvFileList */
               REQ_MONTH
              ,REQ_DAY AS DATE1
              ,FILE_NAME
              ,COUNT
              ,RSLT_YN
              <if test="pay_mthd_auth.equalsIgnoreCase('N')">
              	,TO_CHAR(TO_DATE(REQ_DAY, 'YYYYMMDD') - 2, 'YYYYMMDD') AS TARGET_DATE
              </if>
          FROM <if test="pay_mthd_auth.equalsIgnoreCase('Y')">
                   LF_DMUSER.TB_CARD_RECV_FILE_LIST
           	   </if>
           	   <if test="pay_mthd_auth.equalsIgnoreCase('N')">
            	   LF_DMUSER.TB_CARDNAUTH_RECV_FILE_LIST
           	   </if>
         WHERE 1=1
           AND REQ_MONTH = #{req_month}
           <if test="pay_mthd_auth.equalsIgnoreCase('N')">
           OR  REQ_MONTH = TO_CHAR(ADD_MONTHS(TO_DATE(#{req_month}, 'YYYYMM'), +1), 'YYYYMM')
           </if>
    </select>
    
    <!-- ================================================================
     * 날짜 : 20190412
     * 이름 : 송준빈
     * 추가내용 : 일일청구 카드 회신 데이터 (무승인) 저장 여부
     * 대상 테이블 : LF_DMUSER.TB_CARDNAUTH_RECV_FILE_LIST
     * ================================================================
     * -->
    <select id="DlwPayMap.getCardNauthRecvFileExist" parameterType="map" resultType="int">
        SELECT /* DlwPayMap.getCardRecvFileList */
               COUNT(*) AS ICNT
          FROM LF_DMUSER.TB_CARDNAUTH_RECV_FILE_LIST
         WHERE 1=1
           AND REQ_MONTH = #{req_month}
           AND FILE_NAME = #{file_name}
    </select>

    <!-- ================================================================
     * 날짜 : 20190412
     * 이름 : 송준빈
     * 추가내용 :  일일청구 카드 회신 데이터 리스트 UPDATE
     * 대상 테이블 : LF_DMUSER.TB_CARD_RECV_FILE_LIST
     * ================================================================
     * -->
    <update id="DlwPayMap.updateCardRecvFileList" parameterType="map" >
        UPDATE /* DlwPayMap.updateCardRecvFileList */
        	<if test="pay_mthd_auth.equalsIgnoreCase('Y')">
                LF_DMUSER.TB_CARD_RECV_FILE_LIST
           	</if>
           	<if test="pay_mthd_auth.equalsIgnoreCase('N')">
            	LF_DMUSER.TB_CARDNAUTH_RECV_FILE_LIST
           	</if>
           SET RSLT_YN = '반영완료'
         WHERE 1=1
           AND REQ_DAY = #{req_day}
    </update>

    <!-- ================================================================
     * 날짜 : 20190416
     * 이름 : 송준빈
     * 추가내용 : 수수료 산출 집계 조회
     * 대상 테이블 : LF_DMUSER.TB_ALOW_BASIC_INFO
     * ================================================================
     * -->

       <select id="DlwPayMap.getAlowBasicInfo" parameterType="map" resultType="resultMap">
        SELECT /* DlwPayMap.getAlowBasicInfo */
               MAIN_TBL.*
          FROM (
                 SELECT
                     AA.ALOW_DT,
                     DTL.ST_GRP_CD,
                     (SELECT ST_GRP_NM FROM B2B_SALE_TYPE_MST WHERE ST_GRP_CD = DTL.ST_GRP_CD) AS GRP_NM,
                     SUM(CASE WHEN  ALOW_BIT IN ('T33A','T33B') THEN ALOW_AMT ELSE 0 END) AS ALOW_AMT,
                     SUM(CASE WHEN  ALOW_BIT NOT IN ('T33A','T33B') THEN ALOW_AMT ELSE 0 END) AS RESNREDMPAMT,
                     SUM(CASE WHEN  ALOW_BIT IN ('T33A','T33B') THEN ALOW_AMT ELSE 0 END) - SUM(CASE WHEN  ALOW_BIT NOT IN ('T33A','T33B') THEN ALOW_AMT ELSE 0 END) AS REAL_AMT,
                     SUM(CASE WHEN  ALOW_BIT IN ('T33A','T33B')  THEN (SELECT SUM(AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = AA.PROD_CD AND NO = AA.PAY_NO) ELSE 0 END) AS TRUE_AMT
                 FROM TB_ALOW_BASIC_INFO AA INNER JOIN
                     B2B_SALE_TYPE_DTL DTL ON AA.SALE_TYPE = DTL.SALE_TYPE
                 WHERE 1=1
                   AND AA.ALOW_DT = #{alow_dt}
                   <if test="st_grp_cd != null and st_grp_cd != ''">
                     AND DTL.ST_GRP_CD = #{st_grp_cd}
                 </if>
                 GROUP BY AA.ALOW_DT, DTL.ST_GRP_CD
                 ORDER BY ST_GRP_CD
               ) MAIN_TBL
         WHERE 1=1
    </select>

    <!-- ================================================================
     * 날짜 : 20190416
     * 이름 : 송준빈
     * 추가내용 : 수수료 산출 집계 조회
     * 대상 테이블 : LF_DMUSER.TB_ALOW_BASIC_INFO
     * ================================================================
     * -->
    <select id="DlwPayMap.getAlowBasicInfoSummary" parameterType="map" resultType="resultMap">
        SELECT /* DlwPayMap.getAlowBasicInfoSummary */
            SUM(CASE WHEN  ALOW_BIT IN ('T33A','T33B') THEN 1 ELSE 0 END) + SUM(CASE WHEN  ALOW_BIT NOT IN ('T33A','T33B') THEN 1 ELSE 0 END) AS ALOW_CNT,
            SUM(CASE WHEN  ALOW_BIT NOT IN ('T33A','T33B') THEN 1 ELSE 0 END) AS RESN_CNT,
            SUM(CASE WHEN  ALOW_BIT IN ('T33A','T33B') THEN ALOW_AMT ELSE 0 END) AS TOT_ALOW_AMT,
            SUM(CASE WHEN  ALOW_BIT NOT IN ('T33A','T33B') THEN ALOW_AMT ELSE 0 END) AS TOT_RESNREDMPAMT,
            SUM(CASE WHEN  ALOW_BIT IN ('T33A','T33B') THEN ALOW_AMT ELSE 0 END) - SUM(CASE WHEN  ALOW_BIT NOT IN ('T33A','T33B') THEN ALOW_AMT ELSE 0 END) AS TOT_REAL_AMT,
            SUM(CASE WHEN  ALOW_BIT IN ('T33A','T33B')  THEN (SELECT SUM(AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = AA.PROD_CD AND NO = AA.PAY_NO) ELSE 0 END) AS TOT_TRUE_AMT
        FROM TB_ALOW_BASIC_INFO AA INNER JOIN
            B2B_SALE_TYPE_DTL DTL ON AA.SALE_TYPE = DTL.SALE_TYPE
        WHERE 1=1
          AND AA.ALOW_DT = #{alow_dt}
        <if test="st_grp_cd != null and st_grp_cd != ''">
            AND DTL.ST_GRP_CD = #{st_grp_cd}
        </if>
        ORDER BY ST_GRP_CD
    </select>

    <!-- ================================================================
     * 날짜 : 20190416
     * 이름 : 송준빈
     * 추가내용 : 수수료 산출 집계 상세 내용 조회수
     * 대상 테이블 : LF_DMUSER.TB_ALOW_BASIC_INFO
     * ================================================================
     * -->
    <select id="DlwPayMap.getAlowBasicInfoDetailCount" parameterType="map" resultType="int">
        SELECT /* DlwPayMap.getAlowBasicInfoDetailCount */
            COUNT(*) AS ICNT
        FROM (
                 SELECT ROW_NUMBER() OVER(ORDER BY ${orderBy} ${orderDirection}) AS PAGE_INDX
                    FROM TB_ALOW_BASIC_INFO AA INNER JOIN
                         B2B_SALE_TYPE_DTL DTL ON AA.SALE_TYPE = DTL.SALE_TYPE
                    WHERE 1=1
                    AND AA.ALOW_DT = #{alow_dt}
                    <if test="st_grp_cd != null and st_grp_cd != ''">
                      AND DTL.ST_GRP_CD = #{st_grp_cd}
                    </if>
                    <if test="sale_type != null and sale_type != ''">
                      AND AA.SALE_TYPE = #{sale_type}
                    </if>
                    <if test="b2b_comp_cd != null and b2b_comp_cd != ''">
                      AND AA.B2B_COMP_CD = #{b2b_comp_cd}
                    </if>
                    <if test="pay_no != null and pay_no != ''">
                      AND PAY_NO = #{pay_no}
                    </if>
              ) MAIN_TBL
        WHERE 1=1
    </select>

    <!-- ================================================================
     * 날짜 : 20190416
     * 이름 : 송준빈
     * 추가내용 : 수수료 산출 집계 상세 내용 조회 리스트
     * 대상 테이블 : LF_DMUSER.TB_ALOW_BASIC_INFO
     * ================================================================
     * -->
    <select id="DlwPayMap.getAlowBasicInfoDetail" parameterType="map" resultType="resultMap">
        SELECT /* DlwPayMap.getAlowBasicInfoDetail */
            MAIN_TBL.*
        FROM (
                 SELECT ROW_NUMBER() OVER(ORDER BY ${orderBy} ${orderDirection}) AS PAGE_INDX,
                        AA.ALOW_DT,
                        DTL.ST_GRP_CD,
                        (SELECT ST_GRP_NM FROM B2B_SALE_TYPE_MST MST WHERE 1=1 AND MST.ST_GRP_CD = DTL.ST_GRP_CD AND USE_YN = 'Y') AS ST_GRP_NM,
                        AA.SALE_TYPE,
                        (SELECT CD_NM FROM COM_CD CC WHERE 1=1 AND CC.GRP_CD = '0125' AND CC.COM_CD = AA.SALE_TYPE AND USE_YN = 'Y') AS SALE_NM,
                        AA.B2B_COMP_CD,
                        (SELECT COM_NM FROM B2BCOMCD BCC WHERE 1=1 AND BCC.COM_CD = AA.B2B_COMP_CD AND USE_YN = 'Y') AS B2B_COMP_NM,
                        AA.ACCNT_NO,
                        AA.PROD_CD,
                        AA.ALOW_AMT,
                        (CASE WHEN  ALOW_BIT IN ('A_A','A_S')  THEN (SELECT SUM(AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = AA.PROD_CD AND NO = AA.PAY_NO) ELSE 0 END) AS TRUE_AMT,
                        AA.PAY_NO,
                        AA.ALOW_BIT
                    FROM TB_ALOW_BASIC_INFO AA INNER JOIN
                         B2B_SALE_TYPE_DTL DTL ON AA.SALE_TYPE = DTL.SALE_TYPE
                    WHERE 1=1
                    AND AA.ALOW_DT = #{alow_dt}
                    <if test="st_grp_cd != null and st_grp_cd != ''">
                      AND DTL.ST_GRP_CD = #{st_grp_cd}
                    </if>
                    <if test="sale_type != null and sale_type != ''">
                      AND AA.SALE_TYPE = #{sale_type}
                    </if>
                    <if test="b2b_comp_cd != null and b2b_comp_cd != ''">
                      AND AA.B2B_COMP_CD = #{b2b_comp_cd}
                    </if>
                    <if test="pay_no != null and pay_no != ''">
                      AND PAY_NO = #{pay_no}
                    </if>
              ) MAIN_TBL
        WHERE 1=1
        <if test="startLine != null and startLine != '' and endLine != null and endLine != ''">
           AND PAGE_INDX <![CDATA[>=]]> #{startLine}
           AND PAGE_INDX <![CDATA[<]]> #{endLine}
        </if>
    </select>

    <!-- ================================================================
     * 날짜 : 20190416
     * 이름 : 송준빈
     * 추가내용 : 수수료 산출 집계 상세 내용 조회 리스트 전체 총합
     * 대상 테이블 : LF_DMUSER.TB_ALOW_BASIC_INFO
     * ================================================================
     * -->
    <select id="DlwPayMap.getAlowBasicInfoDetailSummary" parameterType="map" resultType="resultMap">
        SELECT /* DlwPayMap.getAlowBasicInfoDetailSummary */
            SUM(CASE WHEN  ALOW_BIT IN ('A_A','A_S') THEN 1 ELSE 0 END) + SUM(CASE WHEN  ALOW_BIT NOT IN ('A_A','A_S') THEN 1 ELSE 0 END) AS ALOW_CNT,
            SUM(CASE WHEN  ALOW_BIT NOT IN ('A_A','A_S') THEN 1 ELSE 0 END) AS RESN_CNT,
            SUM(CASE WHEN  ALOW_BIT IN ('A_A','A_S') THEN ALOW_AMT ELSE 0 END) AS TOT_ALOW_AMT,
            SUM(CASE WHEN  ALOW_BIT NOT IN ('A_A','A_S') THEN ALOW_AMT ELSE 0 END) AS TOT_RESNREDMPAMT,
            SUM(CASE WHEN  ALOW_BIT IN ('A_A','A_S') THEN ALOW_AMT ELSE 0 END) - SUM(CASE WHEN  ALOW_BIT NOT IN ('A_A','A_S') THEN ALOW_AMT ELSE 0 END) AS TOT_REAL_AMT,
            SUM(CASE WHEN  ALOW_BIT IN ('A_A','A_S')  THEN (SELECT SUM(AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = AA.PROD_CD AND NO = AA.PAY_NO) ELSE 0 END) AS TOT_TRUE_AMT
        FROM TB_ALOW_BASIC_INFO AA INNER JOIN
             B2B_SALE_TYPE_DTL DTL ON AA.SALE_TYPE = DTL.SALE_TYPE
        WHERE 1=1
        AND AA.ALOW_DT = #{alow_dt}
        <if test="st_grp_cd != null and st_grp_cd != ''">
          AND DTL.ST_GRP_CD = #{st_grp_cd}
        </if>
        <if test="sale_type != null and sale_type != ''">
          AND AA.SALE_TYPE = #{sale_type}
        </if>
        <if test="b2b_comp_cd != null and b2b_comp_cd != ''">
          AND AA.B2B_COMP_CD = #{b2b_comp_cd}
        </if>
        <if test="pay_no != null and pay_no != ''">
          AND PAY_NO = #{pay_no}
        </if>
    </select>

    <!-- ================================================================
     * 날짜 : 20190423
     * 이름 : 송준빈
     * 추가내용 :
     * 대상 테이블 :
     * ================================================================
     * -->
    <select id="DlwPayMap.getMonthAlowCount" parameterType="map" resultType="int">
          SELECT /* DlwPayMap.getMonthAlowCount */
            COUNT(*) AS ICNT
        FROM (
                SELECT ROW_NUMBER() OVER(ORDER BY ${orderBy} ${orderDirection}) AS PAGE_INDX,
                    ALOW_DT,
                    EMP.EMPLE_NO,
                    EMP.EMPLE_NM,
                    DEP.DEPT_NM,
                    ALOW_AMT,
                    ALOW_AMT2,
                    (ALOW_AMT + ALOW_AMT2) AS ALOW_SUM,
                    ALOW_AMT3,
                    (ALOW_AMT + ALOW_AMT2) - ALOW_AMT3 AS ALOW_CAL
                FROM
                (
                    SELECT
                        ALOW_DT,
                        B2B_COMP_CD,
                        SUM(CASE WHEN  ALOW_BIT = 'T21' THEN ALOW_AMT ELSE 0 END) AS ALOW_AMT,
                        SUM(CASE WHEN  ALOW_BIT = 'T32' THEN ALOW_AMT ELSE 0 END) AS ALOW_AMT2,
                        SUM(CASE WHEN  ALOW_BIT IN ('F7A', 'F7B') THEN ALOW_AMT ELSE 0 END) AS ALOW_AMT3
                    FROM TB_ALOW_BASIC_INFO AA
                    WHERE 1=1
                    AND ALOW_DT =  #{alow_dt}
                    AND ALOW_BIT IN ('T21', 'T32', 'F7A', 'F7B')
                    GROUP BY ALOW_DT, B2B_COMP_CD
                ) TBL INNER JOIN
                    EMPLOYEE EMP ON TBL.B2B_COMP_CD = EMP.EMPLE_NO INNER JOIN
                    DEPARTMENT DEP ON EMP.DEPT_CD = DEP.DEPT_CD
              ) MAIN_TBL
        WHERE 1=1

        <!--
        SELECT /* DlwPayMap.getMonthAlowCount */
            COUNT(*) AS ICNT
        FROM (
                 SELECT ROW_NUMBER() OVER(ORDER BY ${orderBy} ${orderDirection}) AS PAGE_INDX
                    FROM TB_ALOW_BASIC_INFO AA INNER JOIN
                         B2B_SALE_TYPE_DTL DTL ON AA.SALE_TYPE = DTL.SALE_TYPE
                    WHERE 1=1
                    AND AA.ALOW_DT = #{alow_dt}
                    <if test="st_grp_cd != null and st_grp_cd != ''">
                      AND DTL.ST_GRP_CD = #{st_grp_cd}
                    </if>
                    <if test="sale_type != null and sale_type != ''">
                      AND AA.SALE_TYPE = #{sale_type}
                    </if>
                    <if test="b2b_comp_cd != null and b2b_comp_cd != ''">
                      AND AA.B2B_COMP_CD = #{b2b_comp_cd}
                    </if>
                    <if test="pay_no != null and pay_no != ''">
                      AND PAY_NO = #{pay_no}
                    </if>
              ) MAIN_TBL
        WHERE 1=1
         -->
    </select>

    <!-- ================================================================
     * 날짜 : 20190423
     * 이름 : 송준빈
     * 추가내용 :
     * 대상 테이블 :
     * ================================================================
     * -->
    <select id="DlwPayMap.getMonthAlowList" parameterType="map" resultType="resultMap">
        SELECT /* DlwPayMap.getMonthAlowList */
            MAIN_TBL.*
        FROM (
                SELECT ROW_NUMBER() OVER(ORDER BY ${orderBy} ${orderDirection}) AS PAGE_INDX,
                    ALOW_DT,
                    EMP.EMPLE_NO,
                    EMP.EMPLE_NM,
                    DEP.DEPT_NM,
                    ALOW_AMT,
                    ALOW_AMT2,
                    (ALOW_AMT + ALOW_AMT2) AS ALOW_SUM,
                    ALOW_AMT3,
                    (ALOW_AMT + ALOW_AMT2) - ALOW_AMT3 AS ALOW_CAL
                FROM
                (
                    SELECT
                        ALOW_DT,
                        B2B_COMP_CD,
                        SUM(CASE WHEN  ALOW_BIT = 'T21' THEN ALOW_AMT ELSE 0 END) AS ALOW_AMT,
                        SUM(CASE WHEN  ALOW_BIT = 'T32' THEN ALOW_AMT ELSE 0 END) AS ALOW_AMT2,
                        SUM(CASE WHEN  ALOW_BIT IN ('F7A', 'F7B') THEN ALOW_AMT ELSE 0 END) AS ALOW_AMT3
                    FROM TB_ALOW_BASIC_INFO AA
                    WHERE 1=1
                    AND ALOW_DT =  #{alow_dt}
                    AND ALOW_BIT IN ('T21', 'T32', 'F7A', 'F7B')
                    GROUP BY ALOW_DT, B2B_COMP_CD
                ) TBL INNER JOIN
                    EMPLOYEE EMP ON TBL.B2B_COMP_CD = EMP.EMPLE_NO INNER JOIN
                    DEPARTMENT DEP ON EMP.DEPT_CD = DEP.DEPT_CD
              ) MAIN_TBL
        WHERE 1=1
        <if test="startLine != null and startLine != '' and endLine != null and endLine != ''">
           AND PAGE_INDX <![CDATA[>=]]> #{startLine}
           AND PAGE_INDX <![CDATA[<]]> #{endLine}
        </if>
    </select>

    <!-- ================================================================
     * 날짜 : 20190423
     * 이름 : 송준빈
     * 추가내용 :
     * 대상 테이블 :
     * ================================================================
     * -->
    <select id="DlwPayMap.getMonthAlowListSummary" parameterType="map" resultType="resultMap">
        SELECT /*DlwPayMap.getMonthAlowListSummary*/
            COUNT(*) AS ALOW_CNT,
            SUM(ALOW_AMT) AS ALOW_AMT,
            SUM(ALOW_AMT2) AS ALOW_AMT2,
            SUM(ALOW_AMT3) AS ALOW_AMT3,
            (SUM(ALOW_AMT) + SUM(ALOW_AMT2)) - SUM(ALOW_AMT3) AS ALOW_TOT_AMT
        FROM
        (
                SELECT ROW_NUMBER() OVER(ORDER BY EMPLE_NO ASC) AS PAGE_INDX,
                    ALOW_DT,
                    EMP.EMPLE_NO,
                    EMP.EMPLE_NM,
                    DEP.DEPT_NM,
                    ALOW_AMT,
                    ALOW_AMT2,
                    (ALOW_AMT + ALOW_AMT2) AS ALOW_SUM,
                    ALOW_AMT3,
                    (ALOW_AMT + ALOW_AMT2) - ALOW_AMT3 AS ALOW_CAL
                FROM
                (
                    SELECT
                        ALOW_DT,
                        B2B_COMP_CD,
                        SUM(CASE WHEN  ALOW_BIT = 'T21' THEN ALOW_AMT ELSE 0 END) AS ALOW_AMT,
                        SUM(CASE WHEN  ALOW_BIT = 'T32' THEN ALOW_AMT ELSE 0 END) AS ALOW_AMT2,
                        SUM(CASE WHEN  ALOW_BIT IN ('F7A', 'F7B') THEN ALOW_AMT ELSE 0 END) AS ALOW_AMT3
                    FROM TB_ALOW_BASIC_INFO AA
                    WHERE 1=1
                    AND ALOW_DT =  #{alow_dt}
                    AND ALOW_BIT IN ('T21', 'T32', 'F7A', 'F7B')
                    GROUP BY ALOW_DT, B2B_COMP_CD
                ) TBL INNER JOIN
                    EMPLOYEE EMP ON TBL.B2B_COMP_CD = EMP.EMPLE_NO INNER JOIN
                    DEPARTMENT DEP ON EMP.DEPT_CD = DEP.DEPT_CD
        )
    </select>

    <!-- ================================================================
     * 날짜 : 20190423
     * 이름 : 송준빈
     * 추가내용 :
     * 대상 테이블 :
     * ================================================================
     * -->
    <select id="DlwPayMap.getAlowDetailCount" parameterType="map" resultType="int">
        SELECT
            /* DlwPayMap.getAlowDetailCount */
            COUNT(*)
        FROM
        (
            SELECT  ALOW_DT,
                    ACCNT_NO,
                    FN_MEM_NM((SELECT MEM_NO FROM MEM_PROD_ACCNT MPA WHERE 1=1 AND MPA.ACCNT_NO = AA.ACCNT_NO AND MPA.DEL_FG = 'N')) AS MEM_NM,
                    (SELECT JOIN_DT FROM MEM_PROD_ACCNT MPA WHERE 1=1 AND MPA.ACCNT_NO = AA.ACCNT_NO AND MPA.DEL_FG = 'N') AS JOIN_DT,
                    (SELECT RESN_ACPT_DAY FROM RESCISSION RES WHERE 1=1 AND RES.ACCNT_NO = AA.ACCNT_NO  AND RES.DEL_FG = 'N') AS RESN_ACPT_DAY,
                    AA.PROD_CD,
                    PD.PROD_NM,
                    (SELECT MODEL_CL_NM FROM PRODUCT_MODEL_CL_CD WHERE 1=1 AND MODEL_CL_CD = (SELECT PROD_MODEL_KIND FROM MEM_PROD_ACCNT MPA WHERE 1=1 AND MPA.ACCNT_NO = AA.ACCNT_NO AND MPA.DEL_FG = 'N')) AS PROD_MODEL_KIND,
                    SALE_TYPE,
                    B2B_COMP_CD,
                    ALOW_AMT,
                    PAY_NO,
                    ALOW_BIT,
                    EMP.EMPLE_NM,
                    DEP.DEPT_NM,
                    NVL(DEP.OCP_CLUSTER, EMP.OCP_CLUSTER) AS OCP_CLUSTER,
                    (SELECT CD_NM FROM COM_CD WHERE GRP_CD = '0125' AND COM_CD = AA.SALE_TYPE) SALE_TYPE_NM,
                    (SELECT COM_NM FROM B2BCOMCD WHERE COM_CD = AA.B2B_COMP_CD) B2B_NM,
                    NVL((SELECT COUNT(*) FROM PAY_MNG WHERE ACCNT_NO = AA.ACCNT_NO AND DEL_FG = 'N' AND PAY_DAY <![CDATA[<]]> TO_CHAR(SYSDATE,'YYYYMMDD')),0) AS TRUE_COUNT,
                    (SELECT ID_NO FROM MEM_PROD_ACCNT MPA WHERE 1=1 AND AA.ACCNT_NO = MPA.ACCNT_NO AND MPA.DEL_FG = 'N') AS ID_NO
            FROM TB_ALOW_BASIC_INFO AA INNER JOIN
            PRODUCT PD ON AA.PROD_CD = PD.PROD_CD LEFT OUTER JOIN
            EMPLOYEE EMP ON AA.B2B_COMP_CD = EMP.EMPLE_NO LEFT JOIN
            DEPARTMENT DEP ON EMP.DEPT_CD = DEP.DEPT_CD
            WHERE 1=1
            AND ALOW_DT =  #{alow_dt}
            <if test="accnt_no != null and accnt_no != ''">
            AND ACCNT_NO = #{accnt_no}
            </if>
        ) TBL
    </select>

    <!-- ================================================================
     * 날짜 : 20190423
     * 이름 : 송준빈
     * 추가내용 :
     * 대상 테이블 :
     * ================================================================
     * -->
    <select id="DlwPayMap.getAlowDetailList" parameterType="map" resultType="resultMap">
        SELECT
            /* DlwPayMap.getAlowDetailList */
            ALOW_DT,
            ACCNT_NO,
            REPLACE(MEM_NM,CHR(0),'') AS MEM_NM,
            JOIN_DT,
            RESN_ACPT_DAY,
            RESN_PROC_DAY,
            PROD_CD,
            PROD_NM,
            REPLACE(PROD_MODEL_KIND,CHR(0),'') AS PROD_MODEL_KIND,
            PAY_NO,
            REPLACE(SALE_TYPE,CHR(0),'') AS SALE_TYPE,
            CASE WHEN ALOW_GUBUN = 'COMM'
                 THEN ( SELECT SM.ST_GRP_NM
                          FROM B2B_SALE_TYPE_MST SM INNER JOIN
                               B2B_SALE_TYPE_DTL SD ON SD.ST_GRP_CD = SM.ST_GRP_CD
                         WHERE SD.SALE_TYPE = MAIN.SALE_TYPE )
            ELSE ''
             END AS ST_GRP_NM,
            B2B_COMP_CD,
            ALOW_AMT,
            ALOW_BIT,
            ALOW_GUBUN,
            CASE WHEN ALOW_GUBUN = 'COMM' THEN SALE_TYPE_NM ELSE DEPT_NM END AS ETC_1,
            CASE WHEN ALOW_GUBUN = 'COMM' THEN B2B_NM ELSE EMPLE_NM END AS ETC_2,
            TRUE_CNT,
            REPLACE(TRUE_DAY,CHR(0),'') AS TRUE_DAY,
            REPLACE(EVENT_PROC_DAY,CHR(0),'') AS EVENT_PROC_DAY,
            REPLACE(ID_NO,CHR(0),'') AS ID_NO,
            MAIN_CONTRACT_NM,
            REG_DM,
            BEF_EMPLE_NM
        FROM
        (
            SELECT
                /*+INDEX(MPA, PK__MEM_PROD_ACCNT__46E78A0C)*/
                ROW_NUMBER() OVER(ORDER BY AA.ACCNT_NO ASC) AS PAGE_INDX,
                CASE WHEN ALOW_BIT IN ('T33A','T33B','T33C','F8A','F8B','F10') THEN 'COMM' ELSE 'ALOW' END ALOW_GUBUN,
                ALOW_DT,
                AA.ACCNT_NO,
                MB.MEM_NM,
                MBID.JOIN_DT,
                (SELECT RESN_ACPT_DAY FROM RESCISSION RES WHERE RES.ACCNT_NO = AA.ACCNT_NO  AND RES.DEL_FG = 'N') AS RESN_ACPT_DAY,
                (SELECT RESN_PROC_DAY FROM RESCISSION RES WHERE RES.ACCNT_NO = AA.ACCNT_NO  AND RES.DEL_FG = 'N') AS RESN_PROC_DAY,
                (SELECT EVENT_PROC_DAY  FROM EVENT EVT WHERE EVT.ACCNT_NO = AA.ACCNT_NO  AND EVT.DEL_FG = 'N') AS EVENT_PROC_DAY,
                AA.PROD_CD,
                PD.PROD_NM,
                (SELECT MODEL_CL_NM FROM PRODUCT_MODEL_CL_CD WHERE 1=1 AND MODEL_CL_CD = (SELECT PROD_MODEL_KIND FROM MEM_PROD_ACCNT MPA WHERE 1=1 AND MPA.ACCNT_NO = AA.ACCNT_NO AND MPA.DEL_FG = 'N')) AS PROD_MODEL_KIND,
                SALE_TYPE,
                AA.B2B_COMP_CD,
                ALOW_AMT,
                PAY_NO,
                ALOW_BIT,
                EMP.EMPLE_NM,
                DEP.DEPT_NM,
                NVL(DEP.OCP_CLUSTER, EMP.OCP_CLUSTER) AS OCP_CLUSTER,
                (SELECT CD_NM FROM COM_CD WHERE GRP_CD = '0125' AND COM_CD = AA.SALE_TYPE) SALE_TYPE_NM,
                (SELECT COM_NM FROM B2BCOMCD WHERE COM_CD = AA.B2B_COMP_CD) B2B_NM,
                TRUE_CNT,
                TRUE_DAY,
                (SELECT ID_NO FROM MEM_PROD_ACCNT MPA WHERE 1=1 AND AA.ACCNT_NO = MPA.ACCNT_NO AND MPA.DEL_FG = 'N') AS ID_NO,
                (SELECT FN_COM_NM('0194', MPA.MAIN_CONTRACT) FROM MEM_PROD_ACCNT MPA WHERE 1=1 AND AA.ACCNT_NO = MPA.ACCNT_NO AND MPA.DEL_FG = 'N') AS MAIN_CONTRACT_NM,
                (SELECT TO_CHAR(REG_DM, 'YYYYMMDD') FROM MEM_PROD_ACCNT MPA WHERE 1=1 AND AA.ACCNT_NO = MPA.ACCNT_NO AND MPA.DEL_FG = 'N') AS REG_DM,
                (SELECT FN_EMPLE_NM(BEF_EMPLE_CD) FROM MEM_PROD_ACCNT MPA WHERE 1=1 AND AA.ACCNT_NO = MPA.ACCNT_NO AND MPA.DEL_FG = 'N') AS BEF_EMPLE_NM
            FROM TB_ALOW_BASIC_INFO AA INNER JOIN
                TB_MEMBER_BASIC_INFO_DAY MBID ON AA.ACCNT_NO = MBID.ACCNT_NO INNER JOIN
                MEMBER MB ON MBID.MEM_NO = MB.MEM_NO AND MB.DEL_FG = 'N' INNER JOIN
                PRODUCT PD ON AA.PROD_CD = PD.PROD_CD LEFT OUTER JOIN
                EMPLOYEE EMP ON AA.B2B_COMP_CD = EMP.EMPLE_NO LEFT OUTER JOIN
                DEPARTMENT DEP ON EMP.DEPT_CD = DEP.DEPT_CD
            WHERE 1=1
                AND ALOW_DT =  #{alow_dt}
                <if test="accnt_no != null and accnt_no != ''">
                AND AA.ACCNT_NO = #{accnt_no}
                </if>
        ) MAIN
        WHERE 1=1
        <if test="startLine != null and startLine != '' and endLine != null and endLine != ''">
           AND PAGE_INDX <![CDATA[>=]]> #{startLine}
           AND PAGE_INDX <![CDATA[<]]> #{endLine}
        </if>
    </select>

    <!-- ================================================================
     * 날짜 : 20190425
     * 이름 : 송준빈
     * 추가내용 : 회원별수당조회 (회원별수당) 조회수
     * 대상 테이블 :
     * ================================================================
     * -->
    <select id="DlwPayMap.getMemberSpecFeesCount" parameterType="map" resultType="int">
        SELECT /* DlwPayMap.getMemberSpecFeesCount */
            COUNT(*) AS ICNT
        FROM
        (
            SELECT
                ROW_NUMBER() OVER(ORDER BY TBL.ACCNT_NO ASC) AS PAGE_INDX,
                TBL.ACCNT_NO,
                MB.MEM_NM,
                PD.PROD_NM,
                MPA.JOIN_DT,
                MPA.KSTBIT,
                NVL(DEP.OCP_CLUSTER, EMP.OCP_CLUSTER) AS OCP_CLUSTER ,
                FN_DEPT_NM(DEP.DEPT_CD) AS DEPT_NM,
                --(SELECT FN_COM_NM('96', A.OCP_CLUSTER) FROM DUAL) OCP_CLUSTER_NM,
                --(SELECT FN_COM_NM('0124', B.INCOM_CL) FROM DUAL) INCOM_CL_NM,
                MPA.EMPLE_NO,
                EMP.EMPLE_NM,
                T21_AMT,
                T32_AMT,
                F07_AMT,
                0 AS F11_AMT,
                T33_AMT,
                F08_AMT,
                F10_AMT,
                F12_AMT,
                (T21_AMT + T32_AMT + T33_AMT) - (F07_AMT + F08_AMT + F10_AMT) AS SUM_AMT
               FROM
            (
                SELECT
                    ACCNT_NO,
                    SUM((CASE WHEN ALOW_CD = 'T21' THEN AMT ELSE  0 END )) AS T21_AMT,  --수당
                    SUM((CASE WHEN ALOW_CD = 'T32' THEN AMT ELSE  0 END )) AS T32_AMT,  --누진수당
                    SUM((CASE WHEN ALOW_CD = 'F7' THEN AMT ELSE  0 END  )) AS F07_AMT,  --수당환수
                    0 AS F11_AMT,
                    SUM((CASE WHEN ALOW_CD = 'T33' THEN AMT ELSE  0 END )) AS T33_AMT,  --수수료산출
                    SUM((CASE WHEN ALOW_CD = 'F8' THEN AMT ELSE  0 END )) AS F08_AMT,   --수수료환수
                    SUM((CASE WHEN ALOW_CD = 'F10' THEN AMT ELSE  0 END )) AS F10_AMT,  --연체환수
                    SUM((CASE WHEN ALOW_CD = 'F12' THEN AMT ELSE  0 END )) AS F12_AMT   --이월환수
                FROM
                (
                    SELECT
                        ROW_NUMBER() OVER(PARTITION BY ACCNT_NO, ALOW_CD ORDER BY DTL_SEQ DESC) AS MAX_SEQ,
                        A.*
                    FROM ALOW_DA_DTL A
                    WHERE 1=1
                    <if test="month_cal != null and month_cal != ''">
                        AND ALOW_DT = #{month_cal}
                    </if>
                ) AD
                WHERE MAX_SEQ = 1
                GROUP BY AD.ACCNT_NO
            ) TBL INNER JOIN
                TB_MEMBER_BASIC_INFO_DAY MPA ON TBL.ACCNT_NO = MPA.ACCNT_NO INNER JOIN
                MEMBER MB ON MPA.MEM_NO = MB.MEM_NO AND MB.DEL_FG = 'N' INNER JOIN
                PRODUCT PD ON MPA.PROD_CD = PD.PROD_CD LEFT OUTER JOIN
                EMPLOYEE EMP ON MPA.EMPLE_NO = EMP.EMPLE_NO LEFT OUTER JOIN
                DEPARTMENT DEP ON EMP.DEPT_CD = DEP.DEPT_CD
            WHERE 1=1
            <if test="dept_cd != null and dept_cd != ''">
                AND EMP.DEPT_CD = #{dept_cd}
            </if>
            <if test="emple_no != null and emple_no != ''">
                AND MPA.EMPLE_NO = #{emple_no}
            </if>
            <if test="accnt_no != null and accnt_no != ''">
                AND TBL.ACCNT_NO = #{accnt_no}
            </if>
            ORDER BY ACCNT_NO ASC
        ) MAIN_TBL
        WHERE 1=1
    </select>

    <!-- ================================================================
     * 날짜 : 20190425
     * 이름 : 송준빈
     * 추가내용 : 회원별수당조회 (회원별수당) 리스트
     * 대상 테이블 :
     * ================================================================
     * -->
    <select id="DlwPayMap.getMemberSpecFeesList" parameterType="map" resultType="resultMap">
        SELECT /* DlwPayMap.getMemberSpecFeesList */
            MAIN_TBL.*
        FROM
        (
            SELECT
                ROW_NUMBER() OVER(ORDER BY TBL.ACCNT_NO ASC) AS PAGE_INDX,
                TBL.ACCNT_NO,
                MB.MEM_NM,
                PD.PROD_NM,
                MPA.JOIN_DT,
                DECODE(MPA.KSTBIT,'01','대기','02','가입','03','해약','04','행사','기타') AS KSTBIT,
                (SELECT FN_COM_NM('96', NVL(DEP.OCP_CLUSTER, EMP.OCP_CLUSTER)) FROM DUAL) AS OCP_CLUSTER ,
                REPLACE(FN_DEPT_NM(DEP.DEPT_CD),CHR(0),'') AS DEPT_NM,
                --(SELECT FN_COM_NM('96', A.OCP_CLUSTER) FROM DUAL) OCP_CLUSTER_NM,
                --(SELECT FN_COM_NM('0124', B.INCOM_CL) FROM DUAL) INCOM_CL_NM,
                MPA.EMPLE_NO,
                EMP.EMPLE_NM,
                T21_AMT,
                T32_AMT,
                F07_AMT,
                F11_AMT,
                T33_AMT,
                F08_AMT,
                F10_AMT,
                F12_AMT,
                (T21_AMT + T32_AMT + T33_AMT) - (F07_AMT + F08_AMT + F11_AMT +  F10_AMT + F12_AMT) AS SUM_AMT
               FROM
            (
                SELECT
                    ACCNT_NO,
                    SUM((CASE WHEN ALOW_CD = 'T21' THEN AMT ELSE  0 END )) AS T21_AMT,  --수당
                    SUM((CASE WHEN ALOW_CD = 'T32' THEN AMT ELSE  0 END )) AS T32_AMT,  --누진수당
                    SUM((CASE WHEN ALOW_CD = 'F7' THEN AMT ELSE  0 END  )) AS F07_AMT,  --수당환수
                    SUM((CASE WHEN ALOW_CD = 'F11' THEN AMT ELSE  0 END  )) AS F11_AMT, --누진환수
                    SUM((CASE WHEN ALOW_CD = 'T33' THEN AMT ELSE  0 END )) AS T33_AMT,  --수수료산출
                    SUM((CASE WHEN ALOW_CD = 'F8' THEN AMT ELSE  0 END )) AS F08_AMT,   --수수료환수
                    SUM((CASE WHEN ALOW_CD = 'F10' THEN AMT ELSE  0 END )) AS F10_AMT,  --연체환수
                    SUM((CASE WHEN ALOW_CD = 'F12' THEN AMT ELSE  0 END )) AS F12_AMT   --이월환수
                FROM
                (
                    SELECT
                        /*+INDEX(A PK_ALOW_DA_DTL)*/
                        ROW_NUMBER() OVER(PARTITION BY ACCNT_NO, ALOW_CD ORDER BY DTL_SEQ DESC) AS MAX_SEQ,
                        A.*
                    FROM ALOW_DA_DTL A
                    WHERE 1=1
                    <if test="month_cal != null and month_cal != ''">
                        AND ALOW_DT = #{month_cal}
                    </if>
                ) AD
                --WHERE MAX_SEQ = 1
                GROUP BY AD.ACCNT_NO
            ) TBL INNER JOIN
                TB_MEMBER_BASIC_INFO_DAY MPA ON TBL.ACCNT_NO = MPA.ACCNT_NO INNER JOIN
                MEMBER MB ON MPA.MEM_NO = MB.MEM_NO AND MB.DEL_FG = 'N' INNER JOIN
                PRODUCT PD ON MPA.PROD_CD = PD.PROD_CD LEFT OUTER JOIN
                EMPLOYEE EMP ON MPA.EMPLE_NO = EMP.EMPLE_NO LEFT OUTER JOIN
                DEPARTMENT DEP ON EMP.DEPT_CD = DEP.DEPT_CD
            WHERE 1=1
            <if test="dept_cd != null and dept_cd != ''">
                AND EMP.DEPT_CD = #{dept_cd}
            </if>
            <if test="emple_no != null and emple_no != ''">
                AND MPA.EMPLE_NO = #{emple_no}
            </if>
            <if test="accnt_no != null and accnt_no != ''">
                AND TBL.ACCNT_NO = #{accnt_no}
            </if>
            ORDER BY ACCNT_NO ASC
        ) MAIN_TBL
        WHERE 1=1
        <if test="startLine != null and startLine != '' and endLine != null and endLine != ''">
           AND PAGE_INDX <![CDATA[>=]]> #{startLine}
           AND PAGE_INDX <![CDATA[<]]> #{endLine}
        </if>
    </select>

    <!-- ================================================================
     * 날짜 : 20190425
     * 이름 : 송준빈
     * 추가내용 : 회원별수당조회 (회원별수당) 조회수
     * 대상 테이블 :
     * ================================================================
     * -->
    <select id="DlwPayMap.getMemberSpecFeesSummary" parameterType="map" resultType="resultMap">
        SELECT /* DlwPayMap.getMemberSpecFeesSummary */
            COUNT(*) AS TOT_ICNT,
            SUM(MAIN_TBL.T21_AMT) + SUM(MAIN_TBL.T32_AMT) AS TOT_T21T32_AMT, -- 수당계(모집수당+누진수당)
            SUM(MAIN_TBL.F07_AMT) + SUM(MAIN_TBL.F11_AMT) AS TOT_F07F11_AMT, -- 수당환수계(모집환수+누진환수)
            SUM(MAIN_TBL.F12_AMT) AS TOT_F12_AMT,                            -- 이월환수 차감계
            SUM(MAIN_TBL.T33_AMT) AS TOT_T33_AMT,                            -- 수수료계
            SUM(MAIN_TBL.F08_AMT) +  SUM(MAIN_TBL.F10_AMT) AS TOT_F08F10_AMT -- 수수료환수계
        FROM
        (
            SELECT
                ROW_NUMBER() OVER(ORDER BY TBL.ACCNT_NO ASC) AS PAGE_INDX,
                TBL.ACCNT_NO,
                MB.MEM_NM,
                PD.PROD_NM,
                MPA.JOIN_DT,
                MPA.KSTBIT,
                NVL(DEP.OCP_CLUSTER, EMP.OCP_CLUSTER) AS OCP_CLUSTER ,
                FN_DEPT_NM(DEP.DEPT_CD) AS DEPT_NM,
                --(SELECT FN_COM_NM('96', A.OCP_CLUSTER) FROM DUAL) OCP_CLUSTER_NM,
                --(SELECT FN_COM_NM('0124', B.INCOM_CL) FROM DUAL) INCOM_CL_NM,
                MPA.EMPLE_NO,
                EMP.EMPLE_NM,
                T21_AMT,
                T32_AMT,
                F07_AMT,
                0 AS F11_AMT,
                T33_AMT,
                F08_AMT,
                F10_AMT,
                F12_AMT,
                (T21_AMT + T32_AMT + T33_AMT) - (F07_AMT + F08_AMT + F10_AMT + F12_AMT) AS SUM_AMT
               FROM
            (
                SELECT
                    ACCNT_NO,
                    SUM((CASE WHEN ALOW_CD = 'T21' THEN AMT ELSE  0 END )) AS T21_AMT,  --수당
                    SUM((CASE WHEN ALOW_CD = 'T32' THEN AMT ELSE  0 END )) AS T32_AMT,  --누진수당
                    SUM((CASE WHEN ALOW_CD = 'F7' THEN AMT ELSE  0 END  )) AS F07_AMT,  --수당환수
                    0 AS F11_AMT,
                    SUM((CASE WHEN ALOW_CD = 'T33' THEN AMT ELSE  0 END )) AS T33_AMT,  --수수료산출
                    SUM((CASE WHEN ALOW_CD = 'F8' THEN AMT ELSE  0 END )) AS F08_AMT,   --수수료환수
                    SUM((CASE WHEN ALOW_CD = 'F10' THEN AMT ELSE  0 END )) AS F10_AMT,  --연체환수
                    SUM((CASE WHEN ALOW_CD = 'F12' THEN AMT ELSE  0 END )) AS F12_AMT   --이월환수
                FROM
                (
                    SELECT
                        ROW_NUMBER() OVER(PARTITION BY ACCNT_NO, ALOW_CD ORDER BY DTL_SEQ DESC) AS MAX_SEQ,
                        A.*
                    FROM ALOW_DA_DTL A
                    WHERE 1=1
                    <if test="month_cal != null and month_cal != ''">
                        AND ALOW_DT = #{month_cal}
                    </if>
                ) AD
                --WHERE MAX_SEQ = 1
                GROUP BY AD.ACCNT_NO
            ) TBL INNER JOIN
                TB_MEMBER_BASIC_INFO_DAY MPA ON TBL.ACCNT_NO = MPA.ACCNT_NO INNER JOIN
                MEMBER MB ON MPA.MEM_NO = MB.MEM_NO AND MB.DEL_FG = 'N' INNER JOIN
                PRODUCT PD ON MPA.PROD_CD = PD.PROD_CD LEFT OUTER JOIN
                EMPLOYEE EMP ON MPA.EMPLE_NO = EMP.EMPLE_NO LEFT OUTER JOIN
                DEPARTMENT DEP ON EMP.DEPT_CD = DEP.DEPT_CD
            WHERE 1=1
            <if test="dept_cd != null and dept_cd != ''">
                AND EMP.DEPT_CD = #{dept_cd}
            </if>
            <if test="emple_no != null and emple_no != ''">
                AND MPA.EMPLE_NO = #{emple_no}
            </if>
            <if test="accnt_no != null and accnt_no != ''">
                AND TBL.ACCNT_NO = #{accnt_no}
            </if>
            ORDER BY ACCNT_NO ASC
        ) MAIN_TBL
        WHERE 1=1
    </select>

    <!-- ================================================================
     * 날짜 : 20190425
     * 이름 : 송준빈
     * 추가내용 : 회원별수당조회 (사원별수당) 조회수
     * 대상 테이블 :
     * ================================================================
     * -->
    <select id="DlwPayMap.getEmplSpecFeesCount" parameterType="map" resultType="int">
        SELECT /* DlwPayMap.getEmplSpecFeesCount */
            COUNT(*) AS ICNT
        FROM
        (
            SELECT
                ROW_NUMBER() OVER(ORDER BY EMPLE_NO ASC) AS PAGE_INDX,
                EMPLE_NO,
                EMPLE_NM,
                MASK_IDN_NO,
                OCP_CLUSTER,
                OCP_CLUSTER_NM,
                DEPT_NM,
                INCOM_CL,
                INCOM_CL_NM,
                BANK_CD,
                BANK_NM,
                BANK_ACCNT_NO,
                (CASE WHEN ALOW_AMT > 0 THEN ALOW_AMT ELSE 0 END ) AS ALOW_AMT,

                --소득세
                CASE WHEN CHK_RT_TAX = 'Y' THEN
                          --기타소득
                     CASE WHEN INCOM_CL = '0001' AND (ALOW_AMT-TRUNC(ALOW_AMT * NEED_RAT)) > 50000 THEN  TRUNC(ALOW_AMT * TAX_RAT,-1)
                          --사업소득
                          WHEN INCOM_CL = '0002' AND (ALOW_AMT) >= 33600 THEN TRUNC(ALOW_AMT * TAX_RAT,-1)
                     ELSE 0 END
                ELSE 0 END F5,

                --주민세
                CASE WHEN CHK_RT_TAX = 'Y' THEN
                          --기타소득
                     CASE WHEN INCOM_CL = '0001' AND (ALOW_AMT-TRUNC(ALOW_AMT * NEED_RAT)) > 50000 THEN TRUNC(ALOW_AMT * TAX_RAT * 0.1,-1)
                          --사업소득
                          WHEN INCOM_CL = '0002' AND (ALOW_AMT) >= 33600 THEN TRUNC(ALOW_AMT * TAX_RAT * 0.1,-1)
                     ELSE 0 END
                ELSE 0 END F6,

                -- 공제계
                (CASE WHEN CHK_RT_TAX = 'Y' THEN
                          --기타소득
                     CASE WHEN INCOM_CL = '0001' AND (ALOW_AMT-TRUNC(ALOW_AMT * NEED_RAT)) > 50000 THEN  TRUNC(ALOW_AMT * TAX_RAT,-1)
                          --사업소득
                          WHEN INCOM_CL = '0002' AND (ALOW_AMT) >= 33600 THEN TRUNC(ALOW_AMT * TAX_RAT,-1)
                     ELSE 0 END
                ELSE 0 END)
                +
                (CASE WHEN CHK_RT_TAX = 'Y' THEN
                          --기타소득
                     CASE WHEN INCOM_CL = '0001' AND (ALOW_AMT-TRUNC(ALOW_AMT * NEED_RAT)) > 50000 THEN TRUNC(ALOW_AMT * TAX_RAT * 0.1,-1)
                          --사업소득
                          WHEN INCOM_CL = '0002' AND (ALOW_AMT) >= 33600 THEN TRUNC(ALOW_AMT * TAX_RAT * 0.1,-1)
                     ELSE 0 END
                ELSE 0 END) AS F5F6_SUM,

                --필요경비
                CASE WHEN ALOW_AMT  >  0 THEN trunc(ALOW_AMT * NEED_RAT) else 0 END NEED_COST    /* 필요경비 */
            FROM
            (
                SELECT
                    TBL.EMPLE_NO,
                    EMP.EMPLE_NM,
                    SUBSTR(EMP.IDN_NO,1,6) || '-' || '*******' MASK_IDN_NO,
                    NVL(DEP.OCP_CLUSTER, EMP.OCP_CLUSTER) AS OCP_CLUSTER,
                    (SELECT FN_COM_NM('96', NVL(DEP.OCP_CLUSTER, EMP.OCP_CLUSTER)) FROM DUAL) OCP_CLUSTER_NM,
                    FN_DEPT_NM(DEP.DEPT_CD) AS DEPT_NM,
                    EMP.INCOM_CL,
                    (SELECT FN_COM_NM('0124', EMP.INCOM_CL) FROM DUAL) INCOM_CL_NM,
                    BANK_CD,
                    (SELECT FN_COM_NM ('63', NVL(EMP.BANK_CD,'X')) FROM DUAL) BANK_NM,
                    EMP.BANK_ACCNT_NO,
                    /*************************************수당 기초데이터**************************************************/
                    (T21_AMT + T32_AMT + T33_AMT) - (F07_AMT + F08_AMT + F10_AMT + F12_AMT) AS ALOW_AMT,                                      --수당
                    CASE WHEN (T21_AMT + T32_AMT) - (F07_AMT + F11_AMT) <![CDATA[<=]]>  0 THEN 'F' ELSE 'Y' END CHK_RT_TAX,                     --환수구분값
                    (SELECT PAY_RAT FROM ALOW_SET_MST WHERE ALOW_CD = 'F5' AND OCP_CLUSTER = EMP.OCP_CLUSTER) AS PAY_RAT,           --소득세 %
                    (SELECT PAY_RAT FROM ALOW_SET_MST WHERE ALOW_CD = 'T23' AND PROD_JOIN_DT_STR <![CDATA[<=]]> ALOW_DT AND PROD_JOIN_DT_END  >=  ALOW_DT  AND OCP_CLUSTER = EMP.OCP_CLUSTER) / 100 AS NEED_RAT,    --필요경비율

                    -- 최종 소득세 비율 (소득구분(기타소득) : 수당 X 소득세  50000원 이상이면 수당 * TAX_RAT적용
                    -- 최종 소득세 비율 (소득구분(사업소득) : 수당 X 소득세  33600원 이상이면 수당 * TAX_RAT적용
                    CASE WHEN NVL(EMP.INCOM_CL,'N') = 'N' THEN (SELECT PAY_RAT FROM ALOW_SET_MST WHERE ALOW_CD = 'F5' AND OCP_CLUSTER = EMP.OCP_CLUSTER) / 100
                    ELSE
                        CASE WHEN (EMP.INCOM_CL = '0001' AND ALOW_DT >= '201812') THEN 0.08
                             WHEN (EMP.INCOM_CL = '0001' AND ALOW_DT <![CDATA[<=]]> '201803') THEN 0.04
                             WHEN (EMP.INCOM_CL = '0001' AND ALOW_DT > '201803') THEN 0.06
                             WHEN EMP.INCOM_CL = '0002' THEN 0.03
                             WHEN EMP.INCOM_CL = '0003' THEN 0
                        ELSE 0.9 END
                    END TAX_RAT
                    /******************************************************************************************************/
                FROM
                (
                    SELECT
                        AD.ALOW_DT,
                        AD.EMPLE_NO,
                            SUM((CASE WHEN ALOW_CD = 'T21' THEN AMT ELSE  0 END )) AS T21_AMT,  --수당
                            SUM((CASE WHEN ALOW_CD = 'T32' THEN AMT ELSE  0 END )) AS T32_AMT,  --누진수당
                            SUM((CASE WHEN ALOW_CD = 'F7' THEN AMT ELSE  0 END  )) AS F07_AMT,   --수당환수
                            0 AS F11_AMT,
                            SUM((CASE WHEN ALOW_CD = 'T33' THEN AMT ELSE  0 END )) AS T33_AMT,  --수수료산출
                            SUM((CASE WHEN ALOW_CD = 'F8' THEN AMT ELSE  0 END )) AS F08_AMT,  --수수료환수
                            SUM((CASE WHEN ALOW_CD = 'F10' THEN AMT ELSE  0 END )) AS F10_AMT,  --연체환수
                            SUM((CASE WHEN ALOW_CD = 'F12' THEN AMT ELSE  0 END )) AS F12_AMT  --이월환수
                    FROM
                    (
                        SELECT
                            ROW_NUMBER() OVER(PARTITION BY ACCNT_NO, ALOW_CD ORDER BY DTL_SEQ DESC) AS MAX_SEQ,
                            A.*
                        FROM ALOW_DA_DTL A
                        WHERE 1=1
                        <if test="month_cal != null and month_cal != ''">
                            AND ALOW_DT = #{month_cal}
                        </if>
                    ) AD
                    WHERE MAX_SEQ = 1
                    GROUP BY AD.ALOW_DT, AD.EMPLE_NO
                ) TBL INNER JOIN
                        EMPLOYEE EMP ON TBL.EMPLE_NO = EMP.EMPLE_NO AND NVL(ALOW_YN,'Y') != 'N' LEFT OUTER JOIN
                        DEPARTMENT DEP ON EMP.DEPT_CD = DEP.DEPT_CD
                WHERE 1=1
                    AND DEP.DEPT_KIND = '02'    --계열
                    AND DEP.DEPT_CD != '1664'   --콜센터 제외
                <if test="dept_cd != null and dept_cd != ''">
                    AND EMP.DEPT_CD = #{dept_cd}
                </if>
                <if test="emple_no != null and emple_no != ''">
                    AND EMP.EMPLE_NO = #{emple_no}
                </if>
            ) MAIN
            ORDER BY EMPLE_NO ASC
        ) MAIN_TBL
        WHERE 1=1
    </select>

    <!-- ================================================================
     * 날짜 : 20190425
     * 이름 : 송준빈
     * 추가내용 : 회원별수당조회 (사원별수당) 리스트
     * 대상 테이블 :
     * ================================================================
     * -->
    <select id="DlwPayMap.getEmplSpecFeesList" parameterType="map" resultType="resultMap">
        SELECT /* DlwPayMap.getEmplSpecFeesList */
            MAIN_TBL.*
        FROM
        (
            SELECT
                ROW_NUMBER() OVER(ORDER BY EMPLE_NO ASC) AS PAGE_INDX,
                EMPLE_NO,
                EMPLE_NM,
                MASK_IDN_NO,
                OCP_CLUSTER,
                OCP_CLUSTER_NM,
                DEPT_NM,
                INCOM_CL,
                INCOM_CL_NM,
                BANK_CD,
                BANK_NM,
                BANK_ACCNT_NO,
                (CASE WHEN ALOW_AMT > 0 THEN ALOW_AMT ELSE 0 END ) AS ALOW_AMT,

                --소득세
                CASE WHEN CHK_RT_TAX = 'Y' THEN
                          --기타소득
                     CASE WHEN INCOM_CL = '0001' AND (ALOW_AMT-TRUNC(ALOW_AMT * NEED_RAT)) > 50000 THEN  TRUNC(ALOW_AMT * TAX_RAT,-1)
                          --사업소득
                          WHEN INCOM_CL = '0002' AND (ALOW_AMT) >= 33600 THEN TRUNC(ALOW_AMT * TAX_RAT,-1)
                     ELSE 0 END
                ELSE 0 END F5,

                --주민세
                CASE WHEN CHK_RT_TAX = 'Y' THEN
                          --기타소득
                     CASE WHEN INCOM_CL = '0001' AND (ALOW_AMT-TRUNC(ALOW_AMT * NEED_RAT)) > 50000 THEN TRUNC(ALOW_AMT * TAX_RAT * 0.1,-1)
                          --사업소득
                          WHEN INCOM_CL = '0002' AND (ALOW_AMT) >= 33600 THEN TRUNC(ALOW_AMT * TAX_RAT * 0.1,-1)
                     ELSE 0 END
                ELSE 0 END F6,

                -- 공제계
                (CASE WHEN CHK_RT_TAX = 'Y' THEN
                          --기타소득
                     CASE WHEN INCOM_CL = '0001' AND (ALOW_AMT-TRUNC(ALOW_AMT * NEED_RAT)) > 50000 THEN  TRUNC(ALOW_AMT * TAX_RAT,-1)
                          --사업소득
                          WHEN INCOM_CL = '0002' AND (ALOW_AMT) >= 33600 THEN TRUNC(ALOW_AMT * TAX_RAT,-1)
                     ELSE 0 END
                ELSE 0 END)
                +
                (CASE WHEN CHK_RT_TAX = 'Y' THEN
                          --기타소득
                     CASE WHEN INCOM_CL = '0001' AND (ALOW_AMT-TRUNC(ALOW_AMT * NEED_RAT)) > 50000 THEN TRUNC(ALOW_AMT * TAX_RAT * 0.1,-1)
                          --사업소득
                          WHEN INCOM_CL = '0002' AND (ALOW_AMT) >= 33600 THEN TRUNC(ALOW_AMT * TAX_RAT * 0.1,-1)
                     ELSE 0 END
                ELSE 0 END) AS F5F6_SUM,

                --필요경비
                CASE WHEN ALOW_AMT  >  0 THEN trunc(ALOW_AMT * NEED_RAT) else 0 END NEED_COST    /* 필요경비 */
            FROM
            (
                SELECT
                    TBL.EMPLE_NO,
                    EMP.EMPLE_NM,
                    SUBSTR(EMP.IDN_NO,1,6) || '-' || '*******' MASK_IDN_NO,
                    NVL(DEP.OCP_CLUSTER, EMP.OCP_CLUSTER) AS OCP_CLUSTER,
                    (SELECT FN_COM_NM('96', NVL(DEP.OCP_CLUSTER, EMP.OCP_CLUSTER)) FROM DUAL) OCP_CLUSTER_NM,
                    FN_DEPT_NM(DEP.DEPT_CD) AS DEPT_NM,
                    EMP.INCOM_CL,
                    (SELECT FN_COM_NM('0124', EMP.INCOM_CL) FROM DUAL) INCOM_CL_NM,
                    BANK_CD, 
                    (SELECT FN_COM_NM ('63', NVL(EMP.BANK_CD,'X')) FROM DUAL) BANK_NM,
                    EMP.BANK_ACCNT_NO,
                    /*************************************수당 기초데이터**************************************************/
                    (T21_AMT + T32_AMT + T33_AMT) - (F07_AMT + F08_AMT + F10_AMT + F11_AMT + F12_AMT) AS ALOW_AMT,                                      --수당
                    CASE WHEN (T21_AMT + T32_AMT) - (F07_AMT + F11_AMT) <![CDATA[<=]]>  0 THEN 'F' ELSE 'Y' END CHK_RT_TAX,                     --환수구분값
                    NVL((SELECT PAY_RAT FROM ALOW_SET_MST WHERE ALOW_CD = 'F5' AND OCP_CLUSTER =  NVL(DEP.OCP_CLUSTER, EMP.OCP_CLUSTER)),0) AS PAY_RAT,           --소득세 %
                    NVL((SELECT PAY_RAT FROM ALOW_SET_MST WHERE ALOW_CD = 'T23' AND PROD_JOIN_DT_STR <![CDATA[<=]]> ALOW_DT AND PROD_JOIN_DT_END  >=  ALOW_DT  AND OCP_CLUSTER =  NVL(DEP.OCP_CLUSTER, EMP.OCP_CLUSTER)) / 100,0) AS NEED_RAT,    --필요경비율

                    -- 최종 소득세 비율 (소득구분(기타소득) : 수당 X 소득세  50000원 이상이면 수당 * TAX_RAT적용
                    -- 최종 소득세 비율 (소득구분(사업소득) : 수당 X 소득세  33600원 이상이면 수당 * TAX_RAT적용
                    CASE WHEN NVL(EMP.INCOM_CL,'N') = 'N' THEN (SELECT PAY_RAT FROM ALOW_SET_MST WHERE ALOW_CD = 'F5' AND OCP_CLUSTER =  NVL(DEP.OCP_CLUSTER, EMP.OCP_CLUSTER)) / 100
                    ELSE
                        CASE WHEN (EMP.INCOM_CL = '0001' AND ALOW_DT >= '201812') THEN 0.08
                             WHEN (EMP.INCOM_CL = '0001' AND ALOW_DT <![CDATA[<=]]> '201803') THEN 0.04
                             WHEN (EMP.INCOM_CL = '0001' AND ALOW_DT > '201803') THEN 0.06
                             WHEN EMP.INCOM_CL = '0002' THEN 0.03
                             WHEN EMP.INCOM_CL = '0003' THEN 0
                        ELSE 0.9 END
                    END TAX_RAT
                    /******************************************************************************************************/
                FROM
                (
                    SELECT
                        AD.ALOW_DT,
                        AD.EMPLE_NO,
                            SUM((CASE WHEN ALOW_CD = 'T21' THEN AMT ELSE  0 END )) AS T21_AMT,  --수당
                            SUM((CASE WHEN ALOW_CD = 'T32' THEN AMT ELSE  0 END )) AS T32_AMT,  --누진수당
                            SUM((CASE WHEN ALOW_CD = 'F7' THEN AMT ELSE  0 END  )) AS F07_AMT,   --수당환수
                            SUM((CASE WHEN ALOW_CD = 'F11' THEN AMT ELSE  0 END  )) AS F11_AMT,
                            SUM((CASE WHEN ALOW_CD = 'T33' THEN AMT ELSE  0 END )) AS T33_AMT,  --수수료산출
                            SUM((CASE WHEN ALOW_CD = 'F8' THEN AMT ELSE  0 END )) AS F08_AMT,  --수수료환수
                            SUM((CASE WHEN ALOW_CD = 'F10' THEN AMT ELSE  0 END )) AS F10_AMT,  --연체환수
                            SUM((CASE WHEN ALOW_CD = 'F12' THEN AMT ELSE  0 END )) AS F12_AMT  --이월환수
                    FROM
                    (
                        SELECT
                            ROW_NUMBER() OVER(PARTITION BY ACCNT_NO, ALOW_CD ORDER BY DTL_SEQ DESC) AS MAX_SEQ,
                            A.*
                        FROM ALOW_DA_DTL A
                        WHERE 1=1
                        	AND ALOW_CD IN ('T21','T32','F7','F11','F12')
                        <if test="month_cal != null and month_cal != ''">
                            AND ALOW_DT = #{month_cal}
                        </if>
                    ) AD
                    WHERE MAX_SEQ = 1
                    GROUP BY AD.ALOW_DT, AD.EMPLE_NO
                ) TBL INNER JOIN
                        EMPLOYEE EMP ON TBL.EMPLE_NO = EMP.EMPLE_NO AND NVL(ALOW_YN,'Y') != 'N' LEFT OUTER JOIN
                        DEPARTMENT DEP ON EMP.DEPT_CD = DEP.DEPT_CD
                WHERE 1=1
                    AND DEP.DEPT_KIND = '02'    --계열
                    AND DEP.DEPT_CD != '1664'   --콜센터 제외
                <if test="dept_cd != null and dept_cd != ''">
                    AND EMP.DEPT_CD = #{dept_cd}
                </if>
                <if test="emple_no != null and emple_no != ''">
                    AND EMP.EMPLE_NO = #{emple_no}
                </if>
            ) MAIN
            ORDER BY EMPLE_NO ASC
        ) MAIN_TBL
        WHERE 1=1
         <if test="startLine != null and startLine != '' and endLine != null and endLine != ''">
           AND PAGE_INDX <![CDATA[>=]]> #{startLine}
           AND PAGE_INDX <![CDATA[<]]> #{endLine}
         </if>
    </select>

    <!-- ================================================================
     * 날짜 : 20190425
     * 이름 : 송준빈
     * 추가내용 : 회원별수당조회 (사원별수당) 총계
     * 대상 테이블 :
     * ================================================================
     * -->
    <select id="DlwPayMap.getEmplSpecFeesSummary" parameterType="map" resultType="resultMap">
        SELECT /* DlwPayMap.getEmplSpecFeesSummary */
            COUNT(*) AS TOT_ICNT,
            SUM(MAIN_TBL.ALOW_AMT) AS TOT_ALOW_AMT,
            SUM(MAIN_TBL.F5) AS TOT_F5,
            SUM(MAIN_TBL.F6) AS TOT_F6,
            SUM(MAIN_TBL.F5F6_SUM) AS TOT_F5F6_SUM,
            SUM(MAIN_TBL.REAL_AMT) AS TOT_REAL_AMT,
            SUM(MAIN_TBL.NEED_COST) AS TOT_NEED_COST
        FROM
        (
            SELECT
                ROW_NUMBER() OVER(ORDER BY EMPLE_NO ASC) AS PAGE_INDX,
                EMPLE_NO,
                EMPLE_NM,
                MASK_IDN_NO,
                OCP_CLUSTER,
                OCP_CLUSTER_NM,
                DEPT_NM,
                INCOM_CL,
                INCOM_CL_NM,
                BANK_CD,
                BANK_NM,
                BANK_ACCNT_NO,
                (CASE WHEN ALOW_AMT > 0 THEN ALOW_AMT ELSE 0 END ) AS ALOW_AMT,

                --소득세
                CASE WHEN CHK_RT_TAX = 'Y' THEN
                          --기타소득
                     CASE WHEN INCOM_CL = '0001' AND (ALOW_AMT-TRUNC(ALOW_AMT * NEED_RAT)) > 50000 THEN  TRUNC(ALOW_AMT * TAX_RAT,-1)
                          --사업소득
                          WHEN INCOM_CL = '0002' AND (ALOW_AMT) >= 33600 THEN TRUNC(ALOW_AMT * TAX_RAT,-1)
                     ELSE 0 END
                ELSE 0 END F5,

                --주민세
                CASE WHEN CHK_RT_TAX = 'Y' THEN
                          --기타소득
                     CASE WHEN INCOM_CL = '0001' AND (ALOW_AMT-TRUNC(ALOW_AMT * NEED_RAT)) > 50000 THEN TRUNC(ALOW_AMT * TAX_RAT * 0.1,-1)
                          --사업소득
                          WHEN INCOM_CL = '0002' AND (ALOW_AMT) >= 33600 THEN TRUNC(ALOW_AMT * TAX_RAT * 0.1,-1)
                     ELSE 0 END
                ELSE 0 END F6,

                -- 공제계
                (CASE WHEN CHK_RT_TAX = 'Y' THEN
                          --기타소득
                     CASE WHEN INCOM_CL = '0001' AND (ALOW_AMT-TRUNC(ALOW_AMT * NEED_RAT)) > 50000 THEN  TRUNC(ALOW_AMT * TAX_RAT,-1)
                          --사업소득
                          WHEN INCOM_CL = '0002' AND (ALOW_AMT) >= 33600 THEN TRUNC(ALOW_AMT * TAX_RAT,-1)
                     ELSE 0 END
                ELSE 0 END)
                +
                (CASE WHEN CHK_RT_TAX = 'Y' THEN
                          --기타소득
                     CASE WHEN INCOM_CL = '0001' AND (ALOW_AMT-TRUNC(ALOW_AMT * NEED_RAT)) > 50000 THEN TRUNC(ALOW_AMT * TAX_RAT * 0.1,-1)
                          --사업소득
                          WHEN INCOM_CL = '0002' AND (ALOW_AMT) >= 33600 THEN TRUNC(ALOW_AMT * TAX_RAT * 0.1,-1)
                     ELSE 0 END
                ELSE 0 END) AS F5F6_SUM,

                -- 실지급액
                (CASE WHEN ALOW_AMT > 0 THEN ALOW_AMT ELSE 0 END )
                -
                ((CASE WHEN CHK_RT_TAX = 'Y' THEN
                          --기타소득
                     CASE WHEN INCOM_CL = '0001' AND (ALOW_AMT-TRUNC(ALOW_AMT * NEED_RAT)) > 50000 THEN  TRUNC(ALOW_AMT * TAX_RAT,-1)
                          --사업소득
                          WHEN INCOM_CL = '0002' AND (ALOW_AMT) >= 33600 THEN TRUNC(ALOW_AMT * TAX_RAT,-1)
                     ELSE 0 END
                ELSE 0 END)
                +
                (CASE WHEN CHK_RT_TAX = 'Y' THEN
                          --기타소득
                     CASE WHEN INCOM_CL = '0001' AND (ALOW_AMT-TRUNC(ALOW_AMT * NEED_RAT)) > 50000 THEN TRUNC(ALOW_AMT * TAX_RAT * 0.1,-1)
                          --사업소득
                          WHEN INCOM_CL = '0002' AND (ALOW_AMT) >= 33600 THEN TRUNC(ALOW_AMT * TAX_RAT * 0.1,-1)
                     ELSE 0 END
                ELSE 0 END)) AS REAL_AMT,

                --필요경비
                CASE WHEN ALOW_AMT  >  0 THEN trunc(ALOW_AMT * NEED_RAT) else 0 END NEED_COST    /* 필요경비 */
            FROM
            (
                SELECT
                    TBL.EMPLE_NO,
                    EMP.EMPLE_NM,
                    SUBSTR(EMP.IDN_NO,1,6) || '-' || '*******' MASK_IDN_NO,
                    NVL(DEP.OCP_CLUSTER, EMP.OCP_CLUSTER) AS OCP_CLUSTER,
                    (SELECT FN_COM_NM('96', NVL(DEP.OCP_CLUSTER, EMP.OCP_CLUSTER)) FROM DUAL) OCP_CLUSTER_NM,
                    FN_DEPT_NM(DEP.DEPT_CD) AS DEPT_NM,
                    EMP.INCOM_CL,
                    (SELECT FN_COM_NM('0124', EMP.INCOM_CL) FROM DUAL) INCOM_CL_NM,
                    BANK_CD,
                    (SELECT FN_COM_NM ('63', NVL(EMP.BANK_CD,'X')) FROM DUAL) BANK_NM,
                    EMP.BANK_ACCNT_NO,
                    /*************************************수당 기초데이터**************************************************/
                    (T21_AMT + T32_AMT + T33_AMT) - (F07_AMT + F08_AMT + F10_AMT + F12_AMT) AS ALOW_AMT,                                      --수당
                    CASE WHEN (T21_AMT + T32_AMT) - (F07_AMT + F11_AMT) <![CDATA[<=]]>  0 THEN 'F' ELSE 'Y' END CHK_RT_TAX,                     --환수구분값
                    (SELECT PAY_RAT FROM ALOW_SET_MST WHERE ALOW_CD = 'F5' AND OCP_CLUSTER = EMP.OCP_CLUSTER) AS PAY_RAT,           --소득세 %
                    (SELECT PAY_RAT FROM ALOW_SET_MST WHERE ALOW_CD = 'T23' AND PROD_JOIN_DT_STR <![CDATA[<=]]> ALOW_DT AND PROD_JOIN_DT_END  >=  ALOW_DT  AND OCP_CLUSTER = EMP.OCP_CLUSTER) / 100 AS NEED_RAT,    --필요경비율

                    -- 최종 소득세 비율 (소득구분(기타소득) : 수당 X 소득세  50000원 이상이면 수당 * TAX_RAT적용
                    -- 최종 소득세 비율 (소득구분(사업소득) : 수당 X 소득세  33600원 이상이면 수당 * TAX_RAT적용
                    CASE WHEN NVL(EMP.INCOM_CL,'N') = 'N' THEN (SELECT PAY_RAT FROM ALOW_SET_MST WHERE ALOW_CD = 'F5' AND OCP_CLUSTER = EMP.OCP_CLUSTER) / 100
                    ELSE
                        CASE WHEN (EMP.INCOM_CL = '0001' AND ALOW_DT >= '201812') THEN 0.08
                             WHEN (EMP.INCOM_CL = '0001' AND ALOW_DT <![CDATA[<=]]> '201803') THEN 0.04
                             WHEN (EMP.INCOM_CL = '0001' AND ALOW_DT > '201803') THEN 0.06
                             WHEN EMP.INCOM_CL = '0002' THEN 0.03
                             WHEN EMP.INCOM_CL = '0003' THEN 0
                        ELSE 0.9 END
                    END TAX_RAT
                    /******************************************************************************************************/
                FROM
                (
                    SELECT
                        AD.ALOW_DT,
                        AD.EMPLE_NO,
                            SUM((CASE WHEN ALOW_CD = 'T21' THEN AMT ELSE  0 END )) AS T21_AMT,  --수당
                            SUM((CASE WHEN ALOW_CD = 'T32' THEN AMT ELSE  0 END )) AS T32_AMT,  --누진수당
                            SUM((CASE WHEN ALOW_CD = 'F7' THEN AMT ELSE  0 END  )) AS F07_AMT,   --수당환수
                            0 AS F11_AMT,
                            SUM((CASE WHEN ALOW_CD = 'T33' THEN AMT ELSE  0 END )) AS T33_AMT,  --수수료산출
                            SUM((CASE WHEN ALOW_CD = 'F8' THEN AMT ELSE  0 END )) AS F08_AMT,  --수수료환수
                            SUM((CASE WHEN ALOW_CD = 'F10' THEN AMT ELSE  0 END )) AS F10_AMT,  --연체환수
                            SUM((CASE WHEN ALOW_CD = 'F12' THEN AMT ELSE  0 END )) AS F12_AMT  --이월환수
                    FROM
                    (
                        SELECT
                            ROW_NUMBER() OVER(PARTITION BY ACCNT_NO, ALOW_CD ORDER BY DTL_SEQ DESC) AS MAX_SEQ,
                            A.*
                        FROM ALOW_DA_DTL A
                        WHERE 1=1
                        <if test="month_cal != null and month_cal != ''">
                            AND ALOW_DT = #{month_cal}
                        </if>
                    ) AD
                    WHERE MAX_SEQ = 1
                    GROUP BY AD.ALOW_DT, AD.EMPLE_NO
                ) TBL INNER JOIN
                        EMPLOYEE EMP ON TBL.EMPLE_NO = EMP.EMPLE_NO AND NVL(ALOW_YN,'Y') != 'N' LEFT OUTER JOIN
                        DEPARTMENT DEP ON EMP.DEPT_CD = DEP.DEPT_CD
                WHERE 1=1
                    AND DEP.DEPT_KIND = '02'    --계열
                    AND DEP.DEPT_CD != '1664'   --콜센터 제외
                <if test="dept_cd != null and dept_cd != ''">
                    AND EMP.DEPT_CD = #{dept_cd}
                </if>
                <if test="emple_no != null and emple_no != ''">
                    AND EMP.EMPLE_NO = #{emple_no}
                </if>
            ) MAIN
            ORDER BY EMPLE_NO ASC
        ) MAIN_TBL
        WHERE 1=1
    </select>

    <!-- ================================================================
     * 날짜 : 20190425
     * 이름 : 송준빈
     * 추가내용 : 회원별수당조회 (이월환수) 조회수
     * 대상 테이블 :
     * ================================================================
     * -->
    <select id="DlwPayMap.getCarryOverRefundCount" parameterType="map" resultType="int">
        SELECT /* DlwPayMap.getCarryOverRefundCount */
            COUNT(*) AS ICNT
        FROM
        (
            SELECT
                ROW_NUMBER() OVER(ORDER BY E.DEPT_CD ASC) AS PAGE_INDX,
                ADF.EMPLE_NO,
                  E.EMPLE_NM,
                  NVL(STND_ALOW_DT,'') STND_ALOW_DT,
                  FN_DEPT_NM(E.DEPT_CD) AS DEPT_NM,
                  NVL(ADF.TM_DTL_AMT,0) AS TM_DTL_AMT,
                  NVL(ADF.TM_REDMP_AMT,0) AS TM_REDMP_AMT,
                  NVL(ADF.STND_AMT,0) AS STND_AMT,
                  NVL(ADF.TM_ALOW_AMT,0) AS TM_ALOW_AMT,
                  CASE WHEN NVL(ADF.AMT,0) <![CDATA[<]]> 0 THEN 0 ELSE NVL(ADF.AMT,0) END AS AMT,
                  CASE WHEN E.OCP_CLUSTER IS NOT NULL THEN FN_COM_NM('96',E.OCP_CLUSTER)
                       ELSE FN_COM_NM('96',D.OCP_CLUSTER)
                  END OCP_CLUSTER_NM
            FROM ALOW_DTL_F12 ADF
                JOIN EMPLOYEE E ON ADF.EMPLE_NO=E.EMPLE_NO
                JOIN DEPARTMENT D ON E.DEPT_CD=D.DEPT_CD
            WHERE 1=1
            <if test="month_cal != null and month_cal != ''">
                AND ADF.ALOW_DT BETWEEN #{month_cal} AND  #{month_cal}
            </if>
            <if test="dept_cd != null and dept_cd != ''">
                AND E.DEPT_CD = #{dept_cd}
            </if>
            <if test="emple_no != null and emple_no != ''">
                AND ADF.EMPLE_NO = #{emple_no}
            </if>
            AND NVL(E.OCP_CLUSTER, D.OCP_CLUSTER) !='04'
            ORDER BY E.DEPT_CD
        ) MAIN_TBL
        WHERE 1=1
    </select>

    <!-- ================================================================
     * 날짜 : 20190425
     * 이름 : 송준빈
     * 추가내용 : 회원별수당조회 (이월환수) 리스트
     * 대상 테이블 :
     * ================================================================
     * -->
    <select id="DlwPayMap.getCarryOverRefundList" parameterType="map" resultType="resultMap">
        SELECT /* DlwPayMap.getCarryOverRefundList */
            MAIN_TBL.*
        FROM
        (
            SELECT
                ROW_NUMBER() OVER(ORDER BY E.DEPT_CD ASC) AS PAGE_INDX,
                ADF.EMPLE_NO,
                  E.EMPLE_NM,
                  NVL(STND_ALOW_DT,'') STND_ALOW_DT,
                  FN_DEPT_NM(E.DEPT_CD) AS DEPT_NM,
                  NVL(ADF.TM_DTL_AMT,0) AS TM_DTL_AMT,
                  NVL(ADF.TM_REDMP_AMT,0) AS TM_REDMP_AMT,
                  NVL(ADF.STND_AMT,0) AS STND_AMT,
                  NVL(ADF.TM_ALOW_AMT,0) AS TM_ALOW_AMT,
                  CASE WHEN NVL(ADF.AMT,0) <![CDATA[<]]> 0 THEN 0 ELSE NVL(ADF.AMT,0) END AS AMT,
                  CASE WHEN E.OCP_CLUSTER IS NOT NULL THEN FN_COM_NM('96',E.OCP_CLUSTER)
                       ELSE FN_COM_NM('96',D.OCP_CLUSTER)
                  END OCP_CLUSTER_NM
            FROM ALOW_DTL_F12 ADF
                JOIN EMPLOYEE E ON ADF.EMPLE_NO=E.EMPLE_NO
                JOIN DEPARTMENT D ON E.DEPT_CD=D.DEPT_CD
            WHERE 1=1
            <if test="month_cal != null and month_cal != ''">
                AND ADF.ALOW_DT BETWEEN #{month_cal} AND  #{month_cal}
            </if>
            <if test="dept_cd != null and dept_cd != ''">
                AND E.DEPT_CD = #{dept_cd}
            </if>
            <if test="emple_no != null and emple_no != ''">
                AND ADF.EMPLE_NO = #{emple_no}
            </if>
            AND NVL(E.OCP_CLUSTER, D.OCP_CLUSTER) !='04'
            ORDER BY E.DEPT_CD
        ) MAIN_TBL
        WHERE 1=1
        <if test="startLine != null and startLine != '' and endLine != null and endLine != ''">
            AND PAGE_INDX <![CDATA[>=]]> #{startLine}
            AND PAGE_INDX <![CDATA[<]]> #{endLine}
        </if>
    </select>

    <!-- ================================================================
     * 날짜 : 20190425
     * 이름 : 송준빈
     * 추가내용 : 회원별수당조회 (이월환수) 리스트
     * 대상 테이블 :
     * ================================================================
     * -->
    <select id="DlwPayMap.getCarryOverRefundSummary" parameterType="map" resultType="resultMap">
        SELECT /* DlwPayMap.getCarryOverRefundSummary */
            COUNT(*) AS TOT_ICNT,
            SUM(MAIN_TBL.TM_DTL_AMT) AS TOT_TM_DTL_AMT,
            SUM(MAIN_TBL.TM_REDMP_AMT) AS TOT_TM_REDMP_AMT,
            SUM(MAIN_TBL.STND_AMT) AS TOT_STND_AMT,
            SUM(MAIN_TBL.TM_ALOW_AMT) AS TOT_TM_ALOW_AMT,
            SUM(MAIN_TBL.AMT) AS TOT_AMT
        FROM
        (
            SELECT
                ROW_NUMBER() OVER(ORDER BY E.DEPT_CD ASC) AS PAGE_INDX,
                ADF.EMPLE_NO,
                  E.EMPLE_NM,
                  NVL(STND_ALOW_DT,'') STND_ALOW_DT,
                  FN_DEPT_NM(E.DEPT_CD) AS DEPT_NM,
                  NVL(ADF.TM_DTL_AMT,0) AS TM_DTL_AMT,
                  NVL(ADF.TM_REDMP_AMT,0) AS TM_REDMP_AMT,
                  NVL(ADF.STND_AMT,0) AS STND_AMT,
                  NVL(ADF.TM_ALOW_AMT,0) AS TM_ALOW_AMT,
                  CASE WHEN NVL(ADF.AMT,0) <![CDATA[<]]> 0 THEN 0 ELSE NVL(ADF.AMT,0) END AS AMT,
                  CASE WHEN E.OCP_CLUSTER IS NOT NULL THEN FN_COM_NM('96',E.OCP_CLUSTER)
                       ELSE FN_COM_NM('96',D.OCP_CLUSTER)
                  END OCP_CLUSTER_NM
            FROM ALOW_DTL_F12 ADF
                JOIN EMPLOYEE E ON ADF.EMPLE_NO=E.EMPLE_NO
                JOIN DEPARTMENT D ON E.DEPT_CD=D.DEPT_CD
            WHERE 1=1
            <if test="month_cal != null and month_cal != ''">
                AND ADF.ALOW_DT BETWEEN #{month_cal} AND  #{month_cal}
            </if>
            <if test="dept_cd != null and dept_cd != ''">
                AND E.DEPT_CD = #{dept_cd}
            </if>
            <if test="emple_no != null and emple_no != ''">
                AND ADF.EMPLE_NO = #{emple_no}
            </if>
            AND NVL(E.OCP_CLUSTER, D.OCP_CLUSTER) !='04'
            ORDER BY E.DEPT_CD
        ) MAIN_TBL
        WHERE 1=1
    </select>
    
    <!-- ================================================================
     * 날짜 : 20191023
     * 이름 : 김주용
     * 추가내용 : 회원별수당조회 (재무현황) 조회수
     * 대상 테이블 :
     * ================================================================
     * -->
    <select id="DlwPayMap.getFinancialStatusCount" parameterType="map" resultType="int">
        SELECT /* DlwPayMap.getFinancialStatusCount */
            COUNT(*) AS ICNT
        FROM
        (
            SELECT 
                A.PAGE_INDX,
                A.ACCNT_NO,
                A.MEM_NM,
                A.PROD_NM,
                A.PROD_AMT,
                A.PROD_NO_AMT,
                A.PAY_AMT,
                A.PAY_NO_AMT,
                A.EXPR_NO,
                A.PAY_CNT,
                A.KSTBIT,
                CASE WHEN A.RESN_PROC_YN = 'Y' THEN '처리'
                    WHEN A.KSTBIT = '해약' AND NVL(A.RESN_PROC_YN, 'N') = 'N' THEN '미처리'
                    ELSE '' 
                END AS RESN_PROC_YN,
                A.ALOW_AMT,
                A.RESNREDMP_AMT,
                CASE WHEN PAY_LIMIT_AMT <![CDATA[>]]> 500000 THEN 500000
                    ELSE PAY_LIMIT_AMT 
                END AS PAY_LIMIT_AMT,
                ROUND((A.PAY_LIMIT_AMT*0.75)+((A.PAY_LIMIT_AMT*0.25)*A.PAY_NO_AMT/A.PROD_NO_AMT)) AS ALOW_DTL_AMT,
                CASE WHEN A.ALOW_AMT <![CDATA[>]]> (A.PAY_LIMIT_AMT*0.75)+((A.PAY_LIMIT_AMT*0.25)*A.PAY_NO_AMT/A.PROD_NO_AMT) THEN ROUND(A.ALOW_AMT-(A.PAY_LIMIT_AMT*0.75)+((A.PAY_LIMIT_AMT*0.25)*A.PAY_NO_AMT/A.PROD_NO_AMT))
                    ELSE 0 
                END AS LIMIT_EXCESS,
                A.JOIN_DT,
                A.SALE_TYPE,
                A.SALE_TYPE_NM AS ETC_1
            FROM 
            (
                SELECT 
                    ROW_NUMBER() OVER(ORDER BY MPA.ACCNT_NO ASC) AS PAGE_INDX,
                    MPA.ACCNT_NO,
                    MBR.MEM_NM,
                    PD.PROD_CD,
                    PD.PROD_NM,
                    PD.PROD_AMT,
                    (SELECT SUM(AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = PD.PROD_CD) AS PROD_NO_AMT,
                    (
                        SELECT 
                            SUM(NVL(PM.PAY_AMT, 0)+NVL(PMD.PAY_AMT, 0)+NVL(PMDD.PAY_AMT, 0))
                        FROM PAY_MNG PM LEFT OUTER JOIN 
                            PAY_MNG_DTL PMD ON PM.ACCNT_NO = PMD.ACCNT_NO AND PM.SEQ = PMD.SEQ AND PMD.DEL_FG = 'N' LEFT OUTER JOIN 
                            PAY_MNG_DTL1 PMDD ON PM.ACCNT_NO = PMDD.ACCNT_NO AND PM.SEQ = PMDD.SEQ AND PMDD.DEL_FG = 'N'
                        WHERE 1=1
                        AND PM.DEL_FG = 'N'
                        AND PM.ACCNT_NO = MPA.ACCNT_NO
                    ) AS PAY_AMT,
                    (SELECT SUM(PAY_AMT) FROM PAY_MNG WHERE ACCNT_NO = MPA.ACCNT_NO AND DEL_FG = 'N' AND PAY_DAY <![CDATA[<]]>   TO_CHAR(SYSDATE,'YYYYMMDD')) AS PAY_NO_AMT,
                    PD.EXPR_NO,
                    (SELECT COUNT(*) FROM PAY_MNG WHERE ACCNT_NO = MPA.ACCNT_NO AND DEL_FG = 'N' AND PAY_DAY <![CDATA[<]]>   TO_CHAR(SYSDATE,'YYYYMMDD')) AS PAY_CNT,
                    CASE WHEN MPA.KSTBIT = '01' THEN '대기'
                        WHEN MPA.KSTBIT = '02' THEN '가입'
                        WHEN MPA.KSTBIT = '03' THEN '해약'
                        WHEN MPA.KSTBIT = '04' THEN '행사'
                        WHEN MPA.KSTBIT = '09' THEN '만기' 
                        ELSE MPA.KSTBIT 
                    END AS KSTBIT,
                    (SELECT RESN_PROC_YN FROM RESCISSION WHERE ACCNT_NO = MPA.ACCNT_NO AND DEL_FG = 'N') AS RESN_PROC_YN,
                    ADL.ALOW_AMT,
                    ADL.RESNREDMP_AMT,
                    (SELECT SUM(AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = PD.PROD_CD)*0.1 AS PAY_LIMIT_AMT,
                    MPA.JOIN_DT,
                    ABI.SALE_TYPE,
                    (SELECT CD_NM FROM COM_CD WHERE GRP_CD = '0125' AND COM_CD = ABI.SALE_TYPE) SALE_TYPE_NM
                FROM 
                    (
                        SELECT 
                            ALOW_DT,
                            ACCNT_NO,
                            SUM(CASE WHEN ALOW_CD IN ('T21', 'T32', 'T33') THEN AMT ELSE 0 END) AS ALOW_AMT,
                            SUM(CASE WHEN ALOW_CD IN ('F7', 'F11', 'F8', 'F10') THEN AMT ELSE 0 END) AS RESNREDMP_AMT
                        FROM ALOW_DA_DTL
                        WHERE 1=1
                        AND ALOW_DT BETWEEN #{month_cal} AND #{month_cal_to} 
                        GROUP BY ALOW_DT, ACCNT_NO
                    ) ADL INNER JOIN 
                    MEM_PROD_ACCNT MPA ON MPA.ACCNT_NO = ADL.ACCNT_NO AND MPA.DEL_FG = 'N' INNER JOIN 
                    MEMBER MBR ON MBR.MEM_NO = MPA.MEM_NO AND MBR.DEL_FG = 'N' INNER JOIN 
                    PRODUCT PD ON PD.PROD_CD = MPA.PROD_CD LEFT OUTER JOIN
                    (
                        SELECT
                            MABI.ALOW_DT,
                            MABI.ACCNT_NO,
                            MAX(MABI.SALE_TYPE) AS SALE_TYPE,
                            COUNT(*) AS ICNT
                        FROM
                        (
                            SELECT 
                                SABI.ACCNT_NO,
                                SABI.PROD_CD,
                                SABI.SALE_TYPE,
                                SABI.B2B_COMP_CD,
                                SABI.ALOW_AMT,
                                SABI.PAY_NO,
                                SABI.ALOW_BIT,
                                SABI.ALOW_DT,
                                SABI.REG_DM
                            FROM LF_DMUSER.TB_ALOW_BASIC_INFO SABI
                            WHERE 1=1
                            AND SABI.PAY_NO = (SELECT MAX(MABI.PAY_NO) AS MAX_PAY_NO FROM LF_DMUSER.TB_ALOW_BASIC_INFO MABI WHERE 1=1 AND MABI.ACCNT_NO = SABI.ACCNT_NO)
                        ) MABI
                        WHERE 1=1 
                        GROUP BY MABI.ALOW_DT, MABI.ACCNT_NO, MABI.SALE_TYPE
                    ) ABI ON ADL.ALOW_DT = ABI.ALOW_DT AND ADL.ACCNT_NO = ABI.ACCNT_NO
                WHERE 1=1
                <if test="dept_cd != null and dept_cd != ''">
                	AND EMP.DEPT_CD = #{dept_cd}
	            </if>
	            <if test="emple_no != null and emple_no != ''">
	                AND MPA.EMPLE_NO = #{emple_no}
	            </if>
            ) A 
        ) MAIN_TBL
    </select>
    
    <!-- ================================================================
     * 날짜 : 20191023
     * 이름 : 김주용
     * 추가내용 : 회원별수당조회 (재무현황) 리스트
     * 대상 테이블 :
     * ================================================================
     * -->
    <select id="DlwPayMap.getFinancialStatusList" parameterType="map" resultType="resultMap">
        SELECT /* DlwPayMap.getFinancialStatusList */
            MAIN_TBL.*
        FROM
        (
            SELECT 
                A.PAGE_INDX,
                A.ACCNT_NO,
                A.MEM_NM,
                A.PROD_NM,
                A.PROD_AMT,
                A.PROD_NO_AMT,
                A.PAY_AMT,
                A.PAY_NO_AMT,
                A.EXPR_NO,
                A.PAY_CNT,
                A.KSTBIT,
                CASE WHEN A.RESN_PROC_YN = 'Y' THEN '처리'
                    WHEN A.KSTBIT = '해약' AND NVL(A.RESN_PROC_YN, 'N') = 'N' THEN '미처리'
                    ELSE '' 
                END AS RESN_PROC_YN,
                A.ALOW_AMT,
                A.RESNREDMP_AMT,
                CASE WHEN PAY_LIMIT_AMT <![CDATA[>]]> 500000 THEN 500000
                    ELSE PAY_LIMIT_AMT 
                END AS PAY_LIMIT_AMT,
                ROUND((A.PAY_LIMIT_AMT*0.75)+((A.PAY_LIMIT_AMT*0.25)*A.PAY_NO_AMT/A.PROD_NO_AMT)) AS ALOW_DTL_AMT,
                CASE WHEN A.ALOW_AMT <![CDATA[>]]> (A.PAY_LIMIT_AMT*0.75)+((A.PAY_LIMIT_AMT*0.25)*A.PAY_NO_AMT/A.PROD_NO_AMT) THEN ROUND(A.ALOW_AMT-(A.PAY_LIMIT_AMT*0.75)+((A.PAY_LIMIT_AMT*0.25)*A.PAY_NO_AMT/A.PROD_NO_AMT))
                    ELSE 0 
                END AS LIMIT_EXCESS,
                A.JOIN_DT,
                A.SALE_TYPE,
                A.SALE_TYPE_NM AS ETC_1
            FROM 
            (
                SELECT 
                    ROW_NUMBER() OVER(ORDER BY MPA.ACCNT_NO ASC) AS PAGE_INDX,
                    MPA.ACCNT_NO,
                    MBR.MEM_NM,
                    PD.PROD_CD,
                    PD.PROD_NM,
                    PD.PROD_AMT,
                    (SELECT SUM(AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = PD.PROD_CD) AS PROD_NO_AMT,
                    (
                        SELECT 
                            SUM(NVL(PM.PAY_AMT, 0)+NVL(PMD.PAY_AMT, 0)+NVL(PMDD.PAY_AMT, 0))
                        FROM PAY_MNG PM LEFT OUTER JOIN 
                            PAY_MNG_DTL PMD ON PM.ACCNT_NO = PMD.ACCNT_NO AND PM.SEQ = PMD.SEQ AND PMD.DEL_FG = 'N' LEFT OUTER JOIN 
                            PAY_MNG_DTL1 PMDD ON PM.ACCNT_NO = PMDD.ACCNT_NO AND PM.SEQ = PMDD.SEQ AND PMDD.DEL_FG = 'N'
                        WHERE 1=1
                        AND PM.DEL_FG = 'N'
                        AND PM.ACCNT_NO = MPA.ACCNT_NO
                    ) AS PAY_AMT,
                    (SELECT SUM(PAY_AMT) FROM PAY_MNG WHERE ACCNT_NO = MPA.ACCNT_NO AND DEL_FG = 'N' AND PAY_DAY <![CDATA[<]]>   TO_CHAR(SYSDATE,'YYYYMMDD')) AS PAY_NO_AMT,
                    PD.EXPR_NO,
                    (SELECT COUNT(*) FROM PAY_MNG WHERE ACCNT_NO = MPA.ACCNT_NO AND DEL_FG = 'N' AND PAY_DAY <![CDATA[<]]>   TO_CHAR(SYSDATE,'YYYYMMDD')) AS PAY_CNT,
                    CASE WHEN MPA.KSTBIT = '01' THEN '대기'
                        WHEN MPA.KSTBIT = '02' THEN '가입'
                        WHEN MPA.KSTBIT = '03' THEN '해약'
                        WHEN MPA.KSTBIT = '04' THEN '행사'
                        WHEN MPA.KSTBIT = '09' THEN '만기' 
                        ELSE MPA.KSTBIT 
                    END AS KSTBIT,
                    (SELECT RESN_PROC_YN FROM RESCISSION WHERE ACCNT_NO = MPA.ACCNT_NO AND DEL_FG = 'N') AS RESN_PROC_YN,
                    ADL.ALOW_AMT,
                    ADL.RESNREDMP_AMT,
                    (SELECT SUM(AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = PD.PROD_CD)*0.1 AS PAY_LIMIT_AMT,
                    MPA.JOIN_DT,
                    ABI.SALE_TYPE,
                    (SELECT CD_NM FROM COM_CD WHERE GRP_CD = '0125' AND COM_CD = ABI.SALE_TYPE) SALE_TYPE_NM
                FROM 
                    (
                        SELECT 
                            ALOW_DT,
                            ACCNT_NO,
                            SUM(CASE WHEN ALOW_CD IN ('T21', 'T32', 'T33') THEN AMT ELSE 0 END) AS ALOW_AMT,
                            SUM(CASE WHEN ALOW_CD IN ('F7', 'F11', 'F8', 'F10') THEN AMT ELSE 0 END) AS RESNREDMP_AMT
                        FROM ALOW_DA_DTL
                        WHERE 1=1
                        AND ALOW_DT BETWEEN #{month_cal} AND #{month_cal_to} 
                        GROUP BY ALOW_DT, ACCNT_NO
                    ) ADL INNER JOIN 
                    MEM_PROD_ACCNT MPA ON MPA.ACCNT_NO = ADL.ACCNT_NO AND MPA.DEL_FG = 'N' INNER JOIN 
                    MEMBER MBR ON MBR.MEM_NO = MPA.MEM_NO AND MBR.DEL_FG = 'N' INNER JOIN 
                    PRODUCT PD ON PD.PROD_CD = MPA.PROD_CD LEFT OUTER JOIN
                    (
                        SELECT
                            MABI.ALOW_DT,
                            MABI.ACCNT_NO,
                            MAX(MABI.SALE_TYPE) AS SALE_TYPE,
                            COUNT(*) AS ICNT
                        FROM
                        (
                            SELECT 
                                SABI.ACCNT_NO,
                                SABI.PROD_CD,
                                SABI.SALE_TYPE,
                                SABI.B2B_COMP_CD,
                                SABI.ALOW_AMT,
                                SABI.PAY_NO,
                                SABI.ALOW_BIT,
                                SABI.ALOW_DT,
                                SABI.REG_DM
                            FROM LF_DMUSER.TB_ALOW_BASIC_INFO SABI
                            WHERE 1=1
                            AND SABI.PAY_NO = (SELECT MAX(MABI.PAY_NO) AS MAX_PAY_NO FROM LF_DMUSER.TB_ALOW_BASIC_INFO MABI WHERE 1=1 AND MABI.ACCNT_NO = SABI.ACCNT_NO)
                        ) MABI
                        WHERE 1=1 
                        GROUP BY MABI.ALOW_DT, MABI.ACCNT_NO, MABI.SALE_TYPE
                    ) ABI ON ADL.ALOW_DT = ABI.ALOW_DT AND ADL.ACCNT_NO = ABI.ACCNT_NO
                WHERE 1=1
                <if test="dept_cd != null and dept_cd != ''">
                	AND EMP.DEPT_CD = #{dept_cd}
	            </if>
	            <if test="emple_no != null and emple_no != ''">
	                AND MPA.EMPLE_NO = #{emple_no}
	            </if>
            ) A 
        ) MAIN_TBL
        WHERE 1=1
        <if test="startLine != null and startLine != '' and endLine != null and endLine != ''">
            AND PAGE_INDX <![CDATA[>=]]> #{startLine}
            AND PAGE_INDX <![CDATA[<]]> #{endLine}
        </if>
    </select>

    <!-- ================================================================
     * 날짜 : 20190503
     * 이름 : 송준빈
     * 추가내용 : 수당/수수료 배치일자 조회
     * 대상 테이블 : LF_DMUSER.TB_FEES_CALC_BATCH_DAY
     * ================================================================
     * -->
    <select id="DlwPayMap.getFeesCalcBatchDay" parameterType="map" resultType="resultMap">
        SELECT /* DlwPayMap.getFeesCalcBatchDay */
               BAT_PROC_DT
              ,BAT_CAL_YN
              ,REG_MAN
              ,REG_DM
              ,DEL_FG
          FROM LF_DMUSER.TB_FEES_CALC_BATCH_DAY
         WHERE 1=1
           AND DEL_FG = 'N'
           AND SUBSTR(BAT_PROC_DT,1,6) = #{ext_req_month}
        ORDER BY BAT_PROC_DT, BAT_CAL_YN
    </select>

    <!-- ================================================================
     * 날짜 : 20190503
     * 이름 : 송준빈
     * 추가내용 : 수당/수수료 배치일자 등록여부 확인
     * 대상 테이블 : LF_DMUSER.TB_FEES_CALC_BATCH_DAY
     * ================================================================
     * -->
    <select id="DlwPayMap.getChkFeesCalcBatchDay" parameterType="map" resultType="int">
        SELECT /* DlwPayMap.getChkFeesCalcBatchDay */
               COUNT(*) AS ICNT
          FROM LF_DMUSER.TB_FEES_CALC_BATCH_DAY
         WHERE 1=1
           AND DEL_FG = 'N'
           AND BAT_PROC_DT = #{bat_proc_dt}
        ORDER BY BAT_PROC_DT, BAT_CAL_YN
    </select>

    <!-- ================================================================
     * 날짜 : 20190503
     * 이름 : 송준빈
     * 추가내용 : 수당/수수료 배치일자 추가
     * 대상 테이블 : LF_DMUSER.TB_FEES_CALC_BATCH_DAY
     * ================================================================
     * -->
    <insert id="DlwPayMap.insertFeesCalcBatchDay" parameterType="map">
        INSERT INTO /* DlwPayMap.insertFeesCalcBatchDay */
                    LF_DMUSER.TB_FEES_CALC_BATCH_DAY(BAT_PROC_DT, BAT_CAL_YN, REG_MAN, REG_DM, DEL_FG)
             VALUES(#{bat_proc_dt}, #{bat_cal_yn}, #{reg_man}, SYSDATE, 'N')
    </insert>

    <!-- ================================================================
     * 날짜 : 20190503
     * 이름 : 송준빈
     * 추가내용 : 수당/수수료 배치일자 삭제
     * 대상 테이블 : LF_DMUSER.TB_FEES_CALC_BATCH_DAY
     * ================================================================
     * -->
    <delete id="DlwPayMap.deleteFeesCalcBatchDay" parameterType="map">
        UPDATE /* DlwPayMap.deleteFeesCalcBatchDay */
               LF_DMUSER.TB_FEES_CALC_BATCH_DAY
           SET DEL_FG = 'Y'
         WHERE 1=1
           AND DEL_FG = 'N'
           AND BAT_PROC_DT = #{bat_proc_dt}
    </delete>
    
    <!-- ================================================================
     * 날짜 : 20191101
     * 이름 : 김주용
     * 추가내용 : 재무현황 배치일자 조회
     * 대상 테이블 : LF_DMUSER.TB_FINANCE_CALC_BATCH_DAY
     * ================================================================
     * -->
    <select id="DlwPayMap.getFinanceCalcBatchDay" parameterType="map" resultType="resultMap">
        SELECT /* DlwPayMap.getFinanceCalcBatchDay */
               FCBD.BATCH_DAY,
	           FCBD.CALC_STA_DATE,
	           FCBD.CALC_END_DATE,
	           FCBD.FILE_PATH,
	           FCBD.FILE_NAME,
	           FCBD.REG_DM,
	           FCBD.REG_MAN,
	           FCBD.UPD_DM,
	           FCBD.UPD_MAN,
	           FCBD.DEL_FG
        FROM LF_DMUSER.TB_FINANCE_CALC_BATCH_DAY FCBD
         WHERE 1=1
           AND FCBD.DEL_FG = 'N'
           AND SUBSTR(FCBD.BATCH_DAY,1,6) = #{ext_req_month}
        ORDER BY FCBD.BATCH_DAY
    </select>
    
    <!-- ================================================================
     * 날짜 : 20191101
     * 이름 : 김주용
     * 추가내용 : 재무현황 배치일자 등록
     * 대상 테이블 : LF_DMUSER.TB_FINANCE_CALC_BATCH_DAY
     * ================================================================
     * -->
    <insert id="DlwPayMap.insertFinanceCalcBatchDay" parameterType="map">
        INSERT INTO /* DlwPayMap.insertFinanceCalcBatchDay */
            LF_DMUSER.TB_FINANCE_CALC_BATCH_DAY
            (
	            BATCH_DAY,
	            CALC_STA_DATE,
	            CALC_END_DATE,
	            FILE_PATH,
	            FILE_NAME,
	            REG_DM,
	            REG_MAN,
	            DEL_FG
	         )
             VALUES
             (
                #{batch_day},
				#{calc_sta_date},
				#{calc_end_date},
				#{file_path},
				#{file_name},
				SYSDATE,
				#{reg_man},
				'N'
             )
    </insert>

    <!-- ================================================================
     * 날짜 : 20191101
     * 이름 : 김주용
     * 추가내용 : 재무현황 배치일자 삭제
     * 대상 테이블 : LF_DMUSER.TB_FINANCE_CALC_BATCH_DAY
     * ================================================================
     * -->
    <delete id="DlwPayMap.deleteFinanceCalcBatchDay" parameterType="map">
        UPDATE /* DlwPayMap.deleteFinanceCalcBatchDay */
               LF_DMUSER.TB_FINANCE_CALC_BATCH_DAY
           SET DEL_FG = 'Y'
         WHERE 1=1
           AND DEL_FG = 'N'
           AND BATCH_DAY = #{batch_day}
    </delete>
    
    <!-- ================================================================
     * 날짜 : 20191101
     * 이름 : 김주용
     * 추가내용 : 재무현황 배치일자 유효성체크
     * 대상 테이블 : LF_DMUSER.TB_FINANCE_CALC_BATCH_DAY
     * ================================================================
     * -->
    <select id="DlwPayMap.validationInsertFinanceCalcBatch" parameterType="map" resultType="int">
        SELECT /* DlwPayMap.validationInsertFinanceCalcBatch */
               COUNT(*) AS ICNT
          FROM LF_DMUSER.TB_FINANCE_CALC_BATCH_DAY
         WHERE 1=1
           AND DEL_FG = 'N'
           AND BATCH_DAY = #{batch_day}
    </select>
    
    <!-- ================================================================
     * 날짜 : 20191101
     * 이름 : 김주용
     * 추가내용 : 재무현황 엑셀파일 배치일자 조회
     * 대상 테이블 : LF_DMUSER.TB_FINANCE_CALC_BATCH_DAY
     * ================================================================
     * -->
    <select id="DlwPayMap.getFinanceExcelBatchDay" parameterType="map" resultType="resultMap">
        SELECT /* DlwPayMap.getFinanceExcelBatchDay */
               FCBD.BATCH_DAY,
	           FCBD.CALC_STA_DATE,
	           FCBD.CALC_END_DATE,
	           FCBD.FILE_PATH,
	           FCBD.FILE_NAME,
	           FCBD.REG_DM,
	           FCBD.REG_MAN,
	           FCBD.UPD_DM,
	           FCBD.UPD_MAN,
	           FCBD.DEL_FG
        FROM LF_DMUSER.TB_FINANCE_CALC_BATCH_DAY FCBD
         WHERE 1=1
           AND FCBD.DEL_FG = 'N'
           AND BATCH_DAY = #{batch_day}
        ORDER BY FCBD.BATCH_DAY
    </select>
    
    <!-- ================================================================
     * 날짜 : 20191101
     * 이름 : 김주용
     * 추가내용 : 재무현황 배치일자 등록
     * 대상 테이블 : LF_DMUSER.TB_FINANCE_CALC_BATCH_DAY
     * ================================================================
     * -->
    <update id="DlwPayMap.updateFinanceCalcBatchDay" parameterType="map">
        UPDATE /* DlwPayMap.updateFinanceCalcBatchDay */
            LF_DMUSER.TB_FINANCE_CALC_BATCH_DAY
        SET FILE_PATH = #{file_path}
           ,FILE_NAME = #{file_name}
           ,UPD_DM =  SYSDATE
           ,UPD_MAN = 'BATCH'
        WHERE BATCH_DAY = #{ext_dt}
    </update>

    <!-- ================================================================
     * 날짜 : 20190522
     * 이름 : 김주용
     * 추가내용 : 만기연장 상품조회 팝업 조회
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_MANGI_GIFTSET
     * ================================================================
     * -->
    <select id="DlwPayMap.getMemberMangiGiftsetList" parameterType="map" resultType="resultMap">
        SELECT /* DlwPayMap.getMemberMangiGiftsetList */
               SERIAL_NUM
              ,GIFT_CODE
              ,GIFT_NM
              ,EXT_PERIOD
              ,EXT_PERIOD || '년' AS EXT_PERIOD_NM
              ,RGSR_TYPE
              ,REG_MAN
              ,REG_DM
              ,UPD_MAN
              ,UPD_DM
              ,DEL_FG
          FROM LF_DMUSER.TB_MEMBER_MANGI_GIFTSET
         WHERE 1=1
           AND DEL_FG = 'N'
           <if test="gift_nm != null and gift_nm != ''">
               AND GIFT_NM LIKE '%' || #{gift_nm} || '%'
           </if>
           <if test="ext_period != null and ext_period != ''">
               AND EXT_PERIOD = #{ext_period}
           </if>
        ORDER BY SERIAL_NUM DESC
    </select>

    <!-- ================================================================
     * 날짜 : 20190508
     * 이름 : 정승철
     * 추가내용 : 수당수수료산출 상세데이터 입력
     * 대상 테이블 : TB_ALOW_BASIC_INFO
     * ==================================================================
     * -->
    <insert id="DlwPayMap.insertAlowBasicInfo" parameterType="map" >
        INSERT INTO TB_ALOW_BASIC_INFO
          (
            ACCNT_NO, PROD_CD, SALE_TYPE, B2B_COMP_CD,
            ALOW_AMT, PAY_NO, ALOW_BIT, ALOW_DT
          )
        VALUES
          (
            #{accnt_no}, #{prod_cd}, #{sale_type}, #{b2b_comp_cd},
            #{alow_amt}, #{pay_no}, #{alow_bit}, #{alow_dt}
          )
    </insert>

    <!-- ================================================================
     * 날짜 : 20190508
     * 이름 : 정승철
     * 추가내용 : 수당수수료산출 상세데이터 수정
     * 대상 테이블 : TB_ALOW_BASIC_INFO
     * ==================================================================
     * -->
    <update id="DlwPayMap.updateAlowBasicInfo" parameterType="map" >
        UPDATE /* DlwPayMap.updateAlowBasicInfo */
               TB_ALOW_BASIC_INFO
           SET ALOW_AMT = #{alow_amt}
         WHERE ACCNT_NO = #{accnt_no}
           AND ALOW_DT = #{alow_dt}
           AND ALOW_BIT = #{alow_bit}
           AND B2B_COMP_CD = #{b2b_comp_cd}
           AND PAY_NO = #{pay_no}
    </update>

    <!-- ================================================================
     * 날짜 : 20190509
     * 이름 : 정승철
     * 추가내용 : 수당수수료산출 상세데이터 삭제
     * 대상 테이블 : TB_ALOW_BASIC_INFO
     * ==================================================================
     * -->
    <delete id="DlwPayMap.deleteAlowBasicInfo" parameterType="map" >
        DELETE /* DlwPayMap.deleteAlowBasicInfo */
          FROM TB_ALOW_BASIC_INFO
         WHERE ACCNT_NO = #{accnt_no}
           AND ALOW_DT = #{alow_dt}
           AND ALOW_BIT = #{alow_bit}
           AND B2B_COMP_CD = #{b2b_comp_cd}
           AND PAY_NO = #{pay_no}
    </delete>

    <!-- ================================================================
     * 날짜 : 20190508
     * 이름 : 정승철
     * 추가내용 : 수당수수료산출 상세데이터 히스토리 저장
     * 대상 테이블 : TB_ALOW_BASIC_INFO_HISTORY
     * ==================================================================
     * -->
    <insert id="DlwPayMap.insertAlowBasicInfoHistory" parameterType="map" >
        INSERT INTO TB_ALOW_BASIC_INFO_HISTORY
          (
            ACCNT_NO, PROD_CD, SALE_TYPE, B2B_COMP_CD,
            CRUD_TYPE, ALOW_AMT, BEF_ALOW_AMT, PAY_NO, ALOW_BIT, ALOW_DT,
            REG_DM, REG_MAN
          )
        VALUES
          (
            #{accnt_no}, #{prod_cd}, #{sale_type}, #{b2b_comp_cd},
            #{crud_type}, #{alow_amt}, #{bef_alow_amt}, #{pay_no}, #{alow_bit}, #{alow_dt},
            SYSDATE, #{reg_man}
          )
    </insert>

    <!-- ================================================================
     * 날짜 : 20190510
     * 이름 : 정승철
     * 추가내용 : 수당수수료 수기등록 중복체크
     * 대상 테이블 : TB_ALOW_BASIC_INFO
     * ==================================================================
     * -->
    <select id="DlwPayMap.chkAlowDupl" parameterType="map" resultType="string">
        SELECT /* DlwPayMap.chkAlowDupl */
               CASE WHEN COUNT(*) > 0
                    THEN 'F'
                    ELSE 'T'
               END AS CHK_FLAG
          FROM TB_ALOW_BASIC_INFO
         WHERE ACCNT_NO = #{accnt_no}
           AND ALOW_DT = #{alow_dt}
           AND ALOW_BIT = #{alow_bit}
           AND B2B_COMP_CD = #{b2b_comp_cd}
           AND PAY_NO = #{pay_no}
    </select>

    <!-- ================================================================
     * 날짜 : 20190514
     * 이름 : 정승철
     * 추가내용 : 수당수수료 최종마감년월 조회
     * 대상 테이블 : ALOW_DA_DTL_DUMMY
     * ==================================================================
     * -->
    <select id="DlwPayMap.getAlowLastCloseYyyymm" parameterType="map" resultType="string">
        SELECT /* DlwPayMap.getAlowLastCloseYyyymm */
               MAX(ALOW_DT) AS LAST_CLOSE_YYYYMM
          FROM ALOW_DA_DTL_DUMMY
         WHERE 1=1
         <if test="alow_gubun == 'ALOW'">
           AND ALOW_CD IN ('T21','T32','F7A','F7B','F12')
         </if>
         <if test="alow_gubun == 'COMM'">
           AND ALOW_CD IN ('T33A','T33B','F8A','F8B','F10')
         </if>
    </select>

    <!-- ================================================================
     * 날짜 : 20190529
     * 이름 : 송준빈
     * 추가내용 : U+ 선납전송관리 보류고객 조회수
     * 대상 테이블 : LF_DMUSER.TB_UPLUS_PRYPAY_HOLD_LIST
     * ================================================================
     * -->
    <select id="DlwPayMap.getUplusPrepayHoldDataListCount" parameterType="map" resultType="int">
        SELECT /* DlwPayMap.getUplusPrepayHoldDataListCount */
            COUNT(*) AS ICNT
        FROM    
        (    
            SELECT 
                '' AS CHK,
                ROW_NUMBER() OVER(ORDER BY UPHL.ACCNT_NO ASC) AS PAGE_INDX,
                UPHL.ACCNT_NO,
                NVL(MAX(UPR.DTL_NO), 0) AS HOLD_DTL_NO,
                UPHL.HOLD_KB_NO,
                (SELECT NVL(MAX(PMD.NO), 0) AS MAX_NO FROM LF_DMUSER.PAY_MNG_DTL PMD WHERE 1=1 AND PMD.PAY_DAY <![CDATA[<=]]> #{month_lastday} AND PMD.DEL_FG = 'N' AND UPHL.ACCNT_NO = PMD.ACCNT_NO) AS TRUE_DTL_NO,
                (
                    SELECT 
                        CASE WHEN TRIM(REPLACE(MPA.KB_NO, ' ', '')) IS NOT NULL AND SUBSTR(TRIM(REPLACE(MPA.KB_NO, '-', '')), 0, 3) = '010' /* CTN은 존재하지만 전화번호로 들어있는 경우 */
                                 THEN RPAD(SUBSTR(TRIM(REPLACE(MPA.KB_NO, '-', '')), 0, 3), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MPA.KB_NO, '-', '')), 4, 4), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MPA.KB_NO, '-', '')), 8, 4), 4, 0)
                             WHEN TRIM(REPLACE(MPA.KB_NO, ' ', '')) IS NOT NULL AND SUBSTR(TRIM(REPLACE(MPA.KB_NO, '-', '')), 0, 3) != '010' /* CTN은 존재하고 전화번호로 들어가있지 않은 경우 */
                                 THEN TRIM(REPLACE(MPA.KB_NO, '-', ''))
                             WHEN TRIM(REPLACE(MPA.KB_NO, ' ', '')) IS NULL AND SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 0, 3) = '010' /* CTN이 존재하지않고 전화번호는 존재하는 경우 */
                                 THEN RPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 0, 3), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 4, 4), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 8, 4), 4, 0)
                             WHEN TRIM(REPLACE(MPA.KB_NO, ' ', '')) IS NULL AND SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 0, 3) = '019' /* CTN이 존재하지않고 전화번호는 존재하는 경우 */
                                 THEN RPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 0, 3), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 4, 4), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 8, 4), 4, 0)
                             WHEN TRIM(REPLACE(MPA.KB_NO, ' ', '')) = '' AND SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 0, 3) = '010' /* CTN이 존재하지않고 전화번호는 존재하는 경우 */
                                 THEN RPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 0, 3), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 4, 4), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 8, 4), 4, 0)
                             ELSE 
                                 TRIM(REPLACE(MPA.KB_NO, '-', ''))
                        END AS TRUE_KB_NO
                    FROM MEM_PROD_ACCNT MPA INNER JOIN
                        MEMBER MB ON MPA.MEM_NO = MB.MEM_NO AND MPA.DEL_FG = 'N'
                    WHERE 1=1 
                    AND MPA.ACCNT_NO = UPHL.ACCNT_NO
                ) AS TRUE_KB_NO,
                UPHL.REG_DM
            FROM TB_UPLUS_PRYPAY_HOLD_LIST UPHL LEFT OUTER JOIN
                TB_UPLUS_PREPAY_RESULT UPR ON UPR.ACCNT_NO = UPHL.ACCNT_NO AND UPR.DEL_FG = 'N' AND UPR.RSLT_CD = 'E' AND UPR.PREPAY_YN = 'Y'
            WHERE 1=1
            AND UPHL.DEL_FG = 'N'
            <if test="accnt_no != null and accnt_no != ''">
                AND UPHL.ACCNT_NO = #{accnt_no}
            </if>
            GROUP BY UPHL.ACCNT_NO, UPHL.HOLD_KB_NO, UPHL.REG_DM
        ) MAIN_TBL
        WHERE 1=1
    </select>

    <!-- ================================================================
     * 날짜 : 20190529
     * 이름 : 송준빈
     * 추가내용 : U+ 선납전송관리 보류고객 리스트
     * 대상 테이블 : LF_DMUSER.TB_UPLUS_PRYPAY_HOLD_LIST
     * ================================================================
     * -->
    <select id="DlwPayMap.getUplusPrepayHoldDataList" parameterType="map" resultType="resultMap">
        SELECT /* DlwPayMap.getUplusPrepayHoldDataList */
            MAIN_TBL.CHK,
            MAIN_TBL.PAGE_INDX,
            MAIN_TBL.ACCNT_NO,
            MAIN_TBL.HOLD_DTL_NO,
            MAIN_TBL.HOLD_KB_NO,
            MAIN_TBL.TRUE_DTL_NO,
            MAIN_TBL.TRUE_KB_NO,
            MAIN_TBL.REG_DM
        FROM    
        (    
            SELECT 
                '' AS CHK,
                ROW_NUMBER() OVER(ORDER BY UPHL.ACCNT_NO ASC) AS PAGE_INDX,
                UPHL.ACCNT_NO,
                NVL(MAX(UPR.DTL_NO), 0) AS HOLD_DTL_NO,
                UPHL.HOLD_KB_NO,
                (SELECT NVL(MAX(PMD.NO), 0) AS MAX_NO FROM LF_DMUSER.PAY_MNG_DTL PMD WHERE 1=1 AND PMD.PAY_DAY <![CDATA[<=]]> #{month_lastday} AND PMD.DEL_FG = 'N' AND UPHL.ACCNT_NO = PMD.ACCNT_NO) AS TRUE_DTL_NO,
                (
                    SELECT 
                        CASE WHEN TRIM(REPLACE(MPA.KB_NO, ' ', '')) IS NOT NULL AND SUBSTR(TRIM(REPLACE(MPA.KB_NO, '-', '')), 0, 3) = '010' /* CTN은 존재하지만 전화번호로 들어있는 경우 */
                                 THEN RPAD(SUBSTR(TRIM(REPLACE(MPA.KB_NO, '-', '')), 0, 3), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MPA.KB_NO, '-', '')), 4, 4), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MPA.KB_NO, '-', '')), 8, 4), 4, 0)
                             WHEN TRIM(REPLACE(MPA.KB_NO, ' ', '')) IS NOT NULL AND SUBSTR(TRIM(REPLACE(MPA.KB_NO, '-', '')), 0, 3) != '010' /* CTN은 존재하고 전화번호로 들어가있지 않은 경우 */
                                 THEN TRIM(REPLACE(MPA.KB_NO, '-', ''))
                             WHEN TRIM(REPLACE(MPA.KB_NO, ' ', '')) IS NULL AND SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 0, 3) = '010' /* CTN이 존재하지않고 전화번호는 존재하는 경우 */
                                 THEN RPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 0, 3), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 4, 4), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 8, 4), 4, 0)
                             WHEN TRIM(REPLACE(MPA.KB_NO, ' ', '')) IS NULL AND SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 0, 3) = '019' /* CTN이 존재하지않고 전화번호는 존재하는 경우 */
                                 THEN RPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 0, 3), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 4, 4), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 8, 4), 4, 0)
                             WHEN TRIM(REPLACE(MPA.KB_NO, ' ', '')) = '' AND SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 0, 3) = '010' /* CTN이 존재하지않고 전화번호는 존재하는 경우 */
                                 THEN RPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 0, 3), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 4, 4), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 8, 4), 4, 0)
                             ELSE 
                                 TRIM(REPLACE(MPA.KB_NO, '-', ''))
                        END AS TRUE_KB_NO
                    FROM MEM_PROD_ACCNT MPA INNER JOIN
                        MEMBER MB ON MPA.MEM_NO = MB.MEM_NO AND MPA.DEL_FG = 'N'
                    WHERE 1=1 
                    AND MPA.ACCNT_NO = UPHL.ACCNT_NO
                ) AS TRUE_KB_NO,
                UPHL.REG_DM
            FROM TB_UPLUS_PRYPAY_HOLD_LIST UPHL LEFT OUTER JOIN
                TB_UPLUS_PREPAY_RESULT UPR ON UPR.ACCNT_NO = UPHL.ACCNT_NO AND UPR.DEL_FG = 'N' AND UPR.RSLT_CD = 'E' AND UPR.PREPAY_YN = 'Y'
            WHERE 1=1
            AND UPHL.DEL_FG = 'N'
            <if test="accnt_no != null and accnt_no != ''">
                AND UPHL.ACCNT_NO = #{accnt_no}
            </if>
            GROUP BY UPHL.ACCNT_NO, UPHL.HOLD_KB_NO, UPHL.REG_DM
        ) MAIN_TBL
        WHERE 1=1
   </select>

   <!-- ================================================================
     * 날짜 : 20190529
     * 이름 : 송준빈
     * 추가내용 : U+ 선납전송관리 보류고객 등록
     * 대상 테이블 : LF_DMUSER.TB_UPLUS_PRYPAY_HOLD_LIST
     * ================================================================
     * -->
    <insert id="DlwPayMap.insertUplusPrepayHoldData" parameterType="map">
        INSERT INTO /* DlwPayMap.insertgetUplusPrepayHoldData */
                    LF_DMUSER.TB_UPLUS_PRYPAY_HOLD_LIST(ACCNT_NO, HOLD_DTL_NO, HOLD_KB_NO, TRUE_DTL_NO, TRUE_KB_NO, REG_MAN, REG_DM, UPD_MAN, UPD_DM, DEL_FG)
             VALUES ( #{accnt_no}, '', #{hold_kb_no}, '', '', #{reg_man}, SYSDATE, '', '', 'N' )
    </insert>

    <!-- ================================================================
     * 날짜 : 20190529
     * 이름 : 송준빈
     * 추가내용 : U+ 선납전송관리 보류고객 삭제
     * 대상 테이블 : LF_DMUSER.TB_UPLUS_PRYPAY_HOLD_LIST
     * ================================================================
     * -->
    <delete id="DlwPayMap.deleteUplusPrepayHoldDataList" parameterType="map">
        UPDATE /* DlwPayMap.deleteUplusPrepayHoldDataList */
               LF_DMUSER.TB_UPLUS_PRYPAY_HOLD_LIST
           SET DEL_FG = 'Y'
              ,UPD_MAN = #{upd_man}
              ,UPD_DM = SYSDATE
         WHERE 1=1
           AND DEL_FG = 'N'
           AND ACCNT_NO = #{accnt_no}
    </delete>

    <!-- ================================================================
     * 날짜 : 20190529
     * 이름 : 송준빈
     * 추가내용 : U+ 선납전송관리 보류고객 해제시 산출대상에 등록
     * 대상 테이블 : LF_DMUSER.TB_UPLUS_PREPAY_LIST
     * ================================================================
     * -->
    <insert id="DlwPayMap.insertUplusHoldPrepaymentMember" parameterType="map">
        INSERT INTO /* DlwPayMap.insertUplusHoldPrepaymentMember */
            LF_DMUSER.TB_UPLUS_PREPAY_LIST (CALC_MONTH, FILE_NO, ACCNT_NO, PROD_CD, PROD_NM, KSTBIT, KB_NO, CELL, BRTH_MON_DAY, MEM_NM,
                                            DTL_NO, DTL_PAY_AMT, RSLT_CD, SEND_DTTM, PREPAY_YN, PREPAY_REASON, RSLT_REG_DTTM,
                                            REG_MAN, REG_DM, UPD_MAN, UPD_DM, DEL_FG)
        SELECT 
            NVL(SUBSTR(#{month_cal}, 0,6), TO_CHAR(SYSDATE, 'YYYYMM')),
            '',
            UPHL.ACCNT_NO,
            MPA.PROD_CD,
            PD.PROD_NM,
            MPA.KSTBIT,
            CASE WHEN TRIM(REPLACE(MPA.KB_NO, ' ', '')) IS NOT NULL AND SUBSTR(TRIM(REPLACE(MPA.KB_NO, '-', '')), 0, 3) = '010' /* CTN은 존재하지만 전화번호로 들어있는 경우 */
                     THEN RPAD(SUBSTR(TRIM(REPLACE(MPA.KB_NO, '-', '')), 0, 3), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MPA.KB_NO, '-', '')), 4, 4), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MPA.KB_NO, '-', '')), 8, 4), 4, 0)
                 WHEN TRIM(REPLACE(MPA.KB_NO, ' ', '')) IS NOT NULL AND SUBSTR(TRIM(REPLACE(MPA.KB_NO, '-', '')), 0, 3) != '010' /* CTN은 존재하고 전화번호로 들어가있지 않은 경우 */
                     THEN TRIM(REPLACE(MPA.KB_NO, '-', ''))
                 WHEN TRIM(REPLACE(MPA.KB_NO, ' ', '')) IS NULL AND SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 0, 3) = '010' /* CTN이 존재하지않고 전화번호는 존재하는 경우 */
                     THEN RPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 0, 3), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 4, 4), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 8, 4), 4, 0)
                 WHEN TRIM(REPLACE(MPA.KB_NO, ' ', '')) IS NULL AND SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 0, 3) = '019' /* CTN이 존재하지않고 전화번호는 존재하는 경우 */
                     THEN RPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 0, 3), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 4, 4), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 8, 4), 4, 0)
                 WHEN TRIM(REPLACE(MPA.KB_NO, ' ', '')) = '' AND SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 0, 3) = '010' /* CTN이 존재하지않고 전화번호는 존재하는 경우 */
                     THEN RPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 0, 3), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 4, 4), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 8, 4), 4, 0)
                 ELSE 
                     TRIM(REPLACE(MPA.KB_NO, '-', ''))
            END AS KB_NO,
            MB.CELL,
            MB.BRTH_MON_DAY,
            MB.MEM_NM,
            #{dtl_no_insert},
            (SELECT PAY_AMT FROM PAY_MNG_DTL PMD WHERE 1=1 AND PMD.ACCNT_NO = UPHL.ACCNT_NO AND PMD.NO = #{dtl_no_insert} AND PMD.DEL_FG = 'N'),
            'N',
            '',
            'H',
            '',
            '',
            #{upd_man},
            SYSDATE,
            '',
            '',
            'N'
        FROM LF_DMUSER.TB_UPLUS_PRYPAY_HOLD_LIST UPHL INNER JOIN 
            MEM_PROD_ACCNT MPA ON UPHL.ACCNT_NO = MPA.ACCNT_NO AND UPHL.DEL_FG = 'N' AND MPA.DEL_FG = 'N' INNER JOIN 
            PRODUCT PD ON PD.PROD_CD = MPA.PROD_CD AND PD.DEL_FG = 'N' INNER JOIN 
            MEMBER MB ON MB.MEM_NO = MPA.MEM_NO AND MB.DEL_FG = 'N'
        WHERE 1=1
        AND MPA.ACCNT_NO = #{accnt_no}
    </insert>

    <!-- ================================================================
     * 날짜 : 20190610
     * 이름 : 김주용
     * 추가내용 : 만기연장 수수료 현황 조회수
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_MANGI_AMT
     * ================================================================
     * -->
    <select id="DlwPayMap.getMemberMangiAmtDataListCount" parameterType="map" resultType="int">
        SELECT /* DlwPayMap.getMemberMangiAmtDataListCount */
               COUNT(*) AS ICNT
          FROM ( SELECT ROW_NUMBER() OVER(ORDER BY ACCNT_NO ASC) AS PAGE_INDX
                       ,EXT_MONTH
                       ,ACCNT_NO
                       ,CELL
                       ,EXT_PERIOD
                       ,MANGI_AMT
                       ,REG_MAN
                       ,REG_DM
                       ,UPD_MAN
                       ,UPD_DM
                       ,DEL_FG
                       ,CALC_GBN
                   FROM LF_DMUSER.TB_MEMBER_MANGI_AMT
                  WHERE 1=1
                    AND DEL_FG = 'N'
                    AND EXT_MONTH = SUBSTR(#{stt_dt},0,6)
                  <if test="accnt_no != null and accnt_no != ''">
                     AND ACCNT_NO = #{accnt_no}
                  </if>
               ) MAIN_TBL
         WHERE 1=1
    </select>

    <!-- ================================================================
     * 날짜 : 20190610
     * 이름 : 김주용
     * 추가내용 : 만기연장 수수료 현황 리스트
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_MANGI_AMT
     * ================================================================
     * -->
    <select id="DlwPayMap.getMemberMangiAmtDataList" parameterType="map" resultType="resultMap">
        SELECT /* DlwPayMap.getMemberMangiAmtDataList */
               MAIN_TBL.*
          FROM ( SELECT ROW_NUMBER() OVER(ORDER BY ACCNT_NO ASC) AS PAGE_INDX
                       ,EXT_MONTH
                       ,ACCNT_NO
                       ,CELL
                       ,EXT_PERIOD
                       ,MANGI_AMT
                       ,REG_MAN
                       ,REG_DM
                       ,UPD_MAN
                       ,UPD_DM
                       ,DEL_FG
                       ,CALC_GBN
                       ,(SELECT CASE WHEN KSTBIT = '01' THEN '대기'
                                     WHEN KSTBIT = '02' THEN '가입'
                                     WHEN KSTBIT = '03' THEN '해약'
                                     WHEN KSTBIT = '04' THEN '행사'
                                     WHEN KSTBIT = '09' THEN '만기' ELSE KSTBIT END KSTBIT
                         FROM MEM_PROD_ACCNT
                         WHERE 1=1
                         AND DEL_FG = 'N'
                         AND ACCNT_NO = MMA.ACCNT_NO) AS KSTBIT
                   FROM LF_DMUSER.TB_MEMBER_MANGI_AMT MMA
                  WHERE 1=1
                    AND DEL_FG = 'N'
                    AND EXT_MONTH = SUBSTR(#{stt_dt},0,6)
                  <if test="accnt_no != null and accnt_no != ''">
                     AND ACCNT_NO = #{accnt_no}
                  </if>
               ) MAIN_TBL
         WHERE 1=1
         <if test="startLine != null and startLine != '' and endLine != null and endLine != ''">
             AND PAGE_INDX <![CDATA[>=]]> #{startLine}
             AND PAGE_INDX <![CDATA[<]]> #{endLine}
         </if>
    </select>

    <!-- ================================================================
     * 날짜 : 20190610
     * 이름 : 김주용
     * 추가내용 : 만기연장 수수료 현황 조회수 엑셀 OUTPUT
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_MANGI_AMT
     * ================================================================
     * -->
    <select id="DlwPayMap.getMemberMangiAmtDataListExcelCount" parameterType="map" resultType="int">
        SELECT /* DlwPayMap.getMemberMangiAmtDataListExcelCount */
               COUNT(*) AS ICNT
          FROM ( SELECT ROW_NUMBER() OVER(ORDER BY ACCNT_NO ASC) AS PAGE_INDX
                       ,EXT_MONTH
                       ,ACCNT_NO
                       ,CELL
                       ,EXT_PERIOD
                       ,MANGI_AMT
                       ,REG_MAN
                       ,REG_DM
                       ,UPD_MAN
                       ,UPD_DM
                       ,DEL_FG
                       ,CALC_GBN
                   FROM LF_DMUSER.TB_MEMBER_MANGI_AMT
                  WHERE 1=1
                    AND DEL_FG = 'N'
                    AND EXT_MONTH = SUBSTR(#{stt_dt},0,6)
                  <if test="accnt_no != null and accnt_no != ''">
                     AND ACCNT_NO = #{accnt_no}
                  </if>
               ) MAIN_TBL
         WHERE 1=1
    </select>

    <!-- ================================================================
     * 날짜 : 20190610
     * 이름 : 김주용
     * 추가내용 : 만기연장 수수료 현황 리스트 엑셀 OUTPUT
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_MANGI_AMT
     * ================================================================
     * -->
    <select id="DlwPayMap.getMemberMangiAmtDataListExcel" parameterType="map" resultType="resultMap">
        SELECT /* DlwPayMap.getMemberMangiAmtDataListExcel */
               MAIN_TBL.*
          FROM ( SELECT ROW_NUMBER() OVER(ORDER BY ACCNT_NO ASC) AS PAGE_INDX
                       ,EXT_MONTH
                       ,ACCNT_NO
                       ,CELL
                       ,EXT_PERIOD
                       ,MANGI_AMT
                       ,REG_MAN
                       ,REG_DM
                       ,UPD_MAN
                       ,UPD_DM
                       ,DEL_FG
                       ,CASE WHEN CALC_GBN = '01' THEN '산출'
                             WHEN CALC_GBN = '02' THEN '취소'
                             ELSE '' END AS CALC_GBN
                       ,(SELECT CASE WHEN KSTBIT = '01' THEN '대기'
                                     WHEN KSTBIT = '02' THEN '가입'
                                     WHEN KSTBIT = '03' THEN '해약'
                                     WHEN KSTBIT = '04' THEN '행사'
                                     WHEN KSTBIT = '09' THEN '만기' ELSE KSTBIT END KSTBIT
                         FROM MEM_PROD_ACCNT
                         WHERE 1=1
                         AND DEL_FG = 'N'
                         AND ACCNT_NO = MMA.ACCNT_NO) AS KSTBIT
                  FROM LF_DMUSER.TB_MEMBER_MANGI_AMT MMA
                  WHERE 1=1
                    AND DEL_FG = 'N'
                    AND EXT_MONTH = SUBSTR(#{stt_dt},0,6)
                  <if test="accnt_no != null and accnt_no != ''">
                     AND ACCNT_NO = #{accnt_no}
                  </if>
               ) MAIN_TBL
         WHERE 1=1
         <if test="startLine != null and startLine != '' and endLine != null and endLine != ''">
             AND PAGE_INDX <![CDATA[>=]]> #{startLine}
             AND PAGE_INDX <![CDATA[<]]> #{endLine}
         </if>
    </select>

    <!-- ================================================================
     * 날짜 : 20190610
     * 이름 : 김주용
     * 추가내용 : 만기연장수수료 산출 초기화
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_MANGI_AMT
     * ================================================================
     * -->
    <update id="DlwPayMap.updateMemberMangiAmtDataList" parameterType="map">
        UPDATE /* DlwPayMap.updateMemberMangiAmtDataList */
               LF_DMUSER.TB_MEMBER_MANGI_AMT
           SET DEL_FG = 'Y'
              ,UPD_MAN = #{rgsr_id}
              ,UPD_DM = SYSDATE
         WHERE 1=1
           AND DEL_FG = 'N'
           AND EXT_MONTH = SUBSTR(#{stt_dt},0,6)
    </update>

    <!--
     * ================================================================
     * 날짜 : 20190610
     * 이름 : 김주용
     * 추가내용 : 만기연장수수료 산출 TB insert
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_MANGI_AMT
     * ================================================================
     * -->

    <insert id="DlwPayMap.insertMemberMangiAmtDataList" parameterType="map">
        BEGIN
	        INSERT INTO TB_MEMBER_MANGI_AMT(EXT_MONTH, ACCNT_NO, CELL, EXT_PERIOD, MANGI_AMT, REG_MAN, REG_DM, UPD_MAN, UPD_DM, DEL_FG, CALC_GBN)
	        SELECT SUBSTR(#{stt_dt},0,6)
	              ,MME.ACCNT_NO
	              ,MME.CELL
	              ,MME.EXT_PERIOD
	              ,CASE WHEN MME.EXT_PERIOD = '2' THEN 30000
	                    WHEN MME.EXT_PERIOD = '3' THEN 35000
	                    WHEN MME.EXT_PERIOD = '4' THEN 40000
	                    ELSE 0
	                END AS MANGI_AMT
	              ,#{rgsr_id} AS REG_MAN
	              ,SYSDATE AS REG_DM
	              ,#{rgsr_id} AS UPD_MAN
	              ,SYSDATE AS UPD_DM
	              ,'N' AS DEL_FG
	              ,'01' AS CALC_GBN
	          FROM TB_MEMBER_MANGI_EXT MME
	          INNER JOIN TB_MEMBER_MANGI_DTL MMD
	                  ON MME.ACCNT_NO = MMD.ACCNT_NO
	                 AND MMD.DEL_FG = 'N'
	         WHERE 1=1
	            AND MME.EXT_YN = 'Y'
	            AND (TO_CHAR(MME.EXT_DAY, 'YYYYMMDD') LIKE SUBSTR(#{stt_dt},0,6) || '%' OR TO_CHAR(MME.EXT_DAY, 'YYYYMMDD') LIKE SUBSTR(#{stt_dt},0,6)-1 || '%')
	            AND MME.DEL_FG = 'N'
	            AND MMD.INVOICE_NUM IS NOT NULL
	            AND MMD.DELIVERY_CORP IS NOT NULL
	            AND MME.ACCNT_NO NOT IN (SELECT ACCNT_NO FROM TB_MEMBER_MANGI_AMT WHERE DEL_FG = 'N' AND CALC_GBN = '01')
	        UNION ALL
	        SELECT SUBSTR(#{stt_dt},0,6)
	              ,MME.ACCNT_NO
	              ,MME.CELL
	              ,MMA.EXT_PERIOD
	              ,MMA.MANGI_AMT*-1 AS MANGI_AMT
	              ,#{rgsr_id} AS REG_MAN
	              ,SYSDATE AS REG_DM
	              ,#{rgsr_id} AS UPD_MAN
	              ,SYSDATE AS UPD_DM
	              ,'N' AS DEL_FG
	              ,'02' AS CALC_GBN
	          FROM TB_MEMBER_MANGI_EXT MME
	          INNER JOIN TB_MEMBER_MANGI_AMT MMA
	                  ON MME.ACCNT_NO = MMA.ACCNT_NO
	                 AND MMA.DEL_FG = 'N'
	                 AND MMA.CALC_GBN = '01'
	                 AND MMA.ACCNT_NO NOT IN (SELECT ACCNT_NO
	                                            FROM TB_MEMBER_MANGI_AMT
	                                           WHERE ACCNT_NO = MMA.ACCNT_NO
	                                             AND DEL_FG = 'N'
	                                             AND CALC_GBN = '02')
	         WHERE 1=1
	            AND MME.DEL_FG = 'N'
	            AND TO_CHAR(MME.CANCEL_DT, 'YYYYMMDD') LIKE SUBSTR(#{stt_dt},0,6) || '%';
	        
	        INSERT INTO TB_MEMBER_MANGI_AMT(EXT_MONTH, ACCNT_NO, CELL, EXT_PERIOD, MANGI_AMT, REG_MAN, REG_DM, UPD_MAN, UPD_DM, DEL_FG, CALC_GBN)
	        SELECT SUBSTR(#{stt_dt},0,6)
	              ,MME.ACCNT_NO
	              ,MME.CELL
	              ,MMA.EXT_PERIOD
	              ,MMA.MANGI_AMT*-1 AS MANGI_AMT
	              ,#{rgsr_id} AS REG_MAN
	              ,SYSDATE AS REG_DM
	              ,#{rgsr_id} AS UPD_MAN
	              ,SYSDATE AS UPD_DM
	              ,'N' AS DEL_FG
	              ,'02' AS CALC_GBN
	          FROM TB_MEMBER_MANGI_EXT MME
	          INNER JOIN TB_MEMBER_MANGI_AMT MMA
	                  ON MME.ACCNT_NO = MMA.ACCNT_NO
	                 AND MMA.DEL_FG = 'N'
	                 AND MMA.CALC_GBN = '01'
	                 AND MMA.ACCNT_NO NOT IN (SELECT ACCNT_NO
	                                            FROM TB_MEMBER_MANGI_AMT
	                                           WHERE ACCNT_NO = MMA.ACCNT_NO
	                                             AND DEL_FG = 'N'
	                                             AND CALC_GBN = '02')
	          INNER JOIN RESCISSION RESN
	                  ON MME.ACCNT_NO = RESN.ACCNT_NO
	                 AND RESN.DEL_FG = 'N'
	                 AND RESN_PROC_YN = 'Y'
	         WHERE 1=1
	            AND MME.DEL_FG = 'N';
            END;
    </insert>

    <!-- ================================================================
     * 날짜 : 20190527
     * 이름 : 송준빈
     * 추가내용 : 사원별 수당관리 마스터 데이터
     * 대상 테이블 :
     * ================================================================
     * -->
    <select id="DlwPayMap.getAlowEmpleMstList" parameterType="map" resultType="resultMap">
        SELECT /* AlowMap.selectAlowListForEmpleNo */
           C.*
         , sum(case when C.ALOW_AMT > 0 then c.alow_amt else 0 end) over() TOT_ALOW_AMT
         , sum(C.ALOW_AMT2) over() TOT_ALOW_AMT2
         , sum(C.F5) over() TOT_F5
         , sum(C.F6) over() TOT_F6
         , sum(case when C.ALOW_AMT > 0 then c.alow_amt else 0 end - c.f5 - c.f6 ) over() TOT_RT_ALOW_AMT
      FROM (
    SELECT B.EMPLE_NM
         , (SELECT FN_COM_NM('96', A.OCP_CLUSTER) FROM DUAL) OCP_CLUSTER_NM
         , (SELECT FN_COM_NM('0124', B.INCOM_CL) FROM DUAL) INCOM_CL_NM
         , (SELECT FN_COM_NM ('63', nvl(B.BANK_CD,'X')) FROM DUAL) BANK_NM
         , B.BANK_CD
         , B.BANK_ACCNT_NO
         , SUBSTR(B.IDN_NO,1,6) || '-' || '*******' MASK_IDN_NO
         , B.IDN_NO
         , B.INCOM_CL
/*
         , (ALOW_AMT - CASE WHEN chk_rt_tax = 'Y' THEN trunc(ALOW_AMT * tax_rat) ELSE 0 END
                     - CASE WHEN chk_rt_tax = 'Y' THEN trunc(ALOW_AMT * tax_rat * 0.1) ELSE 0 END) RT_ALOW_AMT
*/
         , CASE WHEN
           (ALOW_AMT - CASE WHEN chk_rt_tax = 'Y' THEN
                                CASE WHEN INCOM_CL = '0001' AND (ALOW_AMT-trunc(ALOW_AMT * need_rat)) > 50000 THEN /* 기타소득 */
                                        trunc(ALOW_AMT * tax_rat)
                                     WHEN INCOM_CL = '0002' AND (ALOW_AMT) >= 33600 THEN /* 사업소득 */
                                        trunc(ALOW_AMT * tax_rat)
                                     ELSE 0 END
                            ELSE 0 END
                     - CASE WHEN chk_rt_tax = 'Y' THEN
                             CASE WHEN INCOM_CL = '0001' AND (ALOW_AMT-trunc(ALOW_AMT * need_rat )) > 50000 THEN /* 기타소득 */
                                        trunc(ALOW_AMT * tax_rat  * 0.1,-1)
                                     WHEN INCOM_CL = '0002' AND (ALOW_AMT) >= 33600 THEN /* 사업소득 */
                                        trunc(ALOW_AMT * tax_rat * 0.1,-1)
                                     ELSE 0 END
                       ELSE 0 END) > 0 THEN
            (ALOW_AMT - CASE WHEN chk_rt_tax = 'Y' THEN
                                            CASE WHEN INCOM_CL = '0001' AND (ALOW_AMT-trunc(ALOW_AMT * need_rat)) > 50000 THEN /* 기타소득 */
                                                    trunc(ALOW_AMT * tax_rat)
                                                 WHEN INCOM_CL = '0002' AND (ALOW_AMT) >= 33600 THEN /* 사업소득 */
                                                    trunc(ALOW_AMT * tax_rat)
                                                 ELSE 0 END
                                        ELSE 0 END
                                 - CASE WHEN chk_rt_tax = 'Y' THEN
                                         CASE WHEN INCOM_CL = '0001' AND (ALOW_AMT-trunc(ALOW_AMT * need_rat )) > 50000 THEN /* 기타소득 */
                                                    trunc(ALOW_AMT * tax_rat  * 0.1,-1)
                                                 WHEN INCOM_CL = '0002' AND (ALOW_AMT) >= 33600 THEN /* 사업소득 */
                                                    trunc(ALOW_AMT * tax_rat * 0.1,-1)
                                                 ELSE 0 END
                                   ELSE 0 END) ELSE 0 END RT_ALOW_AMT

         , CASE WHEN chk_rt_tax = 'Y' THEN
                    CASE WHEN INCOM_CL = '0001' AND (ALOW_AMT-trunc(ALOW_AMT * need_rat)) > 50000 THEN /* 기타소득 */
                            trunc(ALOW_AMT * tax_rat,-1)
                         WHEN INCOM_CL = '0002' AND (ALOW_AMT) >= 33600 THEN /* 사업소득 */
                            trunc(ALOW_AMT * tax_rat,-1)
                         ELSE 0 END
                ELSE 0 END F5           /* 소득세 */

         , CASE WHEN chk_rt_tax = 'Y' THEN
                             CASE WHEN INCOM_CL = '0001' AND (ALOW_AMT-trunc(ALOW_AMT * need_rat)) > 50000 THEN /* 기타소득 */
                            trunc(ALOW_AMT * tax_rat * 0.1,-1)
                         WHEN INCOM_CL = '0002' AND (ALOW_AMT) >= 33600 THEN /* 사업소득 */
                            trunc(ALOW_AMT * tax_rat * 0.1,-1)
                         ELSE 0 END  ELSE 0 END F6     /* 주민세 */
         ,CASE WHEN chk_rt_tax = 'Y' THEN
                    CASE WHEN INCOM_CL = '0001' AND (ALOW_AMT-trunc(ALOW_AMT * need_rat)) > 50000 THEN /* 기타소득 */
                            trunc(ALOW_AMT * tax_rat,-1)
                         WHEN INCOM_CL = '0002' AND (ALOW_AMT) >= 33600 THEN /* 사업소득 */
                            trunc(ALOW_AMT * tax_rat,-1)
                         ELSE 0 END
                ELSE 0 END +
          CASE WHEN chk_rt_tax = 'Y' THEN
                             CASE WHEN INCOM_CL = '0001' AND (ALOW_AMT-trunc(ALOW_AMT * need_rat)) > 50000 THEN /* 기타소득 */
                            trunc(ALOW_AMT * tax_rat * 0.1,-1)
                         WHEN INCOM_CL = '0002' AND (ALOW_AMT) >= 33600 THEN /* 사업소득 */
                            trunc(ALOW_AMT * tax_rat * 0.1,-1)
                         ELSE 0 END  ELSE 0 END AS G_HAP     /* 주민세 */
         , CASE WHEN ALOW_AMT <![CDATA[>]]> 0 THEN trunc(ALOW_AMT * need_rat) else 0 END NEED_COST    /* 필요경비 */
         , nvl(ADF.STND_AMT,0)      STND_AMT      /* 이월금 */
         , <![CDATA[CASE WHEN NVL(A.ALOW_AMT2,0) - NVL(F7,0) > 0 AND NVL(A.ALOW_AMT2,0) - NVL(F7,0) - NVL(STND_AMT,0) > 0 THEN NVL(STND_AMT,0)
                WHEN NVL(A.ALOW_AMT2,0) - NVL(F7,0) > 0 AND NVL(A.ALOW_AMT2,0) - NVL(F7,0) - NVL(STND_AMT,0) < 0 THEN NVL(STND_AMT,0) + (NVL(A.ALOW_AMT2,0) - NVL(F7,0) - NVL(STND_AMT,0))
                WHEN NVL(A.ALOW_AMT2,0) - NVL(F7,0) < 0 THEN 0 ELSE 0 END TM_DTL_AMT]]>
          <!--
              2017.11.13 김찬영 누적환수 부분 추가 F11..
         , <![CDATA[CASE WHEN NVL(A.ALOW_AMT2,0) >= NVL(F7,0) THEN NVL(F7,0)
                WHEN NVL(A.ALOW_AMT2,0) <  NVL(F7,0) THEN NVL(A.ALOW_AMT2,0)
                ELSE 0
                END CUR_REDMP_AMT]]>   /* 당월환수 */
         , <![CDATA[CASE WHEN NVL(A.ALOW_AMT2,0) >= NVL(F7,0) THEN 0
                WHEN NVL(A.ALOW_AMT2,0) <  NVL(F7,0) THEN NVL(F7,0) - NVL(TM_DTL_AMT,0)
                ELSE 0
                END NEXT_REDMP_AMT]]>   /* 이월환수 */
           -->
         , <![CDATA[CASE WHEN NVL(A.ALOW_AMT2,0) >= NVL(F7,0)+NVL(F11,0) THEN NVL(F7,0)+NVL(F11,0)
                WHEN NVL(A.ALOW_AMT2,0) <  NVL(F7,0)+NVL(F11,0) THEN NVL(A.ALOW_AMT2,0)
                ELSE 0
                END CUR_REDMP_AMT]]>   /* 당월환수 */
         <!--
             2017.12.20 김찬영 NVL(TM_DTL_AMT,0)==> NVL(A.ALOW_AMT2,0) 변경
         , <![CDATA[CASE WHEN NVL(A.ALOW_AMT2,0) >= NVL(F7,0)+NVL(F11,0) THEN 0
                WHEN NVL(A.ALOW_AMT2,0) < NVL(F7,0)+NVL(F11,0) THEN NVL(F7,0)+NVL(F11,0) - NVL(TM_DTL_AMT,0)
                ELSE 0
                END NEXT_REDMP_AMT]]>   /* 이월환수 */
         -->
         , <![CDATA[CASE WHEN NVL(A.ALOW_AMT2,0) >= NVL(F7,0)+NVL(F11,0) THEN 0
                WHEN NVL(A.ALOW_AMT2,0) < NVL(F7,0)+NVL(F11,0) THEN NVL(F7,0)+NVL(F11,0) - NVL(A.ALOW_AMT2,0)
                ELSE 0
                END NEXT_REDMP_AMT]]>   /* 이월환수 */

         , A.EMPLE_NO
         , A.TAX_RAT
         , A.NEED_RAT
         , A.DEPT_CD
         , A.OCP_CLUSTER
         , A.T21
         , A.T32
         , A.T33
         , A.F7
         , A.F11
         , A.F8
         , A.F10
         , A.F12
         , A.CHK_RT_TAX
         , CASE WHEN A.ALOW_AMT > 0 THEN A.ALOW_AMT ELSE 0 END ALOW_AMT
         , A.ALOW_AMT2
         <!--
              2017.11.13 김찬영 누적환수 부분 추가 F11..
         -->
         , A.TOT_F
         , A.ALOW_DT
      FROM (SELECT emple_no
                 , tax_rat
                 , need_rat
                 , dept_cd
                 , OCP_CLUSTER
                 , sum(T21) T21
                 , sum(T32) T32
                 , sum(T33) T33
                 , sum(F7) F7
                 , sum(F11) F11
                 , sum(F8) F8
                 , sum(F10) F10
                 , sum(F12) F12
                 , CASE WHEN ( sum(T21) + sum(T32) ) - ( sum(F7) + sum(F11) ) <![CDATA[<=]]> 0 THEN 'F'
                        ELSE 'Y'
                        END chk_rt_tax
                 , ( sum(T21) + sum(T32) ) - ( sum(F7) + sum(F11) ) + sum(T33) - (sum(F10) + sum(F8)) - sum(F12) ALOW_AMT
                 , ( sum(T21) + sum(T32) ) ALOW_AMT2
                 , ( sum(F7) + sum(F11) ) AS TOT_F
                 , #{end_dt} ALOW_DT
            FROM (SELECT mpa.accnt_no
                       , e.emple_no
                       , nvl(pm.T21,0) AS T21          /* 모집수당 */
                       , nvl(pm.T32,0) AS T32          /* 누진수당 */
                       , nvl(pm.F7,0) AS F7            /* 환수액 */
                       , nvl(pm.F11,0) AS F11          /* 누진환수 */
                       , 0 AS F8                       /* 해약환수액 */
                       , 0 AS F10                      /* 연체환수액 */
                       , nvl(pm.F12,0) AS F12          /* 이월환수 */
                       , 0 AS T33                      /* 알선수수료 */
                       , nvl(e.tax_rat,0)  tax_rat
                       , nvl(e.need_rat,0) need_rat
                       , e.dept_cd
                       , e.OCP_CLUSTER
                    FROM mem_prod_accnt mpa
                    JOIN (SELECT ed.*
                               , case when nvl(ed.incom_cl,'X') = 'X' then (acd.pay_rat/100)
                                      else
                                           <!--
                                                    2018.05.16 김찬영 2018.03월까지는 0.04, 2018.03월 이후는 0.06
                                                   case when ed.incom_cl = '0001' then 0.04
                                                        when ed.incom_cl = '0002' then 0.03
                                                        when ed.incom_cl = '0003' then 0
                                                        else 0.9
                                                   end
                                               -->
                                           <![CDATA[
                                                    case
                                                         when (ed.incom_cl = '0001' and #{end_dt} >= '201812') then 0.08
                                                         when (ed.incom_cl = '0001' and #{end_dt} <= '201803') then 0.04
                                                         when (ed.incom_cl = '0001' and #{end_dt} > '201803') then 0.06
                                                         when ed.incom_cl = '0002' then 0.03
                                                         when ed.incom_cl = '0003' then 0
                                                         else 0.9
                                                         end
                                            ]]>
                                      end tax_Rat
                               , (acdNeed.pay_rat/100) AS need_rat
                            FROM (SELECT e.emple_no
                                       , e.dept_cd
                                       , e.incom_cl
                                       , d.dept_kind
                                       , case when nvl(e.OCP_CLUSTER,'X') != 'X' then e.OCP_CLUSTER
                                                     else d.OCP_CLUSTER
                                                end OCP_CLUSTER
                                   FROM employee e JOIN department d ON e.dept_cd = d.dept_cd
                                  WHERE D.DEPT_KIND = '02'
                                    AND E.DEPT_CD != '1664'
                                    ) ed
                            LEFT JOIN (SELECT acd2.pay_rat
                                            , acd2.alow_cd
                                            , acd2.OCP_CLUSTER
                                         FROM ALOW_SET_MST acd2
                                        WHERE acd2.alow_cd = 'F5' /* 소득세 */
                                        ) acd on acd.OCP_CLUSTER = ed.OCP_CLUSTER
                            /*
                            2018.04.23 2018년 3월 부터 필요경비가 80==> 70으로 변경
                            LEFT JOIN ALOW_SET_MST acdNeed ON	acdNeed.alow_cd = 'T23' AND acdNeed.OCP_CLUSTER = ed.OCP_CLUSTER  필요경비
                            */

                            LEFT JOIN ALOW_SET_MST acdNeed
                                   ON acdNeed.ALOW_CD = 'T23'
                                   AND acdNeed.PROD_JOIN_DT_STR <![CDATA[<=]]> #{end_dt} AND  acdNeed.PROD_JOIN_DT_END <![CDATA[>=]]> #{end_dt}
                                   AND acdNeed.OCP_CLUSTER = ed.OCP_CLUSTER /* 필요경비 */
                            ) e ON mpa.emple_no = e.emple_no

                    /* 개별 근거 JOIN */
                    JOIN (SELECT accnt_no
                               , nvl(sum(T21),0) T21
                               , nvl(sum(F7),0) F7
                               , nvl(sum(T32),0) T32
                               , nvl(sum(F11),0) F11
                               , nvl(sum(F12),0) F12	/* 이월환수 */
                            FROM (SELECT accnt_no
                                       , CASE WHEN alow_cd='T21' THEN nvl(amt,0) ELSE 0 END T21
                                       , CASE WHEN alow_cd='F7' THEN nvl(amt,0) ELSE 0 END F7
                                       , CASE WHEN alow_cd='T32' THEN nvl(amt,0) ELSE 0 END T32
                                       , CASE WHEN alow_cd='F11' THEN nvl(amt,0) ELSE 0 END F11
                                       , CASE WHEN alow_cd='F12' THEN nvl(amt,0) ELSE 0 END F12
                                    FROM (SELECT ACCNT_NO
                                               , AMT
                                               , ALOW_CD
                                               , ALOW_DT
                                               , NOTE
                                               , DTL_SEQ
                                            FROM alow_da_dtl ad
                                           WHERE 1=1
                                              ANd alow_cd not in ('T33','F8','F10') /* 알선수수료, 해약환수액, 연체환수액 */
                                              AND dtl_seq = (SELECT  max(dtl_seq)
                                                               FROM ALOW_DA_DTL
                                                              WHERE ACCNT_NO= AD.ACCNT_NO
                                                                AND EMPLE_NO=AD.EMPLE_NO
                                                                AND PAY_NO = AD.PAY_NO
                                                                AND ALOW_DT=AD.ALOW_DT
                                                                AND ALOW_CD=AD.ALOW_CD
                                                                )
                                               and ( amt > 0 or hist_yn='Y')
                                          <if test="start_dt != null and start_dt != ''">
                                              AND alow_dt BETWEEN #{start_dt} AND  #{end_dt}
                                          </if>
                                          <if test="accnt_no != null and accnt_no != ''">
                                              AND accnt_no = #{accnt_no}
                                          </if>
                                          <if test="emple_no != null and emple_no != ''">
                                              AND emple_no = #{emple_no}
                                          </if>

                                          ) f
                                 ) tmp
                           GROUP BY accnt_no
                         ) pm ON pm.accnt_no = mpa.accnt_no
                        LEFT OUTER
                    JOIN rescission r ON r.accnt_no = mpa.accnt_no AND r.del_fg='N'
                   WHERE mpa.del_fg='N'
                   <!--
                     AND nvl(r.resn_cl,'00') != '02'
                     AND (
                        (e.dept_kind ='02' AND nvl(e.OCP_CLUSTER,'') !='04') /* 부서구분이 계열 이면서 대명직군이 콜센터가 아닌 경우 */
                        OR
                        e.dept_kind='01'    /* 부서구분이 일반영업 */
                        )
                    -->
                     AND EXISTS (SELECT 'X'
                            FROM pay_mng
                           WHERE DEL_FG='N'
                             AND pay_amt <![CDATA[>]]> 0
                             AND ACCNT_NO = mpa.accnt_no
                             )
                <if test="accnt_no != null and accnt_no != ''">
                     AND mpa.accnt_no = #{accnt_no}
                </if>
                <if test="emple_no != null and emple_no != ''">
                     AND mpa.emple_no = #{emple_no}
                </if>
                <if test="dept_cd != null and dept_cd != ''">
                     AND e.dept_cd = #{dept_cd}
                </if>

                    UNION ALL

                  SELECT mpa.accnt_no
                       , e.emple_no
                       , 0 AS T21                  /* 모집수당 */
                       , 0 AS T32                  /* 누진수당 */
                       , 0 AS F7                   /* 환수액 */
                       , 0 AS F11                  /* 누진환수 */
                       , nvl(pm.F8,0) AS F8        /* 해약환수액 */
                       , nvl(pm.F10,0) AS F10      /* 연체환수액 */
                       , 0 AS F12                  /* 이월환수 */
                       , nvl(pm.T33,0) AS T33      /* 알선수수료 */
                       , nvl(e.tax_rat,0)  tax_Rat
                       , nvl(e.need_rat,0) need_Rat
                       , e.dept_cd
                       , e.OCP_CLUSTER
                    FROM mem_prod_accnt mpa
                    JOIN (SELECT ed.*
                               , case when nvl(ed.incom_cl,'x') = 'x' then (acd.pay_rat/100)
                                                else
                                                <!--
                                                    2018.05.16 김찬영 2018.03월까지는 0.04, 2018.03월 이후는 0.06
                                                   case when ed.incom_cl = '0001' then 0.04
                                                        when ed.incom_cl = '0002' then 0.03
                                                        when ed.incom_cl = '0003' then 0
                                                        else 0.9
                                                   end
                                               -->
                                               <![CDATA[
                                                        case
                                                             when (ed.incom_cl = '0001' and #{end_dt} >= '201812') then 0.08
                                                             when (ed.incom_cl = '0001' and #{end_dt} <= '201803') then 0.04
                                                             when (ed.incom_cl = '0001' and #{end_dt} > '201803') then 0.06
                                                             when ed.incom_cl = '0002' then 0.03
                                                             when ed.incom_cl = '0003' then 0
                                                             else 0.9
                                                             end
                                                ]]>
                                            end tax_Rat
                               , (acdNeed.pay_rat/100) AS need_rat
                            FROM (SELECT e.emple_no
                                       , e.dept_cd
                                       , e.incom_cl
                                       , d.dept_kind
                                       , case when nvl(e.OCP_CLUSTER,'X') != 'X' then e.OCP_CLUSTER
                                                     else d.OCP_CLUSTER
                                                end OCP_CLUSTER
                                   FROM employee e
                                   JOIN department d ON e.dept_cd = d.dept_cd
                                  WHERE D.DEPT_KIND = '02'
                                    AND E.DEPT_CD != '1664'
                               ) ed LEFT
                            JOIN (SELECT acd2.pay_rat
                                       , acd2.alow_cd
                                       , acd2.OCP_CLUSTER
                                    FROM ALOW_SET_MST acd2
                                   WHERE acd2.alow_cd = 'F5'
                                   ) acd ON	acd.OCP_CLUSTER = ed.OCP_CLUSTER
                             /*
                            2018.04.23 2018년 3월 부터 필요경비가 80==> 70으로 변경
                            LEFT JOIN ALOW_SET_MST acdNeed ON	acdNeed.alow_cd = 'T23' AND acdNeed.OCP_CLUSTER = ed.OCP_CLUSTER  필요경비
                            */

                            LEFT JOIN ALOW_SET_MST acdNeed
                                   ON acdNeed.ALOW_CD = 'T23'
                                   AND acdNeed.PROD_JOIN_DT_STR <![CDATA[<=]]> #{end_dt} AND acdNeed.PROD_JOIN_DT_END <![CDATA[>=]]> #{end_dt}
                                   AND acdNeed.OCP_CLUSTER = ed.OCP_CLUSTER /* 필요경비 */

                        )e ON mpa.emple_no = e.emple_no
                    /* 개별 근거 JOIN */
                    JOIN (SELECT accnt_no
                               , nvl(sum(T33),0) T33
                               , nvl(sum(F8),0) F8
                               , nvl(sum(F10),0) F10
                            FROM (SELECT accnt_no
                                       , CASE WHEN alow_cd='T33' THEN nvl(amt,0) ELSE 0 END T33
                                       , CASE WHEN alow_cd='F8' THEN nvl(amt,0) ELSE 0 END F8
                                       , CASE WHEN alow_cd='F10' THEN nvl(amt,0) ELSE 0 END F10
                                     FROM (SELECT ACCNT_NO
                                                , AMT
                                                , ALOW_CD
                                                , ALOW_DT
                                                , NOTE
                                                , DTL_SEQ
                                             FROM alow_da_dtl ad
                                            WHERE 1=1
                                              ANd alow_cd in ('T33','F8','F10') /* 알선수수료, 해약환수액, 연체환수액 */
                                              AND dtl_seq = (SELECT  max(dtl_seq)
                                                      FROM alow_da_dtl
                                                      WHERE accnt_no= ad.accnt_no
                                                      AND emple_no=ad.emple_no
                                                      ANd pay_no=ad.pay_no
                                                      AND alow_dt=ad.alow_dt
                                                      AND alow_cd=ad.alow_cd
                                                       )
                                              and ( amt > 0 or hist_yn='Y')
                                            <if test="start_dt != null and start_dt != ''">
                                              AND alow_dt BETWEEN #{start_dt} AND  #{end_dt}
                                            </if>
                                            <if test="accnt_no != null and accnt_no != ''">
                                              AND accnt_no = #{accnt_no}
                                                                               </if>
                                            <if test="emple_no != null and emple_no != ''">
                                              AND emple_no = #{emple_no}
                                            </if>
                                            ) f
                                     ) tmp
                             GROUP BY accnt_no
                            ) pm ON pm.accnt_no = mpa.accnt_no
                   WHERE mpa.del_fg='N'
                <if test="accnt_no != null and accnt_no != ''">
                     AND mpa.accnt_no = #{accnt_no}
                </if>
                <if test="emple_no != null and emple_no != ''">
                     AND mpa.emple_no = #{emple_no}
                </if>
                <if test="dept_cd != null and dept_cd != ''">
                     AND e.dept_cd = #{dept_cd}
                </if>
                 ) TMP
             GROUP BY EMPLE_NO
                    , TAX_RAT
                    , NEED_RAT
                    , DEPT_CD
                    , OCP_CLUSTER
            ) A INNER JOIN
           EMPLOYEE B ON A.EMPLE_NO = B.EMPLE_NO
                    LEFT OUTER JOIN
           ALOW_DTL_F12 ADF ON ADF.ALOW_DT = A.ALOW_DT AND ADF.EMPLE_NO = A.EMPLE_NO
     ORDER BY EMPLE_NM
    ) C
    </select>

    <!-- ================================================================
     * 날짜 : 20190527
     * 이름 : 송준빈
     * 추가내용 : 사원별 수당관리 디테일 데이터 (담당고객)
     * 대상 테이블 :
     * ================================================================
     * -->
    <select id="DlwPayMap.getAlowEmpleDtlList" parameterType="map" resultType="resultMap">
        /* AlowMap.selectAccntAlowList */
        SELECT TMP.ACCNT_NO
            , MEM_NM
            , TMP.EMPLE_NO
            , EMPLE_NM
            , JOIN_DT
            , tmp.PROD_CD
            , PROD_NM
            , TMP.OCP_CLUSTER
            , OCP_CLUSTER_NM
            , MODEL_CL_NM
            , FN_EVENT(ACCNT_NO) ACCNT_STAT
            , FN_ST_GRP_NM_BY_ACCNT_NO(ACCNT_NO) ST_GRP_NM
            , TOT_PAY_NO
            , PAY_TOT_AMT
            , LAST_PAY_DAY
            , CUR_PAY_AMT
            , RM_PAY_EAMT
            , DA_PAY_NO
            , CASE WHEN (NVL(T32,0) <![CDATA[>]]> 0 OR NVL(F11,0) <![CDATA[>]]> 0) AND TOT_PAY_NO  <![CDATA[>=]]>  NVL(ASMT.PAY_NO_END,0) THEN NVL(ASMT.PAY_NO_END,0)
                   WHEN (NVL(T32,0) <![CDATA[>]]> 0 OR NVL(F11,0) <![CDATA[>]]> 0) AND TOT_PAY_NO  <![CDATA[<]]>  NVL(ASMT.PAY_NO_END,0) THEN NVL(TOT_PAY_NO,0)
                   WHEN (NVL(T21,0) <![CDATA[>]]> 0 OR NVL(F7,0) <![CDATA[>]]> 0) AND TOT_PAY_NO  <![CDATA[>=]]>  NVL(ASM.PAY_NO_END,0) THEN NVL(ASM.PAY_NO_END,0)
                   WHEN (NVL(T21,0) <![CDATA[>]]> 0 OR NVL(F7,0) <![CDATA[>]]> 0) AND TOT_PAY_NO  <![CDATA[<]]>  NVL(ASM.PAY_NO_END,0) THEN NVL(TOT_PAY_NO,0)
                   WHEN NVL(T33,0) <![CDATA[>]]> 0 AND TOT_PAY_NO  <![CDATA[<]]> NVL(ASMS.PAY_NO_END,0) THEN NVL(TOT_PAY_NO,0)
                   WHEN NVL(T33,0) <![CDATA[>]]> 0 AND TOT_PAY_NO  <![CDATA[>=]]>  NVL(ASMS.PAY_NO_END,0) THEN NVL(ASMS.PAY_NO_END,0)
                   ELSE TOT_PAY_NO
                   END PAY_NO_END /* 근거회차 */
            , T21, T32, T33 ,F7, F11, F8, F10, F12
            , rt_sum_t, rt_sum_f
            , rt_alow_amt
            , NVL(HM_AMT,0) HM_AMT
            , CASE WHEN chk_rt_tax = 'Y' THEN
                       CASE WHEN INCOM_CL = '0001' AND (rt_alow_amt-trunc(rt_alow_amt * need_rat)) <![CDATA[>=]]> 50000 THEN /* 기타소득 */
                               trunc(rt_alow_amt * tax_rat)
                            WHEN INCOM_CL = '0002' AND (rt_alow_amt-trunc(rt_alow_amt * need_rat)) <![CDATA[>=]]> 1000 THEN /* 사업소득 */
                               trunc(rt_alow_amt * tax_rat)
                            ELSE 0 END
                   ELSE 0 END F5           /* 소득세 */

            , CASE WHEN chk_rt_tax = 'Y' THEN trunc(rt_alow_amt * tax_rat * 0.1) ELSE 0 END F6
            , CASE WHEN chk_rt_tax = 'Y' THEN
                                (trunc(rt_alow_amt * tax_rat) + trunc(rt_alow_amt * tax_rat * 0.1) )
                            ELSE 0 END tot_tax
            , CASE WHEN chk_rt_tax = 'Y' THEN
                                    rt_alow_amt - (trunc(rt_alow_amt * tax_rat) + trunc(rt_alow_amt * tax_rat * 0.1) )
                            WHEN rt_alow_amt <![CDATA[<=]]> 0 THEN 0
                            ELSE rt_alow_amt
                            END tot_alow_amt
            , CASE WHEN rt_alow_amt > 0 THEN trunc(rt_alow_amt * need_rat) else 0 END need_cost
            , CASE WHEN HIST_YN ='Y' THEN '이력' ELSE '' END HIST_YN
            , emple_idn_no
            , INCOM_CL
            , INCOM_CL_NM
            , BANK_ACCNT_NO
            , (SELECT CD_NM FROM COM_CD WHERE GRP_CD = '0125' AND COM_CD = TMP.SALE_TYPE) SALE_TYPE_NM
            , B2B_COM_NM
            , B2B_COMP_CD
        FROM (SELECT MPA.ACCNT_NO
                   , MB.MEM_NM
                   , PM.EMPLE_NO
                   , PM.EMPLE_NM
                   , PM.JOIN_DT
                   , MPA.PROD_CD
                   , PD.PROD_NM
                   , PM.OCP_CLUSTER
                   , PM.OCP_CLUSTER_NM
                   , P.TOT_PAY_NO
                   , P.LAST_PAY_DAY
                   , PDD.CUR_PAY_AMT
                   , P.RM_PAY_EAMT
                   , P.PAY_TOT_AMT
                   , nvl(pm.pay_no, 0) AS da_pay_no
                   , nvl(pm.T21,0) AS T21
                   , nvl(pm.T32,0) AS T32
                   , nvl(pm.T33,0) AS T33
                   , nvl(pm.F7,0) AS F7
                   , nvl(pm.F11,0) AS F11
                   , nvl(pm.F8,0) AS F8
                   , nvl(pm.F10,0) AS F10
                   , nvl(pm.F12,0) AS F12
                   , nvl(pm.T21,0)+nvl(pm.T32,0)+ nvl(pm.T33,0) rt_sum_t
                   , nvl(pm.F7,0) + nvl(pm.F11,0) + nvl(pm.F8,0)+ nvl(pm.F10,0) rt_sum_f
                   , CASE WHEN ( nvl(pm.T21,0)+nvl(pm.T32,0) ) - ( nvl(pm.F7,0) + nvl(pm.F11,0) ) <![CDATA[<=]]> 0 THEN 'F'
                                   ELSE 'Y'
                                   END chk_rt_tax
                   , CASE WHEN ( nvl(pm.T21,0)+nvl(pm.T32,0) ) - ( nvl(pm.F7,0) + nvl(pm.F11,0) ) <![CDATA[<=]]> 0 THEN  0
                                       ELSE ( nvl(pm.T21,0)+nvl(pm.T32,0) ) - ( nvl(pm.F7,0) + nvl(pm.F11,0) ) + nvl(pm.T33,0) - (nvl(pm.F10,0)+ nvl(pm.F8,0))
                                       END rt_sum_for_tax
                   , ( nvl(pm.T21,0)+nvl(pm.T32,0) ) - ( nvl(pm.F7,0) + nvl(pm.F11,0) ) + nvl(pm.T33,0) - (nvl(pm.F10,0)+ nvl(pm.F8,0)) rt_alow_amt
                   , nvl(pm.tax_rat,0)  tax_rat
                   , nvl(pm.need_rat,0) need_rat
                   , PM.HIST_YN
                   , (SELECT MODEL_CL_NM FROM PRODUCT_MODEL_CL_CD WHERE MODEL_CL_CD = mpa.PROD_MODEL_KIND) MODEL_CL_NM
                   , PM.DEPT_CD
                   , EMP.IDN_NO EMPLE_IDN_NO
                   , EMP.INCOM_CL
                   , (SELECT replace(FN_COM_NM('0124', EMP.INCOM_CL),chr(0),'') FROM DUAL) INCOM_CL_NM
                   , replace(EMP.BANK_ACCNT_NO, chr(0), '') BANK_ACCNT_NO
                   , mpa.PROD_MODEL_KIND
                   , mpa.PROD_MODEL_CD
                   , mpa.B2B_COMP_CD
                   , b2b.SALE_TYPE
                   , b2b.COM_NM AS B2B_COM_NM
                   , PMG.HM_AMT
              FROM MEM_PROD_ACCNT MPA
              JOIN MEMBER MB ON MPA.MEM_NO = MB.MEM_NO
              JOIN PRODUCT PD ON MPA.PROD_CD=PD.PROD_CD
              JOIN
              (
                SELECT accnt_no
             , emple_no
             , emple_nm
             , ocp_cluster
             , ocp_cluster_nm
             , join_dt
             , prod_cd
             , tax_rat
             , need_rat
             , dept_cd
             , sum(T21) T21
             , sum(T32) T32
             , sum(T33) T33
             , sum(F7) F7
             , sum(F11) F11
             , sum(F8) F8
             , sum(F10) F10
             , sum(F12) F12
             , max(pay_no) pay_no
             , max(hist_yn) hist_yn
        FROM (SELECT mpa.accnt_no
                   , e.emple_no
                   , e.emple_nm
                   , e.ocp_cluster
                   , (SELECT FN_COM_NM('96',e.ocp_cluster) FROM DUAL) ocp_cluster_nm
                   , mpa.join_dt
                   , mpa.prod_cd
                   , nvl(pm.T21,0) AS T21          /* 모집수당 */
                   , nvl(pm.T32,0) AS T32          /* 누진수당 */
                   , nvl(pm.F7,0) AS F7            /* 환수액 */
                   , nvl(pm.F11,0) AS F11          /* 누진환수 */
                   , 0 AS F8                       /* 해약환수액 */
                   , 0 AS F10                      /* 연체환수액 */
                   , nvl(pm.F12,0) AS F12          /* 이월환수 */
                   , 0 AS T33                      /* 알선수수료 */
                   , nvl(e.tax_rat,0)  tax_rat
                   , nvl(e.need_rat,0) need_rat
                   , pm.pay_no
                   , pm.hist_yn
                   , e.dept_cd
                FROM mem_prod_accnt mpa
                JOIN (SELECT ed.*
                           , case when nvl(ed.incom_cl,'X') = 'X' then (acd.pay_rat/100)
                                  else
                                        <!--
                                                2018.05.16 김찬영 2018.03월까지는 0.04, 2018.03월 이후는 0.06
                                                case when ed.incom_cl = '0001' then 0.04
                                                     when ed.incom_cl = '0002' then 0.03
                                                     when ed.incom_cl = '0003' then 0
                                                     else 0.9
                                                end
                                        -->
                                        <![CDATA[
                                                 case when (ed.incom_cl = '0001' and #{end_dt} <= '201803') then 0.04
                                                      when (ed.incom_cl = '0001' and #{end_dt} > '201803') then 0.06
                                                      when ed.incom_cl = '0002' then 0.03
                                                      when ed.incom_cl = '0003' then 0
                                                      else 0.9
                                                      end
                                         ]]>
                                  end tax_Rat
                           , (acdNeed.pay_rat/100) AS need_rat
                        FROM (SELECT e.emple_no
                                   , e.emple_nm
                                   , e.dept_cd
                                   , e.incom_cl
                                   , d.dept_kind
                                   , case when nvl(e.ocp_cluster,'X') != 'X' then e.ocp_cluster
                                                 else d.ocp_cluster
                                            end ocp_cluster
                               FROM employee e JOIN department d ON e.dept_cd = d.dept_cd
                                ) ed
                        LEFT JOIN (SELECT acd2.pay_rat
                                        , acd2.alow_cd
                                        , acd2.ocp_cluster
                                     FROM ALOW_SET_MST acd2
                                    WHERE acd2.alow_cd = 'F5' /* 소득세 */
                                    ) acd on acd.ocp_cluster = ed.ocp_cluster
                        /*
                        2018.06.18 : 2018년 3월 부터 필요경비가 80==> 70으로 변경
                                     수당 중복발생으로 쿼리수정
                        LEFT JOIN ALOW_SET_MST acdNeed ON	acdNeed.alow_cd = 'T23' AND acdNeed.ocp_cluster = ed.ocp_cluster
                        */

                        LEFT JOIN ALOW_SET_MST acdNeed
                               ON acdNeed.ALOW_CD = 'T23'
                              AND acdNeed.PROD_JOIN_DT_STR <![CDATA[<=]]> #{end_dt} AND  acdNeed.PROD_JOIN_DT_END <![CDATA[>=]]> #{end_dt}
                              AND acdNeed.OCP_CLUSTER = ed.OCP_CLUSTER /* 필요경비 */
                     ) e ON mpa.emple_no = e.emple_no

                /* 개별 근거 JOIN */
                JOIN (SELECT accnt_no
                           , nvl(sum(T21),0) T21
                           , nvl(sum(F7),0) F7
                           , nvl(sum(T32),0) T32
                           , nvl(sum(F11),0) F11
                           , nvl(sum(F12),0) F12	/* 이월환수 */
                           , nvl(max(pay_no),0) pay_no
                           , nvl(max(hist_yn),'N') hist_yn
                        FROM (SELECT accnt_no
                                   , pay_no
                                   , CASE WHEN alow_cd='T21' THEN nvl(amt,0) ELSE 0 END T21
                                   , CASE WHEN alow_cd='F7' THEN nvl(amt,0) ELSE 0 END F7
                                   , CASE WHEN alow_cd='T32' THEN nvl(amt,0) ELSE 0 END T32
                                   , CASE WHEN alow_cd='F11' THEN nvl(amt,0) ELSE 0 END F11
                                   , CASE WHEN alow_cd='F12' THEN nvl(amt,0) ELSE 0 END F12
                                   , hist_yn
                                FROM (SELECT ACCNT_NO
                                           , AMT
                                           , ALOW_CD
                                           , ALOW_DT
                                           , NOTE
                                           , DTL_SEQ
                                           , PAY_NO
                                           , HIST_YN
                                        FROM alow_da_dtl ad
                                       WHERE 1=1
                                          ANd alow_cd not in ('T33','F8','F10') /* 알선수수료, 해약환수액, 연체환수액 */
                                          AND dtl_seq = (SELECT max(dtl_seq)
                                                           FROM ALOW_DA_DTL
                                                          WHERE ACCNT_NO= AD.ACCNT_NO
                                                            AND EMPLE_NO=AD.EMPLE_NO
                                                            AND PAY_NO = AD.PAY_NO
                                                            AND ALOW_DT=AD.ALOW_DT
                                                            AND ALOW_CD=AD.ALOW_CD
                                                            )
                                           and ( amt > 0 or hist_yn='Y')

                                      <if test="start_dt != null and start_dt != ''">
                                          AND alow_dt BETWEEN #{start_dt} AND  #{end_dt}
                                      </if>
                                      <if test="accnt_no != null and accnt_no != ''">
                                          AND accnt_no = #{accnt_no}
                                      </if>
                                      <if test="emple_no != null and emple_no != ''">
                                          AND emple_no = #{emple_no}
                                      </if>
                                      ) f
                             )
                       GROUP BY accnt_no
                     ) pm ON pm.accnt_no = mpa.accnt_no
                    LEFT OUTER
                JOIN rescission r ON r.accnt_no = mpa.accnt_no AND r.del_fg='N'
               WHERE mpa.del_fg='N'
                 <!-- 2017-03-27
                 AND nvl(r.resn_cl,'00') != '02'
                 AND (
                    (e.dept_kind ='02' AND nvl(e.ocp_cluster,'') !='04') /* 부서구분이 계열 이면서 대명직군이 콜센터가 아닌 경우 */
                    OR
                    e.dept_kind='01'    /* 부서구분이 일반영업 */
                    )
                 -->
            <if test="accnt_no != null and accnt_no != ''">
                 AND mpa.accnt_no = #{accnt_no}
            </if>
            <if test="emple_no != null and emple_no != ''">
                 AND mpa.emple_no = #{emple_no}
            </if>
            <if test="dept_cd != null and dept_cd != ''">
                 AND e.dept_cd = #{dept_cd}
            </if>

              UNION ALL

              SELECT mpa.accnt_no
                   , e.emple_no
                   , e.emple_nm
                   , e.ocp_cluster
                   , (SELECT FN_COM_NM('96', e.ocp_cluster) FROM DUAL) ocp_cluster_nm
                   , mpa.join_dt
                   , mpa.prod_cd
                   , 0 AS T21                  /* 모집수당 */
                   , 0 AS T32                  /* 누진수당 */
                   , 0 AS F7                   /* 환수액 */
                   , 0 AS F11                  /* 누진환수 */
                   , nvl(pm.F8,0) AS F8        /* 해약환수액 */
                   , nvl(pm.F10,0) AS F10      /* 연체환수액 */
                   , 0 AS F12                  /* 이월환수 */
                   , nvl(pm.T33,0) AS T33      /* 알선수수료 */
                   , nvl(e.tax_rat,0)  tax_Rat
                   , nvl(e.need_rat,0) need_Rat
                   , nvl(pm.pay_no,0) AS pay_no
                   , pm.hist_yn
                   , e.dept_cd
                FROM mem_prod_accnt mpa
                JOIN (SELECT ed.*
                           , case when nvl(ed.incom_cl,'x') = 'x' then (acd.pay_rat/100)
                                            else
                                                <!--
                                                        2018.05.16 김찬영 2018.03월까지는 0.04, 2018.03월 이후는 0.06
                                                        case when ed.incom_cl = '0001' then 0.04
                                                             when ed.incom_cl = '0002' then 0.03
                                                             when ed.incom_cl = '0003' then 0
                                                             else 0.9
                                                        end
                                                -->
                                                <![CDATA[
                                                         case when (ed.incom_cl = '0001' and #{end_dt} <= '201803') then 0.04
                                                              when (ed.incom_cl = '0001' and #{end_dt} > '201803') then 0.06
                                                              when ed.incom_cl = '0002' then 0.03
                                                              when ed.incom_cl = '0003' then 0
                                                              else 0.9
                                                         end
                                                 ]]>
                                        end tax_Rat
                           , (acdNeed.pay_rat/100) AS need_rat
                        FROM (SELECT e.emple_no
                                   , e.emple_nm
                                   , e.dept_cd
                                   , e.incom_cl
                                   , d.dept_kind
                                   , case when nvl(e.ocp_cluster,'X') != 'X' then e.ocp_cluster
                                                 else d.ocp_cluster
                                            end ocp_cluster
                               FROM employee e
                               JOIN department d ON e.dept_cd = d.dept_cd
                           ) ed LEFT
                        JOIN (SELECT acd2.pay_rat
                                   , acd2.alow_cd
                                   , acd2.ocp_cluster
                                FROM ALOW_SET_MST acd2
                               WHERE acd2.alow_cd = 'F5'
                               ) acd ON	acd.ocp_cluster = ed.ocp_cluster
                        LEFT JOIN ALOW_SET_MST acdNeed
                               ON acdNeed.ALOW_CD = 'T23'
                              AND acdNeed.PROD_JOIN_DT_STR <![CDATA[<=]]> #{end_dt} AND  acdNeed.PROD_JOIN_DT_END <![CDATA[>=]]> #{end_dt}
                              AND acdNeed.OCP_CLUSTER = ed.OCP_CLUSTER /* 필요경비 */
                    )e ON mpa.emple_no = e.emple_no
                /* 개별 근거 JOIN */
                JOIN (SELECT accnt_no
                           , nvl(sum(T33),0) T33
                           , nvl(sum(F8),0) F8
                           , nvl(sum(F10),0) F10
                           , nvl(max(pay_no),0) pay_no
                           , nvl(max(hist_yn),'N') hist_yn
                        FROM (SELECT accnt_no
                                   , pay_no
                                   , CASE WHEN alow_cd='T33' THEN nvl(amt,0) ELSE 0 END T33
                                   , CASE WHEN alow_cd='F8' THEN nvl(amt,0) ELSE 0 END F8
                                   , CASE WHEN alow_cd='F10' THEN nvl(amt,0) ELSE 0 END F10
                                   , hist_yn
                                 FROM (SELECT accnt_no, amt, alow_cd, alow_dt, note, dtl_seq, pay_no, hist_yn
                                         FROM alow_da_dtl ad
                                        WHERE 1=1
                                          ANd alow_cd in ('T33','F8','F10') /* 알선수수료, 해약환수액, 연체환수액 */
                                          AND dtl_seq = (SELECT  max(dtl_seq)
                                                  FROM alow_da_dtl
                                                  WHERE accnt_no= ad.accnt_no
                                                  AND emple_no=ad.emple_no
                                                  ANd pay_no=ad.pay_no
                                                  AND alow_dt=ad.alow_dt
                                                  AND alow_cd=ad.alow_cd
                                                   )
                                          and ( amt > 0 or hist_yn='Y')

                                        <if test="start_dt != null and start_dt != ''">
                                          AND alow_dt BETWEEN #{start_dt} AND  #{end_dt}
                                        </if>
                                        <if test="accnt_no != null and accnt_no != ''">
                                          AND accnt_no = #{accnt_no}
                                                                           </if>
                                        <if test="emple_no != null and emple_no != ''">
                                          AND emple_no = #{emple_no}
                                        </if>

                                        ) f
                                 )
                         GROUP BY accnt_no
                        ) pm ON pm.accnt_no = mpa.accnt_no
               WHERE mpa.del_fg='N'
            <if test="accnt_no != null and accnt_no != ''">
                 AND mpa.accnt_no = #{accnt_no}
            </if>
            <if test="emple_no != null and emple_no != ''">
                 AND mpa.emple_no = #{emple_no}
            </if>
            <if test="dept_cd != null and dept_cd != ''">
                 AND e.dept_cd = #{dept_cd}
            </if>
             ) tmp
         GROUP BY accnt_no
                , emple_no
                , emple_nm
                , ocp_cluster
                , ocp_cluster_nm
                , join_dt
                , prod_Cd
                , tax_rat
                , need_rat
                , dept_cd
              ) pm on pm.accnt_no = mpa.accnt_no
            LEFT OUTER JOIN EMPLOYEE emp ON emp.emple_no = pm.emple_no
            LEFT OUTER JOIN
            (SELECT ACCNT_NO
                    , PAY_NO TOT_PAY_NO
                    , PAY_TOT_AMT
                    , LAST_PAY_DAY
                    , RM_PAY_EAMT
               FROM PAY_DL_MST
              WHERE DL_TYPE = '01' /* 입금마감 */
                AND PAY_DL_YYYYMM = #{end_dt}
            ) p ON p.accnt_no = mpa.accnt_no
            LEFT OUTER JOIN
            (SELECT ACCNT_NO
                    , sum(PAY_AMT) CUR_PAY_AMT
               FROM PAY_DL_DTL
              WHERE DL_TYPE = '01' /* 입금마감 */
                AND PAY_DL_YYYYMM = #{end_dt}
              GROUP BY ACCNT_NO
            ) PDD ON PDD.accnt_no = MPA.ACCNT_NO
            LEFT OUTER JOIN
            (SELECT ACCNT_NO
                  ,SUM(PAY_AMT) HM_AMT
               FROM PAY_MNG
              WHERE DEL_FG = 'N'
                AND SUBSTR(PAY_DAY,1,6) = #{end_dt}
              GROUP BY ACCNT_NO
            ) PMG ON PMG.ACCNT_NO = MPA.ACCNT_NO
            LEFT OUTER JOIN B2BCOMCD B2B ON B2B.COM_CD = MPA.B2B_COMP_CD
            WHERE MPA.DEL_FG='N'
            AND MB.DEL_FG='N'
            ORDER BY ACCNT_NO
        ) tmp LEFT OUTER JOIN (SELECT * FROM(
                                   SELECT ROW_NUMBER()OVER(PARTITION BY PROD_CD, OCP_CLUSTER ORDER BY PAY_NO_END DESC) CNT,ALOW_SET_MST.*
                                   FROM ALOW_SET_MST
                                   WHERE ALOW_CD = 'T21') TBL
                               ) ASM ON TMP.PROD_CD = ASM.PROD_CD AND
                                 TMP.OCP_CLUSTER = ASM.OCP_CLUSTER AND
                                 TMP.JOIN_DT  <![CDATA[>=]]>  REPLACE(ASM.PROD_JOIN_DT_STR,'-','')||'01' AND
                                 TMP.JOIN_DT  <![CDATA[<=]]>  REPLACE(ASM.PROD_JOIN_DT_END,'-','')||'99' AND
                                 TMP.TOT_PAY_NO <![CDATA[>=]]>  NVL(ASM.PAY_NO,0) AND
                                 TMP.TOT_PAY_NO  <![CDATA[<=]]>  NVL(ASM.PAY_NO_END,0)
             LEFT OUTER JOIN (SELECT EMPLE_NO, MAX(PROG_SEQ) NCNT FROM ALOW_DTL_PROGS WHERE ALOW_DT = #{end_dt} GROUP BY EMPLE_NO ) MEM_NC ON MEM_NC.EMPLE_NO = TMP.EMPLE_NO
             LEFT OUTER JOIN (SELECT * FROM ALOW_SET_MST WHERE ALOW_CD = 'T32') ASMT ON ASMT.PROD_CD = TMP.PROD_CD AND MEM_NC.NCNT <![CDATA[>=]]> ASMT.PROG_CNT_STR AND MEM_NC.NCNT <![CDATA[<=]]> ASMT.PROG_CNT_END
             LEFT OUTER JOIN ALOW_SET_MST ASMS ON TMP.PROD_CD = ASMS.PROD_CD AND
                       ASMS.ALOW_CD = 'T33' AND
                       TMP.TOT_PAY_NO  <![CDATA[>=]]>  NVL(ASMS.PAY_NO,0) AND
                       TMP.TOT_PAY_NO  <![CDATA[<=]]>  NVL(ASMS.PAY_NO_END,0) AND
                       TMP.B2B_COMP_CD = ASMS.B2B_COMP AND
                       TMP.SALE_TYPE = ASMS.SALE_TYPE AND
                       TMP.JOIN_DT  <![CDATA[>=]]>  REPLACE(ASMS.PROD_JOIN_DT_STR,'-','')||'01' AND
                       TMP.JOIN_DT  <![CDATA[<=]]>  REPLACE(ASMS.PROD_JOIN_DT_END,'-','')||'99'
    </select>

    <!-- ================================================================
     * 날짜 : 20190527
     * 이름 : 송준빈
     * 추가내용 : 고객별 수당관리 마스터 데이터
     * 대상 테이블 :
     * ================================================================
     * -->
    <select id="DlwPayMap.getAlowAccntNoMstList" parameterType="map" resultType="resultMap">
    	SELECT /* AlowMap.selectAlowMngForMemInfo */
               MPA.ACCNT_NO
             , MB.MEM_NM
             , MPA.join_dt
             , fn_prod_nm(MPA.PROD_CD) PROD_NM
             , MPA.EMPLE_NO
             , fn_emple_nm(MPA.EMPLE_NO) EMPLE_NM
             , fn_dept_nm(D.DEPT_CD) DEPT_NM
             , fn_event(MPA.ACCNT_NO) ACCNT_STAT
             , fn_com_nm('01', MPA.PAY_MTHD) PAY_MTHD_NM
             , CASE WHEN E.OCP_CLUSTER IS NOT NULL THEN fn_com_nm('96',E.OCP_CLUSTER)
                    ELSE fn_com_nm('96',D.OCP_CLUSTER)
                    END OCP_CLUSTER_NM
             , nvl((SELECT max(no) FROM pay_mng WHERE accnt_no = mpa.accnt_no AND del_fg='N'),0) TOT_PAY_NO
             , nvl((SELECT sum(pay_amt) FROM pay_mng WHERE accnt_no = mpa.accnt_no AND del_fg='N'),0) PAY_AMT
             , nvl((SELECT sum(pay_amt) FROM PAY_MNG_DTL WHERE ACCNT_NO = MPA.ACCNT_NO AND DEL_FG = 'N'), 0) ALLT_AMT
             , nvl((SELECT sum(pay_amt) FROM PAY_MNG_DTL1 WHERE ACCNT_NO = MPA.ACCNT_NO AND DEL_FG = 'N'), 0) ADD_AMT
             , nvl(tad.amt,0) PROD_T21
             , nvl(totT21.amt,0) TOT_T21
             , nvl(tad.amt,0)- nvl(totT21.amt,0) EXTR_ALOW_AMT
             , nvl(tad.amt,0) - (nvl(tad.amt,0) - nvl(totT21.amt,0)) AS RT_ALOW_AMT
          FROM mem_prod_accnt mpa
                    JOIN
               member mb ON mpa.mem_no = mb.mem_no AND mb.del_fg='N'
                    JOIN
               employee e ON mpa.emple_no = e.emple_no
                    JOIN
               department d ON e.dept_cd = d.dept_cd
                    LEFT JOIN
               (SELECT ACCNT_NO
                     , PROD_CD
                     , OCP_CLUSTER
                     , sum(AMT)AMT
                  FROM (SELECT MPA.ACCNT_NO
                             , ASM.PROD_CD
                             , ASM.OCP_CLUSTER
                             , ( (PAY_NO_END - PAY_NO +1) * AMT ) AMT
                          FROM mem_prod_accnt mpa JOIN
                               employee e ON mpa.emple_no = e.emple_no JOIN
                               department d ON e.dept_cd = d.dept_cd JOIN ALOW_SET_MST ASM ON alow_cd ='T21'
                                  AND MPA.PROD_CD = ASM.PROD_CD
                                  AND D.OCP_CLUSTER = ASM.OCP_CLUSTER
                                  AND substr(mpa.join_dt,1,4)||'-'||substr(mpa.join_dt,5,2) BETWEEN ASM.PROD_JOIN_DT_STR AND ASM.PROD_JOIN_DT_END
                         WHERE mpa.accnt_no = #{accnt_no}
                         ) t
                 GROUP BY ACCNT_NO
                        , PROD_CD
                        , OCP_CLUSTER
               ) tad ON MPA.ACCNT_NO=TAD.ACCNT_NO
                    LEFT JOIN
               (SELECT accnt_no, sum(amt) amt
                  FROM alow_da_dtl ad
                 WHERE alow_cd='T21'
                   AND accnt_no = #{accnt_no}
                   and dtl_seq = (SELECT max(DTL_SEQ)
                                    FROM ALOW_DA_DTL
                                   WHERE ACCNT_NO=AD.ACCNT_NO
                                     AND alow_cd='T21'
                                     AND ALOW_DT=AD.ALOW_DT)
                 GROUP BY ACCNT_NO
                ) totT21 ON totT21.ACCNT_NO=MPA.ACCNT_NO
         WHERE MPA.DEL_FG ='N'
           AND MPA.ACCNT_NO = #{accnt_no}
    </select>

    <!-- ================================================================
     * 날짜 : 20190527
     * 이름 : 송준빈
     * 추가내용 : 고객별 수당관리 디테일 데이터
     * 대상 테이블 :
     * ================================================================
     * -->
    <select id="DlwPayMap.getAlowAccntNoDtlList" parameterType="map" resultType="resultMap">
    	WITH /* AlowMap.selectAlowMngForAccnt */
         W01 AS (SELECT note
                      , accnt_no
                      , alow_dt
                      , ROW_NUMBER() OVER (PARTITION BY ALOW_DT ORDER BY REG_DM DESC) rnum
                   FROM alow_da_dtl
                  WHERE accnt_no = #{accnt_no}
                    AND reg_man <![CDATA[<>]]> '0000000000'
                  ORDER BY reg_dm desc)

        SELECT mpa.accnt_no
             , tm.alow_dt
             , T21
             , T32
             , T33
             , F7
             , F11
             , F8
             , F10
             , F12
             , nvl(hist_yn,'N') AS  da_dtl_yn
             , (SELECT note
                  FROM W01 W
                 WHERE W.accnt_no = mpa.accnt_no
                   AND W.alow_dt = tm.alow_dt
                   AND W.rnum = 1) note
        FROM mem_prod_accnt mpa
            JOIN member mb ON mpa.mem_no = mb.mem_no
            JOIN employee e ON mpa.emple_no = e.emple_no
            JOIN department d ON e.dept_cd = d.dept_cd
          INNER JOIN (SELECT accnt_no
                           , alow_dt
                           , max(dtl_seq) AS dtl_seq
                           , sum(T21) AS T21
                           , sum(T32) AS T32
                           , sum(T33) AS T33
                           , sum(F7) AS F7
                           , sum(F11) AS F11
                           , sum(F8) AS F8
                           , sum(F10) AS F10
                           , sum(F12) AS F12
                           , max(hist_yn) AS hist_yn
                        FROM (SELECT accnt_no
                                   , alow_dt
                                   , dtl_seq
                                   , CASE WHEN alow_cd='T21' THEN nvl(amt,0) ELSE 0 END T21
                                   , CASE WHEN alow_cd='T32' THEN nvl(amt,0) ELSE 0 END T32
                                   , CASE WHEN alow_cd='T33' THEN nvl(amt,0) ELSE 0 END T33
                                   , CASE WHEN alow_cd='F7' THEN nvl(amt,0) ELSE 0 END F7
                                   , CASE WHEN alow_cd='F11' THEN nvl(amt,0) ELSE 0 END F11
                                   , CASE WHEN alow_cd='F8' THEN nvl(amt,0) ELSE 0 END F8
                                   , CASE WHEN alow_cd='F10' THEN nvl(amt,0) ELSE 0 END F10
                                   , CASE WHEN alow_cd='F12' THEN nvl(amt,0) ELSE 0 END F12
                                   , hist_yn
                                  FROM (SELECT accnt_no
                                             , amt
                                             , alow_cd
                                             , alow_dt
                                             , note
                                             , dtl_seq
                                             , hist_yn
                                          FROM alow_da_dtl ad
                                         WHERE accnt_no = #{accnt_no}
                                           AND dtl_seq = (SELECT max(dtl_seq)
                                                            FROM alow_da_dtl
                                                           WHERE accnt_no= ad.accnt_no
                                                             AND emple_no=ad.emple_no
                                                             AND pay_no=ad.pay_no
                                                             AND alow_dt=ad.alow_dt
                                                             AND alow_cd=ad.alow_cd
                                                          )
                                          ) f
                                  WHERE 1=1
                                ) tmp
                            GROUP BY accnt_no
                                   , alow_Dt
                          )tm ON mpa.accnt_no = tm.accnt_no
         WHERE mpa.accnt_no =#{accnt_no}
    </select>
    
    <!-- ================================================================
     * 날짜 : 20190618
     * 이름 : 김주용
     * 추가내용 : 만기연장 관리회원 삭제
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_MANGI_DTL
     * ================================================================
     * -->
    <delete id="DlwPayMap.deleteMemberMangiExtDataList" parameterType="map">
        BEGIN /* DlwPayMap.deleteMemberMangiExtDataList */
            UPDATE LF_DMUSER.TB_MEMBER_MANGI_DTL
               SET DEL_FG = 'Y'
                  ,UPD_MAN = #{rgsr_id}
                  ,UPD_DM = SYSDATE
             WHERE 1=1
               AND DEL_FG = 'N'
               AND ACCNT_NO   = #{accnt_no}
               AND ACCNT_SEQ  = #{accnt_seq};

           UPDATE LF_DMUSER.TB_MEMBER_MANGI_EXT
               SET DEL_FG = 'Y'
                  ,UPD_MAN = #{rgsr_id}
                  ,UPD_DM = SYSDATE
             WHERE 1=1
               AND DEL_FG = 'N'
               AND ACCNT_NO   = #{accnt_no};
        END;
    </delete>
    
    <!-- ================================================================
     * 날짜 : 20190620
     * 이름 : 김주용
     * 추가내용 : 만기연장 회원 배송 업데이트
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_MANGI_DTL
     * ================================================================
     * -->
    <update id="DlwPayMap.updateUserExcelDeliveryUpload" parameterType="map">
        UPDATE /* DlwPayMap.updateUserExcelDeliveryUpload */
               LF_DMUSER.TB_MEMBER_MANGI_DTL
           SET INVOICE_NUM = #{invoice_num}
              ,DELIVERY_CORP = #{delivery_corp}
              ,UPD_MAN = #{rgsr_id}
              ,UPD_DM = SYSDATE
         WHERE 1=1
           AND DEL_FG = 'N'
           AND ACCNT_NO = #{accnt_no}
    </update>
    
    <!-- ================================================================
     * 날짜 : 20190703
     * 이름 : 송준빈
     * 추가내용 : 수수료 산출 집계 상세 내용 조회수
     * 대상 테이블 : LF_DMUSER.TB_ALOW_BASIC_INFO
     * ================================================================
     * -->
    <select id="DlwPayMap.getAlowDetail2Count" parameterType="map" resultType="int">
    	    WITH ALOW_MAIN
			AS
			(
			    SELECT
			        ABI.ACCNT_NO,
			        MB.MEM_NM,
			        MPA.JOIN_DT,
			        MPA.PROD_CD,
			        REPLACE(MPA.ID_NO,CHR(0),'') AS ID_NO,
			        PD.PROD_NM,
			        ABI.ALOW_NO,
			        ASM.B2B_COMP,
			        ASM.SALE_TYPE,
			        ASM.PROD_JOIN_DT_STR,
			        ASM.PROD_JOIN_DT_END,
			        ASM.AMT
			        
			    FROM
			    (
			        SELECT 
			            ALOW_DT,
			            ACCNT_NO,
			            ALOW_NO,
			            YYYYMM
			        FROM LF_DMUSER.TB_ALOW_PAY_INFO ABI 
			        WHERE 1=1
		                 AND ABI.YYYYMM = #{alow_dt}
		                 AND ABI.ALOW_DT BETWEEN #{alow_dt} || '01' AND LAST_DAY(#{alow_dt} || '01')
			                             
			    ) ABI INNER JOIN
			    MEM_PROD_ACCNT MPA ON ABI.ACCNT_NO = MPA.ACCNT_NO INNER JOIN     
			    MEMBER MB ON MPA.MEM_NO = MB.MEM_NO INNER JOIN     
			    B2BCOMCD B2B ON MPA.B2B_COMP_CD = B2B.COM_CD INNER JOIN
			    PRODUCT PD ON MPA.PROD_CD = PD.PROD_CD INNER JOIN
			    (
			        SELECT 
			            ALOW_CD,
			            PROD_CD,
			            SALE_TYPE,
			            B2B_COMP,
			            AMT,
			            PAY_NO,
			            PAY_NO_END,
			             REPLACE(NVL(PROD_JOIN_DT_STR,'2100-01') || '-01','-','')   AS PROD_JOIN_DT_STR,
			            TO_CHAR(LAST_DAY(REPLACE(NVL(PROD_JOIN_DT_END,'2100-01') || '-01','-','')),'YYYYMMDD') AS PROD_JOIN_DT_END    
			        FROM ALOW_SET_MST ASM
			        WHERE 1=1
			            AND ASM.ALOW_CD = 'T33' 
			            AND ASM.B2B_COMP = '3302'    
			            AND NVL(ASM.JBIT,'Y') = 'Y'
			    ) ASM ON MPA.PROD_CD = ASM.PROD_CD AND ALOW_NO BETWEEN ASM.PAY_NO AND ASM.PAY_NO_END AND B2B.SALE_TYPE = ASM.SALE_TYPE 
			    WHERE 1=1
			)
			
			SELECT 
				/* DlwPayMap.getAlowDetail2Count */
			    COUNT(*) 
			FROM
			(
			SELECT
				MAIN.ACCNT_NO
			FROM ALOW_MAIN MAIN INNER JOIN
			    TB_MEMBER_BASIC_INFO_DAY MBID ON MAIN.ACCNT_NO = MBID.ACCNT_NO AND MBID.JOIN_DT BETWEEN PROD_JOIN_DT_STR AND PROD_JOIN_DT_END LEFT OUTER JOIN
			    RESCISSION RS ON MAIN.ACCNT_NO = RS.ACCNT_NO AND DEL_FG = 'N'
			) MAIN_TBL
			WHERE 1=1
    
    
    	<!-- 
        SELECT /* DlwPayMap.getAlowDetail2Count */
            COUNT(*) AS ICNT
        FROM (
                 SELECT
                     *
                 FROM LF_DMUSER.TB_ALOW_PAY_INFO ABI INNER JOIN 
                      TB_MEMBER_BASIC_INFO_DAY MPA ON ABI.ACCNT_NO = MPA.ACCNT_NO  INNER JOIN
                      MEMBER MB ON MPA.MEM_NO = MB.MEM_NO AND MB.DEL_FG = 'N' INNER JOIN
                      PRODUCT PD ON MPA.PROD_CD = PD.PROD_CD INNER JOIN
                      B2BCOMCD B2B ON MPA.B2B_COMP_CD = B2B.COM_CD INNER JOIN
                      ALOW_SET_MST ASM ON MPA.PROD_CD = ASM.PROD_CD AND B2B.SALE_TYPE = ASM.SALE_TYPE AND ASM.B2B_COMP = '3302' AND ASM.ALOW_CD = 'T33'  AND NVL(ASM.JBIT,'Y') = 'Y'  LEFT OUTER JOIN
                      RESCISSION RS ON ABI.ACCNT_NO = RS.ACCNT_NO AND RS.DEL_FG = 'N' 
                 WHERE 1=1
                 AND ABI.YYYYMM = #{alow_dt}
                 AND ABI.ALOW_DT BETWEEN #{alow_dt} || '01' AND LAST_DAY(#{alow_dt} || '01')
                 AND MPA.JOIN_DT >= REPLACE(NVL(PROD_JOIN_DT_STR,'2100-01') || '-01','-','') 
                 AND MPA.JOIN_DT <![CDATA[<=]]> TO_CHAR(LAST_DAY(REPLACE(NVL(PROD_JOIN_DT_END,'2100-01') || '-01','-','')),'YYYYMMDD')
                 AND ALOW_NO BETWEEN NVL(ASM.PAY_NO,0) AND NVL(ASM.PAY_NO_END,0)
             ) MAIN_TBL
        WHERE 1=1
         -->
    </select>

    <!-- ================================================================
     * 날짜 : 20190703
     * 이름 : 송준빈
     * 추가내용 : 수수료 산출 집계 상세 내용 조회 리스트
     * 대상 테이블 : LF_DMUSER.TB_ALOW_BASIC_INFO
     * ================================================================
     * -->
    <select id="DlwPayMap.getAlowDetail2" parameterType="map" resultType="resultMap">
    
    WITH ALOW_MAIN
	AS
	(
	    SELECT
	        ABI.ACCNT_NO,
	        MB.MEM_NM,
	        MPA.JOIN_DT,
	        MPA.PROD_CD,
	        REPLACE(MPA.ID_NO,CHR(0),'') AS ID_NO,
	        PD.PROD_NM,
	        ABI.ALOW_NO,
	        ASM.B2B_COMP,
	        ASM.SALE_TYPE,
	        ASM.PROD_JOIN_DT_STR,
	        ASM.PROD_JOIN_DT_END,
	        ASM.AMT
	        
	    FROM
	    (
	        SELECT 
	            ALOW_DT,
	            ACCNT_NO,
	            ALOW_NO,
	            YYYYMM
	        FROM LF_DMUSER.TB_ALOW_PAY_INFO ABI 
	        WHERE 1=1
                 AND ABI.YYYYMM = #{alow_dt}
                 AND ABI.ALOW_DT BETWEEN #{alow_dt} || '01' AND LAST_DAY(#{alow_dt} || '01')
	                             
	    ) ABI INNER JOIN
	    MEM_PROD_ACCNT MPA ON ABI.ACCNT_NO = MPA.ACCNT_NO INNER JOIN     
	    MEMBER MB ON MPA.MEM_NO = MB.MEM_NO INNER JOIN     
	    B2BCOMCD B2B ON MPA.B2B_COMP_CD = B2B.COM_CD INNER JOIN
	    PRODUCT PD ON MPA.PROD_CD = PD.PROD_CD INNER JOIN
	    (
	        SELECT 
	            ALOW_CD,
	            PROD_CD,
	            SALE_TYPE,
	            B2B_COMP,
	            AMT,
	            PAY_NO,
	            PAY_NO_END,
	             REPLACE(NVL(PROD_JOIN_DT_STR,'2100-01') || '-01','-','')   AS PROD_JOIN_DT_STR,
	            TO_CHAR(LAST_DAY(REPLACE(NVL(PROD_JOIN_DT_END,'2100-01') || '-01','-','')),'YYYYMMDD') AS PROD_JOIN_DT_END    
	        FROM ALOW_SET_MST ASM
	        WHERE 1=1
	            AND ASM.ALOW_CD = 'T33' 
	            AND ASM.B2B_COMP = '3302'    
	            AND NVL(ASM.JBIT,'Y') = 'Y'
	    ) ASM ON MPA.PROD_CD = ASM.PROD_CD AND ALOW_NO BETWEEN ASM.PAY_NO AND ASM.PAY_NO_END AND B2B.SALE_TYPE = ASM.SALE_TYPE 
	    WHERE 1=1
	)
	
	SELECT 
		/* DlwPayMap.getAlowDetail2 */
	    *
	FROM
	(
	SELECT
	    ROW_NUMBER() OVER(ORDER BY MAIN.ACCNT_NO ${orderDirection}) AS PAGE_INDX,
	    #{alow_dt} AS YYYYMM,
	    MAIN.ACCNT_NO,  
	    MAIN.MEM_NM,    
	    MAIN.JOIN_DT,
	    DECODE(RS.RESN_CL,'01','해약','02','청약철회','03','무환급해약','04','100%청철','') AS RESN_CL,
	    RS.RESN_ACPT_DAY,
	    RS.RESN_PROC_DAY,
	    RS.RESN_PROC_YN,
	    MAIN.PROD_CD,
	    REPLACE(MAIN.PROD_NM,CHR(0),'') AS PROD_NM,        
	    (SELECT REPLACE(MODEL_CL_NM,CHR(0),'') FROM PRODUCT_MODEL_CL_CD WHERE 1=1 AND MODEL_CL_CD = (SELECT PROD_MODEL_KIND FROM MEM_PROD_ACCNT WHERE ACCNT_NO = MAIN.ACCNT_NO AND DEL_FG = 'N')) AS PROD_MODEL_KIND,        
	    MAIN.ALOW_NO,        
	    MAIN.SALE_TYPE,
	    (
	        SELECT 
	            REPLACE(SM.ST_GRP_NM,CHR(0),'')
	        FROM B2B_SALE_TYPE_MST SM INNER JOIN
	        B2B_SALE_TYPE_DTL SD ON SD.ST_GRP_CD = SM.ST_GRP_CD
	        WHERE SD.SALE_TYPE = MAIN.SALE_TYPE 
	    ) AS ST_GRP_NM,  
	    MAIN.AMT AS ALOW_AMT,   
	    'T33A' AS ALOW_BIT,
	    'COMM' AS ALOW_GUBUN,
	    (SELECT CD_NM FROM COM_CD WHERE GRP_CD = '0125' AND COM_CD = MAIN.SALE_TYPE) AS ETC_1,
	    (SELECT COM_NM FROM B2BCOMCD WHERE COM_CD = MAIN.B2B_COMP ) ETC_2,   
	    MBID.TRUE_CNT,
	    REPLACE(MBID.TRUE_DAY,CHR(0),'') AS TRUE_DAY,
	    MAIN.ID_NO
	FROM ALOW_MAIN MAIN INNER JOIN
	    TB_MEMBER_BASIC_INFO_DAY MBID ON MAIN.ACCNT_NO = MBID.ACCNT_NO AND MBID.JOIN_DT BETWEEN PROD_JOIN_DT_STR AND PROD_JOIN_DT_END LEFT OUTER JOIN
	    RESCISSION RS ON MAIN.ACCNT_NO = RS.ACCNT_NO AND DEL_FG = 'N'
	) MAIN_TBL
    	<!-- 
        SELECT /* DlwPayMap.getAlowDetail2 */
            MAIN_TBL.*
        FROM (
                 SELECT
                 	 ROW_NUMBER() OVER(ORDER BY ${orderBy} ${orderDirection}) AS PAGE_INDX,
                     #{alow_dt} AS YYYYMM,
                     ABI.ACCNT_NO,
                     MB.MEM_NM,    
                     MPA.JOIN_DT,
                     DECODE(RS.RESN_CL,'01','해약','02','청약철회','03','무환급해약','04','100%청철','') AS RESN_CL,
                     RS.RESN_ACPT_DAY,
                     RS.RESN_PROC_DAY,
                     RS.RESN_PROC_YN,
                     MPA.PROD_CD,
                     REPLACE(PD.PROD_NM,CHR(0),'') AS PROD_NM,        
                     (SELECT REPLACE(MODEL_CL_NM,CHR(0),'') FROM PRODUCT_MODEL_CL_CD WHERE 1=1 AND MODEL_CL_CD = (SELECT PROD_MODEL_KIND FROM MEM_PROD_ACCNT WHERE ACCNT_NO = MPA.ACCNT_NO AND DEL_FG = 'N')) AS PROD_MODEL_KIND,        
                     ALOW_NO,        
                     B2B.SALE_TYPE,  
                     ( 
                         SELECT 
                             REPLACE(SM.ST_GRP_NM,CHR(0),'')
                         FROM B2B_SALE_TYPE_MST SM INNER JOIN
                             B2B_SALE_TYPE_DTL SD ON SD.ST_GRP_CD = SM.ST_GRP_CD
                         WHERE SD.SALE_TYPE = ASM.SALE_TYPE 
                     ) AS ST_GRP_NM,
                     AMT AS ALOW_AMT,   
                     'T33A' AS ALOW_BIT,
                     'COMM' AS ALOW_GUBUN,
                     (SELECT CD_NM FROM COM_CD WHERE GRP_CD = '0125' AND COM_CD = ASM.SALE_TYPE) AS ETC_1,
                     (SELECT COM_NM FROM B2BCOMCD WHERE COM_CD = ASM.B2B_COMP ) ETC_2,
                     TRUE_CNT,
                     REPLACE(TRUE_DAY,CHR(0),'') AS TRUE_DAY,
                     (SELECT REPLACE(ID_NO,CHR(0),'') FROM MEM_PROD_ACCNT WHERE 1=1 AND ACCNT_NO = MPA.ACCNT_NO AND DEL_FG = 'N') AS ID_NO
                 FROM LF_DMUSER.TB_ALOW_PAY_INFO ABI INNER JOIN 
                      TB_MEMBER_BASIC_INFO_DAY MPA ON ABI.ACCNT_NO = MPA.ACCNT_NO  INNER JOIN
                      MEMBER MB ON MPA.MEM_NO = MB.MEM_NO AND MB.DEL_FG = 'N' INNER JOIN
                      PRODUCT PD ON MPA.PROD_CD = PD.PROD_CD INNER JOIN
                      B2BCOMCD B2B ON MPA.B2B_COMP_CD = B2B.COM_CD INNER JOIN
                      ALOW_SET_MST ASM ON MPA.PROD_CD = ASM.PROD_CD AND B2B.SALE_TYPE = ASM.SALE_TYPE AND ASM.B2B_COMP = '3302' AND ASM.ALOW_CD = 'T33'  AND NVL(ASM.JBIT,'Y') = 'Y'  LEFT OUTER JOIN
                      RESCISSION RS ON ABI.ACCNT_NO = RS.ACCNT_NO AND RS.DEL_FG = 'N'  
                 WHERE 1=1
                 AND ABI.YYYYMM = #{alow_dt}
                 AND ABI.ALOW_DT BETWEEN #{alow_dt} || '01' AND LAST_DAY(#{alow_dt} || '01')
                 AND MPA.JOIN_DT >= REPLACE(NVL(PROD_JOIN_DT_STR,'2100-01') || '-01','-','') 
                 AND MPA.JOIN_DT <![CDATA[<=]]> TO_CHAR(LAST_DAY(REPLACE(NVL(PROD_JOIN_DT_END,'2100-01') || '-01','-','')),'YYYYMMDD')
                 AND ALOW_NO BETWEEN NVL(ASM.PAY_NO,0) AND NVL(ASM.PAY_NO_END,0) 
              ) MAIN_TBL   
 		-->              
        WHERE 1=1
        <if test="startLine != null and startLine != '' and endLine != null and endLine != ''">
           AND PAGE_INDX <![CDATA[>=]]> #{startLine}
           AND PAGE_INDX <![CDATA[<]]> #{endLine}
        </if>
    </select>
    
    
    <!-- ================================================================
     * 날짜 : 20190708
     * 이름 : 김주용
     * 추가내용 : 만기연장회원에 대한 해약데이터 조회
     * 대상 테이블 : LF_DMUSER.TB_ALOW_BASIC_INFO
     * ================================================================
     * -->
    <select id="DlwPayMap.getMangiResnList" parameterType="map" resultType="resultMap">
        SELECT RS.RESN_PROC_DAY
		      ,MME.ACCNT_NO
		      ,MMD.ACCNT_SEQ
		      ,MME.CANCEL_DT
		FROM   RESCISSION RS
		INNER JOIN TB_MEMBER_MANGI_EXT MME
		        ON RS.ACCNT_NO = MME.ACCNT_NO
		       AND MME.DEL_FG = 'N'
		       AND MME.EXT_YN = 'Y'
		       AND TO_CHAR(MME.EXT_DAY, 'YYYYMM') = SUBSTR(#{stt_dt},0,6)
		INNER JOIN TB_MEMBER_MANGI_DTL MMD
		        ON MME.ACCNT_NO = MMD.ACCNT_NO
		       AND MMD.DEL_FG = 'N'
		WHERE 1=1
		  AND RS.DEL_FG = 'N'
		  AND RS.RESN_PROC_YN = 'Y'
		  AND (RS.RESN_CL != '02' AND RESN_PROC_YN = 'Y')
		   OR (RS.RESN_CL = '02' AND NVL(RESN_PROC_YN, 'N') = 'N')
    </select>
    
    <!-- ================================================================
     * 날짜 : 20190708
     * 이름 : 김주용
     * 추가내용 : 만기연장회원 해약건에 대해 취소처리
     * 대상 테이블 : 
     * ================================================================
     * -->
    <update id="DlwPayMap.updateMemberMangiDataList" parameterType="map">
        BEGIN /* DlwPayMap.updateMemberMangiDataList */
            UPDATE LF_DMUSER.TB_MEMBER_MANGI_DTL
               SET DEL_FG = 'Y'
             WHERE 1=1
               AND DEL_FG = 'N'
               AND ACCNT_NO   = #{accnt_no}
               AND ACCNT_SEQ  = #{accnt_seq};

           UPDATE LF_DMUSER.TB_MEMBER_MANGI_EXT
               SET EXT_PERIOD  = (SELECT SUM(MMD.GIFT_PERIOD) AS SUM_PERIOD FROM LF_DMUSER.TB_MEMBER_MANGI_DTL MMD WHERE 1=1 AND MMD.DEL_FG = 'N' AND MMD.ACCNT_NO = #{accnt_no})
                  ,EXT_YN = 'N'
                  ,EXT_DAY    = ''
                  ,CANCEL_DT = #{resn_proc_day}
             WHERE 1=1
               AND DEL_FG = 'N'
               AND ACCNT_NO   = #{accnt_no};
        END;
    </update>
    
    <!-- ================================================================
     * 날짜 : 20200109
     * 이름 : 송준빈
     * 추가내용 : U+ 선납전송관리 보류고객 해제시 산출대상에 등록
     * 대상 테이블 : LF_DMUSER.TB_UPLUS_PRYPAY_HOLD_LIST
     * ================================================================
     * -->
    <insert id="DlwPayMap.insertFailUplusHoldData"  parameterType="map">
        /* DlwPayMap.insertFailUplusHoldData */
        INSERT INTO TB_UPLUS_PRYPAY_HOLD_LIST(ACCNT_NO, HOLD_DTL_NO, HOLD_KB_NO, REG_MAN, REG_DM, DEL_FG)
        SELECT
            MAIN_TBL.ACCNT_NO,
            '',
            MAIN_TBL.KB_NO,
            'SYS[RF_AUTO]',
            SYSDATE,
            'N'
        FROM 
        (
            SELECT 
                ACCNT_NO,
                KB_NO,
                COUNT(*) AS ICNT
            FROM TB_UPLUS_PREPAY_RESULT A
            WHERE 1=1 
            AND CALC_MONTH = #{calc_month}
            AND FILE_NO = #{file_no}
            AND DEL_FG = 'N' 
            AND (PREPAY_YN != 'Y' OR RSLT_CD != 'E')
            AND NOT EXISTS (SELECT ACCNT_NO FROM TB_UPLUS_PRYPAY_HOLD_LIST WHERE 1=1 AND DEL_FG = 'N' AND ACCNT_NO = A.ACCNT_NO)
            GROUP BY ACCNT_NO, KB_NO
        ) MAIN_TBL
        WHERE 1=1
    </insert>
    
    <!-- ================================================================
     * 날짜 : 20200110
     * 이름 : 송준빈
     * 추가내용 : 산출시 KB_NO가 변경된 고객을 자동으로 리스트에 등록
     * 대상 테이블 : LF_DMUSER.TB_UPLUS_PRYPAY_HOLD_LIST
     * ================================================================
     * -->
    <select id="DlwPayMap.getUplusHoldReleaseDataList" parameterType="map" resultType="resultMap">
        SELECT
            #{stt_reg_dt} AS CALC_MONTH,
            MAIN_TBL.ACCNT_NO,
            MAIN_TBL.HOLD_DTL_NO,
            MAIN_TBL.HOLD_KB_NO,
            MAIN_TBL.TRUE_DTL_NO,
            MAIN_TBL.TRUE_KB_NO
        FROM    
        (    
            SELECT 
                UPHL.ACCNT_NO,
                NVL(MAX(UPR.DTL_NO), 0) AS HOLD_DTL_NO,
                UPHL.HOLD_KB_NO,
                (SELECT NVL(MAX(PMD.NO), 0) AS MAX_NO FROM LF_DMUSER.PAY_MNG_DTL PMD WHERE 1=1 AND PMD.PAY_DAY <![CDATA[<=]]> TO_CHAR(SYSDATE, 'YYYYMMDD') AND PMD.DEL_FG = 'N' AND UPHL.ACCNT_NO = PMD.ACCNT_NO) AS TRUE_DTL_NO,
                (
                    SELECT 
                        CASE WHEN TRIM(REPLACE(MPA.KB_NO, ' ', '')) IS NOT NULL AND SUBSTR(TRIM(REPLACE(MPA.KB_NO, '-', '')), 0, 3) = '010' /* CTN은 존재하지만 전화번호로 들어있는 경우 */
                                 THEN RPAD(SUBSTR(TRIM(REPLACE(MPA.KB_NO, '-', '')), 0, 3), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MPA.KB_NO, '-', '')), 4, 4), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MPA.KB_NO, '-', '')), 8, 4), 4, 0)
                             WHEN TRIM(REPLACE(MPA.KB_NO, ' ', '')) IS NOT NULL AND SUBSTR(TRIM(REPLACE(MPA.KB_NO, '-', '')), 0, 3) != '010' /* CTN은 존재하고 전화번호로 들어가있지 않은 경우 */
                                 THEN TRIM(REPLACE(MPA.KB_NO, '-', ''))
                             WHEN TRIM(REPLACE(MPA.KB_NO, ' ', '')) IS NULL AND SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 0, 3) = '010' /* CTN이 존재하지않고 전화번호는 존재하는 경우 */
                                 THEN RPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 0, 3), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 4, 4), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 8, 4), 4, 0)
                             WHEN TRIM(REPLACE(MPA.KB_NO, ' ', '')) IS NULL AND SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 0, 3) = '019' /* CTN이 존재하지않고 전화번호는 존재하는 경우 */
                                 THEN RPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 0, 3), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 4, 4), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 8, 4), 4, 0)
                             WHEN TRIM(REPLACE(MPA.KB_NO, ' ', '')) = '' AND SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 0, 3) = '010' /* CTN이 존재하지않고 전화번호는 존재하는 경우 */
                                 THEN RPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 0, 3), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 4, 4), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 8, 4), 4, 0)
                             ELSE 
                                 TRIM(REPLACE(MPA.KB_NO, '-', ''))
                        END AS TRUE_KB_NO
                    FROM MEM_PROD_ACCNT MPA INNER JOIN
                        MEMBER MB ON MPA.MEM_NO = MB.MEM_NO AND MPA.DEL_FG = 'N'
                    WHERE 1=1 
                    AND MPA.ACCNT_NO = UPHL.ACCNT_NO
                ) AS TRUE_KB_NO,
                UPHL.REG_DM
            FROM TB_UPLUS_PRYPAY_HOLD_LIST UPHL LEFT OUTER JOIN
                TB_UPLUS_PREPAY_RESULT UPR ON UPR.ACCNT_NO = UPHL.ACCNT_NO AND UPR.DEL_FG = 'N' AND UPR.RSLT_CD = 'E' AND UPR.PREPAY_YN = 'Y'
            WHERE 1=1
            AND UPHL.DEL_FG = 'N'
            GROUP BY UPHL.ACCNT_NO, UPHL.HOLD_KB_NO, UPHL.REG_DM
        ) MAIN_TBL
        WHERE 1=1
        AND MAIN_TBL.HOLD_KB_NO != MAIN_TBL.TRUE_KB_NO
    </select>
    
    <!-- ================================================================
     * 날짜 : 20200110
     * 이름 : 송준빈
     * 추가내용 : U+ 선납전송관리 보류고객 해제시 산출대상에 등록
     * 대상 테이블 : LF_DMUSER.TB_UPLUS_PREPAY_LIST
     * ================================================================
     * -->
    <insert id="DlwPayMap.insertUplusHoldPrepaymentMemberCalc" parameterType="map">
        INSERT INTO /* DlwPayMap.insertUplusHoldPrepaymentMemberCalc */
            LF_DMUSER.TB_UPLUS_PREPAY_LIST (CALC_MONTH, FILE_NO, ACCNT_NO, PROD_CD, PROD_NM, KSTBIT, KB_NO, CELL, BRTH_MON_DAY, MEM_NM,
                                            DTL_NO, DTL_PAY_AMT, RSLT_CD, SEND_DTTM, PREPAY_YN, PREPAY_REASON, RSLT_REG_DTTM,
                                            REG_MAN, REG_DM, UPD_MAN, UPD_DM, DEL_FG)
        SELECT 
            #{calc_month},
            '',
            UPHL.ACCNT_NO,
            MPA.PROD_CD,
            PD.PROD_NM,
            MPA.KSTBIT,
            CASE WHEN TRIM(REPLACE(MPA.KB_NO, ' ', '')) IS NOT NULL AND SUBSTR(TRIM(REPLACE(MPA.KB_NO, '-', '')), 0, 3) = '010' /* CTN은 존재하지만 전화번호로 들어있는 경우 */
                     THEN RPAD(SUBSTR(TRIM(REPLACE(MPA.KB_NO, '-', '')), 0, 3), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MPA.KB_NO, '-', '')), 4, 4), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MPA.KB_NO, '-', '')), 8, 4), 4, 0)
                 WHEN TRIM(REPLACE(MPA.KB_NO, ' ', '')) IS NOT NULL AND SUBSTR(TRIM(REPLACE(MPA.KB_NO, '-', '')), 0, 3) != '010' /* CTN은 존재하고 전화번호로 들어가있지 않은 경우 */
                     THEN TRIM(REPLACE(MPA.KB_NO, '-', ''))
                 WHEN TRIM(REPLACE(MPA.KB_NO, ' ', '')) IS NULL AND SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 0, 3) = '010' /* CTN이 존재하지않고 전화번호는 존재하는 경우 */
                     THEN RPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 0, 3), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 4, 4), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 8, 4), 4, 0)
                 WHEN TRIM(REPLACE(MPA.KB_NO, ' ', '')) IS NULL AND SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 0, 3) = '019' /* CTN이 존재하지않고 전화번호는 존재하는 경우 */
                     THEN RPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 0, 3), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 4, 4), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 8, 4), 4, 0)
                 WHEN TRIM(REPLACE(MPA.KB_NO, ' ', '')) = '' AND SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 0, 3) = '010' /* CTN이 존재하지않고 전화번호는 존재하는 경우 */
                     THEN RPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 0, 3), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 4, 4), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 8, 4), 4, 0)
                 ELSE 
                     TRIM(REPLACE(MPA.KB_NO, '-', ''))
            END AS KB_NO,
            MB.CELL,
            MB.BRTH_MON_DAY,
            MB.MEM_NM,
            #{dtl_no_insert},
            (SELECT PAY_AMT FROM PAY_MNG_DTL PMD WHERE 1=1 AND PMD.ACCNT_NO = UPHL.ACCNT_NO AND PMD.NO = #{dtl_no_insert} AND PMD.DEL_FG = 'N'),
            'N',
            '',
            'H',
            '',
            '',
            #{upd_man},
            SYSDATE,
            '',
            '',
            'N'
        FROM LF_DMUSER.TB_UPLUS_PRYPAY_HOLD_LIST UPHL INNER JOIN 
            MEM_PROD_ACCNT MPA ON UPHL.ACCNT_NO = MPA.ACCNT_NO AND UPHL.DEL_FG = 'N' AND MPA.DEL_FG = 'N' INNER JOIN 
            PRODUCT PD ON PD.PROD_CD = MPA.PROD_CD AND PD.DEL_FG = 'N' INNER JOIN 
            MEMBER MB ON MB.MEM_NO = MPA.MEM_NO AND MB.DEL_FG = 'N'
        WHERE 1=1
        AND MPA.ACCNT_NO = #{accnt_no}
    </insert>
    
    <!-- ================================================================
     * 날짜 : 20191213
     * 이름 : 김주용
     * 추가내용 : 해약,행사시 무승인 환불테이블 Insert 구문
     * 대상 테이블 : TB_MEMBER_REQ_NAUTH_CNCL
     * ================================================================
     * -->
    <insert id="DlwPayMap.insertNauthPayCancelResnEvnt"  parameterType="map">
        INSERT INTO TB_MEMBER_REQ_NAUTH_CNCL (ACCNT_NO, PAY_MTHD, PRE_REQ_DAY, REQ_DAY, RESULT_KEY, REFUND_LOC, REFUND_DT, REFUND_CD, REFUND_ETC, DEL_FG, REG_DM, REG_MAN, CANCEL_DT, REQ_PAY_NO, PAY_AMT)
        SELECT #{ACCNT_NO}
              ,#{PAY_MTHD}
              ,#{REQ_DAY}
              ,''
              ,#{RESULT_KEY}
              <if test="auto_name != null and auto_name != '' and auto_name.equalsIgnoreCase('resn')">
              ,'02'
              </if>
              <if test="auto_name != null and auto_name != '' and auto_name.equalsIgnoreCase('resn_02')">
              ,'02'
              </if>
              <if test="auto_name != null and auto_name != '' and auto_name.equalsIgnoreCase('evnt')">
              ,'04'
              </if>
              ,TO_CHAR(SYSDATE, 'YYYYMMDD')
              ,''
              <if test="auto_name != null and auto_name != '' and auto_name.equalsIgnoreCase('resn')">
              ,'해약 완료 처리 가수금'
              </if>
              <if test="auto_name != null and auto_name != '' and auto_name.equalsIgnoreCase('resn_02')">
              ,'청약철회로 인한 가수금 등록'
              </if>
              <if test="auto_name != null and auto_name != '' and auto_name.equalsIgnoreCase('evnt')">
              ,'행사 완료 처리 가수금'
              </if>
              ,'P'
              <if test="auto_name != null and auto_name != '' and auto_name.equalsIgnoreCase('resn')">
              ,'R_AUTO'
              </if>
              <if test="auto_name != null and auto_name != '' and auto_name.equalsIgnoreCase('resn_02')">
              ,'R02_AUTO'
              </if>
              <if test="auto_name != null and auto_name != '' and auto_name.equalsIgnoreCase('evnt')">
              ,'E_AUTO'
              </if>
              ,''
              ,#{REQ_PAY_NO}
              ,#{PAY_AMT}
           FROM DUAL
    </insert>
    
    <!-- ================================================================
     * 날짜 : 20191216
     * 이름 : 김주용
     * 추가내용 : 무승인등록 취소
     * 대상 테이블 : 
     * ================================================================
     * -->
    <update id="DlwPayMap.cancelNauthpayDelete" parameterType="map">
        UPDATE LF_DMUSER.TB_MEMBER_REQ_NAUTH_CNCL
           SET DEL_FG = 'Y'
         WHERE 1=1
           AND DEL_FG IN ('N', 'P')
           AND ACCNT_NO   = #{accnt_no}
           AND REQ_PAY_NO  = #{req_pay_no}
    </update>
    
    <!-- ================================================================
     * 날짜 : 20191216
     * 이름 : 김주용
     * 추가내용 : 무승인 환불
     * 대상 테이블 : 
     * ================================================================
     * -->
    <update id="DlwPayMap.cancelNauthpayRefund" parameterType="map">
        BEGIN /* DlwPayMap.updateMemberMangiDataList */
           UPDATE TB_MEMBER_REQ_REFUND
	           SET CANCEL_DT = SYSDATE
	             , REFUND_DT = SYSDATE
	         WHERE 1=1
	         AND DEL_FG = 'N'
	         AND PAY_MTHD = '06'
	         AND ACCNT_NO =  #{accnt_no}
	         AND RESULT_KEY =  #{result_key};
           
           UPDATE TB_MEMBER_WDRW_REQ
	          SET DEL_FG = 'X',
	              UPD_MAN =  #{emple_no},
	              UPD_DM = SYSDATE
	        WHERE 1=1
      	      AND ACCNT_NO =  #{accnt_no}
     		  AND RESULT_KEY =  #{result_key}
     		  AND PAY_MTHD = '06'
	          AND DEL_FG = 'C' ;
           
           UPDATE TB_MEMBER_WDRW_REQ_2021
	          SET DEL_FG = 'X',
	              UPD_MAN =  #{emple_no},
	              UPD_DM = SYSDATE
	        WHERE 1=1
      	      AND ACCNT_NO =  #{accnt_no}
     		  AND RESULT_KEY =  #{result_key}
     		  AND PAY_MTHD = '06'
	          AND DEL_FG = 'C' ;
           
           UPDATE LF_DMUSER.TB_MEMBER_REQ_NAUTH_CNCL
              SET DEL_FG = 'X'
            WHERE 1=1
              AND ACCNT_NO =  #{accnt_no}
              AND RESULT_KEY =  #{result_key}
              AND DEL_FG = 'C';           
              
           UPDATE LF_DMUSER.TB_MEMBER_REQ_NAUTH_CNCL
              SET DEL_FG = 'P'
            WHERE 1=1
              AND ACCNT_NO =  #{accnt_no}
              AND RESULT_KEY =  #{result_key}            
              AND DEL_FG = 'F';              
        END;
    </update>
    
    <!-- ================================================================
     * 날짜 : 20200227
     * 이름 : 송준빈
     * 추가내용 : 회원별 카드,CMS 결과데이터 조회
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_WDRW_REQ, LF_DMUSER.TB_MEMBER_WDRW_RESULT, LF_DMUSER.TB_MEMBER_REQ_REFUND
     * ================================================================
     * -->
    <select id="DlwPayMap.getWdrwAccntLogList" parameterType="map" resultType="resultMap">
        SELECT /* DlwPayMap.getWdrwAccntLogList */
            ROW_NUMBER() OVER(ORDER BY REQ.REQ_DAY DESC, RST.REG_DM DESC, REQ.REQ_PAY_NO DESC, REQ.ACCNT_NO) PAGE_INDX,
            REQ.ACCNT_NO,
            REQ.MEM_NO,
            PD.PROD_NM,
            REQ_BIT,
            REQ.TRUE_CNT,
            REQ.REQ_PAY_NO,
            (
                SELECT 
                    MAX(REQ_PAY_NO)
                FROM TB_MEMBER_WDRW_REQ
                WHERE ACCNT_NO = REQ.ACCNT_NO
                AND DEL_FG = 'C'
                AND (ACCNT_NO, RESULT_KEY, REQ_DAY, PAY_MTHD) NOT IN (SELECT ACCNT_NO, RESULT_KEY, REQ_DAY, PAY_MTHD FROM TB_MEMBER_REQ_REFUND WHERE DEL_FG = 'N')
                AND REQ_PAY_NO != 999
            ) AS MAX_REQ_PAY_NO,
            TO_CHAR(RST.REG_DM, 'YYYYMMDDHH24MISS') AS REG_DM,
            REQ.PAY_BIT,
            REQ.ICHAE_NO,
            REQ.REQ_DAY,
            PAY_AMT,
            REQ.RESULT_KEY,
            RST.TID,
            RST.PAY_KIND AS RESULT_KIND,
            RST.RESULT_CD,
            CASE WHEN REQ.PAY_MTHD = '04' THEN FN_COM_NM('15', RESULT_CD)
                 WHEN REQ.PAY_MTHD = '06' THEN RST.RESULT_MSG
                 ELSE '' 
            END AS RESULT_MSG,
            AUTH_DT,
            AUTH_CD,
            (
                SELECT 
                    COUNT(*) 
                FROM TB_MEMBER_REQ_NAUTH_CNCL 
                WHERE ACCNT_NO = REQ.ACCNT_NO 
                AND REQ_PAY_NO = REQ.REQ_PAY_NO 
                AND DEL_FG IN ('P', 'N', 'R')
            ) AS CNCL_CNT,
            CASE WHEN REQ.PAY_MTHD = '04'  THEN  FN_COM_NM('63', NVL(RST.ICHAE_CD,REQ.ICHAE_CD))
                 WHEN REQ.PAY_MTHD = '06' AND RST.PAY_KIND = '01' THEN  RST.ICHAE_CD
                 WHEN REQ.PAY_MTHD = '06' AND RST.PAY_KIND != '01' THEN  FN_COM_NM('0120', NVL(RST.ICHAE_CD,REQ.ICHAE_CD))
                 ELSE '' 
            END AS ICHAE_CD,
            MRR.REG_DM AS REFUND_REG_DT,
            TO_CHAR(MRR.CANCEL_DT, 'YYYYMMDDHH24MISS') AS CANCEL_DT,
            RST.ETC,
            REQ.PAY_MTHD,
            REQ.DEL_FG,
            CASE WHEN LENGTH(RST.REG_MAN) = 10 THEN (SELECT EMPLE_NM FROM EMPLOYEE WHERE EMPLE_NO = RST.REG_MAN)
                 ELSE RST.REG_MAN
            END AS REG_MAN,
            REQ.AUTH_YN,
            REQ.FRANCHISEE_NO
        FROM LF_DMUSER.TB_MEMBER_WDRW_REQ REQ INNER JOIN
            LF_DMUSER.PRODUCT PD ON REQ.PROD_CD = PD.PROD_CD LEFT OUTER JOIN
            LF_DMUSER.TB_MEMBER_WDRW_RESULT RST ON REQ.ACCNT_NO = RST.ACCNT_NO AND REQ.PAY_MTHD = RST.PAY_MTHD AND REQ.REQ_DAY = RST.REQ_DAY AND REQ.RESULT_KEY = RST.RESULT_KEY LEFT OUTER JOIN
            LF_DMUSER.TB_MEMBER_REQ_REFUND MRR ON MRR.ACCNT_NO = REQ.ACCNT_NO AND MRR.PAY_MTHD = REQ.PAY_MTHD AND MRR.DEL_FG = 'N' AND MRR.REQ_DAY = REQ.REQ_DAY AND NVL(MRR.RESULT_KEY,'JL32') = NVL(REQ.RESULT_KEY,'JL32')
        WHERE 1=1
        AND REQ.DEL_FG IN ('C', 'F', 'X')
        AND REQ.ACCNT_NO = #{accnt_no}
    </select>
    
    <!-- ================================================================
     * 날짜 : 20200409
     * 이름 : 김주용
     * 추가내용 :  일일청구 카드 무승인 결과메시지 UPDATE
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_WDRW_RESULT
     * ================================================================
     * -->
    <update id="DlwPayMap.updateNauthResult" parameterType="map" >
        UPDATE /* DlwPayMap.updateNauthResult */
        	LF_DMUSER.TB_MEMBER_WDRW_RESULT
           SET RESULT_MSG = (SELECT CD_NM FROM LF_DMUSER.COM_CD WHERE GRP_CD = '0195' AND COM_CD = RESULT_CD)
		WHERE REQ_DAY = #{req_day}
		AND PAY_MTHD = #{pay_mthd}
		AND AUTH_YN = #{auth_yn}
    </update>
    
        <!-- ================================================================
     * 날짜 : 20181029
     * 이름 : 정승철
     * 추가내용 : 카드,CMS 결과데이터 건수조회
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_WDRW_REQ
                     LF_DMUSER.TB_MEMBER_WDRW_RESULT
                     LF_DMUSER.TB_MEMBER_REQ_REFUND
     * ================================================================
     * -->
    <select id="DlwPayMap.getReqRltmCardLogCount" parameterType="map" resultType="int">
    	/* ReqCustMap.getReqRltmCardLogCount */
    	SELECT         
    		COUNT(*) AS ICNT       
		FROM LF_DMUSER.TB_MEMBER_WDRW_REQ REQ INNER JOIN
            PRODUCT PD ON REQ.PROD_CD = PD.PROD_CD
            LEFT OUTER JOIN LF_DMUSER.TB_MEMBER_WDRW_RESULT RST
                         ON REQ.ACCNT_NO = RST.ACCNT_NO
                        AND REQ.PAY_MTHD = RST.PAY_MTHD
                        AND REQ.REQ_DAY = RST.REQ_DAY
                        AND REQ.RESULT_KEY = RST.RESULT_KEY
            LEFT OUTER JOIN LF_DMUSER.TB_MEMBER_REQ_REFUND MRR
                         ON MRR.ACCNT_NO = REQ.ACCNT_NO
                        AND MRR.PAY_MTHD = REQ.PAY_MTHD
                        AND MRR.DEL_FG = 'N'
                        AND MRR.REQ_DAY = REQ.REQ_DAY
                      --AND MRR.RESULT_KEY = REQ.RESULT_KEY
                        AND NVL(MRR.RESULT_KEY,'JL32') = NVL(REQ.RESULT_KEY,'JL32') /* JL32 : PGWEB 서버 통신 중 에러 */
        WHERE 1=1
        <if test="accnt_no != null and accnt_no != ''">
            AND REQ.ACCNT_NO = #{accnt_no}
        </if>
        AND REQ.PAY_MTHD = #{pay_mthd}
        AND REQ.DEL_FG IN ('C', 'F', 'X')
        <if test="del_fg != null and del_fg != ''">
            AND REQ.DEL_FG = #{del_fg}
        </if>  
        <if test="stt_req_dt != null and stt_req_dt != '' and end_req_dt != null and end_req_dt != ''">
            AND REQ.REQ_DAY BETWEEN #{stt_req_dt} AND #{end_req_dt}
        </if>
        <if test="result_kind != null and result_kind != ''">
            AND REQ.RESULT_KIND = #{result_kind}
        </if>
        <if test="req_bit != null and req_bit != ''">
            AND REQ.REQ_BIT = #{req_bit}
        </if>
         <if test="auth_yn != null and auth_yn != ''">
         	AND REQ.AUTH_YN = #{auth_yn}
         </if>        
    </select>
    
    <!-- ================================================================
     * 날짜 : 20181029
     * 이름 : 정승철
     * 추가내용 : 카드,CMS 결과데이터 조회
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_WDRW_REQ
                     LF_DMUSER.TB_MEMBER_WDRW_RESULT
                     LF_DMUSER.TB_MEMBER_REQ_REFUND
     * ================================================================
     * -->
    <select id="DlwPayMap.getReqRltmCardLogList" parameterType="map" resultType="resultMap">


        SELECT /* DlwPayMap.getReqRltmCardLogList */
               *
          FROM (SELECT <if test="orderBy != null and orderBy != ''">
                           ROW_NUMBER() OVER(ORDER BY REQ_DAY DESC, REG_DM DESC, REQ_PAY_NO DESC, ACCNT_NO) PAGE_INDX,
                       </if>
                       X.*
                  FROM (
                            SELECT REQ.ACCNT_NO,
                                   REQ.MEM_NO,
                                   PD.PROD_NM,
                                   REQ_BIT,
                                   REQ.TRUE_CNT,                                            /* 실납입횟수 */
                                   REQ.REQ_PAY_NO,                                          /* 청구회차 */
                                   '조회' AS MAX_REQ_PAY_NO,
                                   TO_CHAR(RST.REG_DM, 'YYYYMMDDHH24MISS') AS REG_DM,   /* 결과입력시간*/
                                   '' AS MAX_REG_DM,                                    /* (TEMP) 회원번호 기준 MAX 결과입력시간 */
                                   REQ.PAY_BIT,
                                   REQ.ICHAE_NO,
                                   REQ.REQ_DAY,
                                   PAY_AMT,
                                   REQ.RESULT_KEY, 
                                   RST.TID,
                                   RST.PAY_KIND AS RESULT_KIND,
                                   <!-- NVL(RST.PAY_KIND, '01') AS RESULT_KIND, -->
                                   RST.RESULT_CD,
                                   CASE WHEN REQ.PAY_MTHD = '04'  THEN FN_COM_NM('15', RESULT_CD)
                                        WHEN REQ.PAY_MTHD = '06' AND NVL(REQ.AUTH_YN,'Y') = 'N'  THEN FN_COM_NM('0222', RESULT_CD)
                                   ELSE RST.RESULT_MSG END AS RESULT_MSG,
                                   AUTH_DT,
                                   AUTH_CD,
                                   (SELECT COUNT(*) FROM TB_MEMBER_REQ_NAUTH_CNCL WHERE ACCNT_NO = REQ.ACCNT_NO AND REQ_PAY_NO = REQ.REQ_PAY_NO AND DEL_FG IN ('P','N','R')) AS CNCL_CNT,
                                  CASE WHEN REQ.PAY_MTHD = '04'  THEN  FN_COM_NM('63', NVL(RST.ICHAE_CD,REQ.ICHAE_CD))
                                       WHEN REQ.PAY_MTHD = '06' AND RST.PAY_KIND = '01'  AND NVL(REQ.INI_YN, 'N') != 'Y' THEN  RST.ICHAE_CD
                                       WHEN REQ.PAY_MTHD = '06' AND RST.PAY_KIND != '01' AND NVL(REQ.INI_YN, 'N') != 'Y' THEN  FN_COM_NM('0120', NVL(RST.ICHAE_CD,REQ.ICHAE_CD))
                                       WHEN REQ.PAY_MTHD = '06' AND RST.PAY_KIND = '01'  AND NVL(REQ.INI_YN, 'N') = 'Y' THEN FN_COM_NM('0196', NVL(RST.ICHAE_CD,REQ.ICHAE_CD))
                                       WHEN REQ.PAY_MTHD = '06' AND RST.PAY_KIND != '01' AND NVL(REQ.INI_YN, 'N') = 'Y' THEN FN_COM_NM('0196', NVL(RST.ICHAE_CD,REQ.ICHAE_CD))
                                   ELSE '' END AS ICHAE_CD,

                                   MRR.REG_DM AS REFUND_REG_DT, /* 환불등록일 */
            
                                   TO_CHAR(MRR.CANCEL_DT, 'YYYYMMDDHH24MISS') AS CANCEL_DT, /* 실제취소일*/
                                   RST.ETC,
                                   REQ.PAY_MTHD,  /* 납입방법 (04:CMS, 06:카드) */
                                   REQ.DEL_FG,
                                   CASE WHEN LENGTH(RST.REG_MAN) = 10
                                        THEN ( SELECT EMPLE_NM FROM EMPLOYEE WHERE EMPLE_NO = RST.REG_MAN )
                                        ELSE RST.REG_MAN
                                    END AS REG_MAN,  /* 결과등록자 사원명으로 표시 */
                                   REQ.AUTH_YN,
                                   REQ.FRANCHISEE_NO,
                                   REQ.INI_YN
                              FROM LF_DMUSER.TB_MEMBER_WDRW_REQ REQ INNER JOIN
                                  PRODUCT PD ON REQ.PROD_CD = PD.PROD_CD
                        LEFT OUTER JOIN LF_DMUSER.TB_MEMBER_WDRW_RESULT RST
                                     ON REQ.ACCNT_NO = RST.ACCNT_NO
                                    AND REQ.PAY_MTHD = RST.PAY_MTHD
                                    AND REQ.REQ_DAY = RST.REQ_DAY
                                    AND REQ.RESULT_KEY = RST.RESULT_KEY
                        LEFT OUTER JOIN LF_DMUSER.TB_MEMBER_REQ_REFUND MRR
                                     ON MRR.ACCNT_NO = REQ.ACCNT_NO
                                    AND MRR.PAY_MTHD = REQ.PAY_MTHD
                                    AND MRR.DEL_FG = 'N'
                                    AND MRR.REQ_DAY = REQ.REQ_DAY
                                    --AND MRR.RESULT_KEY = REQ.RESULT_KEY
                                    AND NVL(MRR.RESULT_KEY,'JL32') = NVL(REQ.RESULT_KEY,'JL32') /* JL32 : PGWEB 서버 통신 중 에러 */
                             WHERE 1=1
                               <if test="accnt_no != null and accnt_no != ''">
                               AND REQ.ACCNT_NO = #{accnt_no}
                               </if>
                               AND REQ.PAY_MTHD = #{pay_mthd}
                               AND REQ.DEL_FG IN ('C', 'F', 'X')
                               <if test="auth_yn != null and auth_yn != ''">
                               AND REQ.AUTH_YN = #{auth_yn}
                               </if>
                               <if test="del_fg != null and del_fg != ''">
                               AND REQ.DEL_FG = #{del_fg}
                               </if>
                               <if test="stt_req_dt != null and stt_req_dt != '' and end_req_dt != null and end_req_dt != ''">
                               AND REQ.REQ_DAY BETWEEN #{stt_req_dt} AND #{end_req_dt}
                               </if>
                               <if test="result_kind != null and result_kind != ''">
                               AND REQ.RESULT_KIND = #{result_kind}
                               </if>
                               <if test="req_bit != null and req_bit != ''">
                               AND REQ.REQ_BIT = #{req_bit}
                               </if>
                    ) X
                    WHERE 1=1
                ) Z
                      
    </select>
    
    <!-- ================================================================
     * 날짜 : 20200622
     * 이름 : 송준빈
     * 추가내용 : U+ 선납전송관리 보류고객 등록여부 확인
     * 대상 테이블 : LF_DMUSER.TB_UPLUS_PRYPAY_HOLD_LIST
     * ================================================================
     * -->
    <select id="DlwPayMap.existUplusPrepayHoldData" parameterType="map" resultType="int">
        SELECT /* DlwPayMap.existUplusPrepayHoldData */
            COUNT(*) AS ICNT
        FROM TB_UPLUS_PRYPAY_HOLD_LIST 
        WHERE 1=1
        AND DEL_FG = 'N'
        AND ACCNT_NO = #{accnt_no}
    </select>
    
        <!-- ================================================================
     * 날짜 : 20220126
     * 이름 : 임동진
     * 추가내용 : 만기연장 회원 조회 
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_MANGI_DTL
     * ================================================================
     * -->
    <select id="DlwPayMap.getMemberMangiInfo" parameterType="map" resultType="resultMap">
	    SELECT
   			/* DlwPayMap.getMemberMangiInfo */
		    ACCNT_NO,
		    MEM_NO,
		    JOIN_DT,   
		    KSTBIT,
		    CELL,
		    ZIP_CODE,  
		    ADRESS,
		    EXT_YN,
		    EXT_PERIOD, 
		    EXT_DAY,
		    INSERT_GBN,
		    TX_ETC,
            REG_DM, 
		    DEL_FG,
            FN_GET_MANDAY(ACCNT_NO, JOIN_DT, EXPR_NO, NEW_CHAN_GUNSU,'NEW') AS MAN_DAY,    
            FN_GET_MANDAY(ACCNT_NO, JOIN_DT, EXPR_NO, NEW_CHAN_GUNSU,'OLD') AS OLD_MAN_DAY,             
		    CASE WHEN INSERT_GBN = 'FF' AND TRUE_CNT + NEW_CHAN_GUNSU  <![CDATA[<]]>  EXPR_NO AND (MONTH_COUNT - TRUE_CNT) > 3 THEN 'N01'     
		         WHEN RESN_PROC_YN = 'Y' THEN 'NRS'     
		    	 WHEN INSERT_GBN = 'FF' AND TRUE_CNT + NEW_CHAN_GUNSU >= EXPR_NO AND TODAY >= (TO_CHAR(ADD_MONTHS(JOIN_DT, CAL_MAN),'YYYYMMDD')) THEN 'Y01'
		         WHEN INSERT_GBN = 'FF' AND TRUE_CNT + NEW_CHAN_GUNSU <![CDATA[<]]>  EXPR_NO AND ((MONTH_COUNT -1) - TRUE_CNT) <![CDATA[<=]]>  3 AND TODAY <![CDATA[<]]> (TO_CHAR(ADD_MONTHS(JOIN_DT, CAL_MAN),'YYYYMMDD')) THEN 'Y02'
		    ELSE 'Y00'    
		    END AS MAN_STAT, 
		    NVL(ROUND(FN_RESN_AMT_NEW(PROD_CD, TRUE_CNT, JOIN_DT) * 0.8,0),0) AS READY_CASH
		    
		FROM
		(
		    SELECT
		        MPA.ACCNT_NO,
		        MB.MEM_NO,
		        MPA.PROD_CD,
		        MPA.JOIN_DT, 
		        MPA.KSTBIT,
		        MPA.NEW_CHAN_GUNSU, 
		        (TRUNC(MONTHS_BETWEEN(TO_CHAR(SYSDATE,'YYYYMM')||'01',SUBSTR(MPA.JOIN_DT,0,6) || '01')+1)) AS MONTH_COUNT,
		        (SELECT COUNT(*) FROM PAY_MNG WHERE ACCNT_NO = MPA.ACCNT_NO AND DEL_FG = 'N') AS TRUE_CNT,   
		        PD.EXPR_NO,
		        NVL(MME.CELL,MB.CELL) AS CELL,
		        NVL(MME.ZIP_CODE,MB.HOME_ZIP) AS ZIP_CODE,
		        NVL(MME.ADRESS,(MB.HOME_ADDR ||' '|| MB.HOME_ADDR2)) AS ADRESS,
		        MME.EXT_YN,
		        MME.EXT_PERIOD,
		        MME.EXT_DAY,
		        NVL(MME.INSERT_GBN,'FF') AS INSERT_GBN,
		        MME.TX_ETC,
		        MME.DEL_FG,
		        MME.REG_DM,
		        TO_CHAR(SYSDATE,'YYYYMMDD') AS TODAY,   
		        (PD.EXPR_NO - MPA.NEW_CHAN_GUNSU - 1) AS CAL_MAN,
		        NVL(RESN_PROC_YN,'N') AS RESN_PROC_YN
		    FROM MEM_PROD_ACCNT MPA INNER JOIN
		        MEMBER MB ON MPA.MEM_NO = MB.MEM_NO AND MB.DEL_FG = 'N' INNER JOIN
		        PRODUCT PD ON MPA.PROD_CD = PD.PROD_CD LEFT OUTER JOIN
		        TB_MEMBER_MANGI_EXT MME ON MPA.ACCNT_NO = MME.ACCNT_NO AND MME.DEL_FG = 'N'   LEFT OUTER JOIN
                RESCISSION RS ON MPA.ACCNT_NO = RS.ACCNT_NO AND RS.DEL_FG = 'N'   
		    WHERE 1=1
		        AND MPA.ACCNT_NO = #{accnt_no} 
		        AND MPA.DEL_FG = 'N'
		) MAIN_TBL   
    </select>
    
     <!-- ================================================================
     * 날짜 : 20220207
     * 이름 : 임동진
     * 추가내용 : 만기연장 관리회원 등록 후 해약 정보 변경
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_MANGI_DTL
     * ================================================================
     * -->
    <update id="DlwPayMap.updateResnInfo" parameterType="map" >
    	UPDATE RESCISSION
		SET DEL_FG = 'Y', UPD_DM = SYSDATE, UPD_MAN = 'MANGI'
		WHERE 1=1
		AND ACCNT_NO = #{accnt_no}  
		AND DEL_FG = 'N'
    </update>
    
    <!-- ================================================================
     * 날짜 : 20220207
     * 이름 : 김주용
     * 추가내용 :U+ 선납전송관리 보류고객 임시 테이블 삭제
     * 대상 테이블 : LF_DMUSER.TMP_UPLUS_PRYPAY_HOLD_LIST
     * ================================================================
     * -->
    <delete id="DlwPayMap.deleteUplusPrepayHoldNewTmpData" parameterType="map">
        DELETE /* "DlwPayMap.deleteUplusPrepayHoldNewTmpData" */
               LF_DMUSER.TMP_UPLUS_PRYPAY_HOLD_LIST
    </delete>
    
    <!-- ================================================================
     * 날짜 : 20220207
     * 이름 : 김주용
     * 추가내용 : U+ 선납전송관리 보류고객 등록
     * 대상 테이블 : LF_DMUSER.TMP_UPLUS_PRYPAY_HOLD_LIST
     * ================================================================
     * -->
    <insert id="DlwPayMap.insertUplusPrepayHoldNewTmpData" parameterType="map">
        INSERT INTO /* DlwPayMap.insertgetUplusPrepayHoldNewTmpData */
                    LF_DMUSER.TMP_UPLUS_PRYPAY_HOLD_LIST(ACCNT_NO, HOLD_KB_NO)
             VALUES ( #{accnt_no}, #{hold_kb_no})
    </insert>
    
    <!-- ================================================================
     * 날짜 : 20220207
     * 이름 : 김주용
     * 추가내용 : U+ 선납전송관리 보류고객 등록
     * 대상 테이블 : LF_DMUSER.TB_UPLUS_PRYPAY_HOLD_LIST
     * ================================================================
     * -->
    <insert id="DlwPayMap.insertUplusPrepayHoldNewData" parameterType="map">
        INSERT INTO /* DlwPayMap.insertgetUplusPrepayHoldNewData */
                    LF_DMUSER.TB_UPLUS_PRYPAY_HOLD_LIST(ACCNT_NO, HOLD_KB_NO, REG_MAN, REG_DM, DEL_FG)
        SELECT A.ACCNT_NO
              ,A.HOLD_KB_NO
              ,#{reg_man}
              ,SYSDATE
              ,'N'
        FROM LF_DMUSER.TMP_UPLUS_PRYPAY_HOLD_LIST A
        WHERE 1=1
        AND NOT EXISTS (SELECT ACCNT_NO FROM TB_UPLUS_PRYPAY_HOLD_LIST WHERE DEL_FG = 'N' AND A.ACCNT_NO = ACCNT_NO)
    </insert>
    
    <!-- ================================================================
     * 날짜 : 20220816
     * 이름 : 김주용
     * 추가내용 : 캐시백 산출 현황 조회수
     * 대상 테이블 : LF_DMUSER.TB_UPLUS_CASHBACK_LIST
     * ================================================================
     * -->
    <select id="DlwPayMap.getUplusCashbackDataListCount" parameterType="map" resultType="int">
         SELECT /* DlwPayMap.getUplusCashbackDataListCount */
                COUNT(*) AS ICNT
           FROM ( SELECT ROW_NUMBER() OVER(ORDER BY ${orderBy} ${orderDirection}) AS PAGE_INDX
                        ,UCL.CALC_MONTH
                        ,UCL.ACCNT_NO
                        ,UCL.PROD_CD
                        ,UCL.PROD_NM
                        ,UCL.KSTBIT
                        ,UCL.KB_NO
                        ,UCL.BRTH_MON_DAY
                        ,UCL.MEM_NM
                        ,UCL.DTL_NO
                        ,UCL.DTL_PAY_AMT
                        ,UCL.RSLT_CD
                        ,UCL.BANK_NM
                        ,UCL.BANK_ACCNT_NO
                        ,UCR.RSLT_REG_DTTM
                        ,UCR.CASHBACK_YN
                        ,UCR.RSN_FLR
                        ,UCR.CASHBACK_DM
                        ,UCL.REG_MAN
                        ,UCL.REG_DM
                        ,UCL.UPD_MAN
                        ,UCL.UPD_DM
                        ,UCL.DEL_FG
                    FROM LF_DMUSER.TB_UPLUS_CASHBACK_LIST UCL LEFT OUTER JOIN
                        LF_DMUSER.TB_UPLUS_CASHBACK_RESULT UCR ON UCL.CALC_MONTH = UCR.CALC_MONTH AND UCL.ACCNT_NO = UCR.ACCNT_NO AND UCL.DTL_NO = UCR.DTL_NO
                   WHERE 1=1
                     AND UCL.DEL_FG = 'N'
                     <if test="stt_reg_dt != null and stt_reg_dt != '' and (accnt_no == null or accnt_no == '')">
                       AND UCL.CALC_MONTH = #{stt_reg_dt}
                     </if>
                     <if test="accnt_no != null and accnt_no != '' and (stt_reg_dt == null or stt_reg_dt == '')">
                       AND UCL.ACCNT_NO = #{accnt_no}
                     </if>
                     <if test="(stt_reg_dt != null and stt_reg_dt != '') and (accnt_no != null and accnt_no != '')">
                       AND UCL.ACCNT_NO = #{accnt_no}
                     </if>
                     <if test="cashback_yn != null and cashback_yn != ''">
                       AND NVL(UCR.CASHBACK_YN, 'N') = #{cashback_yn}
                     </if>
                ) MAIN_TBL
          WHERE 1=1
    </select>

    <!-- ================================================================
     * 날짜 : 20220816
     * 이름 : 김주용
     * 추가내용 : 캐시백 산출 현황 리스트
     * 대상 테이블 : LF_DMUSER.TB_UPLUS_CASHBACK_LIST
     * ================================================================
     * -->
    <select id="DlwPayMap.getUplusCashbackDataList" parameterType="map" resultType="resultMap">
         SELECT /* DlwPayMap.getUplusCashbackDataList */
                MAIN_TBL.*
           FROM ( SELECT ROW_NUMBER() OVER(ORDER BY ${orderBy} ${orderDirection}) AS PAGE_INDX
                        ,UCL.CALC_MONTH
                        ,UCL.ACCNT_NO
                        ,UCL.PROD_CD
                        ,UCL.PROD_NM
                        ,UCL.KSTBIT
                        ,UCL.KB_NO
                        ,UCL.BRTH_MON_DAY
                        ,UCL.MEM_NM
                        ,UCL.DTL_NO
                        ,UCL.DTL_PAY_AMT
                        ,UCL.RSLT_CD
                        ,UCL.BANK_NM
                        ,UCL.BANK_ACCNT_NO
                        ,UCR.RSLT_REG_DTTM
                        ,UCR.CASHBACK_YN
                        ,UCR.RSN_FLR
                        ,UCR.CASHBACK_DM
                        ,UCL.REG_MAN
                        ,UCL.REG_DM
                        ,UCL.UPD_MAN
                        ,UCL.UPD_DM
                        ,UCL.DEL_FG
                        ,UCL.PAY_NM
                    FROM LF_DMUSER.TB_UPLUS_CASHBACK_LIST UCL LEFT OUTER JOIN
                        LF_DMUSER.TB_UPLUS_CASHBACK_RESULT UCR ON UCL.CALC_MONTH = UCR.CALC_MONTH AND UCL.ACCNT_NO = UCR.ACCNT_NO AND UCL.DTL_NO = UCR.DTL_NO
                   WHERE 1=1
                     AND UCL.DEL_FG = 'N'
                     <if test="stt_reg_dt != null and stt_reg_dt != '' and (accnt_no == null or accnt_no == '')">
                       AND UCL.CALC_MONTH = #{stt_reg_dt}
                     </if>
                     <if test="accnt_no != null and accnt_no != '' and (stt_reg_dt == null or stt_reg_dt == '')">
                       AND UCL.ACCNT_NO = #{accnt_no}
                     </if>
                     <if test="(stt_reg_dt != null and stt_reg_dt != '') and (accnt_no != null and accnt_no != '')">
                       AND UCL.ACCNT_NO = #{accnt_no}
                     </if>
                     <if test="cashback_yn != null and cashback_yn != ''">
                       AND NVL(UCR.CASHBACK_YN, 'N') = #{cashback_yn}
                     </if>
                ) MAIN_TBL
          WHERE 1=1
         <if test="startLine != null and startLine != '' and endLine != null and endLine != ''">
             AND PAGE_INDX <![CDATA[>=]]> #{startLine}
             AND PAGE_INDX <![CDATA[<]]> #{endLine}
         </if>
    </select>
    
    <!-- ================================================================
     * 날짜 : 20220816
     * 이름 : 김주용
     * 추가내용 : U+ 캐시백 산출 초기화
     * 대상 테이블 : LF_DMUSER.TB_UPLUS_CASHBACK_LIST
     * ================================================================
     * -->
    <update id="DlwPayMap.updateInitUplusCashbackData" parameterType="map">
        UPDATE /* DlwPayMap.updateInitUplusCashbackData */
               LF_DMUSER.TB_UPLUS_CASHBACK_LIST
           SET DEL_FG = 'Y'
              ,UPD_MAN = #{rgsr_id}
              ,UPD_DM = SYSDATE
         WHERE 1=1
           AND DEL_FG = 'N'
           AND RSLT_CD = 'N'
           AND CALC_MONTH = #{stt_reg_dt}
    </update>

    <!--
     * ================================================================
     * 날짜 : 20220816
     * 이름 : 김주용
     * 추가내용 : U+ 캐시백 산출 TB insert
     * 대상 테이블 : LF_DMUSER.TB_UPLUS_CASHBACK_LIST
     * ================================================================
     * -->
    <parameterMap id="selectCashbackBasic" type="resultMap">
        <parameter property="stt_reg_dt" mode="IN" jdbcType="VARCHAR" javaType="java.lang.String" />
        <parameter property="rgsr_id" mode="IN" jdbcType="VARCHAR" javaType="java.lang.String" />
    </parameterMap>

    <select id="DlwPayMap.insertUplusCashbackData" statementType="CALLABLE" parameterMap="selectCashbackBasic">
        { CALL LF_DMUSER.SP_LGUPLUS_CASHBACK_CALC(?,?) }
    </select>
    
    <!-- ================================================================
     * 날짜 : 20220816
     * 이름 : 김주용
     * 추가내용 : 캐시백 보류고객 등록
     * 대상 테이블 : LF_DMUSER.TB_UPLUS_CASHBACK_HOLD_LIST
     * ================================================================
     * -->
    <insert id="DlwPayMap.insertgetUplusCashbackHoldNewData" parameterType="map">
        INSERT INTO /* DlwPayMap.insertgetUplusCashbackHoldNewData */
                    LF_DMUSER.TB_UPLUS_CASHBACK_HOLD_LIST(ACCNT_NO, HOLD_KB_NO, REG_MAN, REG_DM, DEL_FG)
        SELECT A.ACCNT_NO
              ,A.HOLD_KB_NO
              ,#{reg_man}
              ,SYSDATE
              ,'N'
        FROM LF_DMUSER.TMP_UPLUS_PRYPAY_HOLD_LIST A
        WHERE 1=1
        AND NOT EXISTS (SELECT ACCNT_NO FROM TB_UPLUS_CASHBACK_HOLD_LIST WHERE DEL_FG = 'N' AND A.ACCNT_NO = ACCNT_NO)
    </insert>
    
    <!-- ================================================================
     * 날짜 : 20190529
     * 이름 : 송준빈
     * 추가내용 : U+ 선납전송관리 보류고객 해제시 산출대상에 등록
     * 대상 테이블 : LF_DMUSER.TB_UPLUS_PREPAY_LIST
     * ================================================================
     * -->
    <insert id="DlwPayMap.insertUplusHoldCashbackMember" parameterType="map">
        INSERT INTO /* DlwPayMap.insertUplusHoldCashbackMember */
            LF_DMUSER.TB_UPLUS_CASHBACK_LIST (CALC_MONTH, ACCNT_NO, PROD_CD, PROD_NM, KSTBIT, KB_NO, CELL, BRTH_MON_DAY, MEM_NM,
                                            DTL_NO, DTL_PAY_AMT, RSLT_CD, RSLT_REG_DTTM, BANK_NM, BANK_ACCNT_NO,
                                            REG_MAN, REG_DM, UPD_MAN, UPD_DM, DEL_FG)
        SELECT 
            NVL(SUBSTR(#{month_cal}, 0,6), TO_CHAR(SYSDATE, 'YYYYMM')),
            UPHL.ACCNT_NO,
            MPA.PROD_CD,
            PD.PROD_NM,
            MPA.KSTBIT,
            CASE WHEN TRIM(REPLACE(MPA.KB_NO, ' ', '')) IS NOT NULL AND SUBSTR(TRIM(REPLACE(MPA.KB_NO, '-', '')), 0, 3) = '010' /* CTN은 존재하지만 전화번호로 들어있는 경우 */
                     THEN RPAD(SUBSTR(TRIM(REPLACE(MPA.KB_NO, '-', '')), 0, 3), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MPA.KB_NO, '-', '')), 4, 4), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MPA.KB_NO, '-', '')), 8, 4), 4, 0)
                 WHEN TRIM(REPLACE(MPA.KB_NO, ' ', '')) IS NOT NULL AND SUBSTR(TRIM(REPLACE(MPA.KB_NO, '-', '')), 0, 3) != '010' /* CTN은 존재하고 전화번호로 들어가있지 않은 경우 */
                     THEN TRIM(REPLACE(MPA.KB_NO, '-', ''))
                 WHEN TRIM(REPLACE(MPA.KB_NO, ' ', '')) IS NULL AND SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 0, 3) = '010' /* CTN이 존재하지않고 전화번호는 존재하는 경우 */
                     THEN RPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 0, 3), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 4, 4), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 8, 4), 4, 0)
                 WHEN TRIM(REPLACE(MPA.KB_NO, ' ', '')) IS NULL AND SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 0, 3) = '019' /* CTN이 존재하지않고 전화번호는 존재하는 경우 */
                     THEN RPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 0, 3), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 4, 4), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 8, 4), 4, 0)
                 WHEN TRIM(REPLACE(MPA.KB_NO, ' ', '')) = '' AND SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 0, 3) = '010' /* CTN이 존재하지않고 전화번호는 존재하는 경우 */
                     THEN RPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 0, 3), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 4, 4), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 8, 4), 4, 0)
                 ELSE 
                     TRIM(REPLACE(MPA.KB_NO, '-', ''))
            END AS KB_NO,
            MB.CELL,
            MB.BRTH_MON_DAY,
            MB.MEM_NM,
            #{dtl_no_insert},
            (SELECT PAY_AMT FROM PAY_MNG_DTL PMD WHERE 1=1 AND PMD.ACCNT_NO = UPHL.ACCNT_NO AND PMD.NO = #{dtl_no_insert} AND PMD.DEL_FG = 'N'),
            'N',
            '',
            MPA.INSPL_ADDR2 AS BANK_NM,
            MPA.ORDER_NUM AS BANK_ACCNT_NO,
            #{upd_man},
            SYSDATE,
            '',
            '',
            'N'
        FROM LF_DMUSER.TB_UPLUS_CASHBACK_HOLD_LIST UPHL INNER JOIN 
            MEM_PROD_ACCNT MPA ON UPHL.ACCNT_NO = MPA.ACCNT_NO AND UPHL.DEL_FG = 'N' AND MPA.DEL_FG = 'N' INNER JOIN 
            PRODUCT PD ON PD.PROD_CD = MPA.PROD_CD AND PD.DEL_FG = 'N' INNER JOIN 
            MEMBER MB ON MB.MEM_NO = MPA.MEM_NO AND MB.DEL_FG = 'N'
        WHERE 1=1
        AND MPA.ACCNT_NO = #{accnt_no}
    </insert>
    
    <!-- ================================================================
     * 날짜 : 20190529
     * 이름 : 송준빈
     * 추가내용 : U+ 선납전송관리 보류고객 삭제
     * 대상 테이블 : LF_DMUSER.TB_UPLUS_PRYPAY_HOLD_LIST
     * ================================================================
     * -->
    <delete id="DlwPayMap.deleteUplusCashbackHoldDataList" parameterType="map">
        UPDATE /* DlwPayMap.deleteUplusCashbackHoldDataList */
               LF_DMUSER.TB_UPLUS_CASHBACK_HOLD_LIST
           SET DEL_FG = 'Y'
              ,UPD_MAN = #{upd_man}
              ,UPD_DM = SYSDATE
         WHERE 1=1
           AND DEL_FG = 'N'
           AND ACCNT_NO = #{accnt_no}
    </delete>
    
    <!-- ================================================================
     * 날짜 : 20190529
     * 이름 : 송준빈
     * 추가내용 : U+ 선납전송관리 보류고객 리스트
     * 대상 테이블 : LF_DMUSER.TB_UPLUS_PRYPAY_HOLD_LIST
     * ================================================================
     * -->
    <select id="DlwPayMap.getUplusCashbackHoldDataList" parameterType="map" resultType="resultMap">
        SELECT /* DlwPayMap.getUplusCashbackHoldDataList */
            MAIN_TBL.CHK,
            MAIN_TBL.PAGE_INDX,
            MAIN_TBL.ACCNT_NO,
            MAIN_TBL.HOLD_DTL_NO,
            MAIN_TBL.TRUE_DTL_NO,
            MAIN_TBL.TRUE_KB_NO,
            MAIN_TBL.REG_DM
        FROM    
        (    
            SELECT 
                '' AS CHK,
                ROW_NUMBER() OVER(ORDER BY UPHL.ACCNT_NO ASC) AS PAGE_INDX,
                UPHL.ACCNT_NO,
                NVL(MAX(UPR.DTL_NO), 0) AS HOLD_DTL_NO,
                (SELECT NVL(MAX(PMD.NO), 0) AS MAX_NO FROM LF_DMUSER.PAY_MNG_DTL PMD WHERE 1=1 AND PMD.PAY_DAY <![CDATA[<=]]> #{month_lastday} AND PMD.DEL_FG = 'N' AND UPHL.ACCNT_NO = PMD.ACCNT_NO) AS TRUE_DTL_NO,
                (
                    SELECT 
                        CASE WHEN TRIM(REPLACE(MPA.KB_NO, ' ', '')) IS NOT NULL AND SUBSTR(TRIM(REPLACE(MPA.KB_NO, '-', '')), 0, 3) = '010' /* CTN은 존재하지만 전화번호로 들어있는 경우 */
                                 THEN RPAD(SUBSTR(TRIM(REPLACE(MPA.KB_NO, '-', '')), 0, 3), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MPA.KB_NO, '-', '')), 4, 4), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MPA.KB_NO, '-', '')), 8, 4), 4, 0)
                             WHEN TRIM(REPLACE(MPA.KB_NO, ' ', '')) IS NOT NULL AND SUBSTR(TRIM(REPLACE(MPA.KB_NO, '-', '')), 0, 3) != '010' /* CTN은 존재하고 전화번호로 들어가있지 않은 경우 */
                                 THEN TRIM(REPLACE(MPA.KB_NO, '-', ''))
                             WHEN TRIM(REPLACE(MPA.KB_NO, ' ', '')) IS NULL AND SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 0, 3) = '010' /* CTN이 존재하지않고 전화번호는 존재하는 경우 */
                                 THEN RPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 0, 3), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 4, 4), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 8, 4), 4, 0)
                             WHEN TRIM(REPLACE(MPA.KB_NO, ' ', '')) IS NULL AND SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 0, 3) = '019' /* CTN이 존재하지않고 전화번호는 존재하는 경우 */
                                 THEN RPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 0, 3), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 4, 4), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 8, 4), 4, 0)
                             WHEN TRIM(REPLACE(MPA.KB_NO, ' ', '')) = '' AND SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 0, 3) = '010' /* CTN이 존재하지않고 전화번호는 존재하는 경우 */
                                 THEN RPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 0, 3), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 4, 4), 4, 0) || LPAD(SUBSTR(TRIM(REPLACE(MB.CELL, '-', '')), 8, 4), 4, 0)
                             ELSE 
                                 TRIM(REPLACE(MPA.KB_NO, '-', ''))
                        END AS TRUE_KB_NO
                    FROM MEM_PROD_ACCNT MPA INNER JOIN
                        MEMBER MB ON MPA.MEM_NO = MB.MEM_NO AND MPA.DEL_FG = 'N'
                    WHERE 1=1 
                    AND MPA.ACCNT_NO = UPHL.ACCNT_NO
                ) AS TRUE_KB_NO,
                UPHL.REG_DM
            FROM TB_UPLUS_CASHBACK_HOLD_LIST UPHL LEFT OUTER JOIN
                TB_UPLUS_CASHBACK_RESULT UPR ON UPR.ACCNT_NO = UPHL.ACCNT_NO AND UPR.DEL_FG = 'N' AND UPR.RSLT_CD = 'E' AND UPR.CASHBACK_YN = 'Y'
            WHERE 1=1
            AND UPHL.DEL_FG = 'N'
            <if test="accnt_no != null and accnt_no != ''">
                AND UPHL.ACCNT_NO = #{accnt_no}
            </if>
            GROUP BY UPHL.ACCNT_NO, UPHL.REG_DM
        ) MAIN_TBL
        WHERE 1=1
   </select>
</mapper>

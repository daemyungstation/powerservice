<?xml version="1.0" encoding="utf-8"?>
<FDL version="1.4">
  <TypeDefinition url="..\default_typedef.xml"/>
  <Form id="FrmDev" classname="Work_Contents1" inheritanceid="" position="absolute 0 0 1007 779" titletext="메뉴관리" onload="FrmDev_onload">
    <Layouts>
      <Layout>
        <Div id="Div00" anchor="left top right" taborder="1" text="Div00" position="absolute 0 0 989 79">
          <Layouts>
            <Layout width="989" height="79">
              <Static id="stc_23" class="sta_workSrcBg" position="absolute 0 0 989 41" anchor="left top right"/>
              <Static id="stc_22" text="사업부" class="sta_workSrcLabel1" position="absolute 15 11 97 31"/>
              <Combo id="cbo_bzdpDivCd" taborder="1" innerdataset="@dsl_bzdpDivCd" codecolumn="CD_VL" datacolumn="CD_VL_NM" onitemchanged="Div00_cbo_bzdpDivCd_onitemchanged" position="absolute 73 10 201 30"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="div_body" anchor="all" taborder="1" style="background:#ff450066;" text="Div00" position="absolute 0 49 989 779">
          <Layouts>
            <Layout>
              <Grid id="grd_tree_list" taborder="1" useinputpanel="false" position="absolute 0 18 320 715" binddataset="ds_list_Tree" treeinitstatus="collapse,null" treeusecheckbox="false" autoenter="select" anchor="left top bottom" onselectchanged="div_body_grd_tree_list_onselectchanged" oncellclick="div_body_grd_tree_list_oncellclick">
                <Formats>
                  <Format id="default">
                    <Columns>
                      <Column size="0"/>
                      <Column size="0"/>
                      <Column size="0"/>
                      <Column size="0"/>
                      <Column size="300"/>
                      <Column size="0"/>
                      <Column size="0"/>
                      <Column size="0"/>
                      <Column size="0"/>
                      <Column size="0"/>
                      <Column size="0"/>
                      <Column size="0"/>
                      <Column size="0"/>
                      <Column size="0"/>
                    </Columns>
                    <Rows>
                      <Row size="24" band="head"/>
                      <Row size="24"/>
                    </Rows>
                    <Band id="head">
                      <Cell/>
                      <Cell col="1" displaytype="checkbox" edittype="none"/>
                      <Cell col="2" text="No"/>
                      <Cell col="3" text="메뉴코드"/>
                      <Cell col="4" text="메뉴 구조"/>
                      <Cell col="5" text="화면번호"/>
                      <Cell col="6" text="프로그램명"/>
                      <Cell col="7" text="메뉴설명"/>
                      <Cell col="8" text="유형코드"/>
                      <Cell col="9" text="상위메뉴ID"/>
                      <Cell col="10" text="레벨"/>
                      <Cell col="11" text="순서"/>
                      <Cell col="12" text="구조번호"/>
                      <Cell col="13" text="최종수정일"/>
                    </Band>
                    <Band id="body">
                      <Cell displaytype="image" text="expr:gfn_setRowState(ds_list, currow)"/>
                      <Cell col="1" displaytype="checkbox" edittype="checkbox" text="bind:_chk"/>
                      <Cell col="2" text="expr:currow+1"/>
                      <Cell col="3" style="align:left;" text="bind:menuCd"/>
                      <Cell col="4" displaytype="tree" edittype="tree" style="background2: ;" text="bind:menuNm" treestartlevel="0" treelevel="bind:menuLvlVl" treestate="bind:treeStat"/>
                      <Cell col="5" style="align:left;" text="bind:scrnNo"/>
                      <Cell col="6" style="align:left;" text="bind:scrnNm"/>
                      <Cell col="7" style="align:left;" text="bind:menuNote"/>
                      <Cell col="8" style="align:left;" text="bind:menuTypCd"/>
                      <Cell col="9" style="align:left;" text="bind:hgrnMenuId"/>
                      <Cell col="10" style="align:left;" text="bind:menuLvlVl"/>
                      <Cell col="11" style="align:left;" text="bind:menuLnpSqnc"/>
                      <Cell col="12" style="align:left;" text="bind:menuStrcNo"/>
                      <Cell col="13" text="bind:lastAmntDttm" mask="####.##.## ##:##"/>
                    </Band>
                  </Format>
                </Formats>
              </Grid>
              <Button id="Button02" taborder="1" text="위" onclick="div_body_Button02_onclick" class="btn_WF_act4" position="absolute 904 0 944 20" anchor="top right"/>
              <Button id="Button03" taborder="1" text="아래" onclick="div_body_Button03_onclick" class="btn_WF_act4" position="absolute 949 0 989 20" anchor="top right"/>
              <Grid id="grd_list" taborder="1" binddataset="ds_list" autoenter="select" useinputpanel="false" cellsizingtype="col" oncellclick="div_body_grd_list_oncellclick" onexpanddown="div_body_grd_list_onexpanddown" position="absolute 336 19 997 716" anchor="all" treeinitstatus="expand,null">
                <Formats>
                  <Format id="default">
                    <Columns>
                      <Column size="25"/>
                      <Column size="26"/>
                      <Column size="42"/>
                      <Column size="67"/>
                      <Column size="165"/>
                      <Column size="0"/>
                      <Column size="69"/>
                      <Column size="45"/>
                      <Column size="86"/>
                      <Column size="21"/>
                      <Column size="95"/>
                      <Column size="124"/>
                      <Column size="166"/>
                      <Column size="0"/>
                      <Column size="0"/>
                      <Column size="35"/>
                      <Column size="0"/>
                      <Column size="100"/>
                      <Column size="0"/>
                      <Column size="0"/>
                    </Columns>
                    <Rows>
                      <Row size="24" band="head"/>
                      <Row size="24"/>
                    </Rows>
                    <Band id="head">
                      <Cell/>
                      <Cell col="1" displaytype="checkbox" edittype="none"/>
                      <Cell col="2" text="No"/>
                      <Cell col="3" text="메뉴ID"/>
                      <Cell col="4" text="메뉴명"/>
                      <Cell col="5" text="화면번호"/>
                      <Cell col="6" text="메뉴유형"/>
                      <Cell col="7" text="팝업"/>
                      <Cell col="8" colspan="2" text="화면 명"/>
                      <Cell col="10" text="화면 URL"/>
                      <Cell col="11" text="파라미터"/>
                      <Cell col="12" text="메뉴설명"/>
                      <Cell col="13" text="상위메뉴ID"/>
                      <Cell col="14" text="레벨"/>
                      <Cell col="15" text="순서"/>
                      <Cell col="16" text="구조번호"/>
                      <Cell col="17" text="최종수정일"/>
                      <Cell col="18" text="하위개수"/>
                      <Cell col="19"/>
                    </Band>
                    <Band id="body">
                      <Cell displaytype="image" text="expr:gfn_setRowState(ds_list, currow)"/>
                      <Cell col="1" displaytype="checkbox" edittype="checkbox" text="bind:_chk"/>
                      <Cell col="2" text="expr:currow+1"/>
                      <Cell col="3" style="align:left;" text="bind:menuCd"/>
                      <Cell col="4" edittype="normal" style="align:left;" text="bind:menuNm" editlimit="100"/>
                      <Cell col="5" style="align:left;" text="bind:scrnNo"/>
                      <Cell col="6" displaytype="combo" edittype="expr:depthCnt==&quot;0&quot;?&quot;combo&quot;:&quot;none&quot;" text="bind:menuTypCd" combodataset="dsl_menuTypCd" combocodecol="code" combodatacol="data"/>
                      <Cell col="7" displaytype="combo" edittype="expr:menuTypCd==&quot;03&quot;?&quot;combo&quot;:&quot;none&quot;" text="bind:ppupDspsYn" displayexpdec="1" combodataset="dsl_ppupDspsYn" combocodecol="code" combodatacol="data"/>
                      <Cell col="8" style="align:left;padding:2 2 2 2;line:0 none #808080,0 none #808080,1 solid #d6d6d6ff,0 none #808080;selectline:0 none, 0 none, 1 solid #d6d6d6, 0 none;" text="bind:scrnNm"/>
                      <Cell col="9" displaytype="image" edittype="normal" style="padding:2 0 2 0;cursor:hand;backgroundimage: ;" expandshow="show" expandsize="20" expandimage="URL('IMG::btn_gridSrc.png')"/>
                      <Cell col="10" style="align:left;" text="bind:scrnUrlAddr"/>
                      <Cell col="11" displaytype="text" edittype="expr:menuTypCd==&quot;03&quot;?&quot;text&quot;:&quot;none&quot;" style="align:left;" text="bind:scrnClotMtr"/>
                      <Cell col="12" edittype="normal" style="align:left;" text="bind:menuNote" editlimit="500"/>
                      <Cell col="13" style="align:left;" text="bind:hgrnMenuId"/>
                      <Cell col="14" style="align:left;" text="bind:menuLvlVl"/>
                      <Cell col="15" edittype="none" editfilter="number" style="align:left;" text="bind:menuLnpSqnc" editlimit="4"/>
                      <Cell col="16" style="align:left;" text="bind:menuStrcNo"/>
                      <Cell col="17" text="bind:lastAmntDttm" mask="####.##.## ##:##"/>
                      <Cell col="18"/>
                      <Cell col="19" text="bind:scrnId"/>
                    </Band>
                  </Format>
                </Formats>
              </Grid>
              <Button id="btn_grd_Add" taborder="1" onclick="div_body_btn_grd_Add_onclick" class="btn_grd_Add" position="absolute 848 0 864 16" anchor="top right"/>
              <Button id="btn_grd_Del" taborder="1" onclick="div_body_btn_grd_Del_onclick" class="btn_grd_del" position="absolute 870 0 886 16" anchor="top right"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="ds_input" firefirstcount="0" firenextcount="0">
        <ColumnInfo>
          <Column id="menuCd" type="STRING" size="256"/>
          <Column id="bzdpDivCd" type="STRING" size="256"/>
          <Column id="hgrnMenuId" type="STRING" size="256"/>
          <Column id="menuLvlVl" type="STRING" size="256"/>
          <Column id="hgrnMenuLvlVl" type="STRING" size="256"/>
          <Column id="hgrnStrcNo" type="STRING" size="256"/>
          <Column id="menuStrcNo" type="STRING" size="256"/>
          <Column id="menuTypCd" type="STRING" size="256"/>
          <Column id="strgEvenYn" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="menuCd"/>
            <Col id="bzdpDivCd"/>
            <Col id="hgrnMenuId"/>
            <Col id="menuLvlVl"/>
            <Col id="hgrnMenuLvlVl"/>
            <Col id="hgrnStrcNo"/>
            <Col id="menuStrcNo"/>
            <Col id="menuTypCd"/>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="ds_list" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false" oncolumnchanged="ds_list_oncolumnchanged">
        <ColumnInfo>
          <Column id="menuCd" type="STRING" size="256"/>
          <Column id="menuNm" type="STRING" size="256"/>
          <Column id="menuNote" type="STRING" size="256"/>
          <Column id="menuTypCd" type="STRING" size="256"/>
          <Column id="hgrnMenuId" type="STRING" size="256"/>
          <Column id="menuLvlVl" type="STRING" size="256"/>
          <Column id="menuLnpSqnc" type="STRING" size="256"/>
          <Column id="menuStrcNo" type="STRING" size="256"/>
          <Column id="scrnNo" type="STRING" size="256"/>
          <Column id="scrnId" type="STRING" size="256"/>
          <Column id="scrnNm" type="STRING" size="256"/>
          <Column id="scrnUrlAddr" type="STRING" size="256"/>
          <Column id="bzdpDivCd" type="STRING" size="256"/>
          <Column id="hgrnStrcNo" type="STRING" size="256"/>
          <Column id="depthCnt" type="STRING" size="256"/>
          <Column id="scrnClotMtr" type="STRING" size="256"/>
          <Column id="ppupDspsYn" type="STRING" size="256"/>
          <Column id="crtnDttm" type="STRING" size="256"/>
          <Column id="cretId" type="STRING" size="256"/>
          <Column id="crtnIp" type="STRING" size="256"/>
          <Column id="crtnTrmlId" type="STRING" size="256"/>
          <Column id="lastAmntDttm" type="STRING" size="256"/>
          <Column id="lastAmndId" type="STRING" size="256"/>
          <Column id="lastAmntIp" type="STRING" size="256"/>
          <Column id="lastAmntTrmlId" type="STRING" size="256"/>
          <Column id="_chk" type="STRING" size="256"/>
          <Column id="xRowStatusType" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_list_Tree" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="false" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="menuCd" type="STRING" size="256"/>
          <Column id="menuNm" type="STRING" size="256"/>
          <Column id="menuNote" type="STRING" size="256"/>
          <Column id="menuTypCd" type="STRING" size="256"/>
          <Column id="hgrnMenuId" type="STRING" size="256"/>
          <Column id="menuLvlVl" type="STRING" size="256"/>
          <Column id="menuLnpSqnc" type="STRING" size="256"/>
          <Column id="menuStrcNo" type="STRING" size="256"/>
          <Column id="scrnNo" type="STRING" size="256"/>
          <Column id="scrnNm" type="STRING" size="256"/>
          <Column id="scrnShrdCd" type="STRING" size="256"/>
          <Column id="bzdpDivCd" type="STRING" size="256"/>
          <Column id="hgrnStrcNo" type="STRING" size="256"/>
          <Column id="crtnDttm" type="STRING" size="256"/>
          <Column id="cretId" type="STRING" size="256"/>
          <Column id="crtnIp" type="STRING" size="256"/>
          <Column id="crtnTrmlId" type="STRING" size="256"/>
          <Column id="lastAmntDttm" type="STRING" size="256"/>
          <Column id="lastAmndId" type="STRING" size="256"/>
          <Column id="lastAmntIp" type="STRING" size="256"/>
          <Column id="lastAmntTrmlId" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_listValid" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="menuNm" type="STRING" size="256"/>
          <Column id="menuLnpSqnc" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="menuNm">title:메뉴명,required:true</Col>
            <Col id="menuLnpSqnc">title:메뉴순서,required:true,minlength:1,maxlength:2</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="ds_menuStrc" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="menuStrc" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="dsl_bzdpDivCd" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="COMN_CD_ID" type="STRING" size="255"/>
          <Column id="CD_USPL_DIV_CD" type="STRING" size="255"/>
          <Column id="CD_VL" type="STRING" size="255"/>
          <Column id="CD_VL_NM" type="STRING" size="255"/>
          <Column id="SHRD_CD_VL_NM" type="STRING" size="255"/>
          <Column id="LNP_SQNC" type="STRING" size="255"/>
          <Column id="DLTN_YN" type="STRING" size="255"/>
          <Column id="PREN_CD_VL" type="STRING" size="255"/>
          <Column id="LAST_AMNT_DTTM" type="STRING" size="255"/>
          <Column id="_chk" type="INT" size="10"/>
          <Column id="xRowStatusType" type="STRING" size="255"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="dsl_menuTypCd" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="code" type="STRING" size="255"/>
          <Column id="data" type="STRING" size="255"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="data">사업부구분</Col>
            <Col id="code">00</Col>
          </Row>
          <Row>
            <Col id="data">최상위메뉴</Col>
            <Col id="code">01</Col>
          </Row>
          <Row>
            <Col id="data">메뉴폴더</Col>
            <Col id="code">02</Col>
          </Row>
          <Row>
            <Col id="data">프로그램</Col>
            <Col id="code">03</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsl_ppupDspsYn" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="code" type="STRING" size="256"/>
          <Column id="data" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="code">Y</Col>
            <Col id="data">팝업</Col>
          </Row>
          <Row>
            <Col id="code">N</Col>
            <Col id="data">-</Col>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="Div00.cbo_bzdpDivCd" propid="value" datasetid="ds_input" columnid="bzdpDivCd"/>
    </Bind>
    <Script type="xscript4.0"><![CDATA[/***************************************************************************
 * Program ID    : SCRIP_GUIDE.xfdl
 * Program Name  : 스크립트 가이드
 * Author        : 홍길동
 * Created On    : 2012.11.05
 * 개    요 	 :
 *
 * =========================================================================
 * 변경일자     수정자    내    용
 * =========================================================================
 * 2012.11.05   홍길동    최초작성
 **************************************************************************/

//**************************************************************************
// [ PART 1 ] Form에서 Include 할 라이브러리(xjs)파일 정의
//**************************************************************************
include "LIB::lib_All.xjs";

//**************************************************************************
// [ PART 2 ] Form에서 사용될 전역변수를 선언
//**************************************************************************
var fv_formId;

//**************************************************************************
// [ PART 3 ] Form Event 정의
//**************************************************************************

/***************************************************************************
 * 기      능		: 폼 onload이벤트
 ***************************************************************************/
function FrmDev_onload(obj:Form, e:LoadEventInfo)
{
	// 시스템 공통함수 호출
	gfn_commInit(obj);

	// 폼 공통함수 호출
	fn_init();

	// 공통버튼 상태변경
	gfn_setCommBtn_Status(true,false,true,false,true,false);
	div_body.btn_grd_Add.enable = false;
	div_body.btn_grd_Del.enable = false;
}

/***************************************************************************
 * 함  수  명		: fn_init()
 * 기      능		: 폼 초기화 공통함수
 ***************************************************************************/
function fn_init()
{
	//TO-DO: 폼 초기화 관련 처리

	// 공통코드
 	gfn_getCommCode("11124", gfn_getComCodeDefaultNone(), "00", dsl_bzdpDivCd);	// 인스턴스 사업부
	dsl_bzdpDivCd.deleteRow(dsl_bzdpDivCd.findRow("CD_VL", "CCC"));
	this.Div00.cbo_bzdpDivCd.index = 0;
	//ds_input.setColumn( 0, "bizTyp", Div00.cbo_bzdpDivCd.value);
	ds_input.setColumn( 0, "menuLvlVl", 0);
	ds_input.setColumn( 0, "hgrnMenuLvlVl", 0);
}

/***************************************************************************
 * 함  수  명		: fn_commInit()
 * 기      능		: (공통버튼)폼 초기화 프로세스
 ***************************************************************************/
function fn_commInit(sType)
{
	gfn_initDs(ds_list);

	// 초기화
	ds_input.reset();
	//ds_input_Temp.reset();
	ds_menuStrc.reset();
}

/***************************************************************************
 * 함  수  명		: fn_commAdd()
 * 기      능		: (공통버튼)신규/행추가 프로세스
 ***************************************************************************/
function fn_commAdd()
{
	if (div_body.btn_grd_Add.enable == false ) {
		return false;
	}
	gfn_addDs(ds_list, true);
	ds_list.setColumn(ds_list.rowcount-1, "menuLnpSqnc", ds_list.rowcount);
	ds_list.setColumn(ds_list.rowcount-1, "depthCnt", 0);
	ds_list.setColumn(ds_list.rowcount-1, "ppupDspsYn", "N");
}

/***************************************************************************
 * 함  수  명		: fn_preSearch()
 * 기      능		: 조회 전 처리
 ***************************************************************************/
function fn_preSearch(sType)
{
	if(!gfn_preSearchDs(ds_list, sType)) return false;

	//TO-DO:조회조건 체크

	return true;
}

/***************************************************************************
 * 함  수  명		: fn_postSearch()
 * 기      능		: 조회 후 처리
 ***************************************************************************/
function fn_postSearch(sType)
{
	//TO-DO: 조회 결과 메세지처리
	ds_list.clearData();

	if(ds_list_Tree.rowcount > 0) {

		var preMenStrcNo = ds_input.getColumn(0, "menuStrcNo"); // 이전에 선택한 트리
		if (preMenStrcNo == "") 
		{
			fn_setMenuOpen(0); // Root 펼쳐주기
		} else 
		{
			for(var i=0; i < ds_list_Tree.rowcount; i++) 
			{
				if (preMenStrcNo == ds_list_Tree.getColumn(i,"menuStrcNo")) 
				{
					fn_setMenuOpen(i); // 저장전 위치를 펼쳐주기
				}
			}
		}		
		
//		fn_setMenuOpen(0);

// 		var preMenStrcNo = ds_input.getColumn(0, "menuStrcNo"); // 이전에 선택한 트리
// 		if (preMenStrcNo == "") 
// 		{
// 			div_body.grd_tree_list.setTreeStatus(0,true); // Root 펼쳐주기
// 		} else 
// 		{
// 			for(var i=0; i < ds_list_Tree.rowcount; i++) 
// 			{
// 				if (preMenStrcNo == ds_list_Tree.getColumn(i,"menuStrcNo")) 
// 				{
// 					div_body.grd_tree_list.setTreeStatus(i,true); 
// 				}
// 			}
// 		}
		//fn_spchSearch();	// 우측에 Tree에서 선택된 하위메뉴조회
	}
}

/***************************************************************************
 * 함  수  명		: fn_preSave()
 * 기      능		: 저장 전 처리
 ***************************************************************************/
function fn_preSave(sType)
{
	if(!gfn_preSaveDs(ds_list, sType)) return false;

	//TO-DO:필수 입력 체크 등

	return true;
}

/***************************************************************************
 * 함  수  명		: fn_commDeleteGrd()
 * 기      능		: (공통 그리드버튼)삭제
 ***************************************************************************/
function fn_commDeleteGrd()
{
	if(gfn_delGrid(ds_list)) {
		//TO-DO: 삭제 프로세스 처리
	}
}

//**************************************************************************
// [ PART 4 ] Detail Process Event 정의
//**************************************************************************

/***************************************************************************
 * 기      능		: 위로가는 버튼
 ***************************************************************************/
function div_body_Button02_onclick(obj:Button,  e:ClickEventInfo)
{
	var oldRow = ds_list.rowposition;
	var newRow = oldRow-1;
	fn_MoveRow(oldRow, newRow);
}

/***************************************************************************
 * 기      능		: 아래로가는 버튼
 ***************************************************************************/
function div_body_Button03_onclick(obj:Button,  e:ClickEventInfo)
{
	var oldRow = ds_list.rowposition;
	var newRow = oldRow+1;
	fn_MoveRow(oldRow, newRow);
}

/***************************************************************************
 * 기      능		: 그리드의 Row의 움직임을 위아래로 하면서 순서를 변경한다.
 *                    단, 신규인 경우엔 제외
 ***************************************************************************/
function fn_MoveRow(oldRow, newRow)
{
	var hgrnMenuId = ds_list.getColumn(oldRow, "hgrnMenuId");
	if (ds_list.getColumn(oldRow, gfn_getColNmStatus()) == gfn_getRowTypeInsert()) {
		alert("신규 등록건이 있습니다.\n저장을 먼저 하세요.");
		return;
	}

	ds_list.moveRow(oldRow, newRow);

	var j = 1;
	for (var i = 0; i <= ds_list.rowcount; i++) {
		if (ds_list.getColumn(i, "hgrnMenuId") == hgrnMenuId) {
			ds_list.setColumn(i, "menuLnpSqnc", j);
			j++;
		}
	}
}

/***************************************************************************
 * 기      능		: (공통) 선택된 사업부 정보의 데이타셋을 카피한다.
 ***************************************************************************/
function Div00_cbo_bzdpDivCd_onitemchanged(obj:Combo, e:ItemChangeEventInfo)
{
	// 화면에 보여줄 메뉴를 셋팅한다.
	//ds_list_Tree_chk.clearData();

	//ds_input.setColumn( 0, "bizTyp", obj.value);
	if (obj.value!="") {
		ds_input.setColumn( 0, "menuLvlVl", 1);
		ds_input.setColumn( 0, "hgrnMenuLvlVl", 1);
	} else {
		ds_input.setColumn( 0, "menuLvlVl", 0);
		ds_input.setColumn( 0, "hgrnMenuLvlVl", 0);
	}
	fn_commSearch();
}

function div_body_grd_list_oncellclick(obj:Grid, e:GridClickEventInfo)
{
	if(e.col == 0) {
		gfn_rollbackRowDs(this[obj.binddataset], obj, e);
	}
}

/***************************************************************************
 * 기      능		: (공통 그리드버튼) 그리드 행추가
 ***************************************************************************/
function div_body_btn_grd_Add_onclick(obj:Button,  e:ClickEventInfo)
{
	// 메뉴 조회가 되어 선택되지 않은 상태에서는 row를 추가하지 않는다.
	if(ds_input.getColumn(0, "hgrnMenuId") == '') return false;
	
	// row를 추가한다.
	fn_commAdd();

	// 기본값셋팅
	//var nRow = ds_list.findRowExpr(gfn_getColNmStatus()+"=='"+gfn_getRowTypeInsert()+"' && menuLnpSqnc!=''");
	var nRow = ds_list.getRowCount() -1; // 맨 마지막 행에 새 행이 추가된다. 연속적으로 빈 행을 추가할 경우에 대비해서 해당과 같이 처
	
	ds_list.setColumn(nRow, "menuLvlVl", ds_input.getColumn(0, "hgrnMenuLvlVl"));
	ds_list.setColumn(nRow, "bzdpDivCd", ds_input.getColumn(0, "bzdpDivCd"));
	ds_list.setColumn(nRow, "hgrnMenuId", ds_input.getColumn(0, "hgrnMenuId"));
	ds_list.setColumn(nRow, "hgrnStrcNo", ds_input.getColumn(0, "hgrnStrcNo"));
	ds_list.setColumn(nRow, "menuLnpSqnc", ds_list.rowcount);
	
	// 메뉴 3 level의 경우 메뉴폴더/프로그램을 선택할 수 있고, 나머지의 경우 1가지이므로, 자동 입력한다.
	if (dsl_menuTypCd.rowcount == 1) {
		ds_list.setColumn(nRow, "menuTypCd", dsl_menuTypCd.getColumn(0, "code"));
	}
}

/***************************************************************************
 * 기      능		: (공통 그리드버튼) 그리드 행삭제
 ***************************************************************************/
function div_body_btn_grd_Del_onclick(obj:Button,  e:ClickEventInfo)
{
	for (var i = 0; i <= ds_list.rowcount; i++) {
		if (ds_list.getColumn(i, gfn_getColNmChk()) && gfn_trim(ds_list.getColumn(i, "depthCnt")) > 0) {
			alert(ds_list.getColumn(i, "menuNm")+"은(는) "+ds_list.getColumn(i, "depthCnt")+"개의 하위 메뉴가 있어 삭제를 할 수 없습니다.");
			return;
		}
	}
	fn_commDeleteGrd();
	
	// 삭제를 하고나면 나머지의 순서를 조정한다. (항상 위에서 아래로 순서가 되어있으므로, 1부터 다시 정렬한다.
	for (var i = 0; i <= ds_list.rowcount; i++) {
		ds_list.setColumn(i, "menuLnpSqnc", i + 1);
	}
}

/***************************************************************************
 * 기      능		: (공통) 그리드 팝업
 ***************************************************************************/
function div_body_grd_list_onexpanddown(obj:Grid, e:GridMouseEventInfo)
{
	if(e.cell == 9) {
		if (ds_list.getColumn(e.row, "menuTypCd") == "03") {
			fn_OpenPopup_ProgramSelect(obj, e);
		} else {
			alert("유형코드가 프로그램인 경우에만 팝업됩니다.");
		}
	}
}

/***************************************************************************
 * 기      능		: 프로그램 선택 팝업 오픈
 ***************************************************************************/
function fn_OpenPopup_ProgramSelect(obj:Grid, e)
{
	obj.updateToDataset();

	var scrnIdIdx = obj.getBindCellIndex("body", "scrnId");
	var hgrnMenuIdIdx = obj.getBindCellIndex("body", "hgrnMenuId");
	var strParam = {pv_scrnId:obj.getCellValue(e.row, scrnIdIdx),pv_menuBzdpDivCd:obj.getCellValue(e.row, hgrnMenuIdIdx).substring(0,3)};
	var rtn = gfn_diaLog("SYS0000201101", -1, -1, 447, 429, "SYS::SYS0000201101.xfdl", false, strParam, false, true, true);

	if(rtn instanceof Object) {
 		trace(rtn["scrnNo"]);
 		trace(rtn["scrnNm"]);

 		this.ds_list.setColumn(e.row, "scrnNo", rtn["scrnNo"]);
 		this.ds_list.setColumn(e.row, "scrnNm", rtn["scrnNm"]);
 		this.ds_list.setColumn(e.row, "scrnUrlAddr", rtn["scrnUrlAddr"]);

 		obj.moveToNextCell();
	}
}

/***************************************************************************
 * 기      능		: (공통) 데이타셋 ColumnChange이벤트 발생시에 시스템공통칼럼("_chk", "xRowStatusType")을
					제외한 칼럼들만 상태값 변경처리
 ***************************************************************************/
function ds_list_oncolumnchanged(obj:Dataset, e:DSColChangeEventInfo)
{
	if(e.columnid != gfn_getColNmChk() && e.columnid != gfn_getColNmStatus()) {
		gfn_modify(obj, e);
	}
}

//**************************************************************************
// [ PART 5 ] Main Process Event 정의
//**************************************************************************

/***************************************************************************
 * 함  수  명		: fn_commSearch()
 * 기      능		: (공통버튼)조회 프로세스
 ***************************************************************************/
function fn_commSearch()
{
	var sType = gfn_getCommTypeAppend();

	//if (!fn_preSearch(sType)) return false;

	// 필수 입력 체크
	if (!gfn_dsValidCheck(div_body.grd_list, ds_listValid)) {
		return;
	}
	ds_input.setColumn(0, "menuStrcNo", ds_input.getColumn(0, "bzdpDivCd"));
	ds_input.setColumn(0, "strgEvenYn", "N");
	fn_commSearchSub(sType);

}

function fn_commSearchSub(sType)
{

	var sType = gfn_getCommTypeAppend();
	
	ds_list_Tree.clearData();
	// KWData 설정
	gfn_kwDataInit();
	gfn_setKwData_trscCode("SYS00002R29");
	gfn_setKwData_nameSpace("com.kyowon.krp.sys.dc.authorityadmnistrationdc.DCAthrAdmnSqlMap");

	gfn_setKwData_sqlId("getListAllMenu");
	gfn_tranDIS(sType
				, "ds_input=ds_input"
				, "ds_list_Tree=datas"
				, "fn_commSearch_callBack");
}

/***************************************************************************
 * 함  수  명		: fn_spchSearch()
 * 기      능		: 특정메뉴조회 프로세스
 ***************************************************************************/
function fn_spchSearch()
{
	var sType = gfn_getCommTypeAppend();

	ds_list.clearData();

	// KWData 설정
	gfn_kwDataInit();
	gfn_setKwData_trscCode("SYS00002R28");
	gfn_setKwData_nameSpace("com.kyowon.krp.sys.dc.authorityadmnistrationdc.DCAthrAdmnSqlMap");

	gfn_setKwData_sqlId("getListSpcfMenu");
	gfn_tranDIS(sType
				, "ds_input=ds_input"
				, "ds_list=datas"
				, "fn_spchSearch_callBack"
				, true
				, false);
}
/***************************************************************************
 * 함  수  명		: fn_commSave()
 * 기      능		: (공통버튼)저장 프로세스
 ***************************************************************************/
function fn_commSave()
{
	var sType = gfn_getCommTypeSave();

	// 필수 입력 체크
	if (!gfn_dsValidCheck(div_body.grd_list, ds_listValid)) {
		return;
	}

	if (!fn_preSave(sType)) return false;

	for (var i = 0; i <= ds_list.rowcount; i++)
	{
		if ( ds_list.getColumn(i, gfn_getColNmStatus()) == gfn_getRowTypeInsert() || ds_list.getColumn(i, gfn_getColNmStatus()) == gfn_getRowTypeUpdate() ) {
			// menuCd 구하기 위한 데이타
			ds_list.setColumn(i, "bzdpDivCd", ds_input.getColumn(0, "bzdpDivCd"));
			// menuStrcNo 를 구하기 위한 데이타
			ds_list.setColumn(i, "hgrnMenuId", ds_input.getColumn(0, "hgrnMenuId"));
			ds_list.setColumn(i, "menuLvlVl",  ds_input.getColumn(0, "hgrnMenuLvlVl"));
		}
		// 신규로 등록하는 경우만 상위의 메뉴구조번호를 셋팅한다.
		if ( ds_list.getColumn(i, gfn_getColNmStatus()) == gfn_getRowTypeInsert() ) {
			ds_list.setColumn(i, "hgrnStrcNo", ds_input.getColumn(0, "menuStrcNo"));
		}
		
		// 신규로 등록하는 경우 팝업여부를 선택하지 않는 경우 경고창		
		if ( ds_list.getColumn(i, gfn_getColNmStatus()) == gfn_getRowTypeInsert() ) {
			if ( ds_list.getColumn(i, "ppupDspsYn") == null) {
				alert("팝업여부를 선택하셔야 합니다.");
				return false;
			}
		}
	}
	
	ds_input.setColumn(0,"strgEvenYn", "Y"); 

	// KWData 설정
	gfn_kwDataInit();
	gfn_setKwData_trscCode("SYS00001C03");

	gfn_tranNMCI(sType
				, "ds_MenuAdmn=ds_list:U"
				, ""
				, "fn_commSave_callBack");
}

//**************************************************************************
// [ PART 6 ] 사용자정의함수 정의
//**************************************************************************

/***************************************************************************
 * 함  수  명		: fn_commSearch_callBack()
 * 기      능		: [CallBack함수] Transaction Callback함수
 ***************************************************************************/
function fn_commSearch_callBack(strSvcID, nErrorCode, strErrorMsg)
{
	// 트리상태(열림/펼침)처리 위한 칼럼 생성
	ds_list_Tree.addColumn("treeStat", "String", 1);
	
	if (ds_list_Tree.rowcount <= 0) { return false; }
	
	if (ds_input.getColumn(0, "strgEvenYn") == "Y") {
		
 		// 선택된 메뉴위치로 이동-------------------------------------
		var objDs 		= ds_list_Tree;
		var objGrd 		= div_body.grd_tree_list; 		
 		_gfn_moveMenuPos(objDs, objGrd, ds_input.getColumn(0, "menuStrcNo"), "menuStrcNo", "hgrnStrcNo");
		
		ds_input.setColumn(0, "strgEvenYn", "N");
	}
	
	// 조회 후 처리
	fn_postSearch(strSvcID);
}

/***************************************************************************
 * 함  수  명		: fn_spchSearch_callBack()
 * 기      능		: [CallBack함수] Transaction Callback함수
 ***************************************************************************/
function fn_spchSearch_callBack(strSvcID, nErrorCode, strErrorMsg)
{
}

/***************************************************************************
 * 함  수  명		: fn_commSave_callBack()
 * 기      능		: [CallBack함수] Transaction Callback함수
 ***************************************************************************/
function fn_commSave_callBack(strSvcID, nErrorCode, strErrorMsg)
{
	if(nErrorCode != 0) {
		return;
	}
	//ds_input.copyData(ds_input_Temp);

	// 저장 후 처리
	fn_commSearchSub(strSvcID);
}

/***************************************************************************
 * 함  수  명		: div_body_grd_tree_list_onselectchanged()
 * 기      능		: [이벤트 함수] tree에서 특정 데이터를 선택했을 때 발생하는 이벤트
 ***************************************************************************/
function div_body_grd_tree_list_onselectchanged(obj:Grid, e:GridSelectEventInfo)
{
// 	// 조회전 불필요한 하위 메뉴 목록을 조회하는 것 방지
// 	if (e.row == -1) { return false; }
// 
// 	//trace("e.row::"+e.row);	
// 	
// 	// 저장에 의해 메뉴가 재조회 될 경우에, 해당 row를 선택
// 	var preMenuStrcNo = ds_input.getColumn(0, "menuStrcNo");
// 	if (ds_input.getColumn(0, "strgEvenYn") == "Y" && preMenuStrcNo != "" && preMenuStrcNo != ds_list_Tree.getColumn(e.row, "menuStrcNo")) { return false; }
// 	
// 	//하위로 등록가능한 메뉴유형
// 	var selMenuLvlVl = ds_list_Tree.getColumn(e.row, "menuLvlVl");
// 	
// 	trace("selMenuLvlVl::"+selMenuLvlVl);
// 
// 	if (selMenuLvlVl == "0"){
// 		dsl_menuTypCd.clearData();
// 		var nRow = dsl_menuTypCd.addRow();
// 		dsl_menuTypCd.setColumn( nRow, "code", "01");
// 		dsl_menuTypCd.setColumn( nRow, "data", "최상위메뉴");
// 		//div_body.grd_tree_list.setTreeStatus(e.row ,true); 
// 	} else if (selMenuLvlVl== "1"){
// 		dsl_menuTypCd.clearData();
// 		var nRow = dsl_menuTypCd.addRow();
// 		dsl_menuTypCd.setColumn( nRow, "code", "02");
// 		dsl_menuTypCd.setColumn( nRow, "data", "메뉴폴더");
// 		//div_body.grd_tree_list.setTreeStatus(e.row ,true); 
// 	} else if (selMenuLvlVl == "2"){
// 		dsl_menuTypCd.clearData();
// 		var nRow = dsl_menuTypCd.addRow();
// 		dsl_menuTypCd.setColumn( nRow, "code", "02");
// 		dsl_menuTypCd.setColumn( nRow, "data", "메뉴폴더");
// 		nRow = dsl_menuTypCd.addRow();
// 		dsl_menuTypCd.setColumn( nRow, "code", "03");
// 		dsl_menuTypCd.setColumn( nRow, "data", "프로그램");
// 		//div_body.grd_tree_list.setTreeStatus(e.row ,true); 
// 	} else if (selMenuLvlVl == "3"){
// 		dsl_menuTypCd.clearData();
// 		var nRow = dsl_menuTypCd.addRow();
// 		dsl_menuTypCd.setColumn( nRow, "code", "03");
// 		//dsl_menuTypCd.setColumn( nRow, "data", "프로그램");
// 		// 마지막 레벨은 편의상 하위를 표시하지 않는다.
// 	} else {
// 		dsl_menuTypCd.clearData();
// 	}
// 	
// 	//선택한 아이템이 프로그램인경우 하위메뉴 등록 불가(행추가, 행삭제 비활성)
// 	if (ds_list_Tree.getColumn(e.row, "menuTypCd") == "03"){
// 		div_body.btn_grd_Add.enable = false;
// 		div_body.btn_grd_Del.enable = false;
// 	} else {
// 		div_body.btn_grd_Add.enable = true;
// 		div_body.btn_grd_Del.enable = true;
// 	}
// 
// 	// 메뉴 하위 목록을 표시하기 위한 처리
// 	var sType = gfn_getCommTypeAppend();
// 
// 	var bizTyp = ds_list_Tree.getColumn(e.row, "bizTyp");
// 	var menuCd = ds_list_Tree.getColumn(e.row, "menuCd");
// 	var menuLvlVl = ds_list_Tree.getColumn(e.row, "menuLvlVl");
// 	var hgrnStrcNo = gfn_trim(ds_list_Tree.getColumn(e.row, "hgrnStrcNo"));
// 	var menuStrcNo = ds_list_Tree.getColumn(e.row, "menuStrcNo");
// 	var menuTypCd = ds_list_Tree.getColumn(e.row, "menuTypCd");
// 
// 	ds_input.setColumn( 0, "bizTyp", bizTyp);
// 	ds_input.setColumn( 0, "hgrnMenuId", menuCd);
// 	ds_input.setColumn( 0, "menuLvlVl", parseInt(menuLvlVl)+1);
// 	ds_input.setColumn( 0, "hgrnMenuLvlVl", parseInt(menuLvlVl)+1);
// 	if (hgrnStrcNo!="") {
// 		ds_input.setColumn( 0, "hgrnStrcNo", hgrnStrcNo);
// 	} else {
// 		ds_input.setColumn( 0, "hgrnStrcNo", bizTyp);
// 	}
// 	ds_input.setColumn( 0, "menuStrcNo", menuStrcNo);
// 	ds_input.setColumn( 0, "menuTypCd", menuTypCd);
// 	
// 	fn_spchSearch();

}

function div_body_grd_tree_list_oncellclick(obj:Grid, e:GridClickEventInfo)
{
	fn_setMenuOpen(e.row);
}

function fn_setMenuOpen(nCRow)
{
	var objDs 	= this.ds_list_Tree;

	// 조회전 불필요한 하위 메뉴 목록을 조회하는 것 방지
	if (nCRow == -1) { return false; }

	//trace("nCRow::"+nCRow);	
	
	// 저장에 의해 메뉴가 재조회 될 경우에, 해당 row를 선택
	var preMenuStrcNo = ds_input.getColumn(0, "menuStrcNo");
	if (ds_input.getColumn(0, "strgEvenYn") == "Y" && preMenuStrcNo != "" && preMenuStrcNo != ds_list_Tree.getColumn(nCRow, "menuStrcNo")) { return false; }
	
	//하위로 등록가능한 메뉴유형
	var selMenuLvlVl = ds_list_Tree.getColumn(nCRow, "menuLvlVl");

	if (selMenuLvlVl == "0"){
		dsl_menuTypCd.clearData();
		var nRow = dsl_menuTypCd.addRow();
		dsl_menuTypCd.setColumn( nRow, "code", "01");
		dsl_menuTypCd.setColumn( nRow, "data", "최상위메뉴");
		fn_setTreeState(objDs, nCRow);	
	} else if (selMenuLvlVl== "1"){
		dsl_menuTypCd.clearData();
		var nRow = dsl_menuTypCd.addRow();
		dsl_menuTypCd.setColumn( nRow, "code", "02");
		dsl_menuTypCd.setColumn( nRow, "data", "메뉴폴더");
		fn_setTreeState(objDs, nCRow);	
	} else if (selMenuLvlVl == "2"){
		dsl_menuTypCd.clearData();
		var nRow = dsl_menuTypCd.addRow();
		dsl_menuTypCd.setColumn( nRow, "code", "02");
		dsl_menuTypCd.setColumn( nRow, "data", "메뉴폴더");
		nRow = dsl_menuTypCd.addRow();
		dsl_menuTypCd.setColumn( nRow, "code", "03");
		dsl_menuTypCd.setColumn( nRow, "data", "프로그램");
		fn_setTreeState(objDs, nCRow);	
	} else if (selMenuLvlVl == "3"){
		dsl_menuTypCd.clearData();
		var nRow = dsl_menuTypCd.addRow();
		dsl_menuTypCd.setColumn( nRow, "code", "03");
		dsl_menuTypCd.setColumn( nRow, "data", "프로그램");
		// 마지막 레벨은 편의상 하위를 표시하지 않는다.
	} else {
		dsl_menuTypCd.clearData();
	}
	
	//선택한 아이템이 프로그램인경우 하위메뉴 등록 불가(행추가, 행삭제 비활성)
	if (ds_list_Tree.getColumn(nCRow, "menuTypCd") == "03"){
		div_body.btn_grd_Add.enable = false;
		div_body.btn_grd_Del.enable = false;
	} else {
		div_body.btn_grd_Add.enable = true;
		div_body.btn_grd_Del.enable = true;
	}

	// 메뉴 하위 목록을 표시하기 위한 처리
	var sType = gfn_getCommTypeAppend();

	var bzdpDivCd = ds_list_Tree.getColumn(nCRow, "bzdpDivCd");
	var menuCd = ds_list_Tree.getColumn(nCRow, "menuCd");
	var menuLvlVl = ds_list_Tree.getColumn(nCRow, "menuLvlVl");
	var hgrnStrcNo = gfn_trim(ds_list_Tree.getColumn(nCRow, "hgrnStrcNo"));
	var menuStrcNo = ds_list_Tree.getColumn(nCRow, "menuStrcNo");
	var menuTypCd = ds_list_Tree.getColumn(nCRow, "menuTypCd");

	ds_input.setColumn( 0, "bzdpDivCd", bzdpDivCd);
	ds_input.setColumn( 0, "hgrnMenuId", menuCd);
	ds_input.setColumn( 0, "menuLvlVl", parseInt(menuLvlVl)+1);
	ds_input.setColumn( 0, "hgrnMenuLvlVl", parseInt(menuLvlVl)+1);
	if (hgrnStrcNo!="") {
		ds_input.setColumn( 0, "hgrnStrcNo", hgrnStrcNo);
	} else {
		ds_input.setColumn( 0, "hgrnStrcNo", bzdpDivCd);
	}
	ds_input.setColumn( 0, "menuStrcNo", menuStrcNo);
	ds_input.setColumn( 0, "menuTypCd", menuTypCd);
	
	fn_spchSearch();
}

function fn_setTreeState(objDs, nRow)
{
	if(div_body.grd_tree_list.getTreeChildCount(nRow) == 0) return;

	var bState = objDs.getColumn(nRow, "treeStat");

	if(bState == true)
		objDs.setColumn(nRow, "treeStat", 0);
	else
		objDs.setColumn(nRow, "treeStat", 1);
}]]></Script>
  </Form>
</FDL>

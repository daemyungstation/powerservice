<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="AlowMap">

    <!-- /* sql-pay.xml [전사판매 급여산출_조회] ID : pay.selectTotComptGrpList 작성자 : 김아영  */ -->
    <select id="AlowMap.selectTotComptGrpList" parameterType="map" resultType="resultMap">

        WITH /* AlowMap.selectTotComptGrpList */ w_em as (
            SELECT emp.emple_no
                 , dept.dept_cd
                 , dept.lvl
                 <!--
                 1,2 레벨   dept_cd
                 3 레벨     high_dept_cd - 아버지
                 4 레벨     부모의 high_dept_cd - 할아버지
                 5 레벨     할아버지의 high_dept_cd - 고조할아버지
                 6 레벨     고조 할아버지의 high_dept_cd  - 증조할아버지
                 -->
                 , dept.lvl_dept_cd
              FROM EMPLOYEE emp INNER JOIN (select *
                                              from (SELECT dept_cd
                                                         , lvl
                                                         , case  when lvl=1 then dept_cd
                                                                 when lvl=2 then dept_cd
                                                                 when lvl=3 then high_dept_cd
                                                                 when lvl=4 then (SELECT d1.high_dept_Cd
                                                                                    FROM department d1
                                                                                   WHERE d1.dept_cd=dp.high_dept_cd)

                                                                 when lvl=5 then (SELECT d2.high_dept_cd
                                                                                    FROM department d2
                                                                                   WHERE d2.dept_cd = (SELECT d3.high_dept_Cd
                                                                                                         FROM department d3
                                                                                                        WHERE d3.dept_cd=dp.high_dept_cd))
                                                                 when lvl=6 then (SELECT d4.high_dept_cd
                                                                                    FROM department d4
                                                                                   WHERE d4.dept_cd =(SELECT d5.high_dept_cd
                                                                                                        FROM department d5
                                                                                                       WHERE d5.dept_cd = (SELECT d6.high_dept_Cd
                                                                                                                             FROM department d6
                                                                                                                            WHERE d6.dept_cd=dp.high_dept_cd)))
                                                                 else dept_cd
                                                                 end  as lvl_dept_cd
                                                      FROM department dp
                                                     WHERE dept_kind = '02' and dp.USE_YN ='Y'
                                                    ) aa
                                                          /*
                                                          이부분 : where (dept_cd = a.dept_cd or lvl_dept_cd=a.dept_cd )
                                                          */
                                              ) dept on (dept.dept_cd = emp.dept_cd  or dept.lvl_dept_cd = emp.dept_cd)
            AND to_number(emp.ent_day) <![CDATA[>=]]> to_number(#{alow_dt})
            and (emp.del_fg='N' or (emp.del_fg='Y' and emp.alow_yn ='Y') )
        ),
        w_em2 as (
            SELECT emple_no
                 , lvl_dept_cd dept_cd
            FROM w_em
            union
            SELECT emple_no
                 , dept_cd
            FROM w_em
            ORDER BY dept_cd
        )
        SELECT tt.*
          FROM (SELECT nvl(b.alow_dt,#{alow_dt}) as alow_dt
                     , a.dept_cd as brach_dept_cd
                     , FN_DEPT_NM(a.dept_cd) as brach_dept_nm
                     , 'C' as crt_flag
                     , '보고' as crt_flag_nm
                     , (select count(*)
                          from (SELECT dept_cd
                                     , lvl
                                     , case  when lvl=1 then dept_cd
                                             when lvl=2 then dept_cd
                                             when lvl=3 then high_dept_cd
                                             when lvl=4 then (SELECT high_dept_Cd FROM department WHERE dept_cd=dp.high_dept_cd)
                                             when lvl=5 then (SELECT high_dept_cd FROM department WHERE dept_cd = (SELECT high_dept_Cd FROM department WHERE dept_cd=dp.high_dept_cd))
                                             when lvl=6 then (SELECT high_dept_cd FROM department
                                                                 WHERE dept_cd =(SELECT high_dept_cd FROM department
                                                                                 WHERE dept_cd = (SELECT high_dept_Cd FROM department WHERE dept_cd=dp.high_dept_cd)))
                                             else dept_cd
                                         end  as lvl_dept_cd
                                  FROM department dp
                                 WHERE  dp.USE_YN ='Y'
                                     ) aa
                                     WHERE (dept_cd = a.dept_cd or lvl_dept_cd=a.dept_cd ) ) as ofce_cnt
                     , (select count(distinct(e.emple_no))
                          from w_em2 e
                         where e.dept_cd = a.dept_cd) as emple_cnt
                     , crt_pay_flag
                     , a.lvl
                     , ( select use_yn FROM DEPARTMENT WHERE dept_cd = a.high_dept_cd ) high_use_yn
                     , '' as cnt
                     , '' as chk
                FROM DEPARTMENT a LEFT OUTER JOIN ALOW_ATDN_MST b
                            ON a.dept_cd = b.brach_dept_cd
                                AND b.alow_dt = #{alow_dt}
                WHERE a.use_yn = 'Y'
                  AND a.dept_kind = '02'
                  AND (a.lvl = 1 or a.lvl = 2)
            ) tt
         WHERE ( high_use_yn = 'Y' or high_use_yn is null )
         ORDER BY brach_dept_cd asc
                , lvl desc
    </select>


    <!-- sql-pay.xml [급여 Master 확정여부 확인] ID : pay.isAlowClose 작성자 : 이금례 -->
    <select id="AlowMap.isAlowClose" parameterType="map" resultType="string">
        SELECT /* AlowMap.isAlowClose */
               CASE WHEN nvl(ALOW_CLOSE_DATE,'N') = 'N' THEN 'N' ELSE 'Y' END
          FROM ALOW_MST
         WHERE alow_dt = #{alow_dt} AND EMPLE_NO IN (SELECT EMPLE_NO
                                                           FROM EMPLOYEE EMP INNER JOIN DEPARTMENT DEPT ON DEPT.DEPT_CD = EMP.DEPT_CD
                                                           <if test="dept_kind != null and dept_kind != ''">
                                                                AND DEPT_KIND = #{dept_kind}
                                                            </if>
                                                            )
           AND ROWNUM = 1
    </select>


    <!-- sql-pay.xml [근태리스트조회_신규생성자료] ID : pay.selectAtdnNewList 작성자 : 김아영 -->
    <select id="AlowMap.selectAtdnNewList" parameterType="map" resultType="resultMap">
        SELECT /* AlowMap.selectAtdnNewList */
                distinct #{alow_dt} as alow_dt
                , #{brach_dept_cd} as brach_dept_cd
                , emple_no
                , emple_nm
                , #{atdn_day_cnt} as atdn_day_cnt
                , '0' as event_alow_mstr
                , '0' as event_alow_frmstr
                , '0' as event_alow_frmng
                , '0' as event_alow_helper
                , a.dept_cd
                , FN_DEPT_NM(a.dept_cd) as dept_nm
                , a.jobduty_cd
                , '' as crt_flag
                , '' as crt_flag_nm
        FROM  EMPLOYEE a
        INNER JOIN (select *
                      from (SELECT dept_cd
                                 , lvl
                                 , dept_kind
                                 , case  when lvl=1 then dept_cd
                                         when lvl=2 then dept_cd
                                         when lvl=3 then high_dept_cd
                                         when lvl=4 then (SELECT high_dept_Cd FROM department WHERE dept_cd=dp.high_dept_cd)
                                         when lvl=5 then  (SELECT high_dept_cd FROM department WHERE dept_cd = (SELECT high_dept_Cd FROM department WHERE dept_cd=dp.high_dept_cd))
                                         when lvl=6 then  (	SELECT high_dept_cd FROM department
                                                             WHERE dept_cd =(SELECT high_dept_cd FROM department
                                                                             WHERE dept_cd = (SELECT high_dept_Cd FROM department WHERE dept_cd=dp.high_dept_cd)))
                                          else dept_cd
                                     end  as lvl_dept_cd
                              FROM department dp
                             where dp.USE_YN ='Y'
                            ) aa
                     where (dept_cd = #{brach_dept_cd} OR lvl_dept_cd=#{brach_dept_cd} )
                    ) dept ON (dept.dept_cd = a.dept_cd OR dept.lvl_dept_cd = a.dept_cd )
         WHERE 1=1
           AND to_number(ent_day) &gt;= to_number(#{alow_dt})
           AND dept.dept_kind=#{dept_kind}

        <if test="dept_kind == '01'">
           AND a.alow_yn = 'Y'
           AND a.jobduty_cd in ('016', '015') <!-- LC, 지점장 -->
           AND a.posn_cd in ('22','23','24') <!-- Bronze, Gold, Silver -->
        </if>
        <if test="dept_kind != '01'">
           AND ( a.del_fg = 'N' OR ( a.del_fg = 'Y' and  a.alow_yn = 'Y' )	)
        </if>
         ORDER BY a.dept_cd
                , emple_nm
    </select>

    <!-- sql-pay.xml [근태리스트조회_기등록자료] ID : pay.selectAtdnOldList 작성자 : 김아영 -->
    <select id="AlowMap.selectAtdnOldList" parameterType="map" resultType="resultMap">
        SELECT /* AlowMap.selectAtdnOldList */
               a.alow_dt
             , a.brach_dept_cd
             , a.emple_no
             , FN_EMPLE_NM(a.emple_no) as emple_nm
             , atdn_day_cnt
             , event_alow_mstr
             , event_alow_frmstr
             , event_alow_frmng
             , event_alow_helper
             , c.dept_cd
             , FN_DEPT_NM(c.dept_cd) as dept_nm
             , c.jobduty_cd
             , crt_flag
             , CASE WHEN crt_flag = 'C' THEN '보고' WHEN crt_flag = 'U' THEN '반려'  ELSE 'X' END as crt_flag_nm
        FROM ALOW_ATDN a JOIN ALOW_ATDN_MST b
                        ON a.alow_dt = b.alow_dt AND a.brach_dept_cd = b.brach_dept_cd
                JOIN EMPLOYEE c ON a.emple_no = c.emple_no
         WHERE a.alow_dt = #{alow_dt}
           AND a.brach_dept_cd = #{brach_dept_cd}
           AND (c.jobduty_cd = '016' or  c.jobduty_cd = '015')
           AND (c.posn_cd = '22' or c.posn_cd = '23' or c.posn_cd = '24')
        ORDER BY dept_cd
               , emple_nm
               , posn_cd desc
    </select>


    <!-- sql-pay.xml [근태Master 삭제] ID : pay.deleteAtdnMst 작성자 : 김아영 -->
    <delete id="AlowMap.deleteAtdnMst" parameterType="map">
        DELETE /* AlowMap.deleteAtdnMst */
          FROM ALOW_ATDN_MST
         WHERE alow_dt = #{alow_dt}
           AND brach_dept_cd = #{brach_dept_cd}
    </delete>

    <!-- sql-pay.xml [지점별 급여생성여부 등록(전사판매)] ID : pay.insertAtdnMstGrp 작성자 : 김아영 -->
    <insert id="AlowMap.insertAtdnMstGrp" parameterType="map">
        INSERT /* AlowMap.insertAtdnMstGrp */
          INTO ALOW_ATDN_MST (
              alow_dt
            , brach_dept_cd
            , crt_flag
            , crt_pay_flag
            , reg_dm
            , reg_man
        )
        VALUES(
              #{alow_dt}
            , #{brach_dept_cd}
            , 'C'
            , 'Y'
            ,SYSDATE
            ,#{rgsr_id}
        )
    </insert>

    <parameterMap id="upComptAlowGrpMap" type="map">
        <parameter property="alow_dt" mode="IN" jdbcType="VARCHAR"  javaType="java.lang.String" />
        <parameter property="emple_no" mode="IN" jdbcType="VARCHAR"  javaType="java.lang.String" />
    </parameterMap>

    <update id="AlowMap.comptAlowGrp" statementType="CALLABLE" parameterMap="upComptAlowGrpMap">
           {call SP_UP_COMPT_ALOW_GRP (?, ?) }
    </update>


    <!-- 수당산출(전사판매)-개별(전사) -->
    <!-- sql-pay.xml [전사판매 급여산출_조회] ID : pay.selectTotComptGrpList 작성자 : 김아영 -->
        <!-- sql-pay.xml [전사판매 개별 산출_대상 조회] ID : pay.selectPerComptGrpList 작성자 : 김아영 -->
    <select id="AlowMap.selectPerComptGrpList" parameterType="map" resultType="resultMap">
        /* AlowMap.selectPerComptGrpList */
        <if test="dept_code != null and dept_code != ''">
        WITH W_DEPT AS (
            SELECT dept_cd
                 , dept_nm
                 , high_dept_cd
                 , dept_kind
                 , use_yn
              FROM DEPARTMENT
            CONNECT BY PRIOR DEPT_CD = HIGH_DEPT_CD
             START WITH dept_cd = #{dept_code}
        )
        </if>
        SELECT #{alow_dt} as alow_dt
             , a.emple_no
             , a.emple_nm
             , a.dept_cd
             , FN_DEPT_NM(a.dept_cd) as dept_nm
             , a.jobduty_cd
             , '' as chk
             , case when mst.ALOW_DT is null then '미산출' else '산출' end crt_flag_nm
          FROM EMPLOYEE a LEFT OUTER JOIN ALOW_MST mst on a.emple_no= mst.emple_no  AND alow_dt = #{alow_dt}

        <if test="dept_code != null and dept_code != ''">
       INNER JOIN W_DEPT ON W_DEPT.DEPT_CD = a.DEPT_CD and W_DEPT.dept_kind = '02' and W_DEPT.use_yn = 'Y'
       </if>

         WHERE 1=1
           AND (a.del_fg='N' or (a.del_fg='Y' and a.alow_yn ='Y'))

        <if test="emple_no != null and emple_no != ''">
           AND a.emple_no like '%' || #{emple_no} || '%'
        </if>

        <if test="emple_nm != null and emple_nm != ''">
           AND a.emple_nm like '%' || #{emple_nm} || '%'
        </if>
         ORDER BY a.dept_cd
             , emple_nm
    </select>

    <!-- sql-pay.xml [B2B업체별 수수료 현황] ID : pay.selectPayAgencyLis 작성자 : 이금례 -->
    <select id="AlowMap.selectPayAgencyList" parameterType="map" resultType="resultMap">
        WITH PDM AS (
            SELECT nvl(sum(PDD.PAY_AMT),0) ALL_BU_AMT /* 부금_입금액 */
                 , BSTD.ST_GRP_CD
              FROM PAY_DL_MST PDM01 INNER JOIN PAY_DL_DTL PDD ON PDM01.PAY_DL_SEQ = PDD.PAY_DL_SEQ AND PDM01.PAY_DL_YYYYMM = PDD.PAY_DL_YYYYMM AND PDD.DL_TYPE = '01' /* 입금마감 */
                        INNER JOIN
                   MEM_PROD_ACCNT MPA ON PDM01.ACCNT_NO = MPA.ACCNT_NO
                        INNER JOIN
                   B2B_SALE_TYPE_DTL BSTD ON PDM01.SALE_TYPE = BSTD.SALE_TYPE
             WHERE PDM01.DL_TYPE = '01'
               AND PDM01.PAY_DL_YYYYMM = #{alow_dt}
               AND MPA.B2B_COMP_CD IS NOT NULL
               AND MPA.DEL_FG = 'N'
            GROUP BY BSTD.ST_GRP_CD
        )
        SELECT /* AlowMap.selectPayAgencyList */
               A.*
             , nvl(PDM.ALL_BU_AMT,0) ALL_BU_AMT
          FROM (SELECT ALOW_DT
                     , sum(CNT) CNT
                     , sum(AMT) AMT
                     , sum(ALOW_AMT) ALOW_AMT
                     , SM.ST_GRP_CD
                     , SM.ST_GRP_NM
                     , sum(ALOW.RESN_REDMP) RESN_REDMP_AMT
                     , sum(ALOW.OVER_REDMP) OVER_REDMP_AMT
                     , sum(ALOW.RESN_REDMP) + sum(ALOW.OVER_REDMP) REDMP_AMT
                     , sum(ALOW_AMT) - (sum(ALOW.RESN_REDMP) + sum(ALOW.OVER_REDMP)) REAL_AMT
                  FROM ALOW_MST_AGENCY ALOW
                        LEFT OUTER JOIN B2BCOMCD B2B ON B2B.COM_CD = ALOW.B2B_COMP_CD
                        LEFT OUTER JOIN B2B_SALE_TYPE_DTL SD ON B2B.SALE_TYPE = SD.SALE_TYPE
                        LEFT OUTER JOIN B2B_SALE_TYPE_MST SM ON SD.ST_GRP_CD = SM.ST_GRP_CD
                 WHERE	1=1
                   AND ALOW.ALOW_DT = #{alow_dt}
                <if test="st_grp_cd != null and st_grp_cd != ''">
                   AND SM.ST_GRP_CD = #{st_grp_cd}
                </if>
                 GROUP BY SM.ST_GRP_CD
                     , SM.ST_GRP_NM
                     , ALOW_DT
               ) A LEFT OUTER JOIN PDM ON A.ST_GRP_CD = PDM.ST_GRP_CD
         ORDER BY A.ST_GRP_CD
    </select>

    <!-- B2B업체별 수수료 집계 -->
    <select id="AlowMap.selectPayAgencySum" parameterType="map" resultType="resultMap">
        SELECT /* AlowMap.selectPayAgencySum */
               ALOW_DT,
               sum(CNT) CNT,
               sum(AMT) AMT,
               sum(ALOW_AMT) ALOW_AMT,
               sum(ALOW.RESN_REDMP) RESN_REDMP_AMT	,
               sum(ALOW.OVER_REDMP) OVER_REDMP_AMT	,
               sum(ALOW.RESN_REDMP) + SUM(ALOW.OVER_REDMP) REDMP_AMT,
               sum(ALOW_AMT) - (SUM(ALOW.RESN_REDMP) + SUM(ALOW.OVER_REDMP)) REAL_AMT
          FROM ALOW_MST_AGENCY ALOW
                LEFT OUTER JOIN B2BCOMCD B2B ON B2B.COM_CD = ALOW.B2B_COMP_CD
                LEFT OUTER JOIN B2B_SALE_TYPE_DTL SD ON B2B.SALE_TYPE = SD.SALE_TYPE
                LEFT OUTER JOIN B2B_SALE_TYPE_MST SM ON SD.ST_GRP_CD = SM.ST_GRP_CD
         WHERE	1=1
           AND ALOW.ALOW_DT = #{alow_dt}
        <if test="st_grp_cd != null and st_grp_cd != ''">
           AND SM.ST_GRP_CD = #{st_grp_cd}
        </if>
         GROUP BY ALOW_DT
    </select>


    <!-- sql-pay.xml [B2B수수료 업로드 조회] ID : pay.selectPayAgencyByExcelList 작성자 : 김은진 -->
    <select id="AlowMap.selectPayAgencyByExcelList" parameterType="map" resultType="resultMap">
        <include refid="CommonMap.headerPageSql" />

        SELECT /* AlowMap.selectPayAgencyByExcelList */
               alow_dt
             , adt.accnt_no
             , mpa.prod_cd
             , fn_prod_nm(mpa.prod_cd) prod_nm
             , fn_mem_nm(mpa.mem_no) AS mem_nm
             , adt.alow_cd
             , acc.alow_nm
             , '' AS alow_b2b_comp_cd
             , '' AS alow_b2b_comp_nm
             , amt
             , mpa.b2b_comp_cd
             , b2b.COM_NM as b2b_comp_nm

        <if test="tot_row_cnt != null and tot_row_cnt == '0'.toString()">
             , COUNT(*) OVER() tot_row_cnt                      /* 총데이터건수 */
        </if>
        <if test="tot_row_cnt == null or tot_row_cnt != '0'.toString()">
             , TO_NUMBER(#{tot_row_cnt}) tot_row_cnt             /* 총데이터건수 */
        </if>

        FROM alow_da_dtl adt
                JOIN alow_com_cd acc ON adt.alow_cd=acc.alow_cd
                LEFT JOIN mem_prod_accnt mpa ON adt.accnt_no=mpa.accnt_no
                LEFT JOIN B2BCOMCD b2b on b2b.COM_CD = mpa.B2B_COMP_CD
         WHERE 1=1
           AND mpa.del_fg='N'
           AND adt.alow_cd in ('T33','F8','F10')
           AND adt.dtl_seq = (SELECT max(dtl_seq)
                                FROM alow_da_dtl
                                WHERE  alow_dt=adt.alow_Dt
                                    AND  alow_cd= adt.alow_cd
                                    AND emple_no=adt.emple_no
                                    AND prod_cd=adt.prod_cd
                                    AND pay_no=adt.pay_no
                                    and accnt_no = adt.accnt_no
                              )
        and adt.alow_dt	= #{alow_dt}
        AND amt <![CDATA[>]]> 0

        <!-- <if test="orderBy != null and orderBy == ''">
        ORDER BY adt.alow_cd
        </if> -->

        <include refid="CommonMap.footerPageSql" />
    </select>

    <!-- sql-task.xml [수당 근거삭제:B2B 한정] ID : pay.deleteALowDaDtl 작성자 : 김은진 -->
    <delete id="AlowMap.deleteALowDaDtl" parameterType="map">
        DELETE /* AlowMap.deleteALowDaDtl */
          FROM alow_da_dtl
         WHERE alow_cd=#{alow_cd}
           AND alow_dt =#{alow_dt}
           AND fn_st_grp_cd(accnt_no) =#{st_grp_cd}
    </delete>

    <!-- sql-task.xml [B2B수수료 상세근거 삭제 TMP] ID : pay.deleteAlowDtlT33 작성자 : 김은진 -->
    <delete id="AlowMap.deleteAlowTmpDtlT33" parameterType="map">
        DELETE /* AlowMap.deleteAlowTmpDtlT33 */
          FROM tmp_alow_dtl_t33
         WHERE alow_dt =#{alow_dt}
    </delete>

    <!-- sql-task.xml [B2B수수료 엑셀 업로드] ID : pay.insertTmpAlowDtlT33ByExcel 작성자 : 김은진 -->
    <insert id="AlowMap.insertTmpAlowDtlT33ByExcel" parameterType="map">
        INSERT /* AlowMap.insertTmpAlowDtlT33ByExcel */
          INTO tmp_alow_dtl_t33 (
                  ALOW_DT
                , B2B_COMP_CD
                , ALOW_CD
                , ACCNT_NO
                , PAY_NO
                , AMT
                , PROD_CD
                , ALOW_B2B_COMP_CD
            )
        SELECT #{alow_dt}
             , #{b2b_comp_cd}
             , #{alow_cd}
             , #{accnt_no}
             , #{pay_no}
             , #{amt}
             , #{prod_cd}
             , #{alow_b2b_comp_cd}
          FROM DUAL
    </insert>


    <!-- sql-task.xml [수당근거 입력 : B2B수수료(T33)] 작성자 : 김은진 -->
    <insert id="AlowMap.insertAlowDtlForT33" parameterType="map">
        INSERT /* AlowMap.insertAlowDtlForT33 */
          INTO alow_da_dtl
        (
            ALOW_DT
            , EMPLE_NO
            , ALOW_CD
            , ACCNT_NO
            , DTL_SEQ
            , AMT
            , PROD_CD
            , NEW_CHAN_GUNSU
            , pay_no
            , NOTE
            , REG_DM
            , REG_MAN
        )
        SELECT #{alow_dt}
             , nvl(mpa.emple_no,'9999999999') AS emple_no
             , alow_cd
             , adt.accnt_no
             , ( SELECT nvl(max(dtl_seq),0)+1 FROM alow_da_dtl WHERE alow_cd=adt.alow_cd AND alow_dt =#{alow_dt} )
             , adt.amt
             , adt.prod_cd
             , nvl(mpa.new_chan_gunsu,0) new_chan_gunsu
             , adt.pay_no
             , '' note
             , sysdate
             , #{rgsr_id}
          FROM (SELECT accnt_no
                     , alow_cd
                     , pay_no
                     , prod_cd
                     , sum(amt) amt
                  FROM (SELECT accnt_no
                             , alow_cd
                             , pay_no
                             , prod_cd
                             , amt
                          FROM tmp_alow_dtl_t33
                         WHERE alow_dt=#{alow_dt}
                        ) t
                    GROUP BY accnt_no
                           , pay_no
                           , alow_cd
                           , prod_cd
                )adt
        LEFT JOIN mem_prod_accnt mpa ON mpa.accnt_no= adt.accnt_no AND mpa.del_fg='N'
    </insert>



    <!-- sql-pay.xml [급여산출_전체_근태내역조회_] ID : pay.selectAtdnTotList 작성자 : 김아영 -->
    <select id="AlowMap.selectTotComptAtdnList" parameterType="map" resultType="resultMap">
        SELECT /* AlowMap.selectTotComptAtdnList */
               tt.*
          FROM (SELECT nvl(b.alow_dt,#{alow_dt}) as alow_dt
                     , a.dept_cd as brach_dept_cd
                     , FN_DEPT_NM(a.dept_cd) as brach_dept_nm
                     , 'C' as crt_flag
                     , '보고' as crt_flag_nm
                     , (select count(*)
                          from DEPARTMENT
                         where use_yn = 'Y'
                           and (dept_cd = a.dept_cd or (high_dept_cd = a.dept_cd and lvl >= 3)) ) ofce_cnt
                     , (select count(*)
                          from EMPLOYEE emp JOIN DEPARTMENT dpt
                                            on emp.dept_cd = dpt.dept_cd
                                     and dpt.use_yn = 'Y'
                                     and emp.alow_yn ='Y'
                         where to_date(emp.ent_day, 'YYYYMMDD') <![CDATA[<]]> to_date(#{alow_dt}, 'YYYYMM')
                           and (dpt.dept_cd = a.dept_cd or dpt.high_dept_cd = a.dept_cd )) as emple_cnt
                     , crt_pay_flag
                     , a.lvl
                     , (select use_yn
                          FROM DEPARTMENT
                         WHERE dept_cd = a.high_dept_cd) as high_use_yn
                     , '' as CHK
                  FROM DEPARTMENT a LEFT OUTER JOIN ALOW_ATDN_MST b ON a.dept_cd = b.brach_dept_cd AND b.alow_dt = #{alow_dt}
                 WHERE a.use_yn = 'Y'
                   AND a.dept_kind = '01'
                   AND (a.lvl = 1 or a.lvl = 2)
                ) tt
        WHERE ( high_use_yn = 'Y' or high_use_yn is null )
        ORDER BY brach_dept_cd asc
               , lvl desc
    </select>



    <!-- 가상계좌 산출 대상자 등록 -->
    <parameterMap id="comptAlowMap" type="resultMap">
        <parameter property="alow_dt" mode="IN" jdbcType="VARCHAR"  javaType="java.lang.String" />
        <parameter property="emple_no" mode="IN" jdbcType="VARCHAR"  javaType="java.lang.String" />
        <parameter property="compt_no" mode="IN" jdbcType="VARCHAR"  javaType="java.lang.String" />
    </parameterMap>


    <update id="AlowMap.comptAlow" statementType="CALLABLE" parameterMap="comptAlowMap">
        { call SP_UP_COMPT_ALOW_MD (?, ? ,?) }
    </update>

    <!-- sql-pay.xml [해당월 제외한 신규내역 임시테이블 삭제] ID : pay.deleteTempNewList 작성자 : 김아영 -->
    <delete id="AlowMap.deleteTempNewList" parameterType="map">
        DELETE /* AlowMap.deleteTempNewList */
          FROM ALOW_NEWLIST
         WHERE alow_dt <![CDATA[<>]]> #{alow_dt}
    </delete>


    <!-- sql-pay.xml [개별산출 대상 조회] ID : pay.selectPerComptAtdnList 작성자 : 김아영 -->
    <select id="AlowMap.selectPerComptAtdnList" parameterType="map" resultType="resultMap">
        SELECT /* AlowMap.selectPerComptAtdnList */
               #{alow_dt} as alow_dt
             , a.emple_no
             , a.emple_nm
             , dept_cd
             , FN_DEPT_NM(dept_cd) as dept_nm
             , a.jobduty_cd
             , case when mst.ALOW_DT is null then '미산출' else '산출' end crt_flag_nm
             , '' as chk
          FROM EMPLOYEE a
                LEFT OUTER JOIN ALOW_MST mst on a.emple_no= mst.emple_no  AND alow_dt = #{alow_dt}
         WHERE 1=1
           AND a.alow_yn = 'Y'
           AND a.jobduty_cd in ('016', '015')
           AND a.posn_cd in ('22','23','24')

        <if test="dept_cd != null and dept_cd != ''">
           AND a.dept_cd IN (SELECT dept_cd
                               FROM department c
                              WHERE 	use_yn = 'Y'
                                AND dept_kind='01'
                                AND	(dept_cd = #{dept_cd}
                                        OR 	high_dept_cd IN (SELECT dept_cd
                                                                 FROM department
                                                               WHERE	use_yn = 'Y'
                                                                 AND dept_kind='01'
                                                                 AND (dept_cd = #{dept_cd} OR high_dept_cd = #{dept_cd})
                                                             )
                                         )
                            )
        </if>
        <if test="emple_no != null and emple_no != ''">
           AND a.emple_no = #{emple_no}
        </if>

        <if test="emple_nm != null and emple_nm != ''">
           AND a.emple_nm like #{emple_nm} || '%'
        </if>
         ORDER BY dept_cd, emple_nm

    </select>












    <!-- 쿼리 1차 변환 -->

    <!-- sql-pay.xml [수당지급대장내역조회] ID : pay.selectPayRollList 작성자 : 김아영 -->
    <select id="AlowMap.selectPayRollList" parameterType="map" resultType="resultMap">
        SELECT /* AlowMap.selectPayRollList */
               a.emple_no
             , emple_nm
             , dept_cd
             , cell as phone
             , FN_DEPT_NM(dept_cd) as dept_nm
             , (SELECT 	cd_nm FROM COM_CD
                             WHERE 	grp_cd = '69'
                             AND		com_cd = (	SELECT 	loc_cd FROM DEPARTMENT
                                                 WHERE	dept_cd = b.dept_cd)
                         ) as loc_nm
             , (	SELECT 	CASE WHEN dm.lvl = 2 THEN dm.dept_cd ELSE dm.high_dept_cd END as dept_cd
                                 FROM 	DEPARTMENT dm
                                 WHERE	dm.dept_cd = b.dept_cd ) as brach_dept_cd
             , ent_day
             , posn_cd
             , FN_COM_NM('06', posn_cd) as posn_nm
             , jobduty_cd
             , FN_COM_NM('10', jobduty_cd) as jobduty_nm
             , a.alow_dt
             , alow_amt
             , ddct_amt
             , pay_amt
             , new_cnt
             , new_point
             , matn_cnt
             , matn_point
             , trans_new_cnt
             , trans_new_point
             , trans_matn_cnt
             , trans_matn_point
             , trunc(main_rat) as main_rat
             , trunc(dpst_rat) as dpst_rat
             , app_point
             , a.note
             , trunc(total_mem_pay_amt) as total_mem_pay_amt
             , (SELECT 	atdn_day_cnt
                                 FROM 	ALOW_ATDN
                                 WHERE 	alow_dt = a.alow_dt AND emple_no = a.emple_no) as atdn_day_cnt
             , trunc(months_between(#{alow_dt}||'01', ent_day)) + 1 as wkpd
             , TEMP_ALOW_DTL.*
             , alow_Dtl_T1, alow_Dtl_T2, alow_Dtl_T3, alow_Dtl_T4 , alow_Dtl_T5, alow_Dtl_T6, alow_Dtl_T7
             , alow_Dtl_T7, alow_Dtl_T8, alow_Dtl_T9, alow_Dtl_T11, alow_Dtl_T12, alow_Dtl_T13, alow_Dtl_T20, alow_Dtl_F1, alow_Dtl_F2, alow_Dtl_F4
             , b.bank_accnt_no
             , b.bank_cd
             , fn_com_nm('63',b.bank_cd) as bank_nm
             , b.depr
             , case when idn_no is not null then
                     substr(idn_no,1,6) || '-' || substr(idn_no,7)
                     else ''
                     end idn_no
             , case when idn_no is not null then
                     substr(idn_no,1,6) || '-*******'
                     else ''
                     end idn_no_mask
             , b.cell empCell
          FROM ALOW_MST a
               INNER JOIN EMPLOYEE b ON a.emple_no = b.emple_no
               JOIN (SELECT	alow_dt as alow_Dtl_Dt
                          , emple_no as alow_dtl_emple_no
                          , sum(case alow_nm when '출근수당' then alow_amt when '교육수당' then alow_amt else 0 end) as alow_Dtl_T1
                          , sum(case alow_nm when '모집수당' then alow_amt else 0 end) as alow_Dtl_T2
                          , sum(case alow_nm when '유지관리수당' then alow_amt else 0 end) as alow_Dtl_T3
                          , sum(case alow_nm when '지원수당' then alow_amt else 0 end) as alow_Dtl_T4
                          , sum(case alow_nm when '정착수당' then alow_amt else 0 end) as alow_Dtl_T5
                          , sum(case alow_nm when '증원수당' then alow_amt else 0 end) as alow_Dtl_T6
                          , sum(case alow_nm when '행사관리수당' then alow_amt else 0 end) as alow_Dtl_T7
                          , sum(case alow_nm when '잔여수당' then alow_amt else 0 end) as alow_Dtl_T8
                          , sum(case alow_nm when '회원관리수당' then alow_amt else 0 end) as alow_Dtl_T9
                          , sum(case alow_nm when '직책수당' then alow_amt else 0 end) as alow_Dtl_T11
                          , sum(case alow_nm when '운영수당' then alow_amt else 0 end) as alow_Dtl_T12
                          , sum(case alow_nm when '관리수당' then alow_amt else 0 end) as alow_Dtl_T13
                          , sum(case alow_nm when '기타수당' then alow_amt else 0 end) as alow_Dtl_T20
                          , sum(case alow_nm when '소득세' then alow_amt else 0 end) as alow_Dtl_F1
                          , sum(case alow_nm when '주민세' then alow_amt else 0 end) as alow_Dtl_F2
                          , sum(case alow_nm when '환수액' then alow_amt else 0 end) as alow_Dtl_F4
                      FROM	ALOW_DTL
                     GROUP BY alow_dt
                            , emple_no
                ) TEMP_ALOW_DTL ON a.alow_dt = TEMP_ALOW_DTL.alow_Dtl_Dt AND a.emple_no = TEMP_ALOW_DTL.alow_dtl_emple_no
         WHERE a.alow_dt = #{alow_dt}

        <if test="dept_code != null and dept_code != ''">
           AND dept_cd IN (SELECT dept_cd
                             FROM department c
                            WHERE dept_kind = '01'
                              AND (dept_cd = #{dept_code}
                                        OR high_dept_cd IN (	SELECT 	dept_cd
                                                              FROM 	department
                                                             WHERE 	use_yn = 'Y'
                                                               AND	dept_kind = '01'
                                                               AND 	( dept_cd = #{dept_code} OR high_dept_cd = #{dept_code})
                                                            )
                                    )
                        )
        </if>
        <if test="emple_no != null and emple_no != ''">
           AND		b.emple_no = #{emple_no}
        </if>
        <if test="emple_nm != null and emple_nm != ''">
           AND		b.emple_nm like #{emple_nm} || '%'
        </if>
        <if test="del_fg != null and del_fg != ''">
            <if test="del_fg != 'ALL'">
           AND b.del_fg = #{del_fg}
            </if>
        </if>
         ORDER BY FN_DEPT_NM(dept_cd)
                , emple_nm
    </select>


    <!-- sql-pay.xml [수당지급대장내역조회(전사판매)] ID : pay.selectPayRollListGrp 작성자 : 김아영 -->
    <select id="AlowMap.selectPayRollListGrp" parameterType="map" resultType="resultMap">
        /* AlowMap.selectPayRollListGrp */
        <if test="dept_code != null and dept_code != ''">
        WITH W_DEPT AS (
            SELECT dept_cd
                 , dept_nm
                 , high_dept_cd
                 , dept_kind
                 , use_yn
              FROM DEPARTMENT
            CONNECT BY PRIOR DEPT_CD = HIGH_DEPT_CD
             START WITH dept_cd = #{dept_code}
        )
        </if>

        SELECT a.emple_no
             , emple_nm
             , b.dept_cd
             , cell as phone
             , FN_DEPT_NM(b.dept_cd) as dept_nm
             , (SELECT cd_nm
                  FROM COM_CD
                 WHERE 	grp_cd = '69'
                   AND com_cd = (SELECT loc_cd
                                   FROM DEPARTMENT
                                  WHERE	dept_cd = b.dept_cd)) loc_nm
             , (SELECT CASE WHEN dm.lvl = 2 THEN dm.dept_cd ELSE dm.high_dept_cd END as dept_cd
                  FROM 	DEPARTMENT dm
                 WHERE	dm.dept_cd = b.dept_cd) brach_dept_cd
             , ent_day
             , posn_cd
             , FN_COM_NM('06', posn_cd) as posn_nm
             , jobduty_cd
             , FN_COM_NM('10', jobduty_cd) as jobduty_nm
             , a.alow_dt
             , alow_amt
             , (alow_amt - nvl(trns_redmp,0) - nvl(alow_Dtl_F7,0)) as alow_amt2
             , ddct_amt
             , pay_amt
             , new_cnt
             , trns_redmp
             , add_redmp
             , nvl(paynew.new_cnt_tot,0) as new_cnt_tot
             , matn_cnt
             , nvl(paymtn.matn_cnt_tot,0) as matn_cnt_tot
             , dpst_new
             , nvl(paynew.dpst_new_tot,0) as dpst_new_tot
             , dpst_matn
             , nvl(paymtn.dpst_matn_tot,0) as dpst_matn_tot
             , a.note
             , nvl(paynew.dpst_new_tot,0)+nvl(paymtn.dpst_matn_tot,0)  as total_mem_pay_amt
             , trunc(total_mem_pay_amt) as dpst_total_mem_pay_amt
             , trunc(months_between(a.alow_dt||'01', ent_day)) + 1 as wkpd
             , case when nvl(replace(b.ocp_cluster, chr(0), ''),'x')='x' then (select fn_com_nm('96',ocp_cluster) from department where dept_cd = b.dept_cd)
                 else fn_com_nm('96',b.ocp_cluster)
                 end as ocp_cluster_nm

             , nvl(tax_income_rat,0) as tax_income_rat
             , case when nvl(tax_income_rat,0) = 0 then '근로소득'
                    when nvl(tax_income_rat,0) = 0.03 then '사업소득'
                    when nvl(tax_income_rat,0) = 0.04 then '기타소득'
                    else ''
               end incom_Cl_Nm
             , TEMP_ALOW_DTL.*
             , b.bank_accnt_no
             , b.bank_cd
             , fn_com_nm('63',b.bank_cd) as bank_nm
             , b.depr
             , case when b.idn_no is not null then
                         substr(idn_no,1,6) || '-' || substr(idn_no,7)
                     else ''
                     END as idn_no
             , case when b.idn_no is not null then
                         substr(idn_no,1,6) || '-*******'
                     else ''
                     END as idn_no_mask
             , a.alow_close_date
             ,CASE WHEN a.alow_close_date IS NOT NULL then  'Y'
                   ELSE 'N'
              END close_Yn
             ,b.cell emp_Cell
        FROM ALOW_MST a left outer join (
                        SELECT accnt.emple_no, sum(PAY_AMT)  as dpst_new_tot, count(*) as new_cnt_tot, substr(p.PAY_DAY,1,6) pay_month
                        FROM pay_mng p
                        INNER JOIN mem_prod_accnt accnt on  p.accnt_no = accnt.accnt_no and accnt.del_fg = 'N'
                        WHERE p.del_fg = 'N'  and p.no = 1
                        GROUP BY accnt.emple_no
                               , substr(p.PAY_DAY,1,6)

                    )  paynew on paynew.emple_no = a.emple_no and a.alow_dt = paynew.pay_month
        left outer join (SELECT accnt.emple_no
                              , sum(PAY_AMT)  as dpst_matn_tot
                              , count(*) as matn_cnt_tot
                              , substr(p.PAY_DAY,1,6) pay_month
                           FROM pay_mng p INNER JOIN mem_prod_accnt accnt on  p.accnt_no = accnt.accnt_no and accnt.del_fg = 'N'
                          WHERE p.del_fg = 'N' and p.no > 1
                          GROUP BY accnt.emple_no
                                 , substr(p.PAY_DAY,1,6)

        )  paymtn on paymtn.emple_no = a.emple_no and a.alow_dt = paymtn.pay_month

        INNER JOIN EMPLOYEE b
        ON		a.emple_no 	= b.emple_no
        JOIN	(
                    SELECT alow_dt alow_dtl_dt
                            , emple_no as alow_Dtl_Emple_No
                            , sum(case alow_nm when '모집수당' then alow_amt else 0 end) as alow_Dtl_T21
                            , sum(case alow_nm when '누진수당' then alow_amt else 0 end) as alow_Dtl_T22
                            , sum(case alow_nm when '필요경비' then alow_amt else 0 end) as alow_Dtl_T23
                            , sum(case alow_nm when 'TM수당' then alow_amt else 0 end) as alow_Dtl_T24
                            , sum(case alow_nm when '소득세' then alow_amt else 0 end) as alow_Dtl_F5
                            , sum(case alow_nm when '주민세' then alow_amt else 0 end) as alow_Dtl_F6
                            , sum(case alow_nm when '환수액' then alow_amt else 0 end) as alow_Dtl_F7
                    FROM	ALOW_DTL
                    GROUP BY alow_dt
                           , emple_no
                ) TEMP_ALOW_DTL
        ON		a.alow_dt = TEMP_ALOW_DTL.alow_Dtl_Dt
        AND		a.emple_no = TEMP_ALOW_DTL.alow_dtl_emple_no
           <if test="dept_code != null and dept_code != ''">
           INNER JOIN W_DEPT ON W_DEPT.DEPT_CD = b.DEPT_CD and W_DEPT.dept_kind = '02' and W_DEPT.use_yn = 'Y'
           </if>
        WHERE	1=1
        <if test="alow_dt != null and alow_dt != ''">
            and a.alow_dt	= #{alow_dt}
        </if>
        <if test="emple_no != null and emple_no != ''">
        AND		b.emple_no = #{emple_no}
        </if>
        <if test="emple_nm != null and emple_nm != ''">
        AND		b.emple_nm like #{emple_nm} || '%'
        </if>

        <if test="del_fg != null and del_fg != ''">
            <if test="del_fg != 'ALL'">
                AND b.del_fg = #{del_fg}
            </if>
        </if>

        <if test="alow_dtl_f7_chk != null and alow_dtl_f7_chk != ''"> <!-- alowDtlF7Chk -->
            <if test="alow_dtl_f7_chk == 'Y'.toString()">
                   AND	pay_amt &lt; 0
            </if>
        </if>

        <if test="incom_cl != null and incom_cl != ''">
            <if test="incom_cl == '0001'">
                and nvl(tax_income_rat,0) = 0.04
            </if>
            <if test="incom_cl == '0002'">
                and nvl(tax_income_rat,0) = 0.03
            </if>
            <if test="incom_cl == '0003'">
                and nvl(tax_income_rat,0) = 0
            </if>
        </if>

        <if test="pay_amt_chk != null and pay_amt_chk != ''">
            <if test="pay_amt_chk == 'Y'.toString()">
                AND pay_amt > 0
            </if>
        </if>
        ORDER BY alow_dt
               , FN_DEPT_NM(b.dept_cd)
               , emple_nm
    </select>


    <!-- sql-pay.xml [수당지급대장내역조회(모집대행-이통연합)] ID : pay.selectPayRollListProxy 작성자 : 김은진 -->
    <select id="AlowMap.selectPayRollListProxy" parameterType="map" resultType="resultMap">
        SELECT /* AlowMap.selectPayRollListProxy */
               a.emple_no
             , emple_nm
             , dept_cd
             , cell as phone
             , FN_DEPT_NM(dept_cd) as dept_nm
             , (SELECT 	cd_nm
                  FROM COM_CD
                 WHERE grp_cd = '69'
                   AND com_cd = (SELECT loc_cd
                                   FROM DEPARTMENT
                                  WHERE	dept_cd = b.dept_cd)) loc_nm
             , (SELECT 	CASE WHEN dm.lvl = 2 THEN dm.dept_cd ELSE dm.high_dept_cd END as dept_cd
                  FROM 	DEPARTMENT dm
                 WHERE	dm.dept_cd = b.dept_cd ) brach_dept_cd
             , ent_day
             , posn_cd
             , FN_COM_NM('06', posn_cd) as posn_nm
             , jobduty_cd
             , FN_COM_NM('10', jobduty_cd) as jobduty_nm
             , a.alow_dt
             , alow_amt
             , ddct_amt
             , pay_amt
             , new_cnt
             , a.note
             , trunc(months_between(#{alow_dt}||'01', ent_day)) + 1 as wkpd
             , nvl(tax_income_rat,0) as tax_income_rat
             , TEMP_ALOW_DTL.*
             , b.cell emp_cell
        FROM
                ALOW_MST a
        INNER JOIN EMPLOYEE b ON a.emple_no = b.emple_no
                JOIN (SELECT alow_dt alow_Dtl_Dt
                            , emple_no as alow_dtl_emple_no
                            , sum(case alow_nm when '모집수당' then alow_amt else 0 end) as alowDtl_T30
                            , sum(case alow_nm when '기타수당' then alow_amt else 0 end) as alowDtl_T31
                            , sum(case alow_nm when '환수액' then alow_amt else 0 end) as alowDtl_F8
                            , sum(case alow_nm when '소득세' then alow_amt else 0 end) as alowDtl_F9
                    FROM	ALOW_DTL
                    GROUP BY alow_dt
                           , emple_no
                ) TEMP_ALOW_DTL
        ON		a.alow_dt = TEMP_ALOW_DTL.alow_Dtl_Dt
        AND		a.emple_no = TEMP_ALOW_DTL.alow_dtl_emple_no
        WHERE	a.alow_dt	= #{alow_dt}
        <!-- AND		b.del_fg = 'N' -->

        <if test="dept_code != null and dept_code != ''">
            AND dept_cd in ('0764','0767' )
        </if>
        <if test="emple_no != null and emple_no != ''">
        AND		b.emple_no = #{emple_no}
        </if>
        <if test="emple_nm != null and emple_nm != ''">
        AND		b.emple_nm like #{emple_nm} || '%'
        </if>

        <if test="del_fg != null and del_fg != ''">
            <if test="del_fg != 'ALL'">
                AND b.del_fg = #{del_fg}
            </if>
        </if>

        ORDER BY FN_DEPT_NM(dept_cd)
               , emple_nm
    </select>

    <!-- sql-pay.xml [결합상품 임직원 수당 지급현황] ID : pay.selectPayAlowGrpJoinList 작성자 : 이금례 -->
    <select id="AlowMap.selectPayAlowGrpJoinList" parameterType="map" resultType="resultMap">
        /* AlowMap.selectPayAlowGrpJoinList */
        <if test="dept_code != null and dept_code != ''">
        WITH W_DEPT AS (
            SELECT dept_cd
                 , dept_nm
                 , high_dept_cd
                 , dept_kind
                 , use_yn
              FROM DEPARTMENT
            CONNECT BY PRIOR DEPT_CD = HIGH_DEPT_CD
             START WITH dept_cd = #{dept_code}
        )
        </if>

        SELECT	alow_dt
                , alow.emple_no
                , emp.emple_nm
                , pay_no
                , alow.accnt_no
                , mem_nm
                , FN_PROD_NM(alow.prod_cd) as prod_nm
                , Amt
                  , nvl(FN_COM_NM('96',case when nvl(emp.ocp_cluster,'') != '' then emp.ocp_cluster
                                                    else dm.ocp_cluster
                                              end),'') as ocp_cluster_nm
                , emp.cell emp_cell
        FROM	alow_dtl_t21 alow
        INNER JOIN product prod on prod.prod_cd = alow.prod_cd and prod.prod_cl = '03'
        INNER JOIN mem_prod_accnt accnt on accnt.accnt_no = alow.accnt_no
        INNER JOIN member mem on mem.mem_no = accnt.mem_no
        INNER JOIN employee emp on emp.emple_no = alow.emple_no
        INNER JOIN department dm on dm.dept_cd = (select TOP 1 dept_cd from HIST_DEPT_EMP hist where hist.emple_no =alow.emple_no and app_mm &lt;= alow.alow_dt ORDER BY APP_MM DESC,seq DESC )
            <if test="dept_code != null and dept_code != ''">
           INNER JOIN W_DEPT ON W_DEPT.DEPT_CD = emp.DEPT_CD and W_DEPT.dept_kind = '02' and W_DEPT.use_yn = 'Y'
           </if>
        WHERE	1=1
        <if test="alow_dt != null and alow_dt != ''">
            and alow.alow_dt = #{alow_dt}
        </if>
        <if test="emple_no != null and emple_no != ''">
           AND alow.emple_no = #{emple_no}
        </if>
        <if test="emple_nm != null and emple_nm != ''">
           AND emp.emple_nm like #{emple_nm} || '%'
        </if>
        ORDER BY alow_dt
               , mem_nm
    </select>

    <!-- sql-pay.xml [급여 Master 확정일자 update] ID : pay.updatealowCloseGrp 작성자 : 이금례 -->
    <update id="AlowMap.updatealowCloseGrp" parameterType="map">
        UPDATE /* AlowMap.updatealowCloseGrp */
               ALOW_MST
           SET ALOW_CLOSE_DATE = TO_CHAR(SYSDATE, 'YYYYMMDD')
         WHERE alow_dt = #{alow_dt}
           AND EMPLE_NO IN (SELECT EMPLE_NO
                              FROM EMPLOYEE EMP INNER JOIN DEPARTMENT DEPT ON DEPT.DEPT_CD = EMP.DEPT_CD
                            <if test="dept_kind != null and dept_kind != ''">
                              AND DEPT_KIND = #{dept_kind}
                            </if>
                            )
    </update>

    <!-- sql-pay.xml [수당 근거자료 생성] ID : pay.makeBasedData 작성자 : 이금례 -->
    <!-- <update id="AlowMap.makeBasedData" parameterType="map">
        /* AlowMap.makeBasedData */

        DECLARE
            TODAY DATE := SYSDATE;

        BEGIN
            CREATE TABLE ${tab_mem_prod_accnt} AS
            SELECT *
              FROM MEM_PROD_ACCNT
             WHERE trunc(months_between(#{alow_dt}||'01', substr(JOIN_DT,1,6)||'01')) &lt;= 36
               AND JOIN_DT IS NOT NULL
            ;

            CREATE TABLE ${tab_event} AS
            SELECT *
              FROM EVENT
             WHERE trunc(months_between(#{alow_dt}||'01', substr(event_reg_day,1,6)||'01')) &lt;= 36
            ;

            CREATE TABLE ${tab_rescission} AS
            SELECT *
              FROM RESCISSION
             WHERE trunc(months_between(#{alow_dt}||'01', substr(resn_proc_day,1,6)||'01')) &lt;= 36
            ;

            CREATE TABLE ${tab_alow_com_da} AS
            SELECT *
              FROM ALOW_COM_DA
            ;

            CREATE TABLE ${tab_taxtproc} AS
            SELECT *
              FROM TAXT_PROC
             WHERE trunc(months_between(#{alow_dt}||'01', substr(TAXT_PROC_DAY,1,6)||'01')) &lt;= 36
            ;

            CREATE TABLE ${tab_pay_mng} AS
            SELECT *
              FROM PAY_MNG
             WHERE trunc(months_between(#{alow_dt}||'01', substr(PAY_DAY,1,6)||'01')) &lt;= 36
            ;

            CREATE INDEX IX_MEM_PROD_ACCNT${alow_dt}
                      ON ${tab_mem_prod_accnt} (ACCNT_NO ASC, DEL_FG ASC)
            ;

              CREATE INDEX mem_prod_accnt_delfg_IDX${alow_dt}
                      ON ${tab_mem_prod_accnt} (DEL_FG ASC)
            ;

            CREATE INDEX IX_PAY_MNG_accntno${alow_dt}
                      ON ${tab_pay_mng} (ACCNT_NO ASC, DEL_FG ASC)
            ;

              CREATE INDEX IX_PAY_MNG_date${alow_dt}
                      ON ${tab_pay_mng} (PAY_DAY ASC, DEL_FG ASC)
            ;

              CREATE INDEX IX_PAY_MNG_no${alow_dt}
                      ON ${tab_pay_mng} (ACCNT_NO ASC, DEL_FG ASC, NO ASC)
            ;

              CREATE INDEX pay_mng_del_fg_IDX${alow_dt}
                      ON ${tab_pay_mng} (DEL_FG ASC)
            ;

              CREATE INDEX pay_mng_payday_idx${alow_dt}
                      ON ${tab_pay_mng} (PAY_DAY ASC)
            ;

        END;
    </update> -->

    <!-- 수당확정을 위해 MEM_PROD_ACCNT 년월별 테이블 생성 -->
    <update id="AlowMap.makeBasedData_01" parameterType="map">
            CREATE /* AlowMap.makeBasedData_01 */
                   TABLE ${tab_mem_prod_accnt} AS
            SELECT *
              FROM MEM_PROD_ACCNT
             WHERE JOIN_DT IS NOT NULL
               AND LENGTH(JOIN_DT) &gt; 6
               AND trunc(months_between('${alow_dt}01', substr(JOIN_DT,1,6)||'01')) &lt;= 36
    </update>

    <!-- 수당확정을 위해 EVENT 년월별 테이블 생성 -->
    <update id="AlowMap.makeBasedData_02" parameterType="map">
            CREATE /* AlowMap.makeBasedData_02 */
                   TABLE ${tab_event} AS
            SELECT *
              FROM EVENT
             WHERE trunc(months_between('${alow_dt}01', substr(event_reg_day,1,6)||'01')) &lt;= 36
    </update>

    <!-- 수당확정을 위해 RESCISSION 년월별 테이블 생성 -->
    <update id="AlowMap.makeBasedData_03" parameterType="map">
            CREATE /* AlowMap.makeBasedData_03 */
                   TABLE ${tab_rescission} AS
            SELECT *
              FROM RESCISSION
             WHERE trunc(months_between('${alow_dt}01', substr(resn_proc_day,1,6)||'01')) &lt;= 36
    </update>

    <!-- 수당확정을 위해 ALOW_COM_DA 년월별 테이블 생성 -->
    <update id="AlowMap.makeBasedData_04" parameterType="map">
            CREATE /* AlowMap.makeBasedData_04 */
                   TABLE ${tab_alow_com_da} AS
            SELECT *
              FROM ALOW_COM_DA
    </update>

    <!-- 수당확정을 위해 TAXT_PROC 년월별 테이블 생성 -->
    <update id="AlowMap.makeBasedData_05" parameterType="map">
            CREATE /* AlowMap.makeBasedData_05 */
                   TABLE ${tab_taxtproc} AS
            SELECT *
              FROM TAXT_PROC
             WHERE trunc(months_between('${alow_dt}01', substr(TAXT_PROC_DAY,1,6)||'01')) &lt;= 36
    </update>

    <!-- 수당확정을 위해 TAXT_PROC 년월별 테이블 생성 -->
    <update id="AlowMap.makeBasedData_06" parameterType="map">
            CREATE /* AlowMap.makeBasedData_06 */
                   TABLE ${tab_pay_mng} AS
            SELECT *
              FROM PAY_MNG
             WHERE trunc(months_between('${alow_dt}01', substr(PAY_DAY,1,6)||'01')) &lt;= 36
    </update>

    <!-- 인덱스 생성 -->
    <update id="AlowMap.createIndex" parameterType="map">
            CREATE /* AlowMap.createIndex */
                   INDEX ${index_nm}
                ON ${tab_nm} (${index_col})
    </update>

    <!-- sql-pay.xml [B2B영업형태 분류 조회] ID : 작성자 : 김은진 by 2014.07.02 -->
    <select id="AlowMap.selectB2BSaleTypeList" parameterType="map" resultType="resultMap">
        SELECT /* AlowMap.selectB2BSaleTypeList */
               sm.seq
             , sm.st_grp_cd
             , sm.st_grp_nm
             , sm.st_grp_note
             , use_yn
             , case when use_yn ='Y' then '사용' else '미사용' end use_yn_nm
             , to_char(sm.reg_dm,'YYYYMMDD') reg_dm
             , fn_emple_nm(sm.reg_man) reg_man
             , '' AS TMP
          FROM B2B_SALE_TYPE_MST sm
         WHERE 1=1
        <if test="st_grp_cd != null and st_grp_cd != ''">
           AND sm.st_grp_cd = #{st_grp_cd}
        </if>
        <if test="st_grp_nm != null and st_grp_nm != ''">
           AND sm.st_grp_nm like '%' || #{st_grp_nm} || '%'
        </if>
        <if test="use_yn != null and use_yn != ''">
           AND sm.use_yn = #{use_yn}
        </if>
    </select>

    <!--
    sql-pay.xml [회원별 수당 조회] ID : pay.selectAlowListForAccnt 작성자 : 김은진 by 2014.12.17
    -->
    <select id="AlowMap.selectAlowListForAccnt" parameterType="map" resultType="resultMap">

        <if test="excel_yn != 'Y'.toString()">
        <include refid="CommonMap.headerPageSql" />
        </if>

        SELECT /* AlowMap.selectAlowListForAccnt */
               accnt_no
            , mem_nm
            , emple_no
            , emple_nm
            , join_dt
            , prod_cd
            , prod_nm
            , ocp_cluster_nm
            , MODEL_CL_NM
            , (SELECT PMD.MODEL_NM
                 FROM PRODUCT_MODEL_MST PMM INNER JOIN PRODUCT_MODEL_DTL PMD ON PMM.SEQ = PMD.SEQ
                WHERE PMM.PROD_KIND = tmp.prod_model_kind
                  AND PMM.PROD_CD = tmp.prod_cd
                  AND PMD.MODEL_CD = tmp.PROD_MODEL_CD
                  AND NVL(PMD.DISCONTINUED_DT, '99991231')  >  TO_CHAR(SYSDATE, 'YYYYMMDD')
                  AND PMM.del_fg = 'N') MODEL_NM
            , FN_EVENT(accnt_no) accnt_stat
            , FN_ST_GRP_NM_BY_ACCNT_NO(accnt_no) st_grp_nm
            , tot_pay_no
            , tot_pay_amt
            , pay_day
            , da_pay_no
            , T21, T32, T33 ,F7, F11, F8, F10, F12
            , rt_sum_t, rt_sum_f
            , rt_alow_amt
            , CASE WHEN chk_rt_tax = 'Y' THEN trunc(rt_alow_amt * tax_rat) ELSE 0 END F5
            , CASE WHEN chk_rt_tax = 'Y' THEN trunc(rt_alow_amt * tax_rat * 0.1) ELSE 0 END F6
            , CASE WHEN chk_rt_tax = 'Y' THEN
                                (trunc(rt_alow_amt * tax_rat) + trunc(rt_alow_amt * tax_rat * 0.1) )
                            ELSE 0 END tot_tax
            , CASE WHEN chk_rt_tax = 'Y' THEN
                                    rt_alow_amt - (trunc(rt_alow_amt * tax_rat) + trunc(rt_alow_amt * tax_rat * 0.1) )
                            WHEN rt_alow_amt &lt;= 0 THEN 0
                            ELSE rt_alow_amt
                            END tot_alow_amt
            , CASE WHEN rt_alow_amt &gt; 0 THEN trunc(rt_alow_amt * need_rat) else 0 END need_cost
            , CASE WHEN hist_yn ='Y' THEN '이력' ELSE '' END hist_yn
            , emple_idn_no
            , dept_nm
            , (SELECT CD_NM FROM COM_CD WHERE GRP_CD = '0125' AND COM_CD = TMP.SALE_TYPE) SALE_TYPE_NM
            , B2B_COM_NM
            , EVENT_PROC_DAY
            , PAY_CNT
            , bef_emple_nm
    <if test="excel_yn != 'Y'.toString()">
        <if test="tot_row_cnt != null and tot_row_cnt == '0'.toString()">
             , COUNT(*) OVER() tot_row_cnt                      /* 총데이터건수 */
        </if>
        <if test="tot_row_cnt == null or tot_row_cnt != '0'.toString()">
             , TO_NUMBER(#{tot_row_cnt}) tot_row_cnt             /* 총데이터건수 */
        </if>
    </if>

        FROM
        (
            SELECT
                mpa.accnt_no
                , mb.mem_nm
                , pm.emple_no
                , pm.emple_nm
                , pm.join_dt
                , mpa.prod_cd
                  , pd.prod_nm
                  , pm.ocp_cluster_nm
                  , p.tot_pay_no
                  , p.pay_cnt
                  , p.pay_day
                  , p.tot_pay_amt
                  , nvl(pm.pay_no, 0) AS da_pay_no
                , nvl(pm.T21,0) AS T21
                  , nvl(pm.T32,0) AS T32
                  , nvl(pm.T33,0) AS T33
                , nvl(pm.F7,0) AS F7
                  , nvl(pm.F11,0) AS F11
                  , nvl(pm.F8,0) AS F8
                  , nvl(pm.F10,0) AS F10
                  , nvl(pm.F12,0) AS F12
                  , nvl(pm.T21,0)+nvl(pm.T32,0)+ nvl(pm.T33,0) rt_sum_t
                  , nvl(pm.F7,0) + nvl(pm.F11,0) + nvl(pm.F8,0)+ nvl(pm.F10,0) rt_sum_f
                  , CASE WHEN ( nvl(pm.T21,0)+nvl(pm.T32,0) ) - ( nvl(pm.F7,0) + nvl(pm.F11,0) ) &lt;= 0 THEN 'F'
                                  ELSE 'Y'
                                  END chk_rt_tax
                  , CASE WHEN ( nvl(pm.T21,0)+nvl(pm.T32,0) ) - ( nvl(pm.F7,0) + nvl(pm.F11,0) ) &lt;= 0 THEN  0
                                      ELSE ( nvl(pm.T21,0)+nvl(pm.T32,0) ) - ( nvl(pm.F7,0) + nvl(pm.F11,0) )   +  nvl(pm.T33,0) - (nvl(pm.F10,0)+ nvl(pm.F8,0))
                                      END rt_sum_for_tax
                  , ( nvl(pm.T21,0)+nvl(pm.T32,0) ) - ( nvl(pm.F7,0) + nvl(pm.F11,0) )   +  nvl(pm.T33,0) - (nvl(pm.F10,0)+ nvl(pm.F8,0)) rt_alow_amt
                  , nvl(pm.tax_rat,0)  tax_rat
                  , nvl(pm.need_rat,0) need_rat
                  , pm.hist_yn
                  , (SELECT MODEL_CL_NM FROM PRODUCT_MODEL_CL_CD WHERE MODEL_CL_CD = mpa.PROD_MODEL_KIND) MODEL_CL_NM
                  , pm.dept_cd
                  , emp.idn_no emple_idn_no
                  , mpa.PROD_MODEL_KIND
                , d.dept_nm
                , mpa.PROD_MODEL_CD
                , mpa.B2B_COMP_CD
                , b2b.SALE_TYPE
                , b2b.COM_NM AS B2B_COM_NM
                , emp2.emple_nm as bef_emple_nm
                , CASE WHEN EVT.ACCNT_NO IS NOT NULL THEN replace(NVL(EVT.EVENT_PROC_DAY, ''), chr(0), '')
                       WHEN RESN.ACCNT_NO IS NOT NULL THEN replace(NVL(RESN.RESN_PROC_DAY, ''),chr(0),'')
                       ELSE ''
                       END EVENT_PROC_DAY
            FROM mem_prod_accnt mpa
            JOIN member mb 	ON mpa.mem_no = mb.mem_no
            JOIN product pd ON mpa.prod_cd=pd.prod_cd
            JOIN
            (
                 <include refid="selectAlowListForTmp"/>
            ) pm on pm.accnt_no = mpa.accnt_no
            LEFT OUTER JOIN EMPLOYEE emp ON emp.emple_no = pm.emple_no
            LEFT OUTER JOIN
            (SELECT DEPT_CD
                  , replace(SYS_CONNECT_BY_PATH(d2.dept_nm, '__'), '__', '/') dept_nm
               FROM DEPARTMENT d2
             CONNECT BY PRIOR d2.DEPT_CD = d2.HIGH_DEPT_CD
              START WITH lvl = '1') d ON emp.dept_cd = d.dept_cd
            JOIN
            (
                SELECT accnt_no
                     , max(no) tot_pay_no
                     , sum(pay_amt) tot_pay_amt
                     , count(no) pay_cnt
                     , max(pay_day) pay_day
                FROM pay_mng
                WHERE del_fg='N'
                <if test="accnt_no != null and accnt_no != ''">
                  AND accnt_no = #{accnt_no}
                </if>
                GROUP BY accnt_no
            ) p ON p.accnt_no = mpa.accnt_no
            LEFT OUTER JOIN B2BCOMCD b2b on b2b.COM_CD = mpa.B2B_COMP_CD
            LEFT OUTER JOIN EVENT EVT ON EVT.ACCNT_NO = MPA.ACCNT_NO AND EVT.DEL_FG = 'N' AND EVT.EVENT_PROC_DAY <![CDATA[<=]]> to_char(LAST_DAY(#{end_dt}||'01'), 'YYYYMMDD')
            LEFT OUTER JOIN RESCISSION RESN ON RESN.ACCNT_NO = MPA.ACCNT_NO AND RESN.DEL_FG = 'N' AND  RESN.RESN_PROC_DAY <![CDATA[<=]]> to_char(LAST_DAY(#{end_dt}||'01') ,'YYYYMMDD')  /* @작업월 : 필수 */
            LEFT OUTER JOIN EMPLOYEE emp2 ON emp2.emple_no = mpa.bef_emple_cd
            WHERE mpa.del_fg='N'
            AND mb.del_fg='N'
        )tmp
        <if test="excel_yn != 'Y'.toString()">
        <include refid="CommonMap.footerPageSql" />
        </if>
    </select>

    <!-- sql-pay.xml [회원별 수당 조회 요약(합계)] ID : pay.selectAlowListForAccntSum 작성자 : 김은진 by 2014.12.17 -->
    <select id="AlowMap.selectAlowListForAccntSum" parameterType="map" resultType="resultMap">
        SELECT /* AlowMap.selectAlowListForAccntSum */
               TOT_T21, TOT_T32, TOT_T33, TOT_F7, TOT_F11, TOT_F8, TOT_F10, TOT_F12
             , TOT_T
             , TOT_F
             , TOT_B2BF
             , TOT_RT_AMT
             , TOT_ALOW_AMT
             , TOT_T21 + TOT_T32 AS T_TOTAL
             , PAY_TOT_AMT
             , (SELECT nvl(sum(ADF.TM_ALOW_AMT),0) /* 차감액 */
                  FROM ALOW_DTL_F12 ADF
                       INNER JOIN EMPLOYEE E ON ADF.EMPLE_NO=E.EMPLE_NO
                       INNER JOIN DEPARTMENT D ON E.DEPT_CD=D.DEPT_CD
                 WHERE ADF.ALOW_DT BETWEEN #{start_dt} AND #{end_dt}
                   AND NVL(STND_AMT,0) != 0
                   <if test="emple_no != null and emple_no != ''">
                   AND ADF.EMPLE_NO = #{emple_no}
                   </if>
                   <if test="dept_cd != null and dept_cd != ''">
                   AND D.DEPT_CD = #{dept_cd}
                   </if>
                   <if test="accnt_no != null and accnt_no != ''">
                   AND ADF.EMPLE_NO IN (SELECT EMPLE_NO
                                          FROM MEM_PROD_ACCNT
                                         WHERE ACCNT_NO = #{accnt_no})
                   </if>
                   AND nvl(E.OCP_CLUSTER, D.OCP_CLUSTER) !='04'
                ) ADF_TOT_F12
        FROM
        (
            SELECT
                sum(T21) tot_T21
                , sum(T32) tot_T32
                , sum(T33) tot_T33
                , sum(F7) tot_F7
                , sum(F11) tot_F11
                , sum(F8) tot_F8
                , sum(F10) tot_F10
                , sum(F12) tot_F12
                , sum(tot_T) tot_T
                , sum(tot_F) tot_F
                , sum(tot_B2BF) tot_B2BF
                , sum(PAY_TOT_AMT) PAY_TOT_AMT
                , CASE WHEN  sum(F12) &gt;= sum(tot_F)
                                  THEN sum( tot_T - F12 - tot_B2BF )
                                  ELSE sum( tot_T - tot_F - tot_B2BF )
                                        END tot_Rt_Amt

                , CASE WHEN  sum(F12) &lt;= 0  THEN sum( T33 - tot_B2BF )
                                    WHEN sum(F12) &gt; sum(tot_F)
                                        THEN sum( tot_T - F12 - tot_B2BF)
                                                 - sum( ( trunc((tot_T - F12- tot_B2BF) * tax_rat)
                                                     + trunc((tot_T - F12 - tot_B2BF) * tax_rat * 0.1) ) )
                                    ELSE sum( tot_T - tot_F- tot_B2BF)
                                             - sum( (trunc( (tot_T - tot_F - tot_B2BF) * tax_rat)
                                                     + trunc( (tot_T - tot_F- tot_B2BF) * tax_rat * 0.1) ) )
                                                     END tot_Alow_Amt
            FROM
            (
                SELECT
                     nvl(pm.T21,0) AS T21
                      , nvl(pm.T32,0) AS T32
                      , nvl(pm.T33,0) AS T33
                    , nvl(pm.F7,0) AS F7
                      , nvl(pm.F11,0) AS F11
                      , nvl(pm.F8,0) AS F8
                      , nvl(pm.F10,0) AS F10
                      , nvl(pm.F12,0) AS F12
                      , CASE WHEN F12 &gt; 0 THEN T21 + T32 - F12
                                          ELSE  (T21 + T32 -( F7 + F11 )	)
                                          END tot_Chk_T
                      , (T21+T32+T33) tot_T
                    , (F7+F11) tot_F
                    , (F8+F10) tot_B2BF
                      , nvl(pm.tax_rat,0)  tax_rat
                      , nvl(pm.need_rat,0) need_rat
                    , PDM.PAY_TOT_AMT
                FROM mem_prod_accnt mpa
                JOIN member mb ON mpa.mem_no = mb.mem_no
                JOIN
                (
                     <include refid="selectAlowListForTmp"/>
                ) pm on pm.accnt_no = mpa.accnt_no

                LEFT OUTER JOIN (SELECT ACCNT_NO
                                      , PAY_NO              /* 부금_회차 */
                                      , PAY_TOT_AMT         /* 부금_입금액_누계 */
                                      , LAST_PAY_DAY        /* 최종입금일자 */
                                      , RM_PAY_EAMT         /* 잔여_부금_예상금액 */
                                 FROM PAY_DL_MST
                                WHERE DL_TYPE = '01' /* 입금마감 */
                                  AND PAY_DL_YYYYMM = #{end_dt}
                              ) PDM ON PDM.ACCNT_NO = MPA.ACCNT_NO
                WHERE mpa.del_fg='N'
                AND mb.del_fg='N'
            ) tmp
        ) t
    </select>

    <!-- 회원별 수당 조회 잔여수당 건수 조회 -->
    <select id="AlowMap.selectAlowListForExtrCount" parameterType="map" resultType="int">
        SELECT /* AlowMap.selectAlowListForExtrCount */
               count(*)
          FROM (SELECT mpa.accnt_no
                     , nvl(pm.T21,0) AS T21
                  FROM mem_prod_accnt mpa
                    JOIN member mb 	ON mpa.mem_no = mb.mem_no
                    JOIN product pd ON mpa.prod_cd=pd.prod_cd
                    JOIN (SELECT ed.*
                            FROM (SELECT e.emple_no
                                       , e.emple_nm
                                       , e.dept_cd
                                       , d.dept_kind
                                       , case when nvl(e.ocp_cluster,'') != '' then e.ocp_cluster
                                                     else d.ocp_cluster
                                                end ocp_cluster
                                    FROM employee e JOIN department d ON e.dept_cd = d.dept_cd
                                ) ed
                         ) e ON mpa.emple_no = e.emple_no
                    LEFT JOIN
                    (SELECT accnt_no
                          , sum(T21) T21
                       FROM(SELECT accnt_no
                                 , CASE WHEN alow_cd='T21' THEN nvl(amt,0) ELSE 0 END as T21
                              FROM (SELECT accnt_no, amt, alow_cd, alow_dt, note, dtl_seq
                                      FROM alow_da_dtl ad
                                     WHERE 1=1
                                       AND alow_cd='T21'
                                       AND dtl_seq = (SELECT  max(dtl_seq)
                                                        FROM alow_da_dtl
                                                        WHERE accnt_no= ad.accnt_no
                                                        AND alow_dt=ad.alow_dt
                                                        AND alow_cd=ad.alow_cd)
                                    <if test="start_dt != null and start_dt != ''">
                                        AND alow_dt BETWEEN #{start_dt} AND  #{end_dt}
                                    </if>
                                    <if test="accnt_no != null and accnt_no != ''">
                                        AND accnt_no = #{accnt_no}
                                    </if>
                                    <if test="emple_no != null and emple_no != ''">
                                        AND emple_no = #{emple_no}
                                    </if>
                                    ) f
                              ) tmp
                      GROUP BY accnt_no
                    ) pm ON pm.accnt_no = mpa.accnt_no
                    LEFT OUTER JOIN rescission r ON r.accnt_no = mpa.accnt_no AND r.del_fg='N'
                 WHERE mpa.del_fg='N'
                   AND mb.del_fg='N'
                   <!--
                   AND nvl(r.resn_cl,'00') != '02'
                   AND e.dept_kind ='02' AND nvl(e.ocp_cluster,'') !='04'
                   -->
                   <if test="accnt_no != null and accnt_no != ''">
                   AND mpa.accnt_no = #{accnt_no}
                   </if>
                   <if test="emple_no != null and emple_no != ''">
                   AND mpa.emple_no = #{emple_no}
                   </if>
                   <if test="dept_cd != null and dept_cd != ''">
                   AND e.dept_cd = #{dept_cd}
                   </if>
                ) tmp
        WHERE 1=1
        <!--
          AND T21 <![CDATA[>]]> 0
        -->
    </select>

    <!-- sql-pay.xml [회원별 수당 조회 잔여수당 조회] ID : pay.selectAlowListForExtr 작성자 : 김은진 by 2014.12.17 -->
    <select id="AlowMap.selectAlowListForExtr" parameterType="map" resultType="resultMap">
        <if test="excel_yn != 'Y'.toString()">
        <include refid="CommonMap.headerPageSql" />
        </if>
        SELECT /* AlowMap.selectAlowListForExtr */
               ACCNT_NO
             , MEM_NM
             , EMPLE_NO
             , EMPLE_NM
             , JOIN_DT
             , PROD_CD
             , PROD_NM
             , PAY_DAY
             , REAL_PAY_NO
             , OCP_CLUSTER_NM
             , TOT_PAY_NO
             , TOT_PAY_AMT
             , T21
             , PROD_T21
             , TOT_T21
             , TOT_PAY_CNT
             , EXTR_T21_AMT
             , MODEL_CL_NM
             , RESN_PROC_YN_NM
             , CASE WHEN NVL(IP_STAT,0) = NVL(REAL_PAY_NO,0) AND JOIN_ST = '만기' THEN '만기'
                    WHEN NVL(IP_STAT,0) = NVL(REAL_PAY_NO,0) THEN '정상'
                    WHEN NVL(IP_STAT,0) - NVL(REAL_PAY_NO,0) = 1 THEN '당월미납'
                    WHEN NVL(IP_STAT,0) - NVL(REAL_PAY_NO,0) <![CDATA[>]]> 1 THEN TO_CHAR(NVL(IP_STAT,0) - NVL(REAL_PAY_NO,0)) || '회 연체'
                    WHEN NVL(IP_STAT,0) - NVL(REAL_PAY_NO,0) <![CDATA[<]]> 0 THEN TO_CHAR(NVL(REAL_PAY_NO,0) - NVL(IP_STAT,0)) || '회 선납'
               ELSE '' END PAY_STAT
             , NVL(ALOW_T32,0) AS ALOW_T32
             , JOIN_ST
             , CASE WHEN SUBSTR(REPLACE(FN_EVENT_DAY(ACCNT_NO),'-',''),1,6) <![CDATA[>]]> #{end_dt} THEN ''
                    ELSE FN_EVENT_DAY(ACCNT_NO) END as EVENT_DAY
    <if test="excel_yn != 'Y'.toString()">
        <if test="tot_row_cnt != null and tot_row_cnt == '0'.toString()">
             , COUNT(*) OVER() tot_row_cnt                      /* 총데이터건수 */
        </if>
        <if test="tot_row_cnt == null or tot_row_cnt != '0'.toString()">
             , TO_NUMBER(#{tot_row_cnt}) tot_row_cnt             /* 총데이터건수 */
        </if>
    </if>

          FROM (SELECT MPA.ACCNT_NO
                    , MB.MEM_NM
                    , E.EMPLE_NO
                    , E.EMPLE_NM
                    , MPA.JOIN_DT
                    , MPA.PROD_CD
                    , PD.PROD_NM
                    , (SELECT FN_COM_NM('96',e.ocp_cluster) FROM DUAL) AS OCP_CLUSTER_NM
                    , TM_PM.TOT_PAY_NO
                    , TM_PM.TOT_PAY_AMT
                    , nvl(ADTL.T21,0) AS T21
                    , nvl(tad.amt,0) PROD_T21
                    , nvl(tot_T21.amt,0) TOT_T21
                    , nvl(tad.amt,0) - nvl(tot_T21.amt,0) as extr_t21_amt
                    , (SELECT MODEL_CL_NM FROM PRODUCT_MODEL_CL_CD WHERE MODEL_CL_CD = mpa.PROD_MODEL_KIND) MODEL_CL_NM
                    , TB32.T32 AS ALOW_T32
                    , TM_PM.PAY_DAY
                    , PDM.JOIN_ST
                    , PDM.PAY_NO REAL_PAY_NO
                    , CASE WHEN NVL(R.RESN_CL,'X') = '02' THEN '미대상'
                             WHEN NVL(R.RESN_PROC_YN,'N') ='Y' AND NVL(R.CHK_SUBMIT,'N') ='N' THEN '처리'
                             ELSE '미처리'
                         END RESN_PROC_YN_NM

                    , CASE WHEN (PD.EXPR_NO - MPA.NEW_CHAN_GUNSU) <![CDATA[>]]> NVL(TRUNC(MONTHS_BETWEEN(LAST_DAY(#{end_dt}||'01') ,MPA.JOIN_DT),0) + 1, 0)
                           THEN NVL(TRUNC(MONTHS_BETWEEN(LAST_DAY(#{end_dt}||'01') ,MPA.JOIN_DT),0) + 1, 0) - NVL(TM_PM.TOT_PAY_NO, 0)
                           ELSE NVL((PD.EXPR_NO - MPA.NEW_CHAN_GUNSU), 0) - NVL(TM_PM.TOT_PAY_NO, 0)
                       END YEN_CHE
                    , CASE WHEN (PD.EXPR_NO - MPA.NEW_CHAN_GUNSU) = TM_PM.TOT_PAY_NO

                           THEN 1
                           ELSE 0
                       END YEN
                    , PD.EXPR_NO - MPA.NEW_CHAN_GUNSU AS TOT_PAY_CNT
                    , (FN_DIFF_MONTH(TO_DATE(#{end_dt}||'01'), TO_DATE(mpa.JOIN_DT)) + 1) AS IP_STAT
                FROM mem_prod_accnt mpa
                JOIN member mb 	ON mpa.mem_no = mb.mem_no
                JOIN product pd ON mpa.prod_cd=pd.prod_cd
                JOIN
                (
                    SELECT ed.*
                    FROM
                    (
                        SELECT
                            e.emple_no
                            , e.emple_nm
                            , e.dept_cd
                            , d.dept_kind
                            , case when nvl(e.ocp_cluster,'X') != 'X' then e.ocp_cluster
                                   else d.ocp_cluster
                                   end ocp_cluster
                        FROM employee e
                        JOIN department d ON e.dept_cd = d.dept_cd
                        WHERE 1=1
                        <if test="dept_cd != null and dept_cd != ''">
                            AND e.dept_cd = #{dept_cd}
                        </if>
                    ) ed
                    LEFT JOIN ALOW_SET_MST ACD ON ACD.OCP_CLUSTER = ED.OCP_CLUSTER and ACD.ALOW_CD = 'F5'
                    LEFT JOIN ALOW_SET_MST acdNeed ON acdNeed.alow_cd = 'T23' AND acdNeed.ocp_cluster = ed.ocp_cluster
                )e ON mpa.emple_no = e.emple_no
                LEFT OUTER JOIN
                (
                    SELECT ACCNT_NO, max(NO) TOT_PAY_NO, sum(PAY_AMT) TOT_PAY_AMT, max(PAY_DAY) PAY_DAY
                      FROM pay_mng
                     WHERE PAY_DAY <![CDATA[<=]]> to_char(LAST_DAY(#{end_dt}||'01') ,'YYYYMMDD')
                       AND del_fg='N'
                    GROUP BY ACCNT_NO
                ) TM_PM ON TM_PM.ACCNT_NO = MPA.ACCNT_NO
                LEFT JOIN
                (
                 SELECT ACCNT_NO
                      , sum(AMT) T21
                 FROM
                 (
                    SELECT ACCNT_NO
                         , AMT
                         , ALOW_CD
                         , ALOW_DT
                         , NOTE
                         , DTL_SEQ
                        FROM alow_da_dtl ad
                        WHERE 1=1
                        AND alow_cd='T21'
                        AND dtl_seq = (SELECT  max(dtl_seq)
                                   FROM alow_da_dtl
                                   WHERE accnt_no= ad.accnt_no
                                   AND alow_dt=ad.alow_dt
                                   AND alow_cd=ad.alow_cd
                                    )
                    <if test="start_dt != null and start_dt != ''">
                        AND alow_dt BETWEEN #{start_dt} AND #{end_dt}
                    </if>
                    <if test="accnt_no != null and accnt_no != ''">
                        AND accnt_no = #{accnt_no}
                    </if>
                    <if test="emple_no != null and emple_no != ''">
                        AND emple_no = #{emple_no}
                    </if>
                  ) tmp
                    GROUP BY accnt_no
                ) ADTL ON ADTL.accnt_no = mpa.accnt_no
                LEFT JOIN
                (
                    SELECT accnt_no, prod_cd
                         , OCP_CLUSTER
                         , sum(amt)amt
                    FROM
                    (
                        SELECT mpa.accnt_no, ad.prod_cd , ad.ocp_cluster
                            , ( (pay_no_end - pay_no +1) * amt ) amt
                        FROM mem_prod_accnt mpa
                        JOIN employee e ON mpa.emple_no = e.emple_no
                        JOIN department d ON e.dept_cd = d.dept_cd
                        JOIN ALOW_SET_MST ad ON alow_cd ='T21'
                          AND mpa.prod_cd=ad.prod_cd
                          AND d.ocp_cluster=ad.ocp_cluster
                          AND substr(mpa.join_dt,1,4)||'-'||substr(mpa.join_dt,5,2) between ad.PROD_JOIN_DT_STR and ad.prod_join_dt_end
                        WHERE 1=1
                        <if test="dept_cd != null and dept_cd != ''">
                            AND e.dept_cd = #{dept_cd}
                        </if>
                    ) t
                    GROUP BY ACCNT_NO
                           , PROD_CD
                           , OCP_CLUSTER
                ) tad ON MPA.ACCNT_NO=TAD.ACCNT_NO
                LEFT JOIN
                (
                    SELECT accnt_no, sum(amt) amt
                    FROM alow_da_dtl ad
                    WHERE alow_cd='T21'
                    and dtl_seq = (SELECT max(dtl_seq)
                                    FROM alow_da_dtl
                                  WHERE accnt_no=ad.accnt_no
                                  and alow_cd='T21'
                                  and alow_dt<![CDATA[<=]]>#{end_dt}
                                  AND alow_dt=ad.alow_dt
                                )
                    GROUP BY ACCNT_NO
                )tot_T21 ON TOT_T21.ACCNT_NO=MPA.ACCNT_NO
                LEFT OUTER JOIN RESCISSION R ON R.ACCNT_NO = MPA.ACCNT_NO AND R.DEL_FG='N' AND SUBSTR(R.RESN_PROC_DAY,1,6) = #{end_dt}

                LEFT OUTER JOIN (SELECT ACCNT_NO
                                      , PAY_NO
                                      , FN_DAY_ACCSTAT2(ACCNT_NO, LAST_DAY(#{end_dt} || '01')) JOIN_ST
                                 FROM PAY_DL_MST
                                WHERE DL_TYPE = '01' /* 입금마감 */
                                  AND PAY_DL_YYYYMM = #{end_dt}
                              ) PDM ON PDM.ACCNT_NO = MPA.ACCNT_NO
                <!-- 누진수당 -->
                LEFT OUTER JOIN (SELECT accnt_no
                                      , nvl(sum(T32),0) T32
                                     FROM (SELECT accnt_no
                                                , pay_no
                                                , CASE WHEN alow_cd='T32' THEN nvl(amt,0) ELSE 0 END T32
                                             FROM (SELECT accnt_no
                                                        , amt
                                                        , alow_cd
                                                        , alow_dt
                                                        , dtl_seq
                                                        , pay_no
                                                        FROM alow_da_dtl ad
                                                        WHERE 1=1
                                                        ANd alow_cd = 'T32'
                                                        AND dtl_seq = (SELECT max(dtl_seq)
                                                                   FROM alow_da_dtl
                                                                   WHERE accnt_no= ad.accnt_no
                                                                   AND emple_no=ad.emple_no
                                                                   AND pay_no = ad.pay_no
                                                                   AND alow_dt=ad.alow_dt
                                                                   AND alow_cd=ad.alow_cd
                                                                    )
                                                         and ( amt > 0 or hist_yn='Y')
                                                        AND alow_dt BETWEEN #{start_dt} AND #{end_dt}
                                                    ) f
                                      ) tmp2
                                  GROUP BY accnt_no

                ) TB32 ON TB32.accnt_no = mpa.accnt_no
                WHERE mpa.del_fg='N'
                AND mb.del_fg='N'
                <!--
                AND nvl(r.resn_cl,'00') != '02'
                AND e.dept_kind ='02' AND nvl(e.ocp_cluster,'') !='04'
                -->
                <if test="accnt_no != null and accnt_no != ''">
                    AND mpa.accnt_no = #{accnt_no}
                </if>
                <if test="emple_no != null and emple_no != ''">
                    AND mpa.emple_no = #{emple_no}
                </if>
                <if test="dept_cd != null and dept_cd != ''">
                    AND e.dept_cd = #{dept_cd}
                </if>
            ) tmp
        <!--
        WHERE T21 <![CDATA[>]]> 0
        -->
        <if test="excel_yn != 'Y'.toString()">
        <include refid="CommonMap.footerPageSql" />
        </if>
    </select>

    <!-- sql-pay.xml [회원별 수당조회 이월환수] ID : pay.selectAlowListForF12 작성자 : 김은진 -->
    <select id="AlowMap.selectAlowListForF12" parameterType="map" resultType="resultMap">
        SELECT /* AlowMap.selectAlowListForF12 */
               adf.emple_no
          , e.emple_nm
          , nvl(stnd_alow_dt,'') stnd_alow_dt
          , fn_dept_nm(e.dept_cd) AS dept_nm
          , nvl(adf.tm_dtl_amt,0) AS tm_dtl_amt
          , nvl(adf.tm_redmp_amt,0) AS tm_redmp_amt
          , nvl(adf.stnd_amt,0) AS stnd_amt
          , nvl(adf.tm_alow_amt,0) AS tm_alow_amt
          , case when nvl(adf.amt,0) <![CDATA[<]]> 0 then 0 else nvl(adf.amt,0) end AS amt
          , CASE WHEN e.ocp_cluster is not null THEN fn_com_nm('96',e.ocp_cluster)
                 ELSE fn_com_nm('96',d.ocp_cluster)
                END ocp_cluster_nm
        FROM alow_dtl_f12 adf
        JOIN employee e ON adf.emple_no=e.emple_no
        JOIN department d ON e.dept_cd=d.dept_cd
        WHERE 1=1
        <if test="start_dt != null and start_dt != ''">
              AND adf.alow_dt BETWEEN #{start_dt} AND  #{end_dt}
          </if>

        <if test="emple_no != null and emple_no != ''">
            AND adf.emple_no = #{emple_no}
        </if>
        AND nvl(e.ocp_cluster, d.ocp_cluster) !='04'
        ORDER BY e.dept_cd
    </select>

    <sql id="selectAlowListForTmp">
        SELECT accnt_no
             , emple_no
             , emple_nm
             , ocp_cluster
             , ocp_cluster_nm
             , join_dt
             , prod_cd
             , tax_rat
             , need_rat
             , dept_cd
             , sum(T21) T21
             , sum(T32) T32
             , sum(T33) T33
             , sum(F7) F7
             , sum(F11) F11
             , sum(F8) F8
             , sum(F10) F10
             , sum(F12) F12
             , max(pay_no) pay_no
             , max(hist_yn) hist_yn
        FROM (SELECT mpa.accnt_no
                   , e.emple_no
                   , e.emple_nm
                   , e.ocp_cluster
                   , (SELECT FN_COM_NM('96',e.ocp_cluster) FROM DUAL) ocp_cluster_nm
                   , mpa.join_dt
                   , mpa.prod_cd
                   , nvl(pm.T21,0) AS T21          /* 모집수당 */
                   , nvl(pm.T32,0) AS T32          /* 누진수당 */
                   , nvl(pm.F7,0) AS F7            /* 환수액 */
                   , nvl(pm.F11,0) AS F11          /* 누진환수 */
                   , 0 AS F8                       /* 해약환수액 */
                   , 0 AS F10                      /* 연체환수액 */
                   , nvl(pm.F12,0) AS F12          /* 이월환수 */
                   , 0 AS T33                      /* 알선수수료 */
                   , nvl(e.tax_rat,0)  tax_rat
                   , nvl(e.need_rat,0) need_rat
                   , pm.pay_no
                   , pm.hist_yn
                   , e.dept_cd
                FROM mem_prod_accnt mpa
                JOIN (SELECT ed.*
                           , case when nvl(ed.incom_cl,'X') = 'X' then (acd.pay_rat/100)
                                  else
                                        <!--
                                                2018.05.16 김찬영 2018.03월까지는 0.04, 2018.03월 이후는 0.06
                                                case when ed.incom_cl = '0001' then 0.04
                                                     when ed.incom_cl = '0002' then 0.03
                                                     when ed.incom_cl = '0003' then 0
                                                     else 0.9
                                                end
                                        -->
                                        <![CDATA[
                                                 case when (ed.incom_cl = '0001' and #{end_dt} <= '201803') then 0.04
                                                      when (ed.incom_cl = '0001' and #{end_dt} > '201803') then 0.06
                                                      when ed.incom_cl = '0002' then 0.03
                                                      when ed.incom_cl = '0003' then 0
                                                      else 0.9
                                                      end
                                         ]]>
                                  end tax_Rat
                           , (acdNeed.pay_rat/100) AS need_rat
                        FROM (SELECT e.emple_no
                                   , e.emple_nm
                                   , e.dept_cd
                                   , e.incom_cl
                                   , d.dept_kind
                                   , case when nvl(e.ocp_cluster,'X') != 'X' then e.ocp_cluster
                                                 else d.ocp_cluster
                                            end ocp_cluster
                               FROM employee e JOIN department d ON e.dept_cd = d.dept_cd
                                ) ed
                        LEFT JOIN (SELECT acd2.pay_rat
                                        , acd2.alow_cd
                                        , acd2.ocp_cluster
                                     FROM ALOW_SET_MST acd2
                                    WHERE acd2.alow_cd = 'F5' /* 소득세 */
                                    ) acd on acd.ocp_cluster = ed.ocp_cluster
                        /*
                        2018.06.18 : 2018년 3월 부터 필요경비가 80==> 70으로 변경
                                     수당 중복발생으로 쿼리수정
                        LEFT JOIN ALOW_SET_MST acdNeed ON	acdNeed.alow_cd = 'T23' AND acdNeed.ocp_cluster = ed.ocp_cluster
                        */

                        LEFT JOIN ALOW_SET_MST acdNeed
                               ON acdNeed.ALOW_CD = 'T23'
                              AND acdNeed.PROD_JOIN_DT_STR <![CDATA[<=]]> #{end_dt} AND  acdNeed.PROD_JOIN_DT_END <![CDATA[>=]]> #{end_dt}
                              AND acdNeed.OCP_CLUSTER = ed.OCP_CLUSTER /* 필요경비 */
                     ) e ON mpa.emple_no = e.emple_no

                /* 개별 근거 JOIN */
                JOIN (SELECT accnt_no
                           , nvl(sum(T21),0) T21
                           , nvl(sum(F7),0) F7
                           , nvl(sum(T32),0) T32
                           , nvl(sum(F11),0) F11
                           , nvl(sum(F12),0) F12	/* 이월환수 */
                           , nvl(max(pay_no),0) pay_no
                           , nvl(max(hist_yn),'N') hist_yn
                        FROM (SELECT accnt_no
                                   , pay_no
                                   , CASE WHEN alow_cd='T21' THEN nvl(amt,0) ELSE 0 END T21
                                   , CASE WHEN alow_cd='F7' THEN nvl(amt,0) ELSE 0 END F7
                                   , CASE WHEN alow_cd='T32' THEN nvl(amt,0) ELSE 0 END T32
                                   , CASE WHEN alow_cd='F11' THEN nvl(amt,0) ELSE 0 END F11
                                   , CASE WHEN alow_cd='F12' THEN nvl(amt,0) ELSE 0 END F12
                                   , hist_yn
                                FROM (SELECT ACCNT_NO
                                           , AMT
                                           , ALOW_CD
                                           , ALOW_DT
                                           , NOTE
                                           , DTL_SEQ
                                           , PAY_NO
                                           , HIST_YN
                                        FROM alow_da_dtl ad
                                       WHERE 1=1
                                          ANd alow_cd not in ('T33','F8','F10') /* 알선수수료, 해약환수액, 연체환수액 */
                                          AND dtl_seq = (SELECT max(dtl_seq)
                                                           FROM ALOW_DA_DTL
                                                          WHERE ACCNT_NO= AD.ACCNT_NO
                                                            AND EMPLE_NO=AD.EMPLE_NO
                                                            AND PAY_NO = AD.PAY_NO
                                                            AND ALOW_DT=AD.ALOW_DT
                                                            AND ALOW_CD=AD.ALOW_CD
                                                            )
                                           and ( amt > 0 or hist_yn='Y')

                                      <if test="start_dt != null and start_dt != ''">
                                          AND alow_dt BETWEEN #{start_dt} AND  #{end_dt}
                                      </if>
                                      <if test="accnt_no != null and accnt_no != ''">
                                          AND accnt_no = #{accnt_no}
                                      </if>
                                      <if test="emple_no != null and emple_no != ''">
                                          AND emple_no = #{emple_no}
                                      </if>
                                      ) f
                             )
                       GROUP BY accnt_no
                     ) pm ON pm.accnt_no = mpa.accnt_no
                    LEFT OUTER
                JOIN rescission r ON r.accnt_no = mpa.accnt_no AND r.del_fg='N'
               WHERE mpa.del_fg='N'
                 <!-- 2017-03-27
                 AND nvl(r.resn_cl,'00') != '02'
                 AND (
                    (e.dept_kind ='02' AND nvl(e.ocp_cluster,'') !='04') /* 부서구분이 계열 이면서 대명직군이 콜센터가 아닌 경우 */
                    OR
                    e.dept_kind='01'    /* 부서구분이 일반영업 */
                    )
                 -->
            <if test="accnt_no != null and accnt_no != ''">
                 AND mpa.accnt_no = #{accnt_no}
            </if>
            <if test="emple_no != null and emple_no != ''">
                 AND mpa.emple_no = #{emple_no}
            </if>
            <if test="dept_cd != null and dept_cd != ''">
                 AND e.dept_cd = #{dept_cd}
            </if>

              UNION ALL

              SELECT mpa.accnt_no
                   , e.emple_no
                   , e.emple_nm
                   , e.ocp_cluster
                   , (SELECT FN_COM_NM('96', e.ocp_cluster) FROM DUAL) ocp_cluster_nm
                   , mpa.join_dt
                   , mpa.prod_cd
                   , 0 AS T21                  /* 모집수당 */
                   , 0 AS T32                  /* 누진수당 */
                   , 0 AS F7                   /* 환수액 */
                   , 0 AS F11                  /* 누진환수 */
                   , nvl(pm.F8,0) AS F8        /* 해약환수액 */
                   , nvl(pm.F10,0) AS F10      /* 연체환수액 */
                   , 0 AS F12                  /* 이월환수 */
                   , nvl(pm.T33,0) AS T33      /* 알선수수료 */
                   , nvl(e.tax_rat,0)  tax_Rat
                   , nvl(e.need_rat,0) need_Rat
                   , nvl(pm.pay_no,0) AS pay_no
                   , pm.hist_yn
                   , e.dept_cd
                FROM mem_prod_accnt mpa
                JOIN (SELECT ed.*
                           , case when nvl(ed.incom_cl,'x') = 'x' then (acd.pay_rat/100)
                                            else
                                                <!--
                                                        2018.05.16 김찬영 2018.03월까지는 0.04, 2018.03월 이후는 0.06
                                                        case when ed.incom_cl = '0001' then 0.04
                                                             when ed.incom_cl = '0002' then 0.03
                                                             when ed.incom_cl = '0003' then 0
                                                             else 0.9
                                                        end
                                                -->
                                                <![CDATA[
                                                         case when (ed.incom_cl = '0001' and #{end_dt} <= '201803') then 0.04
                                                              when (ed.incom_cl = '0001' and #{end_dt} > '201803') then 0.06
                                                              when ed.incom_cl = '0002' then 0.03
                                                              when ed.incom_cl = '0003' then 0
                                                              else 0.9
                                                         end
                                                 ]]>
                                        end tax_Rat
                           , (acdNeed.pay_rat/100) AS need_rat
                        FROM (SELECT e.emple_no
                                   , e.emple_nm
                                   , e.dept_cd
                                   , e.incom_cl
                                   , d.dept_kind
                                   , case when nvl(e.ocp_cluster,'X') != 'X' then e.ocp_cluster
                                                 else d.ocp_cluster
                                            end ocp_cluster
                               FROM employee e
                               JOIN department d ON e.dept_cd = d.dept_cd
                           ) ed LEFT
                        JOIN (SELECT acd2.pay_rat
                                   , acd2.alow_cd
                                   , acd2.ocp_cluster
                                FROM ALOW_SET_MST acd2
                               WHERE acd2.alow_cd = 'F5'
                               ) acd ON	acd.ocp_cluster = ed.ocp_cluster
                        /*
                        2018.06.18 : 2018년 3월 부터 필요경비가 80==> 70으로 변경
                                     수당 중복발생으로 쿼리수정
                        LEFT JOIN ALOW_SET_MST acdNeed ON acdNeed.alow_cd = 'T23' AND acdNeed.ocp_cluster = ed.ocp_cluster
                        */

                        LEFT JOIN ALOW_SET_MST acdNeed
                               ON acdNeed.ALOW_CD = 'T23'
                              AND acdNeed.PROD_JOIN_DT_STR <![CDATA[<=]]> #{end_dt} AND  acdNeed.PROD_JOIN_DT_END <![CDATA[>=]]> #{end_dt}
                              AND acdNeed.OCP_CLUSTER = ed.OCP_CLUSTER /* 필요경비 */
                    )e ON mpa.emple_no = e.emple_no
                /* 개별 근거 JOIN */
                JOIN (SELECT accnt_no
                           , nvl(sum(T33),0) T33
                           , nvl(sum(F8),0) F8
                           , nvl(sum(F10),0) F10
                           , nvl(max(pay_no),0) pay_no
                           , nvl(max(hist_yn),'N') hist_yn
                        FROM (SELECT accnt_no
                                   , pay_no
                                   , CASE WHEN alow_cd='T33' THEN nvl(amt,0) ELSE 0 END T33
                                   , CASE WHEN alow_cd='F8' THEN nvl(amt,0) ELSE 0 END F8
                                   , CASE WHEN alow_cd='F10' THEN nvl(amt,0) ELSE 0 END F10
                                   , hist_yn
                                 FROM (SELECT accnt_no, amt, alow_cd, alow_dt, note, dtl_seq, pay_no, hist_yn
                                         FROM alow_da_dtl ad
                                        WHERE 1=1
                                          ANd alow_cd in ('T33','F8','F10') /* 알선수수료, 해약환수액, 연체환수액 */
                                          AND dtl_seq = (SELECT  max(dtl_seq)
                                                  FROM alow_da_dtl
                                                  WHERE accnt_no= ad.accnt_no
                                                  AND emple_no=ad.emple_no
                                                  ANd pay_no=ad.pay_no
                                                  AND alow_dt=ad.alow_dt
                                                  AND alow_cd=ad.alow_cd
                                                   )
                                          and ( amt > 0 or hist_yn='Y')

                                        <if test="start_dt != null and start_dt != ''">
                                          AND alow_dt BETWEEN #{start_dt} AND  #{end_dt}
                                        </if>
                                        <if test="accnt_no != null and accnt_no != ''">
                                          AND accnt_no = #{accnt_no}
                                                                           </if>
                                        <if test="emple_no != null and emple_no != ''">
                                          AND emple_no = #{emple_no}
                                        </if>

                                        ) f
                                 )
                         GROUP BY accnt_no
                        ) pm ON pm.accnt_no = mpa.accnt_no
               WHERE mpa.del_fg='N'
            <if test="accnt_no != null and accnt_no != ''">
                 AND mpa.accnt_no = #{accnt_no}
            </if>
            <if test="emple_no != null and emple_no != ''">
                 AND mpa.emple_no = #{emple_no}
            </if>
            <if test="dept_cd != null and dept_cd != ''">
                 AND e.dept_cd = #{dept_cd}
            </if>
             ) tmp
         GROUP BY accnt_no
                , emple_no
                , emple_nm
                , ocp_cluster
                , ocp_cluster_nm
                , join_dt
                , prod_Cd
                , tax_rat
                , need_rat
                , dept_cd
    </sql>

    <select id="AlowMap.selectAloMstForAccnt" resultType="int">
        SELECT /* AlowMap.selectAloMstForAccnt */
               count(alow_dt) AS cnt
          FROM alow_mst
         WHERE alow_dt = #{stnd_mm}
    </select>

    <parameterMap id="callUPAlowAmtMap" type="map">
        <parameter property="stndMM" mode="IN" jdbcType="VARCHAR"  javaType="java.lang.String" />
    </parameterMap>

    <update id="AlowMap.callUPAlowAmt" statementType="CALLABLE" parameterMap="callUPAlowAmtMap">
        { CALL UP_ALOW_AMT (?) }
    </update>

    <select id="AlowMap.selectAlowAmtAccnt" resultType="int">
        SELECT /* AlowMap.selectAlowAmtAccnt */
               count(stnd_mm) AS cnt
          FROM alow_amt_accnt
         WHERE stnd_mm =#{stnd_mm}
    </select>

    <delete id="AlowMap.deleteAlowAmt">
        DELETE /* AlowMap.deleteAlowAmt */
          FROM alow_amt_accnt
         WHERE stnd_mm =#{stnd_mm}
    </delete>

    <select id="AlowMap.selectAlowDaDtlCheck" resultType="int">
        SELECT /* AlowMap.selectAlowDaDtlCheck */
            max(cnt)
        FROM (SELECT count(*) cnt
                FROM alow_da_dtl ad
               WHERE accnt_no=#{accnt_no}
                 AND alow_dt=#{alow_dt}
                 AND alow_cd=#{alow_cd}
                 AND amt <![CDATA[>]]> 0
                 AND dtl_seq = (SELECT max(dtl_seq) FROM alow_da_dtl
                                    WHERE alow_cd=ad.alow_cd
                                    AND accnt_no=ad.accnt_no
                                    AND alow_dt=ad.alow_dt
                                    AND pay_no=ad.pay_no AND emple_no=ad.emple_no )
                 GROUP BY alow_cd
                        , alow_dt
                        , accnt_no

            UNION ALL
              SELECT 0 cnt
              FROM DUAL
          )t
    </select>

    <!-- sql-task.xml [수당 추가입력] ID : pay.insertAlowDaDtl 작성자 : 김은진 -->
    <insert id="AlowMap.insertAlowDaDtl" parameterType="map">
        /* AlowMap.insertAlowDaDtl */
        INSERT INTO alow_da_dtl
        (ALOW_DT, EMPLE_NO, ALOW_CD, ACCNT_NO, DTL_SEQ,  AMT, PROD_CD, NEW_CHAN_GUNSU,pay_no, note, REG_DM, REG_MAN, hist_yn)
        SELECT #{alow_dt} alow_dt
            , emple_no
            , #{alow_cd} alow_cd
            , accnt_no
              , (SELECT nvl(max(dtl_seq),0)+1
                          FROM alow_da_dtl WHERE accnt_no =#{accnt_no}
                            AND alow_dt =#{alow_dt}
                            AND alow_cd =#{alow_cd}) dtl_seq
              , #{amt} amt
              , prod_cd
              , new_chan_gunsu
              , (SELECT CASE WHEN nvl( (SELECT max(pay_no) FROM alow_da_dtl ad
                                                  WHERE accnt_no=#{accnt_no}
                                                  AND alow_dt=#{alow_dt}
                                                  AND alow_cd=#{alow_cd}
                                                  AND dtl_seq = (SELECT max(dtl_seq) FROM alow_da_dtl
                                                                  WHERE alow_cd=ad.alow_cd
                                                                  AND accnt_no=ad.accnt_no
                                                                   AND alow_dt=ad.alow_dt
                                                                   AND pay_no=ad.pay_no AND emple_no=ad.emple_no )
                              ) ,999) = 999
                              THEN nvl((SELECT max(no) FROM pay_mng WHERE accnt_no=#{accnt_no} AND del_fg='N' AND substr(pay_day,1,6) &lt; #{alow_dt} ),0)
                              ELSE nvl( (SELECT max(pay_no) FROM alow_da_dtl ad
                                                  WHERE accnt_no=#{accnt_no}
                                                  AND alow_dt=#{alow_dt}
                                                  AND alow_cd=#{alow_cd}
                                                  AND dtl_seq = (SELECT max(dtl_seq) FROM alow_da_dtl
                                                                  WHERE alow_cd=ad.alow_cd
                                                                  AND accnt_no=ad.accnt_no
                                                                   AND alow_dt=ad.alow_dt
                                                                   AND pay_no=ad.pay_no AND emple_no=ad.emple_no ) ) ,0)
                              END
                   FROM DUAL) pay_no
              , #{note} note
              , SYSDATE reg_dm
              , #{rgsr_id} reg_man
              , 'Y' hist_yn
        FROM mem_prod_accnt
        WHERE accnt_no =#{accnt_no}
        AND del_fg='N'
    </insert>


    <update id="AlowMap.updateAlowDaDtl">
        /* AlowMap.updateAlowDaDtl */
        INSERT INTO alow_da_dtl
            (alow_dt, emple_no, alow_cd, accnt_no, dtl_seq,  amt, prod_cd,  new_chan_gunsu, pay_no, note, hist_yn, reg_dm, reg_man)
        SELECT
            alow_dt
            , emple_no
            , alow_cd
            , accnt_no
            , (dtl_seq+1) dtl_seq
            , amt
            , prod_cd
            , new_chan_gunsu
            , pay_no
            , '이력관리 전산자동추가' note
            , 'Y'
            , SYSDATE
            , #{rgsr_id}
          FROM alow_da_dtl ad
         WHERE alow_dt = #{alow_dt}
           AND alow_cd =#{alow_cd}
           AND accnt_no =#{accnt_no}
           AND amt <![CDATA[>]]> 0
           AND dtl_seq =(SELECT max(dtl_seq) FROM alow_da_dtl
                                    WHERE alow_cd=ad.alow_cd
                                    AND accnt_no=ad.accnt_no
                                     AND alow_dt=ad.alow_dt
                                     AND pay_no=ad.pay_no AND emple_no=ad.emple_no )


        UPDATE alow_da_dtl SET amt = 0,  note ='회차전산관리'
        FROM alow_da_dtl a
        INNER JOIN (SELECT 	ad.*
                      FROM alow_da_dtl ad
                     WHERE alow_dt = #{alow_dt}
                       AND alow_cd =#{alow_cd}
                       AND accnt_no =#{accnt_no}
                       AND amt <![CDATA[>]]> 0
                       AND dtl_seq =(SELECT max(dtl_seq)
                                       FROM alow_da_dtl
                                      WHERE alow_cd=ad.alow_cd
                                        AND accnt_no=ad.accnt_no
                                        AND alow_dt=ad.alow_dt
                                        AND pay_no=ad.pay_no AND emple_no=ad.emple_no )
        )b ON a.accnt_no=b.accnt_no
            AND a.alow_cd=b.alow_cd
            AND a.alow_dt=b.alow_dt
            AND a.pay_no = b.pay_no
            AND a.dtl_seq = b.dtl_seq
    </update>

    <parameterMap id="callUpAlowDtlF12Map" type="map">
        <parameter property="alow_dt" mode="IN" jdbcType="VARCHAR"  javaType="java.lang.String" />
        <parameter property="emple_no" mode="IN" jdbcType="VARCHAR" javaType="java.lang.String" />
    </parameterMap>
    <update id="AlowMap.callUpAlowDtlF12" statementType="CALLABLE" parameterMap="callUpAlowDtlF12Map">
        { CALL SP_UP_ALOW_DTL_F12 (?,?) }
    </update>

    <update id="AlowMap.updateAlowDtlF12">
        <selectKey keyProperty="tm_dtl_amt" resultType="int" order="BEFORE">
        SELECT sum(amt)
          FROM alow_da_dtl ad
         WHERE alow_dt=#{alow_dt}
           AND alow_cd='F12'
           AND emple_no = #{emple_no}
           AND dtl_seq = (SELECT max(dtl_seq)
                            FROM alow_Da_dtl
                           WHERE ad.ALOW_DT = alow_dt
                             AND ad.alow_cd=alow_cd
                             AND ad.ACCNT_NO= accnt_no
                             AND ad.emple_no = emple_no
                             AND ad.pay_no=pay_no
                             AND ad.PROD_CD = prod_Cd
                            )
        </selectKey>

        UPDATE /* AlowMap.updateAlowDtlF12 */
               alow_dtl_f12
           SET tm_dtl_amt = nvl(#{tm_dtl_amt},0)
             , amt = ( nvl(stnd_amt,0)+nvl(tm_redmp_amt,0) ) - nvl(#{tm_dtl_amt},0)
         WHERE alow_dt = #{alow_dt}
           AND emple_no = #{emple_no}
    </update>

    <!--
    sql-pay.xml [회원별 수당 관리(회원 개별 상세조회)] ID : pay.selectAlowMngForAccnt 작성자 : 김은진 by 2014.12.22
    T21: 모집수당, T32: 누진수당, T33: B2B
    관련화면 : DL470900P01 (회원별 수당관리 팝업)
    -->
    <select id="AlowMap.selectAlowMngForAccnt" parameterType="map" resultType="resultMap">

        WITH /* AlowMap.selectAlowMngForAccnt */
         W01 AS (SELECT note
                      , accnt_no
                      , alow_dt
                      , ROW_NUMBER() OVER (PARTITION BY ALOW_DT ORDER BY REG_DM DESC) rnum
                   FROM alow_da_dtl
                  WHERE accnt_no = #{accnt_no}
                    <!-- AND alow_dt  = tm.alow_dt -->
                    AND reg_man <![CDATA[<>]]> '0000000000'
                  ORDER BY reg_dm desc)

        SELECT mpa.accnt_no
             , tm.alow_dt
             , T21
             , T32
             , T33
             , F7
             , F11
             , F8
             , F10
             , F12
             , nvl(hist_yn,'N') AS  da_dtl_yn


<!--
             , (SELECT note
                  FROM (SELECT note
                             , rownum rnum
                          FROM alow_da_dtl
                         WHERE accnt_no = mpa.accnt_no
                           AND alow_dt  = tm.alow_dt
                           AND reg_man <![CDATA[<>]]> '0000000000'
                         ORDER BY reg_dm desc)
                 WHERE RNUM = 1) note
-->


             , (SELECT note
                  FROM W01 W
                 WHERE W.accnt_no = mpa.accnt_no
                   AND W.alow_dt = tm.alow_dt
                   AND W.rnum = 1) note
        FROM mem_prod_accnt mpa
            JOIN member mb ON mpa.mem_no = mb.mem_no
            JOIN employee e ON mpa.emple_no = e.emple_no
            JOIN department d ON e.dept_cd = d.dept_cd
          INNER JOIN (SELECT accnt_no
                           , alow_dt
                           , max(dtl_seq) AS dtl_seq
                           , sum(T21) AS T21
                           , sum(T32) AS T32
                           , sum(T33) AS T33
                           , sum(F7) AS F7
                           , sum(F11) AS F11
                           , sum(F8) AS F8
                           , sum(F10) AS F10
                           , sum(F12) AS F12
                           , max(hist_yn) AS hist_yn
                        FROM (SELECT accnt_no
                                   , alow_dt
                                   , dtl_seq
                                   , CASE WHEN alow_cd='T21' THEN nvl(amt,0) ELSE 0 END T21
                                   , CASE WHEN alow_cd='T32' THEN nvl(amt,0) ELSE 0 END T32
                                   , CASE WHEN alow_cd='T33' THEN nvl(amt,0) ELSE 0 END T33
                                   , CASE WHEN alow_cd='F7' THEN nvl(amt,0) ELSE 0 END F7
                                   , CASE WHEN alow_cd='F11' THEN nvl(amt,0) ELSE 0 END F11
                                   , CASE WHEN alow_cd='F8' THEN nvl(amt,0) ELSE 0 END F8
                                   , CASE WHEN alow_cd='F10' THEN nvl(amt,0) ELSE 0 END F10
                                   , CASE WHEN alow_cd='F12' THEN nvl(amt,0) ELSE 0 END F12
                                   , hist_yn
                                  FROM (SELECT accnt_no
                                             , amt
                                             , alow_cd
                                             , alow_dt
                                             , note
                                             , dtl_seq
                                             , hist_yn
                                          FROM alow_da_dtl ad
                                         WHERE accnt_no = #{accnt_no}
                                           AND dtl_seq = (SELECT max(dtl_seq)
                                                            FROM alow_da_dtl
                                                           WHERE accnt_no= ad.accnt_no
                                                             AND emple_no=ad.emple_no
                                                             AND pay_no=ad.pay_no
                                                             AND alow_dt=ad.alow_dt
                                                             AND alow_cd=ad.alow_cd
                                                          )
                                          ) f
                                  WHERE 1=1
                                ) tmp
                            GROUP BY accnt_no
                                   , alow_Dt
                          )tm ON mpa.accnt_no = tm.accnt_no
         WHERE mpa.accnt_no =#{accnt_no}
    </select>

    <!-- sql-pay.xml [B2B업체 수수료  상세내역] ID : pay.selectPayRollAgencyList 작성자 : 이금례 -->
    <select id="AlowMap.selectPayRollAgencyList" parameterType="map" resultType="resultMap">
        SELECT /* AlowMap.selectPayRollAgencyList */
               A.*
             , CASE WHEN A.PAY_NO <![CDATA[<]]> PAY_NO_END THEN A.PAY_NO
                    WHEN A.PAY_NO <![CDATA[>=]]> PAY_NO_END THEN PAY_NO_END
                    ELSE NULL END PAY_NO_END
             , P.PAY_NO TOT_PAY_NO
             , P.LAST_PAY_DAY PAY_DAY
          FROM (SELECT TBL.ALOW_DT
                     , TBL.B2B_COMP_CD
                     , TBL.B2B_COMP_NM
                     , TBL.SALE_TYPE
                     , TBL.SALE_TYPE_NM
                     , TBL.ACCNT_NO
                     , TBL.PROD_CD
                     , TBL.PROD_NM
                     , TBL.JOIN_DT
                     , SUM(TBL.amt) AMT
                     , SUM(TBL.RESN_REDMP_AMT) RESN_REDMP_AMT
                     , SUM(TBL.OVER_REDMP_AMT) OVER_REDMP_AMT
                     , TBL.pay_No
                     , TBL.mem_nm
                     , TBL.pay_St
                     , TBL.join_St
                     , TBL.alow_b2b_comp_cd
                     , TBL.alow_b2b_comp_nm
                     , TBL.event_day
                     , TBL.st_grp_cd
                     , TBL.CELL
                     , 'T33' alow_cd
                     , TBL.EMPLE_NO
                     , TBL.EMPLE_NM
                     , TBL.DEPT_NM
                     , (SELECT MODEL_CL_NM FROM PRODUCT_MODEL_CL_CD WHERE MODEL_CL_CD = TBL.PROD_MODEL_KIND) MODEL_CL_NM
                     , TBL.OCP_CLUSTER
                     , TBL.MPA_EMPLE_NO
                     , TBL.MPA_EMPLE_NM
                     , TBL.MPA_DEPT_NM
                  FROM (SELECT alow_dt
                             , alow.b2b_comp_cd
                             , COM_NM as b2b_Comp_Nm
                             , (SELECT FN_COM_NM('0125',b2b.sale_type) FROM DUAL) as sale_type_nm
                             , b2b.sale_type
                             , alow.accnt_no
                             , alow.prod_cd
                             , prod_nm
                             , join_dt
                             , amt
                             , 0 RESN_REDMP_AMT
                             , 0 OVER_REDMP_AMT
                             , ALOW.PAY_NO
                             , mem_nm
                             , fn_yen_che(alow.accnt_no) as pay_St
                             , CASE WHEN SUBSTR(REPLACE(fn_event_day(ALOW.ACCNT_NO),'-',''),1,6) = #{alow_dt} THEN
                                         CASE WHEN fn_event(alow.accnt_no) = '' THEN '정상'
                                         ELSE fn_event(alow.accnt_no)
                                         END
                                    ELSE '' END join_St
                             , alow.alow_b2b_comp_cd
                             , ( SELECT COM_NM FROM B2BCOMCD WHERE COM_CD = ALOW.ALOW_B2B_COMP_CD ) AS ALOW_B2B_COMP_NM
                             , CASE WHEN SUBSTR(REPLACE(fn_event_day(ALOW.ACCNT_NO),'-',''),1,6)=#{alow_dt} THEN fn_event_day(ALOW.ACCNT_NO) ELSE '' END AS EVENT_DAY
                             , SD.ST_GRP_CD
                             , MEM.CELL
                             , b2b.emple_no
                             , E.EMPLE_NM
                             , ACCNT.EMPLE_NO MPA_EMPLE_NO
                             , E2.EMPLE_NM MPA_EMPLE_NM
                             , D2.DEPT_NM MPA_DEPT_NM
                             , D.DEPT_NM
                             , ACCNT.PROD_MODEL_KIND
                             , COALESCE(E.OCP_CLUSTER, D.OCP_CLUSTER) OCP_CLUSTER
                            FROM alow_dtl_t33 alow
                                    inner join mem_prod_accnt accnt on accnt.accnt_no = alow.accnt_no
                                    LEFT OUTER JOIN EMPLOYEE E2 ON E2.EMPLE_NO = ACCNT.EMPLE_NO
                                    LEFT OUTER JOIN (SELECT DEPT_CD
                                                          , substr(replace(SYS_CONNECT_BY_PATH(d2.dept_nm, '__'), '__', '/'),2) dept_nm
                                                       FROM DEPARTMENT d2
                                                     CONNECT BY PRIOR d2.DEPT_CD = d2.HIGH_DEPT_CD
                                                      START WITH lvl = '1') D2 ON E2.dept_cd = D2.dept_cd
                                    inner join member mem on mem.mem_no = accnt.mem_no
                                    left outer JOIN B2BCOMCD b2b on b2b.COM_CD = alow.B2B_COMP_CD
                                    LEFT OUTER JOIN EMPLOYEE E ON E.EMPLE_NO = B2B.EMPLE_NO
                                    LEFT OUTER JOIN DEPARTMENT D ON D.DEPT_CD = E.DEPT_CD
                                    INNER JOIN product prod on prod.prod_cd = alow.prod_cd
                                    left outer JOIN B2B_SALE_TYPE_DTL sd on b2b.sale_type = sd.sale_type
                                    LEFT OUTER JOIN B2B_SALE_TYPE_MST sm on sd.st_grp_cd = sm.st_grp_cd
                           WHERE alow.alow_dt	= #{alow_dt}
                            <if test="st_grp_cd != null and st_grp_cd != ''">
                                and sd.st_grp_cd	= #{st_grp_cd}
                            </if>
                            <if test="b2b_comp_cd != null and b2b_comp_cd != ''">
                            AND		alow.b2b_comp_cd = #{b2b_comp_cd}
                            </if>
                            <if test="sale_type != null and sale_type != ''">
                            AND		b2b.sale_type = #{sale_type}
                            </if>
                            <if test="pay_no != null and pay_no != ''">
                            AND		pay_no = #{pay_no}
                            </if>
                union all

                        SELECT alow_dt
                             , alow.b2b_comp_cd
                             , COM_NM as b2b_Comp_Nm
                             , (SELECT FN_COM_NM('0125',b2b.sale_type) FROM DUAL) as sale_type_nm
                             , b2b.sale_type
                             , alow.accnt_no
                             , alow.prod_cd
                             , prod_nm
                             , join_dt
                             , 0 amt
                             , case when alow.alow_cd = 'F8'
                                       then amt
                                       else 0
                                  end RESN_REDMP_AMT
                             , case when alow.alow_cd = 'F10'
                                       then amt
                                       else 0
                                  end OVER_REDMP_AMT
                             , ALOW.PAY_NO
                             , mem_nm
                             , FN_YEN_CHE(alow.accnt_no) as pay_St
                             , CASE WHEN SUBSTR(REPLACE(fn_event_day(ALOW.ACCNT_NO),'-',''),1,6) = #{alow_dt} THEN
                                         CASE WHEN fn_event(alow.accnt_no) = '' THEN '정상'
                                         ELSE fn_event(alow.accnt_no)
                                         END
                                    ELSE '' END join_St
                             , alow.alow_b2b_comp_cd
                             , (select com_nm from b2bcomcd where com_cd = alow.alow_b2b_comp_cd) as alow_b2b_comp_nm
                             , CASE WHEN SUBSTR(REPLACE(fn_event_day(ALOW.ACCNT_NO),'-',''),1,6)=#{alow_dt} THEN fn_event_day(ALOW.ACCNT_NO) ELSE '' END AS EVENT_DAY
                             , sd.st_grp_cd
                             , MEM.CELL
                             , b2b.emple_no
                             , E.EMPLE_NM
                             , ACCNT.EMPLE_NO MPA_EMPLE_NO
                             , E2.EMPLE_NM MPA_EMPLE_NM
                             , D2.DEPT_NM MPA_DEPT_NM
                             , D.DEPT_NM
                             , ACCNT.PROD_MODEL_KIND
                             , COALESCE(E.OCP_CLUSTER, D.OCP_CLUSTER) OCP_CLUSTER
                          FROM alow_dtl_t33_redmp alow
                                inner join mem_prod_accnt accnt on accnt.accnt_no = alow.accnt_no
                                LEFT OUTER JOIN EMPLOYEE E2 ON E2.EMPLE_NO = ACCNT.EMPLE_NO
                                LEFT OUTER JOIN (SELECT DEPT_CD
                                                      , substr(replace(SYS_CONNECT_BY_PATH(d2.dept_nm, '__'), '__', '/'),2) dept_nm
                                                   FROM DEPARTMENT d2
                                                 CONNECT BY PRIOR d2.DEPT_CD = d2.HIGH_DEPT_CD
                                                  START WITH lvl = '1') D2 ON E2.dept_cd = D2.dept_cd
                                inner join member mem on mem.mem_no = accnt.mem_no
                                left outer JOIN B2BCOMCD b2b on b2b.COM_CD = alow.B2B_COMP_CD
                                LEFT OUTER JOIN EMPLOYEE E ON E.EMPLE_NO = B2B.EMPLE_NO
                                LEFT OUTER JOIN DEPARTMENT D ON D.DEPT_CD = E.DEPT_CD
                                inner join product prod on prod.prod_cd = alow.prod_cd
                                left outer JOIN B2B_SALE_TYPE_DTL sd on b2b.sale_type = sd.sale_type
                                left outer JOIN B2B_SALE_TYPE_MST sm on sd.st_grp_cd = sm.st_grp_cd
                         WHERE alow.alow_dt	= #{alow_dt}
                           <if test="st_grp_cd != null and st_grp_cd != ''">
                           AND sd.st_grp_cd	= #{st_grp_cd}
                           </if>
                           <if test="b2b_comp_cd != null and b2b_comp_cd != ''">
                           AND		alow.b2b_comp_cd = #{b2b_comp_cd}
                           </if>
                           <if test="sale_type != null and sale_type != ''">
                           AND		b2b.sale_type = #{sale_type}
                           </if>
                           <if test="pay_no != null and pay_no != ''">
                           AND		pay_no = #{pay_no}
                           </if>
                       ) TBL
                 GROUP BY TBL.ALOW_DT
                        , TBL.B2B_COMP_CD
                        , TBL.B2B_COMP_NM
                        , TBL.SALE_TYPE
                        , TBL.SALE_TYPE_NM
                        , TBL.ACCNT_NO
                        , TBL.PROD_CD
                        , TBL.PROD_NM
                        , TBL.JOIN_DT
                        , TBL.PAY_NO
                        , TBL.MEM_NM
                        , TBL.PAY_ST
                        , TBL.JOIN_ST
                        , TBL.ALOW_B2B_COMP_CD
                        , TBL.ALOW_B2B_COMP_NM
                        , TBL.EMPLE_NO
                        , TBL.EVENT_DAY
                        , TBL.ST_GRP_CD
                        , TBL.CELL
                        , TBL.EMPLE_NM
                        , TBL.DEPT_NM
                        , TBL.PROD_MODEL_KIND
                        , TBL.OCP_CLUSTER
                        , TBL.MPA_EMPLE_NO
                        , TBL.MPA_EMPLE_NM
                        , TBL.MPA_DEPT_NM
                 ORDER BY B2B_COMP_NM
                        , MEM_NM
                ) A LEFT OUTER JOIN ALOW_SET_MST ASM ON A.PROD_CD = ASM.PROD_CD AND
                       ASM.ALOW_CD = 'T33' AND
                       <!--
                       A.OCP_CLUSTER = ASM.OCP_CLUSTER AND
                       -->
                       A.PAY_NO  <![CDATA[>=]]>  NVL(ASM.PAY_NO,0) AND
                       A.PAY_NO  <![CDATA[<=]]>  NVL(ASM.PAY_NO_END,0) AND
                       A.JOIN_DT <![CDATA[>=]]>  REPLACE(ASM.PROD_JOIN_DT_STR,'-','')||'01' AND
                       A.JOIN_DT <![CDATA[<=]]>  REPLACE(ASM.PROD_JOIN_DT_END,'-','')||'99' AND
                       A.SALE_TYPE = ASM.SALE_TYPE AND
                       A.ALOW_B2B_COMP_CD = ASM.B2B_COMP
                    LEFT OUTER JOIN (SELECT ACCNT_NO
                                          , PAY_NO
                                          , PAY_TOT_AMT
                                          , LAST_PAY_DAY
                                          , RM_PAY_EAMT
                                     FROM PAY_DL_MST
                                    WHERE DL_TYPE = '01' /* 입금마감 */
                                      AND PAY_DL_YYYYMM = #{alow_dt}
                                  ) P ON P.ACCNT_NO = A.ACCNT_NO
    </select>


    <select id="AlowMap.selectAlowListForAccntCount" parameterType="map" resultType="int">
        SELECT /* AlowMap.selectAlowListForAccntCount */
               count(*)
          FROM LF_DMUSER.mem_prod_accnt mpa
            JOIN LF_DMUSER.member mb 	ON mpa.mem_no = mb.mem_no
            JOIN LF_DMUSER.product pd ON mpa.prod_cd=pd.prod_cd
            JOIN (
                <include refid="selectAlowListForTmp"/>
                ) pm on pm.accnt_no = mpa.accnt_no
            JOIN (SELECT accnt_no, max(no) tot_pay_no, sum(pay_amt) tot_pay_amt
                    FROM LF_DMUSER.pay_mng
                    WHERE del_fg='N'
                    GROUP BY accnt_no
                 ) p ON p.accnt_no = mpa.accnt_no
        WHERE mpa.del_fg='N'
        AND mb.del_fg='N'
    </select>

    <!--
    2017.02.02
    회원별 종합현황(재무팀 전용)
    2017.07.31 김준호 시작일 조회조건추가, section2 컬럼 추가
    -->
    <select id="AlowMap.selectTotStatus" parameterType="map" resultType="resultMap">
    WITH /* AlowMap.selectTotStatus */
    W_MAIN AS (
        <if test="excel_yn != 'Y'.toString()">
        <include refid="CommonMap.headerPageSql" />
        </if>
        SELECT /*+ INDEX(MEM_PROD_ACCNT PK__MEM_PROD_ACCNT__46E78A0C) */
               MPA.ACCNT_NO
             , MPA.PROD_CD
             , MEM.MEM_NO
             , count(MPA.ACCNT_NO) over() TOT_ROW_CNT
          FROM LF_DMUSER.MEMBER MEM INNER JOIN
               LF_DMUSER.MEM_PROD_ACCNT MPA ON MEM.MEM_NO = MPA.MEM_NO AND MPA.DEL_FG = 'N' AND MPA.JOIN_DT <![CDATA[<=]]> #{join_ed_dt}  AND MPA.JOIN_DT <![CDATA[>=]]> #{join_st_dt}
                    INNER JOIN
               LF_DMUSER.PRODUCT PROD ON MPA.PROD_CD = PROD.PROD_CD
                    INNER JOIN
               LF_DMUSER.EMPLOYEE EMP ON EMP.EMPLE_NO = MPA.EMPLE_NO
        WHERE 1=1
          AND MEM.DEL_FG = 'N'
          <if test="prod_cd != null and prod_cd != ''">
          AND MPA.PROD_CD = #{prod_cd}
          </if>
        <if test="excel_yn != 'Y'.toString()">
        <include refid="CommonMap.footerPageSql" />
        </if>
    )
    SELECT ACCNT_NO                             /* 회원번호 */
         , MEM_NO
         , MEM_NM                               /* 회원명 */
         , MODEL_CL_NM                          /* 모델분류명 */
         , JOIN_DT                              /* 가입일자(1회당) */
         , PAY_MTHD                             /* 납입방법 */
         , PAY_STAT                             /* 납입상태(월) */ 
         , JOIN_STAT                            /* 가입상태 */
         , RESN_PROC_YN_NM                      /* 해약처리 */
         , EVENT_REG_DAY                        /* 행사일자 */
         , A042                                 /* 실납입회차 */
         , TOT_PAY_CNT                          /* 총납입횟수 */
         , LST_PAY_DAY                          /* 최종납입날짜 */
         , TOT_PAY_AMT                          /* 총납입금 */
         , TOT_PKG_AMT                          /* 총결합상품금 */
         , TOT_ADD_AMT                          /* 총추가부담금 */
         , LST_PAY_AMT                          /* 최종납입금 */
         , PKG_AMT                              /* 결합상품금 */
         , ADD_PAY_AMT                          /* 추가부담금 */
         , LIFE_BU_RM_AMT                       /* 상조부금잔여액 */
         , PKG_RM_AMT                           /* 결합잔여금액 */
         , PROD_CD                              /* 상품코드 */
         , PROD_NM
         , RM_1Y_REL + RM_1Y_ADD AS RM_1_YEAR   /* 1년결합잔여 */
         , TOT_ROW_CNT
         , count(*) over () cnt
         ,	 CASE WHEN SECTION2 = '0001' THEN '비채권'
                   WHEN SECTION2 = '0002' THEN '채권'
                   ELSE SECTION2
             END SECTION2
         , MAIN_CONTRACT_NM                       /* 계약표시 */
         , USE_AMT /* 레디캐시 */
         , TO_CHAR(REG_DM, 'YYYYMMDD') AS REG_DM
         , END_NO
         , A039
         , A040
         , MAN_DAY
      FROM (

    SELECT K.ACCNT_NO
         , K.MEM_NO
         , K.MEM_NM
         , K.MODEL_CL_NM
         , K.JOIN_DT
         , K.PAY_MTHD
         , CASE WHEN K.YEN_CHE = 0 AND K.YEN = 1 THEN '만기'
                WHEN K.YEN_CHE = 0 AND K.YEN = 0 THEN '정상'
                WHEN K.YEN_CHE = 1 AND K.YEN = 0 THEN '당월미납'
                WHEN K.YEN_CHE <![CDATA[>]]> 1 AND K.YEN = 0 THEN TO_CHAR(K.YEN_CHE - 1) || '회 연체'
                WHEN K.YEN_CHE <![CDATA[<]]> 0 AND K.YEN = 0 THEN REPLACE(TO_CHAR(K.YEN_CHE), '-', '')|| '회 선납'
                WHEN K.YEN_CHE <![CDATA[<]]> 0 AND K.YEN = 1 THEN '만기'
                END PAY_STAT

         , K.JOIN_STAT
         , K.RESN_PROC_YN_NM
         , K.EVENT_REG_DAY
         , K.A042
         , K.TOT_PAY_CNT
         , K.LST_PAY_DAY
         , K.TOT_PAY_AMT
         , TOT_PKG_AMT
         , TOT_ADD_AMT
         , K.LST_PAY_AMT
         , K.PKG_AMT
         , K.ADD_PAY_AMT
         , K.LIFE_BU_RM_AMT
         , K.PKG_RM_AMT
         , K.PROD_CD
         , K.PROD_NM
         , (SELECT sum(REL_AMT)
              FROM LF_DMUSER.PRODUCT_NO_DATA
             WHERE PROD_CD = K.PROD_CD
               AND NO BETWEEN K.PMD_NO + 1 AND K.PMD_NO+12
             ) AS RM_1Y_REL
         , (SELECT sum(ADD_AMT)
              FROM LF_DMUSER.PRODUCT_NO_DATA
             WHERE PROD_CD = K.PROD_CD
               AND NO BETWEEN K.PMD1_NO + 1 AND K.PMD1_NO+12
             ) AS RM_1Y_ADD
         , K.TOT_ROW_CNT
         , SECTION2
         , K.MAIN_CONTRACT_NM
         , K.USE_AMT
         , K.REG_DM
         , K.END_NO
         , A039
         , A040
         , MAN_DAY
    FROM (SELECT M.ACCNT_NO
               , M.MEM_NO
               , MEM.MEM_NM
               , PMCC.MODEL_CL_NM
               , MPA.JOIN_DT
               , LF_DMUSER.FN_COM_NM('01', MPA.PAY_MTHD)
                      AS PAY_MTHD
               , CASE WHEN (P.EXPR_NO - MPA.NEW_CHAN_GUNSU) <![CDATA[>]]> NVL(TRUNC(MONTHS_BETWEEN(LAST_DAY(#{join_ed_dt}) ,MPA.JOIN_DT),0) + 1, 0)
                      THEN NVL(TRUNC(MONTHS_BETWEEN(LAST_DAY(#{join_ed_dt}) ,MPA.JOIN_DT),0) + 1, 0) - NVL(PM.NO, 0)
                      ELSE NVL((P.EXPR_NO - MPA.NEW_CHAN_GUNSU), 0) - NVL(PM.NO, 0)
                  END YEN_CHE
               , CASE WHEN (P.EXPR_NO - MPA.NEW_CHAN_GUNSU) = PM.NO
                      THEN 1
                      ELSE 0
                  END YEN
               , CASE WHEN EVT.ACCNT_NO IS NOT NULL THEN '행사'
                      WHEN RESN.ACCNT_NO IS NOT NULL THEN LF_DMUSER.FN_COM_NM('64',RESN.RESN_CL)
                      ELSE '정상'
                  END JOIN_STAT

               , CASE WHEN NVL(RESN_CL,'X') = '02' THEN '미대상'
                             WHEN NVL(RESN_PROC_YN,'N') ='Y' AND NVL(CHK_SUBMIT,'N') ='N' THEN '처리'
                             ELSE '미처리'
                         END RESN_PROC_YN_NM

               , CASE WHEN EVT.ACCNT_NO IS NOT NULL THEN EVT.EVENT_COMP_DAY
                      WHEN RESN.ACCNT_NO IS NOT NULL THEN RESN.RESN_PROC_DAY
                        ELSE NULL
                      END EVENT_REG_DAY

               , NVL(PM.NO, 0) A042

               , P.EXPR_NO - MPA.NEW_CHAN_GUNSU AS TOT_PAY_CNT

               , NVL(PM.PAY_DAY, '') LST_PAY_DAY

               , CASE WHEN P.PROD_CL = '01' THEN
                            P.PROD_AMT
                      WHEN P.PROD_CL = '03' THEN
                            PND.AMT
                      ELSE
                            NULL
                      END TOT_PAY_AMT
               , PND.REL_AMT AS   TOT_PKG_AMT
               , PND.ADD_AMT AS TOT_ADD_AMT
               , NVL(PM.PAY_AMT, 0) LST_PAY_AMT
               , NVL(PMD.PAY_AMT, 0) PKG_AMT
               , NVL(PMD1.PAY_AMT, 0) ADD_PAY_AMT

               , PND.AMT - NVL((P.MON_PAY_AMT * MPA.NEW_CHAN_GUNSU), 0) - NVL(PM.PAY_AMT, 0) LIFE_BU_RM_AMT
               , (PND.REL_AMT + PND.ADD_AMT) - (NVL(PMD.PAY_AMT, 0) + NVL(PMD1.PAY_AMT, 0)) PKG_RM_AMT

               , MPA.PROD_CD
               , P.PROD_NM
               , NVL(PMD.NO,0) PMD_NO
               , NVL(PMD1.NO,0) PMD1_NO
               , M.TOT_ROW_CNT
               , P.SECTION_T as SECTION2
               , NVL(FN_COM_NM('0194', MPA.MAIN_CONTRACT), '상조') AS MAIN_CONTRACT_NM
               , NVL((SELECT MD.USE_AMT FROM LF_DMUSER.TB_MEMBER_DLWMALL MD WHERE 1=1 AND MD.GOODS_ID = M.ACCNT_NO), 0) AS USE_AMT
               , MPA.REG_DM
               , (SELECT MAX(END_NO) FROM PRODUCT_DTL WHERE ALLT_AMT > 0 AND PROD_CD = MPA.PROD_CD) AS END_NO
               , replace(NVL(MPA.NEW_CHAN_GUNSU * P.MON_PAY_AMT, 0), chr(0), '') A039
               , replace(NVL(MPA.NEW_CHAN_GUNSU, 0), chr(0), '') A040
               , TO_CHAR(ADD_MONTHS(MPA.JOIN_DT, P.EXPR_NO - MPA.NEW_CHAN_GUNSU - 1 +
		                           NVL((SELECT 
		                                    NVL(MME.EXT_PERIOD, 0) 
		                                FROM LF_DMUSER.TB_MEMBER_MANGI_EXT MME 
		                                WHERE 1=1 
		                                AND DEL_FG = 'N' 
		                                AND MME.ACCNT_NO = MPA.ACCNT_NO), 0) * 12 ),'YYYYMMDD') AS MAN_DAY
            FROM W_MAIN M INNER JOIN
                 LF_DMUSER.MEMBER MEM ON M.MEM_NO = MEM.MEM_NO
                      INNER JOIN
                 LF_DMUSER.MEM_PROD_ACCNT MPA ON M.ACCNT_NO = MPA.ACCNT_NO
                      INNER JOIN
                 LF_DMUSER.PRODUCT P ON M.PROD_CD = P.PROD_CD
                      LEFT OUTER JOIN
                 LF_DMUSER.PRODUCT_MODEL_CL_CD PMCC ON MPA.PROD_MODEL_KIND = PMCC.MODEL_CL_CD
                       LEFT OUTER JOIN
                 (SELECT PMG.ACCNT_NO
                       , SUM(PMG.PAY_AMT) PAY_AMT
                       , COUNT(PMG.NO) NO
                       , MAX(PMG.PAY_DAY) PAY_DAY
                    FROM LF_DMUSER.PAY_MNG PMG
                       , W_MAIN TP
                   WHERE PMG.ACCNT_NO = TP.ACCNT_NO
                     AND PMG.DEL_FG = 'N'
                     AND PMG.PAY_DAY  <![CDATA[>=]]>  to_char(LAST_DAY(#{join_st_dt}) ,'YYYYMMDD')
                     AND PMG.PAY_DAY  <![CDATA[<=]]>  to_char(LAST_DAY(#{join_ed_dt}) ,'YYYYMMDD')
                   GROUP BY PMG.ACCNT_NO) PM ON PM.ACCNT_NO = MPA.ACCNT_NO

                       LEFT OUTER JOIN
                 (SELECT PMD2.ACCNT_NO
                       , SUM(PMD2.PAY_AMT) PAY_AMT
                       , COUNT(PMD2.NO) NO
                       , MAX(PMD2.PAY_DAY) PAY_DAY
                    FROM LF_DMUSER.PAY_MNG_DTL PMD2
                       , W_MAIN TP
                   WHERE PMD2.ACCNT_NO = TP.ACCNT_NO
                     AND PMD2.DEL_FG = 'N'
                     AND PMD2.PAY_DAY  <![CDATA[>=]]>  to_char(LAST_DAY(#{join_st_dt}) ,'YYYYMMDD')
                     AND PMD2.PAY_DAY  <![CDATA[<=]]>  to_char(LAST_DAY(#{join_ed_dt}) ,'YYYYMMDD')
                   GROUP BY PMD2.ACCNT_NO) PMD ON PMD.ACCNT_NO = MPA.ACCNT_NO

                       LEFT OUTER JOIN
                 (SELECT PMD3.ACCNT_NO
                       , SUM(PMD3.PAY_AMT) PAY_AMT
                       , COUNT(PMD3.NO) NO
                       , MAX(PMD3.PAY_DAY) PAY_DAY
                    FROM LF_DMUSER.PAY_MNG_DTL1 PMD3
                       , W_MAIN TP
                   WHERE PMD3.ACCNT_NO = TP.ACCNT_NO
                     AND PMD3.DEL_FG = 'N'
                     AND PMD3.PAY_DAY  <![CDATA[>=]]>  to_char(LAST_DAY(#{join_st_dt}) ,'YYYYMMDD')
                     AND PMD3.PAY_DAY  <![CDATA[<=]]>  to_char(LAST_DAY(#{join_ed_dt}) ,'YYYYMMDD')
                   GROUP BY PMD3.ACCNT_NO) PMD1 ON PMD1.ACCNT_NO = MPA.ACCNT_NO

                       LEFT OUTER JOIN
                 LF_DMUSER.EVENT EVT ON EVT.ACCNT_NO = MPA.ACCNT_NO AND EVT.DEL_FG = 'N' AND EVT.EVENT_PROC_DAY <![CDATA[<=]]> to_char(LAST_DAY(#{join_ed_dt}), 'YYYYMMDD')
                 AND EVT.EVENT_PROC_DAY <![CDATA[>=]]> to_char(LAST_DAY(#{join_st_dt}), 'YYYYMMDD')
                       LEFT OUTER JOIN
                 LF_DMUSER.RESCISSION RESN ON RESN.ACCNT_NO = MPA.ACCNT_NO AND RESN.DEL_FG = 'N' AND  RESN.RESN_PROC_DAY <![CDATA[<=]]> to_char(LAST_DAY(#{join_ed_dt}) ,'YYYYMMDD')
                 AND  RESN.RESN_PROC_DAY <![CDATA[>=]]> to_char(LAST_DAY(#{join_st_dt}) ,'YYYYMMDD')
                       LEFT OUTER JOIN
                 (SELECT PROD_CD
                       , SUM(AMT)                   AMT
                       , SUM(REL_AMT)               REL_AMT
                       , SUM(ADD_AMT)               ADD_AMT
                    FROM LF_DMUSER.PRODUCT_NO_DATA
                   GROUP BY PROD_CD) PND ON PND.PROD_CD = MPA.PROD_CD
        ) K
    ) Q

    </select>

    <select id="AlowMap.selectTotStatusCount" parameterType="map" resultType="int">
        /* AlowMap.selectTotStatusCount */
        SELECT count(*)
          FROM LF_DMUSER.MEMBER MEM INNER JOIN
               LF_DMUSER.MEM_PROD_ACCNT MPA ON MEM.MEM_NO = MPA.MEM_NO AND MPA.DEL_FG = 'N' AND MPA.JOIN_DT <![CDATA[<=]]> #{join_ed_dt} AND MPA.JOIN_DT <![CDATA[>=]]> #{join_st_dt}
                    INNER JOIN
               LF_DMUSER.PRODUCT PROD ON MPA.PROD_CD = PROD.PROD_CD
                    INNER JOIN
               LF_DMUSER.EMPLOYEE EMP ON EMP.EMPLE_NO = MPA.EMPLE_NO
        WHERE 1=1
          AND MEM.DEL_FG = 'N'
          <if test="prod_cd != null and prod_cd != ''">
          AND MPA.PROD_CD = #{prod_cd}
          </if>
    </select>
    
    <!--
    2017.02.02
    회원별 종합현황(재무팀 전용)
    2017.07.31 김준호 시작일 조회조건추가, section2 컬럼 추가
    -->
    <select id="AlowMap.selectTotStatusAudit" parameterType="map" resultType="resultMap">
    WITH /* AlowMap.selectTotStatusAudit */
    W_MAIN AS (
        <if test="excel_yn != 'Y'.toString()">
        <include refid="CommonMap.headerPageSql" />
        </if>
        SELECT /*+ INDEX(MEM_PROD_ACCNT PK__MEM_PROD_ACCNT__46E78A0C) */
               MPA.ACCNT_NO
             , MPA.PROD_CD
             , MEM.MEM_NO
             , count(MPA.ACCNT_NO) over() TOT_ROW_CNT
          FROM LF_DMUSER.MEMBER MEM INNER JOIN
               LF_DMUSER.MEM_PROD_ACCNT MPA ON MEM.MEM_NO = MPA.MEM_NO AND MPA.DEL_FG = 'N' AND MPA.JOIN_DT <![CDATA[<=]]> #{join_ed_dt}  AND MPA.JOIN_DT <![CDATA[>=]]> #{join_st_dt}
                    INNER JOIN
               LF_DMUSER.PRODUCT PROD ON MPA.PROD_CD = PROD.PROD_CD
                    INNER JOIN
               LF_DMUSER.EMPLOYEE EMP ON EMP.EMPLE_NO = MPA.EMPLE_NO
        WHERE 1=1
          AND MEM.DEL_FG = 'N'
          <if test="prod_cd != null and prod_cd != ''">
          AND MPA.PROD_CD = #{prod_cd}
          </if>
        <if test="excel_yn != 'Y'.toString()">
        <include refid="CommonMap.footerPageSql" />
        </if>
    )
    SELECT MEM_NO
         , ACCNT_NO                             /* 회원번호 */
         , MEM_NM                               /* 회원명 */
         , MODEL_CL_NM                          /* 모델분류명 */
         , JOIN_DT                              /* 가입일자(1회당) */
         , PAY_MTHD                             /* 납입방법 */
         , PAY_STAT                             /* 납입상태(월) */ 
         , JOIN_STAT                            /* 가입상태 */
         , RESN_PROC_YN_NM                      /* 해약처리 */
         , EVENT_REG_DAY                        /* 행사일자 */
         , A042                                 /* 실납입회차 */
         , TOT_PAY_CNT                          /* 총납입횟수 */
         , LST_PAY_DAY                          /* 최종납입날짜 */
         , TOT_PAY_AMT                          /* 총납입금 */
         , TOT_PKG_AMT                          /* 총결합상품금 */
         , TOT_ADD_AMT                          /* 총추가부담금 */
         , LST_PAY_AMT                          /* 최종납입금 */
         , PKG_AMT                              /* 결합상품금 */
         , ADD_PAY_AMT                          /* 추가부담금 */
         , LIFE_BU_RM_AMT                       /* 상조부금잔여액 */
         , PKG_RM_AMT                           /* 결합잔여금액 */
         , PROD_CD                              /* 상품코드 */
         , PROD_NM
         , RM_1Y_REL + RM_1Y_ADD AS RM_1_YEAR   /* 1년결합잔여 */
         , TOT_ROW_CNT
         , count(*) over () cnt
         ,	 CASE WHEN SECTION2 = '0001' THEN '비채권'
                   WHEN SECTION2 = '0002' THEN '채권'
                   ELSE SECTION2
             END SECTION2
         , MAIN_CONTRACT_NM                       /* 계약표시 */
         , TO_CHAR(REG_DM, 'YYYYMMDD') AS REG_DM
         , END_NO
         , A039
         , A040
         , MAN_DAY
      FROM (

    SELECT K.MEM_NO
         , K.ACCNT_NO
         , K.MEM_NM
         , K.MODEL_CL_NM
         , K.JOIN_DT
         , K.PAY_MTHD
         , CASE WHEN K.YEN_CHE = 0 AND K.YEN = 1 THEN '만기'
                WHEN K.YEN_CHE = 0 AND K.YEN = 0 THEN '정상'
                WHEN K.YEN_CHE = 1 AND K.YEN = 0 THEN '당월미납'
                WHEN K.YEN_CHE <![CDATA[>]]> 1 AND K.YEN = 0 THEN TO_CHAR(K.YEN_CHE - 1) || '회 연체'
                WHEN K.YEN_CHE <![CDATA[<]]> 0 AND K.YEN = 0 THEN REPLACE(TO_CHAR(K.YEN_CHE), '-', '')|| '회 선납'
                WHEN K.YEN_CHE <![CDATA[<]]> 0 AND K.YEN = 1 THEN '만기'
                END PAY_STAT

         , K.JOIN_STAT
         , K.RESN_PROC_YN_NM
         , K.EVENT_REG_DAY
         , K.A042
         , K.TOT_PAY_CNT
         , K.LST_PAY_DAY
         , K.TOT_PAY_AMT
         , TOT_PKG_AMT
         , TOT_ADD_AMT
         , K.LST_PAY_AMT
         , K.PKG_AMT
         , K.ADD_PAY_AMT
         , K.LIFE_BU_RM_AMT
         , K.PKG_RM_AMT
         , K.PROD_CD
         , K.PROD_NM
         , (SELECT sum(REL_AMT)
              FROM LF_DMUSER.PRODUCT_NO_DATA
             WHERE PROD_CD = K.PROD_CD
               AND NO BETWEEN K.PMD_NO + 1 AND K.PMD_NO+12
             ) AS RM_1Y_REL
         , (SELECT sum(ADD_AMT)
              FROM LF_DMUSER.PRODUCT_NO_DATA
             WHERE PROD_CD = K.PROD_CD
               AND NO BETWEEN K.PMD1_NO + 1 AND K.PMD1_NO+12
             ) AS RM_1Y_ADD
         , K.TOT_ROW_CNT
         , SECTION2
         , K.MAIN_CONTRACT_NM
         , K.REG_DM
         , K.END_NO
         , A039
         , A040
         , MAN_DAY
    FROM (SELECT M.MEM_NO
               , M.ACCNT_NO
               , MEM.MEM_NM
               , PMCC.MODEL_CL_NM
               , MPA.JOIN_DT
               , LF_DMUSER.FN_COM_NM('01', MPA.PAY_MTHD)
                      AS PAY_MTHD
               , CASE WHEN (P.EXPR_NO - MPA.NEW_CHAN_GUNSU) <![CDATA[>]]> NVL(TRUNC(MONTHS_BETWEEN(LAST_DAY(#{join_ed_dt}) ,MPA.JOIN_DT),0) + 1, 0)
                      THEN NVL(TRUNC(MONTHS_BETWEEN(LAST_DAY(#{join_ed_dt}) ,MPA.JOIN_DT),0) + 1, 0) - NVL(PM.NO, 0)
                      ELSE NVL((P.EXPR_NO - MPA.NEW_CHAN_GUNSU), 0) - NVL(PM.NO, 0)
                  END YEN_CHE
               , CASE WHEN (P.EXPR_NO - MPA.NEW_CHAN_GUNSU) = PM.NO
                      THEN 1
                      ELSE 0
                  END YEN
               , CASE WHEN EVT.ACCNT_NO IS NOT NULL THEN '행사'
                      WHEN RESN.ACCNT_NO IS NOT NULL THEN LF_DMUSER.FN_COM_NM('64',RESN.RESN_CL)
                      ELSE '정상'
                  END JOIN_STAT

               , CASE WHEN NVL(RESN_CL,'X') = '02' THEN '미대상'
                             WHEN NVL(RESN_PROC_YN,'N') ='Y' AND NVL(CHK_SUBMIT,'N') ='N' THEN '처리'
                             ELSE '미처리'
                         END RESN_PROC_YN_NM

               , CASE WHEN EVT.ACCNT_NO IS NOT NULL THEN EVT.EVENT_PROC_DAY
                      WHEN RESN.ACCNT_NO IS NOT NULL THEN RESN.RESN_PROC_DAY
                        ELSE NULL
                      END EVENT_REG_DAY

               , NVL(PM.NO, 0) A042

               , P.EXPR_NO - MPA.NEW_CHAN_GUNSU AS TOT_PAY_CNT

               , NVL(PM.PAY_DAY, '') LST_PAY_DAY

               , CASE WHEN P.PROD_CL = '01' THEN
                            P.PROD_AMT
                      WHEN P.PROD_CL = '03' THEN
                            PND.AMT
                      ELSE
                            NULL
                      END TOT_PAY_AMT
               , PND.REL_AMT AS   TOT_PKG_AMT
               , PND.ADD_AMT AS TOT_ADD_AMT
               , NVL(PM.PAY_AMT, 0) LST_PAY_AMT
               , NVL(PMD.PAY_AMT, 0) PKG_AMT
               , NVL(PMD1.PAY_AMT, 0) ADD_PAY_AMT

               , PND.AMT - NVL((P.MON_PAY_AMT * MPA.NEW_CHAN_GUNSU), 0) - NVL(PM.PAY_AMT, 0) LIFE_BU_RM_AMT
               , (PND.REL_AMT + PND.ADD_AMT) - (NVL(PMD.PAY_AMT, 0) + NVL(PMD1.PAY_AMT, 0)) PKG_RM_AMT

               , MPA.PROD_CD
               , P.PROD_NM
               , NVL(PMD.NO,0) PMD_NO
               , NVL(PMD1.NO,0) PMD1_NO
               , M.TOT_ROW_CNT
               , P.SECTION_T as SECTION2
               , NVL(FN_COM_NM('0194', MPA.MAIN_CONTRACT), '상조') AS MAIN_CONTRACT_NM
               , MPA.REG_DM
               , (SELECT MAX(END_NO) FROM PRODUCT_DTL WHERE ALLT_AMT > 0 AND PROD_CD = MPA.PROD_CD) AS END_NO
               , replace(NVL(MPA.NEW_CHAN_GUNSU * P.MON_PAY_AMT, 0), chr(0), '') A039
               , replace(NVL(MPA.NEW_CHAN_GUNSU, 0), chr(0), '') A040
               , TO_CHAR(ADD_MONTHS(MPA.JOIN_DT, P.EXPR_NO - MPA.NEW_CHAN_GUNSU - 1 +
		                           NVL((SELECT 
		                                    NVL(MME.EXT_PERIOD, 0) 
		                                FROM LF_DMUSER.TB_MEMBER_MANGI_EXT MME 
		                                WHERE 1=1 
		                                AND DEL_FG = 'N' 
		                                AND MME.ACCNT_NO = MPA.ACCNT_NO), 0) * 12 ),'YYYYMMDD') AS MAN_DAY
            FROM W_MAIN M INNER JOIN
                 LF_DMUSER.MEMBER MEM ON M.MEM_NO = MEM.MEM_NO
                      INNER JOIN
                 LF_DMUSER.MEM_PROD_ACCNT MPA ON M.ACCNT_NO = MPA.ACCNT_NO
                      INNER JOIN
                 LF_DMUSER.PRODUCT P ON M.PROD_CD = P.PROD_CD
                      LEFT OUTER JOIN
                 LF_DMUSER.PRODUCT_MODEL_CL_CD PMCC ON MPA.PROD_MODEL_KIND = PMCC.MODEL_CL_CD
                       LEFT OUTER JOIN
                 (SELECT PMG.ACCNT_NO
                       , SUM(PMG.PAY_AMT) PAY_AMT
                       , COUNT(PMG.NO) NO
                       , MAX(PMG.PAY_DAY) PAY_DAY
                    FROM LF_DMUSER.PAY_MNG PMG
                       , W_MAIN TP
                   WHERE PMG.ACCNT_NO = TP.ACCNT_NO
                     AND PMG.DEL_FG = 'N'
                     AND PMG.PAY_DAY  <![CDATA[>=]]>  to_char(LAST_DAY(#{join_st_dt}) ,'YYYYMMDD')
                     AND PMG.PAY_DAY  <![CDATA[<=]]>  to_char(LAST_DAY(#{join_ed_dt}) ,'YYYYMMDD')
                   GROUP BY PMG.ACCNT_NO) PM ON PM.ACCNT_NO = MPA.ACCNT_NO

                       LEFT OUTER JOIN
                 (SELECT PMD2.ACCNT_NO
                       , SUM(PMD2.PAY_AMT) PAY_AMT
                       , COUNT(PMD2.NO) NO
                       , MAX(PMD2.PAY_DAY) PAY_DAY
                    FROM LF_DMUSER.PAY_MNG_DTL PMD2
                       , W_MAIN TP
                   WHERE PMD2.ACCNT_NO = TP.ACCNT_NO
                     AND PMD2.DEL_FG = 'N'
                     AND PMD2.PAY_DAY  <![CDATA[>=]]>  to_char(LAST_DAY(#{join_st_dt}) ,'YYYYMMDD')
                     AND PMD2.PAY_DAY  <![CDATA[<=]]>  to_char(LAST_DAY(#{join_ed_dt}) ,'YYYYMMDD')
                   GROUP BY PMD2.ACCNT_NO) PMD ON PMD.ACCNT_NO = MPA.ACCNT_NO

                       LEFT OUTER JOIN
                 (SELECT PMD3.ACCNT_NO
                       , SUM(PMD3.PAY_AMT) PAY_AMT
                       , COUNT(PMD3.NO) NO
                       , MAX(PMD3.PAY_DAY) PAY_DAY
                    FROM LF_DMUSER.PAY_MNG_DTL1 PMD3
                       , W_MAIN TP
                   WHERE PMD3.ACCNT_NO = TP.ACCNT_NO
                     AND PMD3.DEL_FG = 'N'
                     AND PMD3.PAY_DAY  <![CDATA[>=]]>  to_char(LAST_DAY(#{join_st_dt}) ,'YYYYMMDD')
                     AND PMD3.PAY_DAY  <![CDATA[<=]]>  to_char(LAST_DAY(#{join_ed_dt}) ,'YYYYMMDD')
                   GROUP BY PMD3.ACCNT_NO) PMD1 ON PMD1.ACCNT_NO = MPA.ACCNT_NO

                       LEFT OUTER JOIN
                 LF_DMUSER.EVENT EVT ON EVT.ACCNT_NO = MPA.ACCNT_NO AND EVT.DEL_FG = 'N' AND EVT.EVENT_PROC_DAY <![CDATA[<=]]> to_char(LAST_DAY(#{join_ed_dt}), 'YYYYMMDD')
                 AND EVT.EVENT_PROC_DAY <![CDATA[>=]]> to_char(LAST_DAY(#{join_st_dt}), 'YYYYMMDD')
                       LEFT OUTER JOIN
                 LF_DMUSER.RESCISSION RESN ON RESN.ACCNT_NO = MPA.ACCNT_NO AND RESN.DEL_FG = 'N' AND  RESN.RESN_PROC_DAY <![CDATA[<=]]> to_char(LAST_DAY(#{join_ed_dt}) ,'YYYYMMDD')
                 AND  RESN.RESN_PROC_DAY <![CDATA[>=]]> to_char(LAST_DAY(#{join_st_dt}) ,'YYYYMMDD')
                       LEFT OUTER JOIN
                 (SELECT PROD_CD
                       , SUM(AMT)                   AMT
                       , SUM(REL_AMT)               REL_AMT
                       , SUM(ADD_AMT)               ADD_AMT
                    FROM LF_DMUSER.PRODUCT_NO_DATA
                   GROUP BY PROD_CD) PND ON PND.PROD_CD = MPA.PROD_CD
        ) K
    ) Q

    </select>

    <!-- sql-pay.xml [수당코드조회] ID : pay.selectAlowCdList 작성자 : 김아영 -->
    <select id="selectAlowCdList" resultType="resultMap" parameterType="map">
        SELECT /* AlowMap.selectAlowCdList */
               alow_cd
             , alow_nm
             , alow_cl
             , use_yn
             , basc_flag
             , dept_kind
             , use_yn_prod_cd
             , use_yn_prod_nm
             , use_yn_app_dt
             , use_yn_gunsu_str
             , use_yn_gunsu_end
             , use_yn_rat
             , use_yn_posn
             , use_yn_joblvl
             , use_yn_atdn_daycnt
             , use_yn_own_point
             , use_yn_ofce_point
             , use_yn_point_str
             , use_yn_point_end
             , use_yn_amt
             , use_yn_pay_rat
             , use_yn_app_point
             , use_yn_no_str
             , use_yn_no_end
             , use_yn_wkpd_str
             , use_yn_wkpd_end
             , use_yn_amtin_str
             , use_yn_amtin_end
             , use_yn_pay_no
             , USE_YN_PAY_NO_END
             , use_yn_ocp_cluster
             , use_yn_new_chan_str
             , use_yn_new_chan_end
             , use_yn_prod_join_dt_str
             , use_yn_prod_join_dt_end
             , use_Yn_Mng_Posn
             , use_yn_hcode
             , CASE WHEN alow_cl = 'T' THEN '지급' ELSE '공제' END as alow_cl_nm
             , USE_YN_PROG_CNT_STR
             , USE_YN_PROG_CNT_END
             , USE_YN_SALE_TYPE
             , USE_YN_INCOM_CL
             , USE_YN_B2B_COMP
             , USE_REDMP_STR_NO
             , USE_REDMP_END_NO
             , USE_REDMP_RT
             , USE_OVER_STR_NO
             , USE_OVER_END_NO
             , USE_OVER_THIS_NO

             , USE_OVER_STR_NO	AS USE_YN_OVER_STR_NO
             , USE_OVER_END_NO	AS USE_YN_OVER_END_NO
             , USE_REDMP_END_NO AS USE_YN_REDMP_END_NO
             , USE_OVER_THIS_NO AS USE_YN_OVER_THIS_NO
             , USE_REDMP_STR_NO AS USE_YN_REDMP_STR_NO
             , USE_REDMP_RT		AS USE_YN_REDMP_RT
             , USE_YN_JBIT      AS USE_YN_JBIT
          FROM ALOW_COM_CD
         WHERE alow_cd is not null

        <if test="alow_cd != null and alow_cd != ''">
        AND alow_cd = #{alow_cd}
        </if>
        <if test="alow_nm!= null and alow_nm != ''">
        AND alow_nm like '%' || #{alow_nm} || '%'
        </if>
        <if test="alow_cl != null and alow_cl != ''">
        AND alow_cl = #{alow_cl}
        </if>
        <if test="dept_kind != null and dept_kind != ''">
        AND dept_kind = #{dept_kind}
        </if>
        ORDER BY alow_cl desc
               , to_number(substr(alow_cd,2,10)) asc
    </select>


    <!-- sql-pay.xml [수당코드등록] ID : pay.insertAlowCd 작성자 : 김아영 -->
    <insert id="insertAlowCd" parameterType="map">
        INSERT INTO ALOW_COM_CD (
                  alow_cd
                , alow_nm
                , alow_cl
                , use_yn
                , basc_flag
                , dept_kind
                , use_yn_prod_cd
                , use_yn_app_dt
                , use_yn_gunsu_str
                , use_yn_gunsu_end
                , use_yn_rat
                , use_yn_posn
                , use_yn_joblvl
                , use_yn_atdn_daycnt
                , use_yn_own_point
                , use_yn_ofce_point
                , use_yn_point_str
                , use_yn_point_end
                , use_yn_amt
                , use_yn_pay_rat
                , use_yn_app_point
                , use_yn_no_str
                , use_yn_no_end
                , use_yn_wkpd_str
                , use_yn_wkpd_end
                , use_yn_amtin_str
                , use_yn_amtin_end
                , use_yn_pay_no
                , use_yn_ocp_cluster
                , use_yn_new_chan_str
                , use_yn_new_chan_end
                , use_yn_prod_join_dt_str
                , use_yn_prod_join_dt_end
                , use_Yn_Mng_Posn
                , USE_YN_PROG_CNT_STR
                , USE_YN_PROG_CNT_END
                , USE_YN_PAY_NO_END
                , USE_YN_SALE_TYPE
                , USE_YN_B2B_COMP
                , USE_REDMP_STR_NO
                , USE_REDMP_END_NO
                , USE_REDMP_RT
                , USE_OVER_STR_NO
                , USE_OVER_END_NO
                , USE_OVER_THIS_NO
                 )
          SELECT
                  <!-- #{alow_cl} + CAST(a.alow_cd as varchar(4)) -->
                 #{alow_cl} || a.alow_cd
               , #{alow_nm}
               , #{alow_cl}
               , #{use_yn}
               , #{basc_flag}
               , #{dept_kind}
               , #{use_yn_prod_cd}
               , #{use_yn_app_dt}
               , #{use_yn_gunsu_str}
               , #{use_yn_gunsu_end}
               , #{use_yn_rat}
               , #{use_yn_posn}
               , #{use_yn_joblvl}
               , #{use_yn_atdn_daycnt}
               , #{use_yn_own_point}
               , #{use_yn_ofce_point}
               , #{use_yn_point_str}
               , #{use_yn_point_end}
               , #{use_yn_amt}
               , #{use_yn_pay_rat}
               , #{use_yn_app_point}
               , #{use_yn_no_str}
               , #{use_yn_no_end}
               , #{use_yn_wkpd_str}
               , #{use_yn_wkpd_end}
               , #{use_yn_amtin_str}
               , #{use_yn_amtin_end}
               , #{use_yn_pay_no}
               , #{use_yn_ocp_cluster}
               , #{use_yn_new_chan_str}
               , #{use_yn_new_chan_end}
               , #{use_yn_prod_join_dt_str}
               , #{use_yn_prod_join_dt_end}
               , #{use_yn_mng_posn}
               , #{use_yn_prog_cnt_str}
               , #{use_yn_prog_cnt_end}
               , #{use_yn_pay_no_end}
               , #{use_yn_sale_type}
               , #{use_yn_b2_b_comp}
               , #{use_redmp_str_no}
               , #{use_redmp_end_no}
               , #{use_redmp_rt}
               , #{use_over_str_no}
               , #{use_over_end_no}
               , #{use_over_this_no}
          FROM
              ( SELECT  nvl(MAX(to_number(REPLACE(alow_cd,#{alow_cl},''))) + 1, '1') as alow_cd
                  FROM  ALOW_COM_CD
                 WHERE	substr(alow_cd,1,1) = #{alow_cl} ) a
    </insert>


    <!-- sql-pay.xml [수당코드수정] ID : pay.updateAlowCd 작성자 : 김아영 -->
    <update id="updateAlowCd" parameterType="map">
        UPDATE ALOW_COM_CD SET
               alow_nm 					= #{alow_nm}
             , alow_cl 					= #{alow_cl}
             , use_yn 					= #{use_yn}
             , basc_flag 				= #{basc_flag}
             , dept_kind 				= #{dept_kind}
             , use_yn_prod_cd 			= #{use_yn_prod_cd}
             , use_yn_app_dt 			= #{use_yn_app_dt}
             , use_yn_gunsu_str 		= #{use_yn_gunsu_str}
             , use_yn_gunsu_end 		= #{use_yn_gunsu_end}
             , use_yn_rat 				= #{use_yn_rat}
             , use_yn_posn	 			= #{use_yn_posn}
             , use_yn_joblvl 			= #{use_yn_joblvl}
             , use_yn_atdn_daycnt		= #{use_yn_atdn_daycnt}
             , use_yn_own_point 		= #{use_yn_own_point}
             , use_yn_ofce_point 		= #{use_yn_ofce_point}
             , use_yn_point_str 		= #{use_yn_point_str}
             , use_yn_point_end 		= #{use_yn_point_end}
             , use_yn_amt 				= #{use_yn_amt}
             , use_yn_pay_rat 			= #{use_yn_pay_rat}
             , use_yn_app_point			= #{use_yn_app_point}
             , use_yn_no_str 			= #{use_yn_no_str}
             , use_yn_no_end 			= #{use_yn_no_end}
             , use_yn_wkpd_str 			= #{use_yn_wkpd_str}
             , use_yn_wkpd_end 			= #{use_yn_wkpd_end}
             , use_yn_amtin_str 		= #{use_yn_amtin_str}
             , use_yn_amtin_end 		= #{use_yn_amtin_end}
             , use_yn_pay_no 			= #{use_yn_pay_no}
             , use_yn_ocp_cluster		= #{use_yn_ocp_cluster}
             , use_yn_new_chan_str		= #{use_yn_new_chan_str}
             , use_yn_new_chan_end		= #{use_yn_new_chan_end}
             , use_yn_prod_join_dt_str	= #{use_yn_prod_join_dt_str}
             , use_yn_prod_join_dt_end	= #{use_yn_prod_join_dt_end}
             , use_Yn_Mng_Posn          = #{use_yn_mng_posn}
             , USE_YN_PROG_CNT_STR		= #{use_yn_prog_cnt_str}
             , USE_YN_PROG_CNT_END		= #{use_yn_prog_cnt_end}
             , USE_YN_PAY_NO_END 		= #{use_yn_pay_no_end}
             , USE_YN_SALE_TYPE 		= #{use_yn_sale_type}
             , USE_YN_B2B_COMP 			= #{use_yn_b2b_comp}
             , USE_REDMP_STR_NO			= #{use_redmp_str_no}
             , USE_REDMP_END_NO			= #{use_redmp_end_no}
             , USE_REDMP_RT				= #{use_redmp_rt}
             , USE_OVER_STR_NO			= #{use_over_str_no}
             , USE_OVER_END_NO			= #{use_over_end_no}
             , USE_OVER_THIS_NO			= #{use_over_this_no}
         WHERE alow_cd = #{alow_cd}
    </update>

    <!--
    수당기초데이터 마스터 등록
    ASIS : insertAlowCdData
    -->
    <insert id="AlowMap.insertAlowSetMst" parameterType="map">
    INSERT /* AlowMap.insertAlowSetMst */
      INTO ALOW_SET_MST(
           ALOW_CD
         , SEQ
         , PROD_CD
         , SALE_TYPE
         , B2B_COMP
         , AMT
         , PAY_RAT
         , NO_STR
         , NO_END
         , PAY_NO
         , PAY_NO_END
         , OCP_CLUSTER
         , PROD_JOIN_DT_STR
         , PROD_JOIN_DT_END
         , PROG_CNT_STR
         , PROG_CNT_END
         , JBIT
         , HCODE
         , REMARK
    )
    VALUES (
        #{alow_cd}
        , (SELECT nvl(MAX(SEQ),0)+1 FROM ALOW_SET_MST WHERE ALOW_CD = #{alow_cd})
        , #{prod_cd}
        , #{sale_type}
        , #{b2b_comp_cd}
        , #{amt}
        , #{pay_rat}
        , #{no_str}
        , #{no_end}
        , #{pay_no}
        , #{pay_no_end}
        , #{ocp_cluster_code}
        , #{prod_join_dt_str}
        , #{prod_join_dt_end}
        , #{prog_cnt_str}
        , #{prog_cnt_end}
        , #{jbit}
        , #{hcode}
        , #{remark}
    )
    </insert>

    <!--
    수당기초데이터 마스터 수정
    ASIS : updateAlowCdData
    -->
    <update id="AlowMap.updateAlowSetMst" parameterType="map">
    UPDATE /* AlowMap.updateAlowSetMst */
           ALOW_SET_MST
       SET PROD_CD              = #{prod_cd}
         <if test="sale_type != null and sale_type != ''">
         , SALE_TYPE            = #{sale_type}
         </if>
         <if test="b2b_comp_cd != null and b2b_comp_cd != ''">
         , B2B_COMP             = #{b2b_comp_cd}
         </if>
         <if test="amt != null and amt != ''">
         , AMT                  = #{amt}
         </if>
         <if test="pay_rat != null and pay_rat != ''">
         , PAY_RAT              = #{pay_rat}
         </if>
         <if test="no_str != null and no_str != ''">
         , NO_STR               = #{no_str}
         </if>
         <if test="no_end != null and no_end != ''">
         , NO_END               = #{no_end}
         </if>
         <if test="pay_no != null and pay_no != ''">
         , PAY_NO               = #{pay_no}
         </if>
         <if test="pay_no_end != null and pay_no_end != ''">
         , PAY_NO_END           = #{pay_no_end}
         </if>
         <if test="ocp_cluster_code != null and ocp_cluster_code != ''">
         , OCP_CLUSTER          = #{ocp_cluster_code}
         </if>
         <if test="prod_join_dt_str != null and prod_join_dt_str != ''">
         , PROD_JOIN_DT_STR     = #{prod_join_dt_str}
         </if>
         <if test="prod_join_dt_end != null and prod_join_dt_end != ''">
         , PROD_JOIN_DT_END     = #{prod_join_dt_end}
         </if>
         <if test="prog_cnt_str != null and prog_cnt_str != ''">
         , PROG_CNT_STR         = #{prog_cnt_str}
         </if>
         <if test="prog_cnt_end != null and prog_cnt_end != ''">
         , PROG_CNT_END         = #{prog_cnt_end}
         </if>
         <if test="jbit != null and jbit != ''">
         , JBIT                 = #{jbit}
         </if>
         <if test="hcode != null and hcode != ''">
         , HCODE                = #{hcode}
         </if>
         <if test="remark != null and remark != ''">
         , REMARK               = #{remark}
         </if>
     WHERE ALOW_CD = #{alow_cd}
       AND SEQ = #{seq}
    </update>


    <!--
    수당기초데이터 서브 등록
    -->
    <insert id="AlowMap.insertAlowSetSub" parameterType="map">
    INSERT /* AlowMap.insertAlowSetSub */
      INTO ALOW_SET_SUB (
           HCODE
         , SEQ
         , KBN
         , YN_MM
         , HS_STR_NO
         , HS_END_NO
         , HS_KBN
         , HS_AMT
         , REMARK
    )
    VALUES (
        #{hcode}
        , #{seq}
        , #{kbn}
        , #{yn_mm}
        , #{hs_str_no}
        , #{hs_end_no}
        , #{hs_kbn}
        , #{hs_amt}
        , #{remark}
    )
    </insert>


    <!--
    수당기초데이터 서브 수정
    -->
    <update id="AlowMap.updateAlowSetSub" parameterType="map">
    UPDATE /* AlowMap.updateAlowSetSub */
           ALOW_SET_SUB
       SET KBN          = #{kbn}
         , YN_MM        = #{yn_mm}
         , HS_STR_NO    = #{hs_str_no}
         , HS_END_NO    = #{hs_end_no}
         , HS_KBN       = #{hs_kbn}
         , HS_AMT       = #{hs_amt}
         , REMARK       = #{remark}
     WHERE HCODE = #{hcode}
       AND SEQ = #{seq}
    </update>

    <!-- 수당코드 기초Data조회 -->
    <select id="AlowMap.selectAlowCdDataList" parameterType="map" resultType="resultMap">
        SELECT /* AlowMap.selectAlowCdDataList */
               A.ALOW_CD
             , A.SEQ
             , A.PROD_CD
             , A.SALE_TYPE
             , (SELECT CD_NM FROM COM_CD WHERE grp_cd = '0125' AND COM_CD = A.SALE_TYPE) SALE_TYPE_NM
             , A.B2B_COMP AS B2B_COMP_CD
             , A.AMT
             , A.PAY_RAT
             , A.NO_STR
             , A.NO_END
             , A.PAY_NO
             , A.PAY_NO_END
             , FN_COM_NM('96',A.OCP_CLUSTER) OCP_CLUSTER
             , A.OCP_CLUSTER AS OCP_CLUSTER_CODE
             , A.PROD_JOIN_DT_STR
             , A.PROD_JOIN_DT_END
             , A.PROG_CNT_STR
             , A.PROG_CNT_END
             <if test="alow_cd == 'T33'">
             , DECODE(A.JBIT, 'N', 'N', 'Y') AS JBIT  /* 알선수수료(T33)만 수수료계산여부 필요 */
             </if>
             , A.HCODE
             , A.REMARK
             , B.PROD_NM
             , (SELECT COM_NM FROM B2BCOMCD WHERE COM_CD = A.B2B_COMP) B2B_COMP_NM
             , (SELECT COM_NM FROM B2BCOMCD WHERE COM_CD = A.B2B_COMP) B2B_COMP
          FROM ALOW_SET_MST A
             , PRODUCT B
         WHERE A.PROD_CD = B.PROD_CD(+)
           AND A.ALOW_CD = #{alow_cd}
         <if test="prod_cd != null and prod_cd != ''">
          AND A.PROD_CD = #{prod_cd}
        </if>
         ORDER BY A.ALOW_CD
                , A.PROD_CD
                , A.PROD_JOIN_DT_STR
                , A.OCP_CLUSTER
                , A.PAY_NO
                , A.NO_STR
                , A.SEQ
    </select>


    <!-- 수당기초데이터 마스터 삭제 -->
    <delete id="AlowMap.deleteAlowSetMst" parameterType="map">
        DELETE /* AlowMap.deleteAlowSetMst */
          FROM ALOW_SET_MST
         WHERE ALOW_CD  = #{alow_cd}
           AND SEQ      = #{seq}
    </delete>

    <!-- 수당기초데이터 서브 삭제 -->
    <delete id="AlowMap.deleteAlowSetSub" parameterType="map">
        DELETE /* AlowMap.deleteAlowSetSub */
          FROM ALOW_SET_SUB
         WHERE HCODE  = #{hcode}
           AND SEQ    = #{seq}
    </delete>

    <!-- 사원별 수당 조회 -->
    <select id="AlowMap.selectAlowListForEmpleNo" parameterType="map" resultType="resultMap">
    SELECT /* AlowMap.selectAlowListForEmpleNo */
           C.*
         , sum(case when C.ALOW_AMT > 0 then c.alow_amt else 0 end) over() TOT_ALOW_AMT
         , sum(C.ALOW_AMT2) over() TOT_ALOW_AMT2
         , sum(C.F5) over() TOT_F5
         , sum(C.F6) over() TOT_F6
         , sum(case when C.ALOW_AMT > 0 then c.alow_amt else 0 end - c.f5 - c.f6 ) over() TOT_RT_ALOW_AMT
      FROM (
    SELECT B.EMPLE_NM
         , (SELECT FN_COM_NM('96', A.OCP_CLUSTER) FROM DUAL) OCP_CLUSTER_NM
         , (SELECT FN_COM_NM('0124', B.INCOM_CL) FROM DUAL) INCOM_CL_NM
         , (SELECT FN_COM_NM ('63', nvl(B.BANK_CD,'X')) FROM DUAL) BANK_NM
         , B.BANK_CD
         , B.BANK_ACCNT_NO
         , SUBSTR(B.IDN_NO,1,6) || '-' || '*******' MASK_IDN_NO
         , B.IDN_NO
         , B.INCOM_CL
/*
         , (ALOW_AMT - CASE WHEN chk_rt_tax = 'Y' THEN trunc(ALOW_AMT * tax_rat) ELSE 0 END
                     - CASE WHEN chk_rt_tax = 'Y' THEN trunc(ALOW_AMT * tax_rat * 0.1) ELSE 0 END) RT_ALOW_AMT
*/
         , CASE WHEN
           (ALOW_AMT - CASE WHEN chk_rt_tax = 'Y' THEN
                                CASE WHEN INCOM_CL = '0001' AND (ALOW_AMT-trunc(ALOW_AMT * need_rat)) > 50000 THEN /* 기타소득 */
                                        trunc(ALOW_AMT * tax_rat)
                                     WHEN INCOM_CL = '0002' AND (ALOW_AMT) >= 33600 THEN /* 사업소득 */
                                        trunc(ALOW_AMT * tax_rat)
                                     ELSE 0 END
                            ELSE 0 END
                     - CASE WHEN chk_rt_tax = 'Y' THEN
                             CASE WHEN INCOM_CL = '0001' AND (ALOW_AMT-trunc(ALOW_AMT * need_rat )) > 50000 THEN /* 기타소득 */
                                        trunc(ALOW_AMT * tax_rat  * 0.1,-1)
                                     WHEN INCOM_CL = '0002' AND (ALOW_AMT) >= 33600 THEN /* 사업소득 */
                                        trunc(ALOW_AMT * tax_rat * 0.1,-1)
                                     ELSE 0 END
                       ELSE 0 END) > 0 THEN
            (ALOW_AMT - CASE WHEN chk_rt_tax = 'Y' THEN
                                            CASE WHEN INCOM_CL = '0001' AND (ALOW_AMT-trunc(ALOW_AMT * need_rat)) > 50000 THEN /* 기타소득 */
                                                    trunc(ALOW_AMT * tax_rat)
                                                 WHEN INCOM_CL = '0002' AND (ALOW_AMT) >= 33600 THEN /* 사업소득 */
                                                    trunc(ALOW_AMT * tax_rat)
                                                 ELSE 0 END
                                        ELSE 0 END
                                 - CASE WHEN chk_rt_tax = 'Y' THEN
                                         CASE WHEN INCOM_CL = '0001' AND (ALOW_AMT-trunc(ALOW_AMT * need_rat )) > 50000 THEN /* 기타소득 */
                                                    trunc(ALOW_AMT * tax_rat  * 0.1,-1)
                                                 WHEN INCOM_CL = '0002' AND (ALOW_AMT) >= 33600 THEN /* 사업소득 */
                                                    trunc(ALOW_AMT * tax_rat * 0.1,-1)
                                                 ELSE 0 END
                                   ELSE 0 END) ELSE 0 END RT_ALOW_AMT

         , CASE WHEN chk_rt_tax = 'Y' THEN
                    CASE WHEN INCOM_CL = '0001' AND (ALOW_AMT-trunc(ALOW_AMT * need_rat)) > 50000 THEN /* 기타소득 */
                            trunc(ALOW_AMT * tax_rat,-1)
                         WHEN INCOM_CL = '0002' AND (ALOW_AMT) >= 33600 THEN /* 사업소득 */
                            trunc(ALOW_AMT * tax_rat,-1)
                         ELSE 0 END
                ELSE 0 END F5           /* 소득세 */

         , CASE WHEN chk_rt_tax = 'Y' THEN
                             CASE WHEN INCOM_CL = '0001' AND (ALOW_AMT-trunc(ALOW_AMT * need_rat)) > 50000 THEN /* 기타소득 */
                            trunc(ALOW_AMT * tax_rat * 0.1,-1)
                         WHEN INCOM_CL = '0002' AND (ALOW_AMT) >= 33600 THEN /* 사업소득 */
                            trunc(ALOW_AMT * tax_rat * 0.1,-1)
                         ELSE 0 END  ELSE 0 END F6     /* 주민세 */
         ,CASE WHEN chk_rt_tax = 'Y' THEN
                    CASE WHEN INCOM_CL = '0001' AND (ALOW_AMT-trunc(ALOW_AMT * need_rat)) > 50000 THEN /* 기타소득 */
                            trunc(ALOW_AMT * tax_rat,-1)
                         WHEN INCOM_CL = '0002' AND (ALOW_AMT) >= 33600 THEN /* 사업소득 */
                            trunc(ALOW_AMT * tax_rat,-1)
                         ELSE 0 END
                ELSE 0 END +
          CASE WHEN chk_rt_tax = 'Y' THEN
                             CASE WHEN INCOM_CL = '0001' AND (ALOW_AMT-trunc(ALOW_AMT * need_rat)) > 50000 THEN /* 기타소득 */
                            trunc(ALOW_AMT * tax_rat * 0.1,-1)
                         WHEN INCOM_CL = '0002' AND (ALOW_AMT) >= 33600 THEN /* 사업소득 */
                            trunc(ALOW_AMT * tax_rat * 0.1,-1)
                         ELSE 0 END  ELSE 0 END AS G_HAP     /* 주민세 */
         , CASE WHEN ALOW_AMT <![CDATA[>]]> 0 THEN trunc(ALOW_AMT * need_rat) else 0 END NEED_COST    /* 필요경비 */
         , nvl(ADF.STND_AMT,0)      STND_AMT      /* 이월금 */
         , <![CDATA[CASE WHEN NVL(A.ALOW_AMT2,0) - NVL(F7,0) > 0 AND NVL(A.ALOW_AMT2,0) - NVL(F7,0) - NVL(STND_AMT,0) > 0 THEN NVL(STND_AMT,0)
                WHEN NVL(A.ALOW_AMT2,0) - NVL(F7,0) > 0 AND NVL(A.ALOW_AMT2,0) - NVL(F7,0) - NVL(STND_AMT,0) < 0 THEN NVL(STND_AMT,0) + (NVL(A.ALOW_AMT2,0) - NVL(F7,0) - NVL(STND_AMT,0))
                WHEN NVL(A.ALOW_AMT2,0) - NVL(F7,0) < 0 THEN 0 ELSE 0 END TM_DTL_AMT]]>
          <!--
              2017.11.13 김찬영 누적환수 부분 추가 F11..
         , <![CDATA[CASE WHEN NVL(A.ALOW_AMT2,0) >= NVL(F7,0) THEN NVL(F7,0)
                WHEN NVL(A.ALOW_AMT2,0) <  NVL(F7,0) THEN NVL(A.ALOW_AMT2,0)
                ELSE 0
                END CUR_REDMP_AMT]]>   /* 당월환수 */
         , <![CDATA[CASE WHEN NVL(A.ALOW_AMT2,0) >= NVL(F7,0) THEN 0
                WHEN NVL(A.ALOW_AMT2,0) <  NVL(F7,0) THEN NVL(F7,0) - NVL(TM_DTL_AMT,0)
                ELSE 0
                END NEXT_REDMP_AMT]]>   /* 이월환수 */
           -->
         , <![CDATA[CASE WHEN NVL(A.ALOW_AMT2,0) >= NVL(F7,0)+NVL(F11,0) THEN NVL(F7,0)+NVL(F11,0)
                WHEN NVL(A.ALOW_AMT2,0) <  NVL(F7,0)+NVL(F11,0) THEN NVL(A.ALOW_AMT2,0)
                ELSE 0
                END CUR_REDMP_AMT]]>   /* 당월환수 */
         <!--
             2017.12.20 김찬영 NVL(TM_DTL_AMT,0)==> NVL(A.ALOW_AMT2,0) 변경
         , <![CDATA[CASE WHEN NVL(A.ALOW_AMT2,0) >= NVL(F7,0)+NVL(F11,0) THEN 0
                WHEN NVL(A.ALOW_AMT2,0) < NVL(F7,0)+NVL(F11,0) THEN NVL(F7,0)+NVL(F11,0) - NVL(TM_DTL_AMT,0)
                ELSE 0
                END NEXT_REDMP_AMT]]>   /* 이월환수 */
         -->
         , <![CDATA[CASE WHEN NVL(A.ALOW_AMT2,0) >= NVL(F7,0)+NVL(F11,0) THEN 0
                WHEN NVL(A.ALOW_AMT2,0) < NVL(F7,0)+NVL(F11,0) THEN NVL(F7,0)+NVL(F11,0) - NVL(A.ALOW_AMT2,0)
                ELSE 0
                END NEXT_REDMP_AMT]]>   /* 이월환수 */

         , A.EMPLE_NO
         , A.TAX_RAT
         , A.NEED_RAT
         , A.DEPT_CD
         , A.OCP_CLUSTER
         , A.T21
         , A.T32
         , A.T33
         , A.F7
         , A.F11
         , A.F8
         , A.F10
         , A.F12
         , A.CHK_RT_TAX
         , CASE WHEN A.ALOW_AMT > 0 THEN A.ALOW_AMT ELSE 0 END ALOW_AMT
         , A.ALOW_AMT2
         <!--
              2017.11.13 김찬영 누적환수 부분 추가 F11..
         -->
         , A.TOT_F
         , A.ALOW_DT
      FROM (SELECT emple_no
                 , tax_rat
                 , need_rat
                 , dept_cd
                 , OCP_CLUSTER
                 , sum(T21) T21
                 , sum(T32) T32
                 , sum(T33) T33
                 , sum(F7) F7
                 , sum(F11) F11
                 , sum(F8) F8
                 , sum(F10) F10
                 , sum(F12) F12
                 , CASE WHEN ( sum(T21) + sum(T32) ) - ( sum(F7) + sum(F11) ) <![CDATA[<=]]> 0 THEN 'F'
                        ELSE 'Y'
                        END chk_rt_tax
                 , ( sum(T21) + sum(T32) ) - ( sum(F7) + sum(F11) ) + sum(T33) - (sum(F10) + sum(F8)) - sum(F12) ALOW_AMT
                 , ( sum(T21) + sum(T32) ) ALOW_AMT2
                 , ( sum(F7) + sum(F11) ) AS TOT_F
                 , #{end_dt} ALOW_DT
            FROM (SELECT mpa.accnt_no
                       , e.emple_no
                       , nvl(pm.T21,0) AS T21          /* 모집수당 */
                       , nvl(pm.T32,0) AS T32          /* 누진수당 */
                       , nvl(pm.F7,0) AS F7            /* 환수액 */
                       , nvl(pm.F11,0) AS F11          /* 누진환수 */
                       , 0 AS F8                       /* 해약환수액 */
                       , 0 AS F10                      /* 연체환수액 */
                       , nvl(pm.F12,0) AS F12          /* 이월환수 */
                       , 0 AS T33                      /* 알선수수료 */
                       , nvl(e.tax_rat,0)  tax_rat
                       , nvl(e.need_rat,0) need_rat
                       , e.dept_cd
                       , e.OCP_CLUSTER
                    FROM mem_prod_accnt mpa
                    JOIN (SELECT ed.*
                               , case when nvl(ed.incom_cl,'X') = 'X' then (acd.pay_rat/100)
                                      else
                                           <!--
                                                    2018.05.16 김찬영 2018.03월까지는 0.04, 2018.03월 이후는 0.06
                                                   case when ed.incom_cl = '0001' then 0.04
                                                        when ed.incom_cl = '0002' then 0.03
                                                        when ed.incom_cl = '0003' then 0
                                                        else 0.9
                                                   end
                                               -->
                                           <![CDATA[
                                                    case
                                                         when (ed.incom_cl = '0001' and #{end_dt} >= '201812') then 0.08
                                                         when (ed.incom_cl = '0001' and #{end_dt} <= '201803') then 0.04
                                                         when (ed.incom_cl = '0001' and #{end_dt} > '201803') then 0.06
                                                         when ed.incom_cl = '0002' then 0.03
                                                         when ed.incom_cl = '0003' then 0
                                                         else 0.9
                                                         end
                                            ]]>
                                      end tax_Rat
                               , (acdNeed.pay_rat/100) AS need_rat
                            FROM (SELECT e.emple_no
                                       , e.dept_cd
                                       , e.incom_cl
                                       , d.dept_kind
                                       , case when nvl(e.OCP_CLUSTER,'X') != 'X' then e.OCP_CLUSTER
                                                     else d.OCP_CLUSTER
                                                end OCP_CLUSTER
                                   FROM employee e JOIN department d ON e.dept_cd = d.dept_cd
                                  WHERE D.DEPT_KIND = '02'
                                    AND E.DEPT_CD != '1664'
                                    ) ed
                            LEFT JOIN (SELECT acd2.pay_rat
                                            , acd2.alow_cd
                                            , acd2.OCP_CLUSTER
                                         FROM ALOW_SET_MST acd2
                                        WHERE acd2.alow_cd = 'F5' /* 소득세 */
                                        ) acd on acd.OCP_CLUSTER = ed.OCP_CLUSTER
                            /*
                            2018.04.23 2018년 3월 부터 필요경비가 80==> 70으로 변경
                            LEFT JOIN ALOW_SET_MST acdNeed ON	acdNeed.alow_cd = 'T23' AND acdNeed.OCP_CLUSTER = ed.OCP_CLUSTER  필요경비
                            */

                            LEFT JOIN ALOW_SET_MST acdNeed
                                   ON acdNeed.ALOW_CD = 'T23'
                                   AND acdNeed.PROD_JOIN_DT_STR <![CDATA[<=]]> #{end_dt} AND  acdNeed.PROD_JOIN_DT_END <![CDATA[>=]]> #{end_dt}
                                   AND acdNeed.OCP_CLUSTER = ed.OCP_CLUSTER /* 필요경비 */
                            ) e ON mpa.emple_no = e.emple_no

                    /* 개별 근거 JOIN */
                    JOIN (SELECT accnt_no
                               , nvl(sum(T21),0) T21
                               , nvl(sum(F7),0) F7
                               , nvl(sum(T32),0) T32
                               , nvl(sum(F11),0) F11
                               , nvl(sum(F12),0) F12	/* 이월환수 */
                            FROM (SELECT accnt_no
                                       , CASE WHEN alow_cd='T21' THEN nvl(amt,0) ELSE 0 END T21
                                       , CASE WHEN alow_cd='F7' THEN nvl(amt,0) ELSE 0 END F7
                                       , CASE WHEN alow_cd='T32' THEN nvl(amt,0) ELSE 0 END T32
                                       , CASE WHEN alow_cd='F11' THEN nvl(amt,0) ELSE 0 END F11
                                       , CASE WHEN alow_cd='F12' THEN nvl(amt,0) ELSE 0 END F12
                                    FROM (SELECT ACCNT_NO
                                               , AMT
                                               , ALOW_CD
                                               , ALOW_DT
                                               , NOTE
                                               , DTL_SEQ
                                            FROM alow_da_dtl ad
                                           WHERE 1=1
                                              ANd alow_cd not in ('T33','F8','F10') /* 알선수수료, 해약환수액, 연체환수액 */
                                              AND dtl_seq = (SELECT  max(dtl_seq)
                                                               FROM ALOW_DA_DTL
                                                              WHERE ACCNT_NO= AD.ACCNT_NO
                                                                AND EMPLE_NO=AD.EMPLE_NO
                                                                AND PAY_NO = AD.PAY_NO
                                                                AND ALOW_DT=AD.ALOW_DT
                                                                AND ALOW_CD=AD.ALOW_CD
                                                                )
                                               and ( amt > 0 or hist_yn='Y')
                                          <if test="start_dt != null and start_dt != ''">
                                              AND alow_dt BETWEEN #{start_dt} AND  #{end_dt}
                                          </if>
                                          <if test="accnt_no != null and accnt_no != ''">
                                              AND accnt_no = #{accnt_no}
                                          </if>
                                          <if test="emple_no != null and emple_no != ''">
                                              AND emple_no = #{emple_no}
                                          </if>

                                          ) f
                                 ) tmp
                           GROUP BY accnt_no
                         ) pm ON pm.accnt_no = mpa.accnt_no
                        LEFT OUTER
                    JOIN rescission r ON r.accnt_no = mpa.accnt_no AND r.del_fg='N'
                   WHERE mpa.del_fg='N'
                   <!--
                     AND nvl(r.resn_cl,'00') != '02'
                     AND (
                        (e.dept_kind ='02' AND nvl(e.OCP_CLUSTER,'') !='04') /* 부서구분이 계열 이면서 대명직군이 콜센터가 아닌 경우 */
                        OR
                        e.dept_kind='01'    /* 부서구분이 일반영업 */
                        )
                    -->
                     AND EXISTS (SELECT 'X'
                            FROM pay_mng
                           WHERE DEL_FG='N'
                             AND pay_amt <![CDATA[>]]> 0
                             AND ACCNT_NO = mpa.accnt_no
                             )
                <if test="accnt_no != null and accnt_no != ''">
                     AND mpa.accnt_no = #{accnt_no}
                </if>
                <if test="emple_no != null and emple_no != ''">
                     AND mpa.emple_no = #{emple_no}
                </if>
                <if test="dept_cd != null and dept_cd != ''">
                     AND e.dept_cd = #{dept_cd}
                </if>

                    UNION ALL

                  SELECT mpa.accnt_no
                       , e.emple_no
                       , 0 AS T21                  /* 모집수당 */
                       , 0 AS T32                  /* 누진수당 */
                       , 0 AS F7                   /* 환수액 */
                       , 0 AS F11                  /* 누진환수 */
                       , nvl(pm.F8,0) AS F8        /* 해약환수액 */
                       , nvl(pm.F10,0) AS F10      /* 연체환수액 */
                       , 0 AS F12                  /* 이월환수 */
                       , nvl(pm.T33,0) AS T33      /* 알선수수료 */
                       , nvl(e.tax_rat,0)  tax_Rat
                       , nvl(e.need_rat,0) need_Rat
                       , e.dept_cd
                       , e.OCP_CLUSTER
                    FROM mem_prod_accnt mpa
                    JOIN (SELECT ed.*
                               , case when nvl(ed.incom_cl,'x') = 'x' then (acd.pay_rat/100)
                                                else
                                                <!--
                                                    2018.05.16 김찬영 2018.03월까지는 0.04, 2018.03월 이후는 0.06
                                                   case when ed.incom_cl = '0001' then 0.04
                                                        when ed.incom_cl = '0002' then 0.03
                                                        when ed.incom_cl = '0003' then 0
                                                        else 0.9
                                                   end
                                               -->
                                               <![CDATA[
                                                        case
                                                             when (ed.incom_cl = '0001' and #{end_dt} >= '201812') then 0.08
                                                             when (ed.incom_cl = '0001' and #{end_dt} <= '201803') then 0.04
                                                             when (ed.incom_cl = '0001' and #{end_dt} > '201803') then 0.06
                                                             when ed.incom_cl = '0002' then 0.03
                                                             when ed.incom_cl = '0003' then 0
                                                             else 0.9
                                                             end
                                                ]]>
                                            end tax_Rat
                               , (acdNeed.pay_rat/100) AS need_rat
                            FROM (SELECT e.emple_no
                                       , e.dept_cd
                                       , e.incom_cl
                                       , d.dept_kind
                                       , case when nvl(e.OCP_CLUSTER,'X') != 'X' then e.OCP_CLUSTER
                                                     else d.OCP_CLUSTER
                                                end OCP_CLUSTER
                                   FROM employee e
                                   JOIN department d ON e.dept_cd = d.dept_cd
                                  WHERE D.DEPT_KIND = '02'
                                    AND E.DEPT_CD != '1664'
                               ) ed LEFT
                            JOIN (SELECT acd2.pay_rat
                                       , acd2.alow_cd
                                       , acd2.OCP_CLUSTER
                                    FROM ALOW_SET_MST acd2
                                   WHERE acd2.alow_cd = 'F5'
                                   ) acd ON	acd.OCP_CLUSTER = ed.OCP_CLUSTER
                             /*
                            2018.04.23 2018년 3월 부터 필요경비가 80==> 70으로 변경
                            LEFT JOIN ALOW_SET_MST acdNeed ON	acdNeed.alow_cd = 'T23' AND acdNeed.OCP_CLUSTER = ed.OCP_CLUSTER  필요경비
                            */

                            LEFT JOIN ALOW_SET_MST acdNeed
                                   ON acdNeed.ALOW_CD = 'T23'
                                   AND acdNeed.PROD_JOIN_DT_STR <![CDATA[<=]]> #{end_dt} AND acdNeed.PROD_JOIN_DT_END <![CDATA[>=]]> #{end_dt}
                                   AND acdNeed.OCP_CLUSTER = ed.OCP_CLUSTER /* 필요경비 */

                        )e ON mpa.emple_no = e.emple_no
                    /* 개별 근거 JOIN */
                    JOIN (SELECT accnt_no
                               , nvl(sum(T33),0) T33
                               , nvl(sum(F8),0) F8
                               , nvl(sum(F10),0) F10
                            FROM (SELECT accnt_no
                                       , CASE WHEN alow_cd='T33' THEN nvl(amt,0) ELSE 0 END T33
                                       , CASE WHEN alow_cd='F8' THEN nvl(amt,0) ELSE 0 END F8
                                       , CASE WHEN alow_cd='F10' THEN nvl(amt,0) ELSE 0 END F10
                                     FROM (SELECT ACCNT_NO
                                                , AMT
                                                , ALOW_CD
                                                , ALOW_DT
                                                , NOTE
                                                , DTL_SEQ
                                             FROM alow_da_dtl ad
                                            WHERE 1=1
                                              ANd alow_cd in ('T33','F8','F10') /* 알선수수료, 해약환수액, 연체환수액 */
                                              AND dtl_seq = (SELECT  max(dtl_seq)
                                                      FROM alow_da_dtl
                                                      WHERE accnt_no= ad.accnt_no
                                                      AND emple_no=ad.emple_no
                                                      ANd pay_no=ad.pay_no
                                                      AND alow_dt=ad.alow_dt
                                                      AND alow_cd=ad.alow_cd
                                                       )
                                              and ( amt > 0 or hist_yn='Y')
                                            <if test="start_dt != null and start_dt != ''">
                                              AND alow_dt BETWEEN #{start_dt} AND  #{end_dt}
                                            </if>
                                            <if test="accnt_no != null and accnt_no != ''">
                                              AND accnt_no = #{accnt_no}
                                                                               </if>
                                            <if test="emple_no != null and emple_no != ''">
                                              AND emple_no = #{emple_no}
                                            </if>
                                            ) f
                                     ) tmp
                             GROUP BY accnt_no
                            ) pm ON pm.accnt_no = mpa.accnt_no
                   WHERE mpa.del_fg='N'
                <if test="accnt_no != null and accnt_no != ''">
                     AND mpa.accnt_no = #{accnt_no}
                </if>
                <if test="emple_no != null and emple_no != ''">
                     AND mpa.emple_no = #{emple_no}
                </if>
                <if test="dept_cd != null and dept_cd != ''">
                     AND e.dept_cd = #{dept_cd}
                </if>
                 ) TMP
             GROUP BY EMPLE_NO
                    , TAX_RAT
                    , NEED_RAT
                    , DEPT_CD
                    , OCP_CLUSTER
            ) A INNER JOIN
           EMPLOYEE B ON A.EMPLE_NO = B.EMPLE_NO
                    LEFT OUTER JOIN
           ALOW_DTL_F12 ADF ON ADF.ALOW_DT = A.ALOW_DT AND ADF.EMPLE_NO = A.EMPLE_NO
     ORDER BY EMPLE_NM
    ) C
    </select>

    <!-- B2B업체별 수수료 현황 -->
    <select id="AlowMap.getB2bCompFeeList" parameterType="map" resultType="resultMap">

        <if test="excel_yn != 'Y'.toString()">
        <include refid="CommonMap.headerPageSql" />
        </if>

        SELECT /* AlowMap.getB2bCompFeeList */
               C.*
             , CASE WHEN C.TOT_PAY_NO <![CDATA[<=]]> NVL(C.PAY_NO,0) THEN NVL(C.TOT_PAY_NO,0)
                    WHEN C.TOT_PAY_NO <![CDATA[>]]> NVL(C.PAY_NO,0) THEN NVL(C.PAY_NO,0)
                    ELSE C.TOT_PAY_NO END PAY_NO_END /* 근거회차 */
             , CASE WHEN YEN_CHE = 0 AND YEN = 1 THEN '만기'
                    WHEN YEN_CHE = 0 AND YEN = 0 THEN '정상'
                    WHEN YEN_CHE = 1 AND YEN = 0 THEN '당월미납'
                    WHEN YEN_CHE <![CDATA[>]]> 1 AND YEN = 0 THEN TO_CHAR(YEN_CHE - 1) || '회 연체'
                    WHEN YEN_CHE  <![CDATA[<]]>  0 AND YEN = 0 THEN REPLACE(TO_CHAR(YEN_CHE), '-', '')|| '회 선납'
                    WHEN YEN_CHE  <![CDATA[<]]>  0 AND YEN = 1 THEN '만기'
                    END PAY_STAT /* 납입상태 */
             <if test="excel_yn != 'Y'.toString()">
                <if test="tot_row_cnt != null and tot_row_cnt == '0'.toString()">
             , sum(C.AMT) OVER() TOT_FEE_AMT            /* 수수료계 */
             , sum(C.REDMP_AMT) OVER() TOT_REDMP_AMT     /* 환수액 */
             , COUNT(*) OVER() tot_row_cnt              /* 총데이터건수 */
                </if>
                <if test="tot_row_cnt == null or tot_row_cnt != '0'.toString()">
             , TO_NUMBER(#{tot_row_cnt}) tot_row_cnt             /* 총데이터건수 */
                </if>
             </if>
          FROM (SELECT
                       A.*
                     , CASE WHEN (A.T33 - REDMP_AMT) <![CDATA[>=]]> 0 THEN A.T33 - REDMP_AMT
                            ELSE 0 END AS AMT
                     , COALESCE(E.OCP_CLUSTER, D.OCP_CLUSTER) OCP_CLUSTER
                     , MEM.MEM_NM
                     , MPA.EMPLE_NO
                     , MPA.JOIN_DT
                     , E.EMPLE_NM
                     , P.PROD_NM
                     , D.DEPT_NM
                     , PDM.TOT_PAY_NO
                     , B2B.SALE_TYPE
                     , B2B.COM_NM AS ALOW_B2B_COMP_NM
                     , B2B2.COM_NM AS B2B_COMP_NM
                     , B2B2.SALE_TYPE AS MPA_SALE_TYPE
                     , PDM.LAST_PAY_DAY PAY_DAY
                     , (SELECT CD_NM FROM COM_CD WHERE GRP_CD = '0125' AND COM_CD = B2B.SALE_TYPE) SALE_TYPE_NM
                     , (SELECT CD_NM FROM COM_CD WHERE GRP_CD = '0125' AND COM_CD = B2B2.SALE_TYPE) ALOW_SALE_TYPE_NM
                     , (SELECT PMD.MODEL_NM
                          FROM LF_DMUSER.PRODUCT_MODEL_MST PMM INNER JOIN LF_DMUSER.PRODUCT_MODEL_DTL PMD ON PMM.SEQ = PMD.SEQ
                         WHERE PMM.PROD_KIND = MPA.PROD_MODEL_KIND
                           AND PMM.PROD_CD   = MPA.PROD_CD
                           AND PMD.MODEL_CD  = MPA.PROD_MODEL_CD
                           AND NVL(PMD.DISCONTINUED_DT, '99991231') <![CDATA[>]]> TO_CHAR(SYSDATE, 'YYYYMMDD')
                           AND PMM.del_fg = 'N') MODEL_NM
                     , CASE WHEN EVT.ACCNT_NO IS NOT NULL THEN EVT.EVENT_PROC_DAY
                            WHEN RESN.ACCNT_NO IS NOT NULL THEN RESN.RESN_PROC_DAY
                            ELSE NULL
                            END EVENT_PROC_DAY
                     , CASE WHEN EVT.ACCNT_NO IS NOT NULL THEN '행사'
                            WHEN RESN.ACCNT_NO IS NOT NULL THEN FN_COM_NM('64',RESN.RESN_CL)
                            ELSE '정상'
                        END EVENT_RESN_STAT
                     , SD.ST_GRP_CD
                     , CASE WHEN (P.EXPR_NO - MPA.NEW_CHAN_GUNSU) <![CDATA[>]]> NVL(TRUNC(MONTHS_BETWEEN(LAST_DAY(#{alow_dt} || '01') ,MPA.JOIN_DT),0)  + 1, 0)
                           THEN NVL(TRUNC(MONTHS_BETWEEN(LAST_DAY(#{alow_dt} || '01') ,MPA.JOIN_DT),0)  + 1, 0)  - NVL(PDM.TOT_PAY_NO, 0)
                           ELSE NVL((P.EXPR_NO - MPA.NEW_CHAN_GUNSU), 0) - NVL(PDM.TOT_PAY_NO, 0)
                       END YEN_CHE
                     , CASE WHEN (P.EXPR_NO - MPA.NEW_CHAN_GUNSU) = PM.NO
                           THEN 1
                           ELSE 0
                           END YEN
                  FROM (SELECT ACCNT_NO
                             , MAX(PAY_NO) PAY_NO
                             , PROD_CD
                             , ALOW_B2B_COMP_CD
                             , B2B_COMP_CD
                             , nvl(sum(T33),0) T33
                             , nvl(sum(F8),0) F8
                             , nvl(sum(F10),0) F10
                             , nvl(sum(F8),0) + nvl(sum(F10),0) REDMP_AMT
                          FROM (SELECT ACCNT_NO
                                    , PAY_NO
                                    , PROD_CD
                                    , ALOW_B2B_COMP_CD
                                    , B2B_COMP_CD
                                    , AMT T33
                                    , NULL F8
                                    , NULL F10
                                 FROM ALOW_DTL_T33
                                WHERE ALOW_DT = #{alow_dt}
                                 <if test="accnt_no != null and accnt_no != ''">
                                   AND ACCNT_NO = #{accnt_no}
                                 </if>
                                 <if test="alow_b2b_comp_cd != null and alow_b2b_comp_cd != ''">
                                   AND ALOW_B2B_COMP_CD = #{alow_b2b_comp_cd}
                                 </if>
                                 union all
                               SELECT ACCNT_NO
                                    , PAY_NO
                                    , PROD_CD
                                    , ALOW_B2B_COMP_CD
                                    , B2B_COMP_CD
                                    , NULL T33
                                    , CASE WHEN ALOW_CD = 'F8' THEN AMT ELSE 0 END F8
                                    , CASE WHEN ALOW_CD = 'F10' THEN AMT ELSE 0 END F10
                                 FROM ALOW_DTL_T33_REDMP
                                WHERE ALOW_DT = #{alow_dt}
                                 <if test="accnt_no != null and accnt_no != ''">
                                   AND ACCNT_NO = #{accnt_no}
                                 </if>
                                 <if test="alow_b2b_comp_cd != null and alow_b2b_comp_cd != ''">
                                   AND ALOW_B2B_COMP_CD = #{alow_b2b_comp_cd}
                                 </if>
                                 )
                         GROUP BY ACCNT_NO
                                , PROD_CD
                                , ALOW_B2B_COMP_CD
                                , B2B_COMP_CD
                         ORDER BY ACCNT_NO
                        ) A
                            INNER JOIN
                       MEM_PROD_ACCNT MPA ON A.ACCNT_NO = MPA.ACCNT_NO
                            INNER JOIN
                       MEMBER MEM ON MPA.MEM_NO = MEM.MEM_NO
                            INNER JOIN
                       PRODUCT P ON MPA.PROD_CD = P.PROD_CD
                            INNER JOIN
                       EMPLOYEE E ON MPA.EMPLE_NO = E.EMPLE_NO
                            LEFT OUTER JOIN
                       (SELECT DEPT_CD
                              , substr(replace(SYS_CONNECT_BY_PATH(D2.DEPT_NM, '__'), '__', '/'),2) DEPT_NM
                              , OCP_CLUSTER
                           FROM DEPARTMENT d2
                         CONNECT BY PRIOR d2.DEPT_CD = d2.HIGH_DEPT_CD
                          START WITH lvl = '1'
                       ) D ON E.DEPT_CD = D.DEPT_CD
                            LEFT OUTER JOIN
                       EVENT EVT ON MPA.ACCNT_NO = EVT.ACCNT_NO AND EVT.DEL_FG = 'N' AND EVT.EVENT_PROC_DAY <![CDATA[<=]]> to_char(LAST_DAY(#{alow_dt} || '01'), 'YYYYMMDD')
                            LEFT OUTER JOIN
                       RESCISSION RESN ON RESN.ACCNT_NO = MPA.ACCNT_NO AND RESN.DEL_FG = 'N' AND RESN.RESN_PROC_DAY <![CDATA[<=]]> to_char(LAST_DAY(#{alow_dt}||'01') ,'YYYYMMDD')
                            LEFT OUTER JOIN
                       B2BCOMCD B2B ON A.ALOW_B2B_COMP_CD = B2B.COM_CD
                            LEFT OUTER JOIN
                       B2BCOMCD B2B2 ON A.B2B_COMP_CD = B2B2.COM_CD
                            LEFT OUTER JOIN
                       B2B_SALE_TYPE_DTL SD on B2B2.SALE_TYPE = SD.SALE_TYPE
                            LEFT OUTER JOIN
                       PAY_MNG PM on PM.ACCNT_NO = A.ACCNT_NO AND PM.NO = A.PAY_NO AND PM.DEL_FG = 'N'
                            LEFT OUTER JOIN
                        (SELECT ACCNT_NO
                              , PAY_NO AS TOT_PAY_NO            /* 부금_회차 */
                              , PAY_TOT_AMT         /* 부금_입금액_누계 */
                              , LAST_PAY_DAY        /* 최종입금일자 */
                              , RM_PAY_EAMT         /* 잔여_부금_예상금액 */
                         FROM PAY_DL_MST
                         WHERE DL_TYPE = '01' /* 입금마감 */
                           AND PAY_DL_YYYYMM = #{alow_dt}
                         ) PDM ON PDM.ACCNT_NO = MPA.ACCNT_NO
                            LEFT OUTER JOIN
                       (SELECT ACCNT_NO
                             , MAX(PAY_NO) PAY_NO
                             , PROD_CD
                             , ALOW_B2B_COMP_CD
                             , B2B_COMP_CD
                             , SUM(CASE WHEN ALOW_CD = 'F8' THEN AMT ELSE 0 END) F8
                             , SUM(CASE WHEN ALOW_CD = 'F10' THEN AMT ELSE 0 END) F10
                          FROM ALOW_DTL_T33_REDMP
                         WHERE ALOW_DT = #{alow_dt}
                           AND ALOW_CD IN ('F8', 'F10')
                         <if test="accnt_no != null and accnt_no != ''">
                           AND ACCNT_NO = #{accnt_no}
                         </if>
                         <if test="alow_b2b_comp_cd != null and alow_b2b_comp_cd != ''">
                           AND ALOW_B2B_COMP_CD = #{alow_b2b_comp_cd}
                         </if>
                         GROUP BY ACCNT_NO
                                , PROD_CD
                                , ALOW_B2B_COMP_CD
                                , B2B_COMP_CD
                         ORDER BY ACCNT_NO
                        ) B ON A.ACCNT_NO = B.ACCNT_NO AND A.PROD_CD = B.PROD_CD
                                                       AND A.ALOW_B2B_COMP_CD = B.ALOW_B2B_COMP_CD
                                                       AND A.B2B_COMP_CD = B.B2B_COMP_CD
                 WHERE 1=1
                 <if test="emple_no != null and emple_no != ''">
                   AND MPA.EMPLE_NO = #{emple_no}
                 </if>
                 <if test="dept_cd != null and dept_cd != ''">
                   AND D.DEPT_CD = #{dept_cd}
                 </if>
                 <if test="sale_type != null and sale_type != ''">
                   AND B2B.SALE_TYPE = #{sale_type}
                 </if>
               ) C LEFT OUTER JOIN ALOW_SET_MST ASM ON C.PROD_CD = ASM.PROD_CD AND
                       ASM.ALOW_CD = 'T33' AND
                       <!--
                       C.OCP_CLUSTER = ASM.OCP_CLUSTER AND
                       -->
                       C.PAY_NO <![CDATA[>=]]> NVL(ASM.PAY_NO,0) AND
                       C.PAY_NO <![CDATA[<=]]> NVL(ASM.PAY_NO_END,0) AND
                       C.ALOW_B2B_COMP_CD = ASM.B2B_COMP AND
                       <!--
                       C.SALE_TYPE = ASM.SALE_TYPE AND
                       -->
                       C.MPA_SALE_TYPE = ASM.SALE_TYPE AND <!-- 수수료 수령업체가 아닌 상품에 관련된 SALE_TYPE -->
                       C.JOIN_DT <![CDATA[>=]]> REPLACE(ASM.PROD_JOIN_DT_STR,'-','')||'01' AND
                       C.JOIN_DT <![CDATA[<=]]> REPLACE(ASM.PROD_JOIN_DT_END,'-','')||'99'
         ORDER BY C.ACCNT_NO
         <if test="excel_yn != 'Y'.toString()">
         <include refid="CommonMap.footerPageSql" />
         </if>

    </select>

    <!-- B2B업체별 수수료 현황 건수 조회 -->
    <select id="AlowMap.getB2bCompFeeCount" parameterType="map" resultType="int">
        SELECT /* AlowMap.getB2bCompFeeCount */
               count(*)
          FROM (SELECT ADT.ACCNT_NO
                     , MAX(PAY_NO) PAY_NO
                     , PROD_CD
                     , ALOW_B2B_COMP_CD
                     , SUM(CASE WHEN ALOW_CD = 'T33' THEN AMT ELSE 0 END) T33
                     , SUM(CASE WHEN ALOW_CD = 'F8' THEN AMT ELSE 0 END) F8
                     , SUM(CASE WHEN ALOW_CD = 'F10' THEN AMT ELSE 0 END) F10
                  FROM ALOW_DTL_T33 ADT
                 WHERE ALOW_DT = #{alow_dt}
                   AND ALOW_CD IN ('T33', 'F8', 'F10')
                 <if test="accnt_no != null and accnt_no != ''">
                   AND ACCNT_NO = #{accnt_no}
                 </if>
                 <if test="alow_b2b_comp_cd != null and alow_b2b_comp_cd != ''">
                   AND ALOW_B2B_COMP_CD = #{alow_b2b_comp_cd}
                 </if>
                 GROUP BY ACCNT_NO
                        , PROD_CD
                        , ALOW_B2B_COMP_CD
                 ORDER BY ACCNT_NO
                ) A
                    INNER JOIN
               MEM_PROD_ACCNT MPA ON A.ACCNT_NO = MPA.ACCNT_NO
                    INNER JOIN
               MEMBER MEM ON MPA.MEM_NO = MEM.MEM_NO
                    INNER JOIN
               PRODUCT P ON MPA.PROD_CD = P.PROD_CD
                    INNER JOIN
               EMPLOYEE E ON MPA.EMPLE_NO = E.EMPLE_NO
                    LEFT OUTER JOIN
               DEPARTMENT D ON E.DEPT_CD = D.DEPT_CD
                    LEFT OUTER JOIN
               B2BCOMCD B2B ON A.ALOW_B2B_COMP_CD = B2B.COM_CD
                    LEFT OUTER JOIN
               B2B_SALE_TYPE_DTL SD on B2B.SALE_TYPE = SD.SALE_TYPE
                    LEFT OUTER JOIN
               B2B_SALE_TYPE_MST SM on SD.ST_GRP_CD = SM.ST_GRP_CD
         WHERE 1=1
         <if test="emple_no != null and emple_no != ''">
           AND MPA.EMPLE_NO = #{emple_no}
         </if>
         <if test="dept_cd != null and dept_cd != ''">
           AND D.DEPT_CD = #{dept_cd}
         </if>
         <if test="st_grp_cd != null and st_grp_cd != ''">
           AND SD.ST_GRP_CD	= #{st_grp_cd}
         </if>
         <if test="sale_type != null and sale_type != ''">
           AND B2B.SALE_TYPE = #{sale_type}
         </if>
    </select>

    <!-- 환수목록조회 -->
    <select id="AlowMap.getHcodeList" resultType="resultMap" parameterType="map">
        SELECT /* AlowMap.getHcodeList */
               A.*
             , DENSE_RANK() OVER(ORDER BY HCODE_NO) RNK
          FROM (SELECT /* AlowMap.getHcodeList */
                       HCODE
                     , SEQ
                     , KBN
                     , YN_MM
                     , HS_STR_NO
                     , HS_END_NO
                     , HS_KBN
                     , HS_AMT
                     , REMARK
                     , '' AS CHK
                     , to_number(HCODE) HCODE_NO
                  FROM ALOW_SET_SUB
                 WHERE 1=1
                 <if test="hcode != null and hcode != ''">
                   AND hcode = #{hcode}
                 </if>
                 <if test="seq != null and seq != ''">
                   AND seq = #{seq}
                 </if>
                 ORDER BY to_number(HCODE), SEQ) A
    </select>

    <parameterMap id="alowCalcAgencyMap" type="map">
        <parameter property="alow_dt" mode="IN" jdbcType="VARCHAR"  javaType="java.lang.String" />
        <parameter property="rgsr_id" mode="IN" jdbcType="VARCHAR"  javaType="java.lang.String" />
    </parameterMap>

    <!-- B2B 업체별 수수료 계산 -->
    <update id="AlowMap.alowCalcAgency" statementType="CALLABLE" parameterMap="alowCalcAgencyMap">
        { CALL SP_UP_COMPT_ALOW_AGENCY (?,?) }
    </update>

    <!-- B2B 업체별 수수료 삭제 -->
    <update id="AlowMap.deleteAlowAgency" statementType="CALLABLE" parameterMap="alowCalcAgencyMap">
        { CALL SP_UP_DEL_ALOW_AGENCY (?,?) }
    </update>

    <!-- 회원별 수당 건수 조회 -->
    <select id="AlowMap.selectAccntAlowCount" parameterType="map" resultType="int">
        /* AlowMap.selectAccntAlowCount */
        SELECT count(*)
          FROM MEM_PROD_ACCNT MPA JOIN
               MEMBER MB ON MPA.MEM_NO = MB.MEM_NO JOIN
               PRODUCT PD ON MPA.PROD_CD=PD.PROD_CD JOIN
               (
                <include refid="selectAlowListForTmp"/>
               ) pm on pm.accnt_no = mpa.accnt_no
            WHERE MPA.DEL_FG='N'
            AND MB.DEL_FG='N'
    </select>

    <!--
    회원별 수당 조회
    ASIS : selectAlowListForAccnt
    -->
    <select id="AlowMap.selectAccntAlowList" parameterType="map" resultType="resultMap">
        /* AlowMap.selectAccntAlowList */
        <if test="excel_yn != 'Y'.toString()">
        <include refid="CommonMap.headerPageSql" />
        </if>
        SELECT TMP.ACCNT_NO
        <if test="excel_yn != 'Y'.toString()">
            <if test="tot_row_cnt != null and tot_row_cnt == '0'.toString()">
            , COUNT(*) OVER() TOT_ROW_CNT                      /* 총데이터건수 */
            </if>
            <if test="tot_row_cnt == null or tot_row_cnt != '0'.toString()">
            , TO_NUMBER(#{tot_row_cnt}) TOT_ROW_CNT             /* 총데이터건수 */
            </if>
        </if>
            , MEM_NM
            , TMP.EMPLE_NO
            , EMPLE_NM
            , JOIN_DT
            , tmp.PROD_CD
            , PROD_NM
            , TMP.OCP_CLUSTER
            , OCP_CLUSTER_NM
            , MODEL_CL_NM
            , FN_EVENT(ACCNT_NO) ACCNT_STAT
            , FN_ST_GRP_NM_BY_ACCNT_NO(ACCNT_NO) ST_GRP_NM
            , TOT_PAY_NO
            , PAY_TOT_AMT
            , LAST_PAY_DAY
            , CUR_PAY_AMT
            , RM_PAY_EAMT
            , DA_PAY_NO
            , CASE WHEN (NVL(T32,0) <![CDATA[>]]> 0 OR NVL(F11,0) <![CDATA[>]]> 0) AND TOT_PAY_NO  <![CDATA[>=]]>  NVL(ASMT.PAY_NO_END,0) THEN NVL(ASMT.PAY_NO_END,0)
                   WHEN (NVL(T32,0) <![CDATA[>]]> 0 OR NVL(F11,0) <![CDATA[>]]> 0) AND TOT_PAY_NO  <![CDATA[<]]>  NVL(ASMT.PAY_NO_END,0) THEN NVL(TOT_PAY_NO,0)
                   WHEN (NVL(T21,0) <![CDATA[>]]> 0 OR NVL(F7,0) <![CDATA[>]]> 0) AND TOT_PAY_NO  <![CDATA[>=]]>  NVL(ASM.PAY_NO_END,0) THEN NVL(ASM.PAY_NO_END,0)
                   WHEN (NVL(T21,0) <![CDATA[>]]> 0 OR NVL(F7,0) <![CDATA[>]]> 0) AND TOT_PAY_NO  <![CDATA[<]]>  NVL(ASM.PAY_NO_END,0) THEN NVL(TOT_PAY_NO,0)
                   WHEN NVL(T33,0) <![CDATA[>]]> 0 AND TOT_PAY_NO  <![CDATA[<]]> NVL(ASMS.PAY_NO_END,0) THEN NVL(TOT_PAY_NO,0)
                   WHEN NVL(T33,0) <![CDATA[>]]> 0 AND TOT_PAY_NO  <![CDATA[>=]]>  NVL(ASMS.PAY_NO_END,0) THEN NVL(ASMS.PAY_NO_END,0)
                   ELSE TOT_PAY_NO
                   END PAY_NO_END /* 근거회차 */
            , T21, T32, T33 ,F7, F11, F8, F10, F12
            , rt_sum_t, rt_sum_f
            , rt_alow_amt
            , NVL(HM_AMT,0) HM_AMT
            , CASE WHEN chk_rt_tax = 'Y' THEN
                       CASE WHEN INCOM_CL = '0001' AND (rt_alow_amt-trunc(rt_alow_amt * need_rat)) <![CDATA[>=]]> 50000 THEN /* 기타소득 */
                               trunc(rt_alow_amt * tax_rat)
                            WHEN INCOM_CL = '0002' AND (rt_alow_amt-trunc(rt_alow_amt * need_rat)) <![CDATA[>=]]> 1000 THEN /* 사업소득 */
                               trunc(rt_alow_amt * tax_rat)
                            ELSE 0 END
                   ELSE 0 END F5           /* 소득세 */

            , CASE WHEN chk_rt_tax = 'Y' THEN trunc(rt_alow_amt * tax_rat * 0.1) ELSE 0 END F6
            , CASE WHEN chk_rt_tax = 'Y' THEN
                                (trunc(rt_alow_amt * tax_rat) + trunc(rt_alow_amt * tax_rat * 0.1) )
                            ELSE 0 END tot_tax
            , CASE WHEN chk_rt_tax = 'Y' THEN
                                    rt_alow_amt - (trunc(rt_alow_amt * tax_rat) + trunc(rt_alow_amt * tax_rat * 0.1) )
                            WHEN rt_alow_amt <![CDATA[<=]]> 0 THEN 0
                            ELSE rt_alow_amt
                            END tot_alow_amt
            , CASE WHEN rt_alow_amt > 0 THEN trunc(rt_alow_amt * need_rat) else 0 END need_cost
            , CASE WHEN HIST_YN ='Y' THEN '이력' ELSE '' END HIST_YN
            , emple_idn_no
            , INCOM_CL
            , INCOM_CL_NM
            , BANK_ACCNT_NO
            , (SELECT CD_NM FROM COM_CD WHERE GRP_CD = '0125' AND COM_CD = TMP.SALE_TYPE) SALE_TYPE_NM
            , B2B_COM_NM
            , B2B_COMP_CD
        FROM (SELECT MPA.ACCNT_NO
                   , MB.MEM_NM
                   , PM.EMPLE_NO
                   , PM.EMPLE_NM
                   , PM.JOIN_DT
                   , MPA.PROD_CD
                   , PD.PROD_NM
                   , PM.OCP_CLUSTER
                   , PM.OCP_CLUSTER_NM
                   , P.TOT_PAY_NO
                   , P.LAST_PAY_DAY
                   , PDD.CUR_PAY_AMT
                   , P.RM_PAY_EAMT
                   , P.PAY_TOT_AMT
                   , nvl(pm.pay_no, 0) AS da_pay_no
                   , nvl(pm.T21,0) AS T21
                   , nvl(pm.T32,0) AS T32
                   , nvl(pm.T33,0) AS T33
                   , nvl(pm.F7,0) AS F7
                   , nvl(pm.F11,0) AS F11
                   , nvl(pm.F8,0) AS F8
                   , nvl(pm.F10,0) AS F10
                   , nvl(pm.F12,0) AS F12
                   , nvl(pm.T21,0)+nvl(pm.T32,0)+ nvl(pm.T33,0) rt_sum_t
                   , nvl(pm.F7,0) + nvl(pm.F11,0) + nvl(pm.F8,0)+ nvl(pm.F10,0) rt_sum_f
                   , CASE WHEN ( nvl(pm.T21,0)+nvl(pm.T32,0) ) - ( nvl(pm.F7,0) + nvl(pm.F11,0) ) <![CDATA[<=]]> 0 THEN 'F'
                                   ELSE 'Y'
                                   END chk_rt_tax
                   , CASE WHEN ( nvl(pm.T21,0)+nvl(pm.T32,0) ) - ( nvl(pm.F7,0) + nvl(pm.F11,0) ) <![CDATA[<=]]> 0 THEN  0
                                       ELSE ( nvl(pm.T21,0)+nvl(pm.T32,0) ) - ( nvl(pm.F7,0) + nvl(pm.F11,0) ) + nvl(pm.T33,0) - (nvl(pm.F10,0)+ nvl(pm.F8,0))
                                       END rt_sum_for_tax
                   , ( nvl(pm.T21,0)+nvl(pm.T32,0) ) - ( nvl(pm.F7,0) + nvl(pm.F11,0) ) + nvl(pm.T33,0) - (nvl(pm.F10,0)+ nvl(pm.F8,0)) rt_alow_amt
                   , nvl(pm.tax_rat,0)  tax_rat
                   , nvl(pm.need_rat,0) need_rat
                   , PM.HIST_YN
                   , (SELECT MODEL_CL_NM FROM PRODUCT_MODEL_CL_CD WHERE MODEL_CL_CD = mpa.PROD_MODEL_KIND) MODEL_CL_NM
                   , PM.DEPT_CD
                   , EMP.IDN_NO EMPLE_IDN_NO
                   , EMP.INCOM_CL
                   , (SELECT replace(FN_COM_NM('0124', EMP.INCOM_CL),chr(0),'') FROM DUAL) INCOM_CL_NM
                   , replace(EMP.BANK_ACCNT_NO, chr(0), '') BANK_ACCNT_NO
                   , mpa.PROD_MODEL_KIND
                   , mpa.PROD_MODEL_CD
                   , mpa.B2B_COMP_CD
                   , b2b.SALE_TYPE
                   , b2b.COM_NM AS B2B_COM_NM
                   , PMG.HM_AMT
              FROM MEM_PROD_ACCNT MPA
              JOIN MEMBER MB ON MPA.MEM_NO = MB.MEM_NO
              JOIN PRODUCT PD ON MPA.PROD_CD=PD.PROD_CD
              JOIN
              (
                <include refid="selectAlowListForTmp"/>
              ) pm on pm.accnt_no = mpa.accnt_no
            LEFT OUTER JOIN EMPLOYEE emp ON emp.emple_no = pm.emple_no
            LEFT OUTER JOIN
            (SELECT ACCNT_NO
                    , PAY_NO TOT_PAY_NO
                    , PAY_TOT_AMT
                    , LAST_PAY_DAY
                    , RM_PAY_EAMT
               FROM PAY_DL_MST
              WHERE DL_TYPE = '01' /* 입금마감 */
                AND PAY_DL_YYYYMM = #{end_dt}
            ) p ON p.accnt_no = mpa.accnt_no
            LEFT OUTER JOIN
            (SELECT ACCNT_NO
                    , sum(PAY_AMT) CUR_PAY_AMT
               FROM PAY_DL_DTL
              WHERE DL_TYPE = '01' /* 입금마감 */
                AND PAY_DL_YYYYMM = #{end_dt}
              GROUP BY ACCNT_NO
            ) PDD ON PDD.accnt_no = MPA.ACCNT_NO
            LEFT OUTER JOIN
            (SELECT ACCNT_NO
                  ,SUM(PAY_AMT) HM_AMT
               FROM PAY_MNG
              WHERE DEL_FG = 'N'
                AND SUBSTR(PAY_DAY,1,6) = #{end_dt}
              GROUP BY ACCNT_NO
            ) PMG ON PMG.ACCNT_NO = MPA.ACCNT_NO
            LEFT OUTER JOIN B2BCOMCD B2B ON B2B.COM_CD = MPA.B2B_COMP_CD
            WHERE MPA.DEL_FG='N'
            AND MB.DEL_FG='N'
            ORDER BY ACCNT_NO
        ) tmp LEFT OUTER JOIN (SELECT * FROM(
                                   SELECT ROW_NUMBER()OVER(PARTITION BY PROD_CD, OCP_CLUSTER ORDER BY PAY_NO_END DESC) CNT,ALOW_SET_MST.*
                                   FROM ALOW_SET_MST
                                   WHERE ALOW_CD = 'T21') TBL
                               ) ASM ON TMP.PROD_CD = ASM.PROD_CD AND
                                 TMP.OCP_CLUSTER = ASM.OCP_CLUSTER AND
                                 TMP.JOIN_DT  <![CDATA[>=]]>  REPLACE(ASM.PROD_JOIN_DT_STR,'-','')||'01' AND
                                 TMP.JOIN_DT  <![CDATA[<=]]>  REPLACE(ASM.PROD_JOIN_DT_END,'-','')||'99' AND
                                 TMP.TOT_PAY_NO <![CDATA[>=]]>  NVL(ASM.PAY_NO,0) AND
                                 TMP.TOT_PAY_NO  <![CDATA[<=]]>  NVL(ASM.PAY_NO_END,0)
             LEFT OUTER JOIN (SELECT EMPLE_NO, MAX(PROG_SEQ) NCNT FROM ALOW_DTL_PROGS WHERE ALOW_DT = #{end_dt} GROUP BY EMPLE_NO ) MEM_NC ON MEM_NC.EMPLE_NO = TMP.EMPLE_NO
             LEFT OUTER JOIN (SELECT * FROM ALOW_SET_MST WHERE ALOW_CD = 'T32') ASMT ON ASMT.PROD_CD = TMP.PROD_CD AND MEM_NC.NCNT <![CDATA[>=]]> ASMT.PROG_CNT_STR AND MEM_NC.NCNT <![CDATA[<=]]> ASMT.PROG_CNT_END
             LEFT OUTER JOIN ALOW_SET_MST ASMS ON TMP.PROD_CD = ASMS.PROD_CD AND
                       ASMS.ALOW_CD = 'T33' AND
                       TMP.TOT_PAY_NO  <![CDATA[>=]]>  NVL(ASMS.PAY_NO,0) AND
                       TMP.TOT_PAY_NO  <![CDATA[<=]]>  NVL(ASMS.PAY_NO_END,0) AND
                       TMP.B2B_COMP_CD = ASMS.B2B_COMP AND
                       TMP.SALE_TYPE = ASMS.SALE_TYPE AND
                       TMP.JOIN_DT  <![CDATA[>=]]>  REPLACE(ASMS.PROD_JOIN_DT_STR,'-','')||'01' AND
                       TMP.JOIN_DT  <![CDATA[<=]]>  REPLACE(ASMS.PROD_JOIN_DT_END,'-','')||'99'
        <if test="excel_yn != 'Y'.toString()">
        <include refid="CommonMap.footerPageSql" />
        </if>
    </select>


    <!--
    sql-pay.xml [회원별 수당 관리(회원 개별정보] ID : pay.selectAlowMngForMemInfo 작성자 : 김은진 by 2014.12.22
    -->
    <select id="AlowMap.selectAlowMngForMemInfo" parameterType="map" resultType="resultMap">
        SELECT /* AlowMap.selectAlowMngForMemInfo */
               MPA.ACCNT_NO
             , MB.MEM_NM
             , MPA.join_dt
             , fn_prod_nm(MPA.PROD_CD) PROD_NM
             , MPA.EMPLE_NO
             , fn_emple_nm(MPA.EMPLE_NO) EMPLE_NM
             , fn_dept_nm(D.DEPT_CD) DEPT_NM
             , fn_event(MPA.ACCNT_NO) ACCNT_STAT
             , fn_com_nm('01', MPA.PAY_MTHD) PAY_MTHD_NM
             , CASE WHEN E.OCP_CLUSTER IS NOT NULL THEN fn_com_nm('96',E.OCP_CLUSTER)
                    ELSE fn_com_nm('96',D.OCP_CLUSTER)
                    END OCP_CLUSTER_NM
             , nvl((SELECT max(no) FROM pay_mng WHERE accnt_no = mpa.accnt_no AND del_fg='N'),0) TOT_PAY_NO
             , nvl((SELECT sum(pay_amt) FROM pay_mng WHERE accnt_no = mpa.accnt_no AND del_fg='N'),0) PAY_AMT
             , nvl((SELECT sum(pay_amt) FROM PAY_MNG_DTL WHERE ACCNT_NO = MPA.ACCNT_NO AND DEL_FG = 'N'), 0) ALLT_AMT
             , nvl((SELECT sum(pay_amt) FROM PAY_MNG_DTL1 WHERE ACCNT_NO = MPA.ACCNT_NO AND DEL_FG = 'N'), 0) ADD_AMT
             , nvl(tad.amt,0) PROD_T21
             , nvl(totT21.amt,0) TOT_T21
             , nvl(tad.amt,0)- nvl(totT21.amt,0) EXTR_ALOW_AMT
             , nvl(tad.amt,0) - (nvl(tad.amt,0) - nvl(totT21.amt,0)) AS RT_ALOW_AMT
          FROM mem_prod_accnt mpa
                    JOIN
               member mb ON mpa.mem_no = mb.mem_no AND mb.del_fg='N'
                    JOIN
               employee e ON mpa.emple_no = e.emple_no
                    JOIN
               department d ON e.dept_cd = d.dept_cd
                    LEFT JOIN
               (SELECT ACCNT_NO
                     , PROD_CD
                     , OCP_CLUSTER
                     , sum(AMT)AMT
                  FROM (SELECT MPA.ACCNT_NO
                             , ASM.PROD_CD
                             , ASM.OCP_CLUSTER
                             , ( (PAY_NO_END - PAY_NO +1) * AMT ) AMT
                          FROM mem_prod_accnt mpa JOIN
                               employee e ON mpa.emple_no = e.emple_no JOIN
                               department d ON e.dept_cd = d.dept_cd JOIN ALOW_SET_MST ASM ON alow_cd ='T21'
                                  AND MPA.PROD_CD = ASM.PROD_CD
                                  AND D.OCP_CLUSTER = ASM.OCP_CLUSTER
                                  AND substr(mpa.join_dt,1,4)||'-'||substr(mpa.join_dt,5,2) BETWEEN ASM.PROD_JOIN_DT_STR AND ASM.PROD_JOIN_DT_END
                         WHERE mpa.accnt_no = #{accnt_no}
                         ) t
                 GROUP BY ACCNT_NO
                        , PROD_CD
                        , OCP_CLUSTER
               ) tad ON MPA.ACCNT_NO=TAD.ACCNT_NO
                    LEFT JOIN
               (SELECT accnt_no, sum(amt) amt
                  FROM alow_da_dtl ad
                 WHERE alow_cd='T21'
                   AND accnt_no = #{accnt_no}
                   and dtl_seq = (SELECT max(DTL_SEQ)
                                    FROM ALOW_DA_DTL
                                   WHERE ACCNT_NO=AD.ACCNT_NO
                                     AND alow_cd='T21'
                                     AND ALOW_DT=AD.ALOW_DT)
                 GROUP BY ACCNT_NO
                ) totT21 ON totT21.ACCNT_NO=MPA.ACCNT_NO
         WHERE MPA.DEL_FG ='N'
           AND MPA.ACCNT_NO = #{accnt_no}
    </select>


    <!-- 알선수수료 발생 B2B업체목록 -->
    <select id="AlowMap.getT33B2bCompList" parameterType="map" resultType="resultMap">
    SELECT /* AlowMap.getT33B2bCompList */
           DISTINCT ALOW_B2B_COMP_CD CD
         , B.COM_NM CD_NM
      FROM ALOW_DTL_T33 A
         , B2BCOMCD B
     WHERE A.ALOW_B2B_COMP_CD = B.COM_CD
       AND ALOW_DT = #{alow_dt}
    </select>

    <!-- sql-pay.xml [B2B영업형태 상세조회] ID : pay.selectB2BSaleTypeDtl 작성자 : 김은진 by 2014.07.02 -->
    <select id="AlowMap.selectB2BSaleTypeDtl" parameterType="map" resultType="resultMap">
        SELECT /* AlowMap.selectB2BSaleTypeDtl */
               SM.ST_GRP_CD ST_GRP_CD
             , SD.SALE_TYPE SALETYPE
             , SD.SALE_TYPE
             , fn_com_nm('0125', SD.SALE_TYPE) SALE_TYPE_NM
             , '' AS CHK
             , '' AS TMP
        FROM B2B_SALE_TYPE_MST sm
        JOIN B2B_SALE_TYPE_DTL sd ON sm.st_grp_cd = sd.st_grp_cd
        AND sm.st_grp_cd = #{st_grp_cd}
    </select>

    <!-- sql-task.xml [영업형태 분류 마스터 수정] ID : pay.updateB2BSaleTypeMst 작성자 : 김은진 -->
    <update id="AlowMap.updateB2BSaleTypeMst" parameterType="map">
        UPDATE /* AlowMap.updateB2BSaleTypeMst */
               B2B_SALE_TYPE_MST
           SET st_grp_nm    = #{st_grp_nm}
             , use_yn       = #{use_yn}
             , st_grp_note  = #{st_grp_note}
             , upd_dm       = SYSDATE
             , upd_man      = #{rgsr_id}
         WHERE st_grp_cd    = #{st_grp_cd}
    </update>

    <!-- sql-task.xml [영업형태 분류 상세 일괄삭제] ID : pay.deleteB2BSaleTypeDtl 작성자 : 김은진 -->
    <delete id="AlowMap.deleteB2BSaleTypeDtl" parameterType="map">
        DELETE /* AlowMap.deleteB2BSaleTypeDtl */
          FROM B2B_SALE_TYPE_DTL
         WHERE st_grp_cd = #{st_grp_cd}
    </delete>

    <!-- sql-task.xml [영업형태 분류 상세 중복등록 체크] ID : pay.selectB2BSaleTypeDtlDupleChk 작성자 : 김은진 -->
    <select id="AlowMap.selectB2BSaleTypeDtlDupleChk" parameterType="map" resultType="int">
        SELECT /* AlowMap.selectB2BSaleTypeDtlDupleChk */
               COUNT(sale_type)
          FROM B2B_SALE_TYPE_DTL
         WHERE sale_type = #{sale_type}
    </select>

    <!-- sql-task.xml [영업형태 분류 상세 입력] ID : pay.insertB2BSaleTypeDtl 작성자 : 김은진 -->
    <insert id="AlowMap.insertB2BSaleTypeDtl" parameterType="map">
        INSERT INTO B2B_SALE_TYPE_DTL (
            ST_GRP_CD
            , SALE_TYPE
            , REG_DM
            , REG_MAN
            , UPD_DM
            , UPD_MAN
        )
        SELECT #{st_grp_cd}
             , #{sale_type}
             , SYSDATE
             , #{rgsr_id}
             , SYSDATE
             , #{rgsr_id}
        FROM DUAL
    </insert>

    <!-- sql-task.xml [영업형태 분류 마스터 입력] ID : pay.insertB2BSaleTypeMst 작성자 : 김은진 -->
    <insert id="AlowMap.insertB2BSaleTypeMst" parameterType="map">
        <selectKey keyProperty="pk" resultType="string" order="BEFORE">
        SELECT to_char(nvl(max(seq),0)+1) || '#' || lpad(nvl(MAX(to_number(st_grp_cd)) + 1, '1'), 4, '0') as pk
          FROM  B2B_SALE_TYPE_MST
        </selectKey>
        INSERT /* AlowMap.insertB2BSaleTypeMst */
          INTO B2B_SALE_TYPE_MST (
               SEQ
             , ST_GRP_CD
             , ST_GRP_NM
             , ST_GRP_NOTE
             , USE_YN
             , REG_DM
             , REG_MAN
             , UPD_DM
             , UPD_MAN
        )
        VALUES
        (
              substr(#{pk},1,instr(#{pk},'#')-1)
            , substr(#{pk},instr(#{pk},'#')+1)
            , #{st_grp_nm}
            , #{st_grp_note}
            , #{use_yn}
            , SYSDATE
            , #{rgsr_id}
            , SYSDATE
            , #{rgsr_id}
        )
    </insert>


    <!--
    수당산출 조회
    관련화면 : 수당산출(DL470200.xfdl)
    -->
    <select id="AlowMap.selectMonthAlowList" parameterType="map" resultType="resultMap">
    SELECT /* AlowMap.selectMonthAlowList */
           DEPT_KIND
         , ALOW_DT
         , sum( T21 + T32 + T33) TOT_ALOW_AMT
         , sum( F7 + F11 + F10 + F8 + F12) TOT_REDMP_AMT
         , sum(CUR_PAY_AMT) CUR_PAY_AMT
         , MAX(TOT_ROW_CNT) TOT_ROW_CNT
      FROM (SELECT A.*
             , ALOW_AMT
             , CASE WHEN ALOW_AMT <![CDATA[>=]]> F7 THEN F7
                    WHEN ALOW_AMT <![CDATA[<]]> F7 THEN ALOW_AMT
                    END CUR_REDMP_AMT   /* 당월환수 */
             , CASE WHEN ALOW_AMT <![CDATA[>=]]> F7 THEN 0
                    WHEN ALOW_AMT <![CDATA[<]]> F7 THEN F7 - ALOW_AMT
                    END NEXT_REDMP_AMT   /* 이월환수 */
             , A.ACCNT_NO
             , CUR_PAY_AMT
             , COUNT(*) OVER() TOT_ROW_CNT
          FROM (SELECT tax_rat
                     , need_rat
                     , dept_cd
                     , OCP_CLUSTER
                     , DEPT_KIND
                     , sum(T21) T21
                     , sum(T32) T32
                     , sum(T33) T33
                     , sum(F7) F7
                     , sum(F11) F11
                     , sum(F8) F8
                     , sum(F10) F10
                     , sum(F12) F12
                     , CASE WHEN ( sum(T21) + sum(T32) ) - ( sum(F7) + sum(F11) ) <![CDATA[<=]]> 0 THEN 'F'
                            ELSE 'Y'
                            END chk_rt_tax
                     , ( sum(T21) + sum(T32) ) - ( sum(F7) + sum(F11) ) + sum(T33) - (sum(F10) + sum(F8)) - sum(F12) ALOW_AMT
                     , #{alow_dt} ALOW_DT
                     , ACCNT_NO
                FROM (SELECT mpa.accnt_no
                           , nvl(pm.T21,0) AS T21          /* 모집수당 */
                           , nvl(pm.T32,0) AS T32          /* 누진수당 */
                           , nvl(pm.F7,0) AS F7            /* 환수액 */
                           , nvl(pm.F11,0) AS F11          /* 누진환수 */
                           , 0 AS F8                       /* 해약환수액 */
                           , 0 AS F10                      /* 연체환수액 */
                           , nvl(pm.F12,0) AS F12          /* 이월환수 */
                           , 0 AS T33                      /* 알선수수료 */
                           , nvl(e.tax_rat,0)  tax_rat
                           , nvl(e.need_rat,0) need_rat
                           , e.dept_cd
                           , e.OCP_CLUSTER
                           , e.dept_kind
                        FROM mem_prod_accnt mpa
                        JOIN (SELECT ed.*
                                   , case when nvl(ed.incom_cl,'X') = 'X' then (acd.pay_rat/100)
                                          else
                                                <!--
                                                2018.05.16 김찬영 2018.03월까지는 0.04, 2018.03월 이후는 0.06
                                                case when ed.incom_cl = '0001' then 0.04
                                                     when ed.incom_cl = '0002' then 0.03
                                                     when ed.incom_cl = '0003' then 0
                                                     else 0.9
                                                end
                                                -->
                                                <![CDATA[
                                                         case when (ed.incom_cl = '0001' and #{end_dt} <= '201803') then 0.04
                                                              when (ed.incom_cl = '0001' and #{end_dt} > '201803') then 0.06
                                                              when ed.incom_cl = '0002' then 0.03
                                                              when ed.incom_cl = '0003' then 0
                                                              else 0.9
                                                              end
                                                 ]]>
                                          end tax_Rat
                                   , (acdNeed.pay_rat/100) AS need_rat
                                FROM (SELECT e.emple_no
                                           , e.dept_cd
                                           , e.incom_cl
                                           , d.dept_kind
                                           , case when nvl(e.OCP_CLUSTER,'X') != 'X' then e.OCP_CLUSTER
                                                         else d.OCP_CLUSTER
                                                    end OCP_CLUSTER
                                       FROM employee e JOIN department d ON e.dept_cd = d.dept_cd
                                      WHERE 1=1
                                      <if test="dept_kind != null and dept_kind != ''">
                                        AND D.DEPT_KIND = #{dept_kind}
                                      </if>
                                      <if test="dept_kind == null or dept_kind == ''">
                                        AND D.DEPT_KIND IN ('01', '02')
                                      </if>
                                        ) ed
                                LEFT JOIN (SELECT acd2.pay_rat
                                                , acd2.alow_cd
                                                , acd2.OCP_CLUSTER
                                             FROM ALOW_SET_MST acd2
                                            WHERE acd2.alow_cd = 'F5' /* 소득세 */
                                            ) acd on acd.OCP_CLUSTER = ed.OCP_CLUSTER
                                LEFT JOIN ALOW_SET_MST acdNeed ON acdNeed.alow_cd = 'T23' AND acdNeed.OCP_CLUSTER = ed.OCP_CLUSTER /* 필요경비 */
                                            ) e ON mpa.emple_no = e.emple_no

                        /* 개별 근거 JOIN */
                        JOIN (SELECT accnt_no
                                   , nvl(sum(T21),0) T21
                                   , nvl(sum(F7),0) F7
                                   , nvl(sum(T32),0) T32
                                   , nvl(sum(F11),0) F11
                                   , nvl(sum(F12),0) F12	/* 이월환수 */
                                FROM (SELECT accnt_no
                                           , CASE WHEN alow_cd='T21' THEN nvl(amt,0) ELSE 0 END T21
                                           , CASE WHEN alow_cd='F7' THEN nvl(amt,0) ELSE 0 END F7
                                           , CASE WHEN alow_cd='T32' THEN nvl(amt,0) ELSE 0 END T32
                                           , CASE WHEN alow_cd='F11' THEN nvl(amt,0) ELSE 0 END F11
                                           , CASE WHEN alow_cd='F12' THEN nvl(amt,0) ELSE 0 END F12
                                        FROM (SELECT ACCNT_NO
                                                   , AMT
                                                   , ALOW_CD
                                                   , ALOW_DT
                                                   , NOTE
                                                   , DTL_SEQ
                                                FROM alow_da_dtl ad
                                               WHERE 1=1
                                                  ANd alow_cd not in ('T33','F8','F10') /* 알선수수료, 해약환수액, 연체환수액 */
                                                  AND dtl_seq = (SELECT  max(dtl_seq)
                                                                   FROM ALOW_DA_DTL
                                                                  WHERE ACCNT_NO= AD.ACCNT_NO
                                                                    AND EMPLE_NO=AD.EMPLE_NO
                                                                    AND PAY_NO = AD.PAY_NO
                                                                    AND ALOW_DT=AD.ALOW_DT
                                                                    AND ALOW_CD=AD.ALOW_CD
                                                                    )
                                                   and ( amt > 0 or hist_yn='Y')
                                                  AND alow_dt = #{alow_dt}

                                              ) f
                                     ) tmp
                               GROUP BY accnt_no
                             ) pm ON pm.accnt_no = mpa.accnt_no
                       WHERE mpa.del_fg='N'
                         AND EXISTS (SELECT 'X'
                                FROM pay_mng
                               WHERE DEL_FG='N'
                                 AND pay_amt <![CDATA[>]]> 0
                                 AND ACCNT_NO = mpa.accnt_no
                                 )
                     ) TMP
                 GROUP BY TAX_RAT
                        , NEED_RAT
                        , DEPT_CD
                        , OCP_CLUSTER
                        , DEPT_KIND
                        , ACCNT_NO
                ) A LEFT OUTER JOIN
               (SELECT ACCNT_NO
                        , sum(PAY_AMT) CUR_PAY_AMT
                   FROM PAY_DL_DTL
                  WHERE DL_TYPE = '01' /* 입금마감 */
                    AND PAY_DL_YYYYMM = #{alow_dt}
                  GROUP BY ACCNT_NO
                ) PDD ON PDD.ACCNT_NO = A.ACCNT_NO
            )
     GROUP BY ALOW_DT
            , DEPT_KIND
    </select>

    <!-- B2B업체 수수료 집계 -->
    <select id="AlowMap.selectPayRollAgencySum" parameterType="map" resultType="resultMap">
        SELECT /* AlowMap.selectPayRollAgencySum */
               TBL.ALOW_DT
             , SUM(TBL.amt) AMT                         /* 수수료계 */
             , SUM(TBL.PAY_AMT) PAY_AMT             /* 상조부금 */
             , SUM(TBL.RESN_REDMP_AMT) RESN_REDMP_AMT   /* 해약환수액 */
             , SUM(TBL.OVER_REDMP_AMT) OVER_REDMP_AMT   /* 연체환수액 */
             , SUM(TBL.RESN_REDMP_AMT) + SUM(TBL.OVER_REDMP_AMT) REDMP_AMT
             , SUM(TBL.amt) - (SUM(TBL.RESN_REDMP_AMT) + SUM(TBL.OVER_REDMP_AMT)) REAL_AMT         /* 수수료계 */
             , 'T33' ALOW_CD
        FROM (SELECT ALOW.ALOW_DT
                   , ALOW.ACCNT_NO
                   , ALOW.AMT
                   , ALOW.RESN_REDMP_AMT
                   , ALOW.OVER_REDMP_AMT
                   , PDM.PAY_NO
                   , PDM.PAY_AMT
                   , PDM.LAST_PAY_DAY
                FROM (SELECT B.ALOW_DT
                           , B.ACCNT_NO
                           , B.B2B_COMP_CD
                           , B.PROD_CD
                           , sum(AMT) AMT
                           , sum(RESN_REDMP_AMT) RESN_REDMP_AMT
                           , sum(OVER_REDMP_AMT) OVER_REDMP_AMT
                        FROM (SELECT ALOW_DT
                                   , AMT
                                   , B2B_COMP_CD
                                   , 0 RESN_REDMP_AMT
                                   , 0 OVER_REDMP_AMT
                                   , ACCNT_NO
                                   , PROD_CD
                                  FROM ALOW_DTL_T33 A
                                 WHERE A.ALOW_DT	= #{alow_dt}
                                  <if test="b2b_comp_cd != null and b2b_comp_cd != ''">
                                   AND A.b2b_comp_cd = #{b2b_comp_cd}
                                  </if>
                                  <if test="pay_no != null and pay_no != ''">
                                   AND A.PAY_NO = #{pay_no}
                                  </if>
                              UNION ALL
                              SELECT ALOW_DT
                                   , 0 AMT
                                   , B2B_COMP_CD
                                   , CASE WHEN A.ALOW_CD = 'F8'  THEN AMT ELSE 0 END RESN_REDMP_AMT
                                   , CASE WHEN A.ALOW_CD = 'F10' THEN AMT ELSE 0 END OVER_REDMP_AMT
                                   , ACCNT_NO
                                   , PROD_CD
                                FROM ALOW_DTL_T33_REDMP A
                               WHERE A.alow_dt	= #{alow_dt}
                                  <if test="b2b_comp_cd != null and b2b_comp_cd != ''">
                                   AND A.b2b_comp_cd = #{b2b_comp_cd}
                                  </if>
                                  <if test="pay_no != null and pay_no != ''">
                                   AND A.PAY_NO = #{pay_no}
                                  </if>
                             ) B
                       GROUP BY ALOW_DT
                              , ACCNT_NO
                              , B2B_COMP_CD
                              , PROD_CD
                     ) ALOW INNER JOIN
                     mem_prod_accnt accnt on accnt.accnt_no = alow.accnt_no INNER JOIN
                     member mem on mem.mem_no = accnt.mem_no LEFT OUTER JOIN
                     (SELECT PDM01.ACCNT_NO
                             , PDM01.PAY_NO              /* 부금_회차 */
                             , PDM01.PAY_TOT_AMT         /* 부금_입금액_누계 */
                             , PDM01.LAST_PAY_DAY        /* 최종입금일자 */
                             , SUM(PDD.PAY_AMT) PAY_AMT  /* 부금_입금액 */
                          FROM PAY_DL_MST PDM01 INNER JOIN PAY_DL_DTL PDD ON PDM01.PAY_DL_SEQ = PDD.PAY_DL_SEQ AND PDM01.PAY_DL_YYYYMM = PDD.PAY_DL_YYYYMM AND PDD.DL_TYPE = '01' /* 입금마감 */
                         WHERE PDM01.DL_TYPE = '01' /* 입금마감 */
                           AND PDM01.PAY_DL_YYYYMM = #{alow_dt}
                         GROUP BY PDM01.ACCNT_NO
                                , PDM01.PAY_NO
                                , PDM01.PAY_TOT_AMT
                                , PDM01.LAST_PAY_DAY) PDM ON PDM.ACCNT_NO = ALOW.ACCNT_NO LEFT OUTER JOIN
                     B2BCOMCD b2b on b2b.COM_CD = alow.B2B_COMP_CD INNER JOIN
                     product prod on prod.prod_cd = alow.prod_cd LEFT OUTER JOIN
                     B2B_SALE_TYPE_DTL sd on b2b.sale_type = sd.sale_type
               WHERE 1=1
                <if test="st_grp_cd != null and st_grp_cd != ''">
                 AND sd.st_grp_cd	= #{st_grp_cd}
                </if>
                <if test="sale_type != null and sale_type != ''">
                 AND b2b.sale_type = #{sale_type}
                </if>
             ) TBL
       GROUP BY TBL.ALOW_DT
    </select>

    <!-- 환수코드 채번 -->
    <select id="AlowMap.getNewHcode" parameterType="map" resultType="string">
        SELECT /* AlowMap.getNewHcode */
               to_char(nvl(max(HCODE),0) + 1)
          FROM ALOW_SET_SUB
    </select>

    <!-- 수당마감여부 조회 -->
    <select id="AlowMap.selectAlowMagam" parameterType="map" resultType="resultMap">

        SELECT /* AlowMap.selectAlowMagam */
              COUNT(*) CNT
        FROM ALOW_CLOSE
        WHERE YYMM = #{alow_dt}
          AND SBIT = #{sbit}
          AND CBIT = 'Y'

    </select>

    <!-- 수당/수수료 마감처리 -->
    <insert id="AlowMap.saveAlowMagam" parameterType="map">

        INSERT /* AlowMap.saveAlowMagam */
            INTO ALOW_CLOSE(YYMM, SBIT, CBIT, REG_MAN, REG_DM)
        VALUES(#{alow_dt},
               #{sbit},
               'Y',
               #{reg_man},
               SYSDATE)

    </insert>

    <!-- 입금 마감처리 -->
    <parameterMap id="saveIpendMagam" type="map">
        <parameter property="alow_dt" mode="IN" jdbcType="VARCHAR"  javaType="java.lang.String" />
        <parameter property="reg_man" mode="IN" jdbcType="VARCHAR"  javaType="java.lang.String" />
    </parameterMap>

    <update id="AlowMap.saveIpendMagam" statementType="CALLABLE" parameterMap="saveIpendMagam">
           {call SP_PAY_IPMST(?, ?) }
    </update>

    <!-- 회원별 수당조회 - 수수료/해약&연체환수 팝업 상세 조회 -->
    <select id="AlowMap.selectpopAlowdtllist" parameterType="map" resultType="resultMap">

        SELECT /* AlowMap.selectpopAlowdtllist */
            A.ALOW_DT,
            A.ALOW_CD,
            B.ALOW_NM,
            A.ACCNT_NO,
            FN_MEM_NM(C.MEM_NO) MEM_NM,
            A.PAY_NO,
            A.AMT,
            A.PROD_CD,
            A.B2B_COMP_CD,
            D.COM_NM AS B2B_COMP_NM,
            A.ALOW_B2B_COMP_CD,
            E.COM_NM AS ALOW_B2B_COMP_NM,
            A.SEQ
        <if test="alow_cd == 'T33'">
        FROM ALOW_DTL_T33 A
        </if>
        <if test="alow_cd == 'F8'">
        FROM ALOW_DTL_T33_REDMP A
        </if>
        <if test="alow_cd == 'F10'">
        FROM ALOW_DTL_T33_REDMP A
        </if>
            LEFT OUTER JOIN ALOW_COM_CD B ON A.ALOW_CD = B.ALOW_CD
            LEFT OUTER JOIN MEM_PROD_ACCNT C ON C.ACCNT_NO = A.ACCNT_NO
            LEFT OUTER JOIN B2BCOMCD D ON D.COM_CD = A.B2B_COMP_CD
            LEFT OUTER JOIN B2BCOMCD E ON E.COM_CD = A.ALOW_B2B_COMP_CD
        WHERE A.ALOW_DT = #{alow_dt} AND A.ACCNT_NO = #{accnt_no} AND A.ALOW_CD = #{alow_cd}
    </select>

    <!-- 회원별 수당조회 - 수수료/해약&연체환수 팝업 상세 수정 -->
    <update id="AlowMap.updatepopAlowDtl" parameterType="map">

        UPDATE /* AlowMap.updatepopAlowDtl */
            <if test="alow_cd == 'T33'">
            ALOW_DTL_T33 A
            </if>
            <if test="alow_cd == 'F8'">
            ALOW_DTL_T33_REDMP A
            </if>
            <if test="alow_cd == 'F10'">
            ALOW_DTL_T33_REDMP A
            </if>
           SET PAY_NO  = #{pay_no},
                      AMT = #{amt},
           ALOW_B2B_COMP_CD = #{alow_b2b_comp_cd}
           WHERE ALOW_DT = #{alow_dt}
             AND ACCNT_NO = #{accnt_no}
             AND ALOW_CD = #{alow_cd}
             AND SEQ = #{seq}
    </update>

    <!-- 회원별 수당조회 - 수수료/해약&연체환수 팝업 상세 신규 -->
    <insert id="AlowMap.insertpopAlowDtl" parameterType="map">
        INSERT /* AlowMap.insertpopAlowDtl */
            <if test="alow_cd == 'T33'">
                INTO ALOW_DTL_T33(ALOW_DT, B2B_COMP_CD, ALOW_CD, ACCNT_NO, PAY_NO, AMT, PROD_CD, ALOW_B2B_COMP_CD)
            </if>
            <if test="alow_cd == 'F8'">
                INTO ALOW_DTL_T33_REDMP(ALOW_DT, B2B_COMP_CD, ALOW_CD, ACCNT_NO, PAY_NO, AMT, PROD_CD, ALOW_B2B_COMP_CD, TARGET_ALOW_DT)
            </if>
            <if test="alow_cd == 'F10'">
                INTO ALOW_DTL_T33_REDMP(ALOW_DT, B2B_COMP_CD, ALOW_CD, ACCNT_NO, PAY_NO, AMT, PROD_CD, ALOW_B2B_COMP_CD, TARGET_ALOW_DT)
            </if>
        SELECT #{alow_dt},
               B2B_COMP_CD,
               #{alow_cd},
               #{accnt_no},
               #{pay_no},
               #{amt},
               PROD_CD,
               #{alow_b2b_comp_cd}
                <if test="alow_cd == 'F8'">
                , ' '
                </if>
                <if test="alow_cd == 'F10'">
                , ' '
                </if>
        FROM MEM_PROD_ACCNT
        WHERE ACCNT_NO = #{accnt_no}
          AND DEL_FG = 'N'
    </insert>

    <!-- 회원별 수당조회 - 수수료/해약&연체환수 팝업 상세 삭제 -->
    <delete id="AlowMap.deletepopAlowDtl" parameterType="map">
        UPDATE /* AlowMap.deletepopAlowDtl */
            <if test="alow_cd == 'T33'">
             ALOW_DTL_T33 A
            </if>
            <if test="alow_cd == 'F8'">
             ALOW_DTL_T33_REDMP A
            </if>
            <if test="alow_cd == 'F10'">
             ALOW_DTL_T33_REDMP A
            </if>
         SET PAY_NO = 0,
              AMT = 0
           WHERE ALOW_DT = #{alow_dt}
             AND ACCNT_NO = #{accnt_no}
             AND ALOW_CD = #{alow_cd}
             AND SEQ = #{seq}
    </delete>

    <!-- 회원별 수당조회 - 팝업 수정에 따른 수당상세내역 신규 및 수정 -->
    <update id="AlowMap.alowdaDtlMerge" parameterType="map">

        MERGE /* AlowMap.alowdaDtlMerge */
            INTO ALOW_DA_DTL A
        USING(SELECT ALOW_DT, ACCNT_NO, ALOW_CD, PROD_CD, MAX(PAY_NO) PAY_NO, SUM(AMT) AMT
                <if test="alow_cd == 'T33'">
                FROM ALOW_DTL_T33
                </if>
                <if test="alow_cd == 'F8'">
                FROM ALOW_DTL_T33_REDMP
                </if>
                <if test="alow_cd == 'F10'">
                FROM ALOW_DTL_T33_REDMP
                </if>
              WHERE ALOW_DT = #{alow_dt}
                AND ACCNT_NO = #{accnt_no}
                AND ALOW_CD = #{alow_cd}
              GROUP BY ALOW_DT, ACCNT_NO, ALOW_CD, PROD_CD) B
        ON(A.ALOW_DT = B.ALOW_DT AND A.ACCNT_NO = B.ACCNT_NO AND A.ALOW_CD = B.ALOW_CD)
        WHEN MATCHED THEN
        UPDATE SET PAY_NO = NVL(B.PAY_NO,0),
                   AMT = NVL(B.AMT,0),
                   DTL_SEQ = DTL_SEQ + 1
        WHEN NOT MATCHED THEN
        INSERT(ALOW_DT, EMPLE_NO, ALOW_CD, ACCNT_NO, DTL_SEQ, PAY_NO, AMT, PROD_CD, REG_DM, REG_MAN, HIST_YN)
        VALUES(B.ALOW_DT, #{emple_no}, B.ALOW_CD, B.ACCNT_NO, 1, B.PAY_NO, B.AMT, B.PROD_CD, SYSDATE, #{reg_man}, 'Y')

    </update>

</mapper>

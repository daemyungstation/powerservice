<?xml version="1.0" encoding="utf-8"?>
<FDL version="1.4">
  <TypeDefinition url="..\default_typedef.xml"/>
  <Form id="Comm_ComboMultiSelect_Popup" classname="Comm_ComboMultiSelect_Popup" inheritanceid="" position="absolute 0 0 134 129" titletext="멀티셀렉트콤보 팝업(UserObject_Pop)" onload="Comm_ComboMultiSelect_Popup_onload" onmouseleave="Comm_ComboMultiSelect_Popup_onmouseleave" style="background:#eaeaeaff;" onkeydown="Comm_ComboMultiSelect_Popup_onkeydown">
    <Layouts>
      <Layout>
        <Grid id="Grid00" taborder="0" useinputpanel="false" binddataset="ds_InnerDs" formats="&lt;Formats&gt;&#10;  &lt;Format id=&quot;default&quot;&gt;&#10;    &lt;Columns&gt;&#10;      &lt;Col size=&quot;80&quot;/&gt;&#10;      &lt;Col size=&quot;80&quot;/&gt;&#10;      &lt;Col size=&quot;80&quot;/&gt;&#10;    &lt;/Columns&gt;&#10;    &lt;Rows&gt;&#10;      &lt;Row band=&quot;head&quot; size=&quot;24&quot;/&gt;&#10;      &lt;Row band=&quot;body&quot; size=&quot;24&quot;/&gt;&#10;    &lt;/Rows&gt;&#10;    &lt;Band id=&quot;head&quot;&gt;&#10;      &lt;Cell col=&quot;0&quot; disptype=&quot;normal&quot; text=&quot;_chk&quot;/&gt;&#10;      &lt;Cell col=&quot;1&quot; disptype=&quot;normal&quot; text=&quot;code&quot;/&gt;&#10;      &lt;Cell col=&quot;2&quot; disptype=&quot;normal&quot; text=&quot;name&quot;/&gt;&#10;    &lt;/Band&gt;&#10;    &lt;Band id=&quot;body&quot;&gt;&#10;      &lt;Cell col=&quot;0&quot; disptype=&quot;normal&quot; text=&quot;bind:_chk&quot;/&gt;&#10;      &lt;Cell col=&quot;1&quot; disptype=&quot;normal&quot; text=&quot;bind:code&quot;/&gt;&#10;      &lt;Cell col=&quot;2&quot; disptype=&quot;normal&quot; text=&quot;bind:name&quot;/&gt;&#10;    &lt;/Band&gt;&#10;  &lt;/Format&gt;&#10;&lt;/Formats&gt;&#10;" autofittype="col" style="border:0 none gainsboro ;" scrollbars="autovert" anchor="all" position="absolute 1 1 132 127" positiontype="position" onheadclick="Grid00_onheadclick" oncellclick="Grid00_oncellclick" onkeydown="Grid00_onkeydown" autofitminwidth="50">
          <Formats>
            <Format id="default">
              <Columns>
                <Column size="30"/>
                <Column size="101"/>
              </Columns>
              <Rows>
                <Row size="24" band="head"/>
                <Row size="24"/>
              </Rows>
              <Band id="head">
                <Cell displaytype="checkbox"/>
                <Cell col="1" style="align:center;" text="코드명"/>
              </Band>
              <Band id="body">
                <Cell displaytype="checkbox" edittype="checkbox" style="line: ;" text="bind:_chk"/>
                <Cell col="1" style="align:left;" text="bind:name"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
        <Button id="btn_Close" taborder="1" text="선택" onclick="btn_Close_onclick" anchor="right bottom" position="absolute 2 131 44 149" positiontype="position" visible="false"/>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="ds_InnerDs" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false" cancolumnchange="ds_InnerDs_cancolumnchange">
        <ColumnInfo>
          <Column id="_chk" type="STRING" size="256"/>
          <Column id="code" type="STRING" size="256"/>
          <Column id="name" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
    <Bind/>
    <Script type="xscript4.0"><![CDATA[include "LIB::lib_All.xjs";

var objInnerDs;
var pv_CodeCol;
var pv_DataCol;
var pv_CodeList;
var pv_MaxSelCnt;
var pv_FunctionNm;
// 
// function Comm_ComboMultiSelect_Popup_onload(obj:Form, e:LoadEventInfo)
// {
// // 	trace("objInnerDs::"+objInnerDs);
// // 	trace("pv_CodeCol::"+pv_CodeCol);
// // 	trace("pv_DataCol::"+pv_DataCol);
//  	trace("pv_MaxSelCnt::"+pv_MaxSelCnt);
// //trace(objInnerDs.saveXML());
// 
// //trace("pv_CodeList::"+pv_CodeList);
// 
// 	//if(pv_MaxSelCnt == null) fv_MaxSelCnt = 0;
// 
// 	if(pv_MaxSelCnt != null) {
// 		this.Grid00.setCellProperty("head", 0, "displaytype", "normal");
// 	}
// 	
// 	ds_InnerDs.enableevent = false;
// 	
// 	ds_InnerDs.clearData();
// 	for(var i=0;i<objInnerDs.rowcount;i++)
// 	{
// 		var nRow = ds_InnerDs.addRow();
// 		ds_InnerDs.setColumn(nRow, "code", objInnerDs.getColumn(i, pv_CodeCol));
// 		ds_InnerDs.setColumn(nRow, "name", objInnerDs.getColumn(i, pv_DataCol));
// 	}
// 	
// 	if(gfn_getLength(pv_CodeList) > 0) {
// 		var arrCode = pv_CodeList.split(",");
// 		for(var i=0;i<arrCode.length;i++)
// 		{
// 			var nFRow = ds_InnerDs.findRow("code", arrCode[i]);
// 			
// 			if(nFRow != -1) {
// 				ds_InnerDs.setColumn(nFRow, "_chk", 1);
// 			}
// 		}
// 	}
// 	
// 	ds_InnerDs.rowposition = 0;
// 	
// 	ds_InnerDs.enableevent = true;
// 	
// 	this.Grid00.setFocus();
// }

function fn_init()
{
// 	trace("objInnerDs::"+objInnerDs);
// 	trace("pv_CodeCol::"+pv_CodeCol);
// 	trace("pv_DataCol::"+pv_DataCol);
 	trace("pv_MaxSelCnt::"+pv_MaxSelCnt);
//trace(objInnerDs.saveXML());

//trace("pv_CodeList::"+pv_CodeList);

	//if(pv_MaxSelCnt == null) fv_MaxSelCnt = 0;

	this.Grid00.setCellProperty("head", 0, "text", "");

	if(pv_MaxSelCnt != null) {
		this.Grid00.setCellProperty("head", 0, "displaytype", "normal");
	}
	
	ds_InnerDs.enableevent = false;
	
	ds_InnerDs.clearData();
	for(var i=0;i<objInnerDs.rowcount;i++)
	{
		var nRow = ds_InnerDs.addRow();
		ds_InnerDs.setColumn(nRow, "code", objInnerDs.getColumn(i, pv_CodeCol));
		ds_InnerDs.setColumn(nRow, "name", objInnerDs.getColumn(i, pv_DataCol));
	}
	
	if(gfn_getLength(pv_CodeList) > 0) {
		var arrCode = pv_CodeList.split(",");
		for(var i=0;i<arrCode.length;i++)
		{
			var nFRow = ds_InnerDs.findRow("code", arrCode[i]);
			
			if(nFRow != -1) {
				ds_InnerDs.setColumn(nFRow, "_chk", 1);
			}
		}
	}
	
	ds_InnerDs.rowposition = 0;
	
	ds_InnerDs.enableevent = true;
	
	this.Grid00.redraw();
	this.Grid00.setFocus();
}

function fn_Close()
{
	var nIndex = ds_InnerDs.findRow("_chk", 1);
	var arrList = new Array();
	
	if(nIndex != -1) {
		for(var i=0;i<ds_InnerDs.rowcount;i++)
		{
			if(ds_InnerDs.getColumn(i, "_chk") == 1) {
				if(gfn_getLength(arrList[0]) == 0) {
					arrList[0] = ds_InnerDs.getColumn(i, "code");
					arrList[1] = ds_InnerDs.getColumn(i, "name");
				} else { 
					arrList[0] += "," + ds_InnerDs.getColumn(i, "code");
					arrList[1] += "," + ds_InnerDs.getColumn(i, "name");
				}	
			}
		}
	} else {
		arrList[0] = "";
		arrList[1] = "";
	}
	
	closePopup(arrList);
	
	//close(arrList);
}


function Comm_ComboMultiSelect_Popup_onmouseleave(obj:Form, e:MouseEventInfo)
{
	//fn_Close();
}

function btn_Close_onclick(obj:Button,  e:ClickEventInfo)
{
	fn_Close();
}

function Comm_ComboMultiSelect_Popup_onkeydown(obj:Form, e:KeyEventInfo)
{
	if(e.keycode == 27) {
		close();
	}
}


function Grid00_onheadclick(obj:Grid, e:GridClickEventInfo)
{
	if(e.cell == 0) {
		if(pv_MaxSelCnt == null) {
			gfn_setGridCheckAll(obj, e);
		}	
	}
}

function ds_InnerDs_cancolumnchange(obj:Dataset, e:DSColChangeEventInfo)
{
	if(pv_MaxSelCnt != null) {
		if(e.newvalue == 1) {
			if(this.ds_InnerDs.getCaseCount("_chk==1") >= pv_MaxSelCnt) {
				application.alert("선택가능한 최대갯수는 "+pv_MaxSelCnt+"건 입니다.");
				return false;
			}
		}	
	}
	
	// 체크 선택시 개발자가 정의한 Validation 호출처리
	if(!gfn_isNull(pv_FunctionNm)) {
		//var rtn = opener.fn_callUserFunc(obj, e, pv_FunctionNm);
		var rtn = fn_callUserFunc(obj, e, pv_FunctionNm);
		trace("rtn::"+rtn);
		if(!rtn) return false;
	}
	
	return true;
}


function Grid00_oncellclick(obj:Grid, e:GridClickEventInfo)
{
	if(e.cell == 1) {
		if(this.ds_InnerDs.getColumn(e.row, "_chk") == 1) {
			ds_InnerDs.setColumn(e.row, "_chk", 0);
		} else {
			ds_InnerDs.setColumn(e.row, "_chk", 1);
		}
	}
}

function Grid00_onkeydown(obj:Grid, e:KeyEventInfo)
{
	var objDs = objects[obj.binddataset];
	if(e.keycode == 38) {
		if(objDs.rowposition == 0) closePopup();
	}
}
]]></Script>
  </Form>
</FDL>

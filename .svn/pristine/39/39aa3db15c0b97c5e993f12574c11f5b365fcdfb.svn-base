<?xml version="1.0" encoding="utf-8"?>
<FDL version="1.5">
  <TypeDefinition url="..\default_typedef.xml"/>
  <Form id="srch_prod_pop" classname="srch_prod_pop" inheritanceid="" position="absolute 0 0 505 200" titletext="애큐온 녹취 파일 등록" onload="frm_onload" scrollbars="none">
    <Layouts>
      <Layout>
        <Static id="stc_31" class="sta_popupBg1" enable="false" position="absolute 0 -1 505 197"/>
        <Button id="btn_Close" taborder="4" onclick="btn_close_onclick" class="btn_popupClose" position="absolute 471 8 491 27"/>
        <Static id="stc_30" text="애큐온 녹취 파일 등록" class="sta_popupTitle" transparenthittest="true" position="absolute 10 8 185 28"/>
        <Button id="btn_FileAdd" taborder="6" text="파일추가" onclick="btn_fileControl_onclick" position2="absolute r:142 w:70 t:42 h:20" positiontype="position2" style="align:center middle;font:맑은 고딕,9,bold antialias;"/>
        <Grid id="grd_FileList" taborder="7" binddataset="ds_File" scrollbars="autovert" useinputpanel="false" cellsizingtype="col" autofittype="col" onheadclick="grdFileList_onheadclick" oncelldblclick="grdFileList_oncelldblclick" ondrop="grdFileList_ondrop" position2="absolute l:10 r:9 t:66 b:14" positiontype="position2" tooltiptype="hover" tooltiptext="행(Row)을 더블클릭하시면 건별로 다운로드 가능합니다." dropformat="FILEDROP" style="border:1 solid #c1dbe8ff ;cursor:hand;">
          <Formats>
            <Format id="default">
              <Columns>
                <Column size="30"/>
                <Column size="35"/>
                <Column size="236"/>
                <Column size="136"/>
                <Column size="53"/>
              </Columns>
              <Rows>
                <Row size="22" band="head"/>
                <Row size="20"/>
              </Rows>
              <Band id="head">
                <Cell displaytype="checkbox" style="background2: ;"/>
                <Cell col="1" style="color: ;font:Dotum,8;selectfont:Dotum,8;" text="순번"/>
                <Cell col="2" style="background: ;font:Dotum,8;selectfont:Dotum,8;" text="파일명"/>
                <Cell col="3" style="background2: ;font:Dotum,8;selectfont:Dotum,8;" text="파일크기"/>
                <Cell col="4" displaytype="normal" edittype="none"/>
              </Band>
              <Band id="body">
                <Cell displaytype="checkbox" edittype="checkbox" style="background:#ffffffff;background2:#ffffffff;selectbackground:#ffffff;" text="bind:chk"/>
                <Cell col="1" style="align:center;background:#ffffffff;background2:#ffffffff;color:#315271ff;color2:#315271ff;font:Dotum,8;selectbackground:#ffffffff;selectcolor:#315271ff;selectfont:Dotum,8;" text="expr:currow+1"/>
                <Cell col="2" style="align:left;background:#ffffffff;background2:#ffffffff;color:#315271ff;color2:#315271ff;font:Dotum,8;selectbackground:#ffffffff;selectcolor:#315271ff;selectfont:Dotum,8;" text="bind:fileName"/>
                <Cell col="3" style="align:right;background:#ffffffff;background2:#ffffffff;color:#315271ff;color2:#315271ff;font:Dotum,8;selectbackground:#ffffffff;selectcolor:#315271ff;selectfont:Dotum,8;" text="expr:Math.round(fileSize / 1024, 0).toLocaleString() + ' KB'"/>
                <Cell col="4" displaytype="expr:gfn_isNull(atchSeq)?'normal':'button'" edittype="expr:gfn_isNull(atchSeq)?'normal':'button'" text="다운" expr="expr:gfn_isNull(atchSeq)?'':'다운'"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
        <Button id="btn_FileDownLoad" taborder="8" text="파일다운" onclick="btn_fileControl_onclick" visible="false" position="absolute 146 43 216 63" style="padding:0 0 0 0; align:center middle; font:Dotum,8; "/>
        <ProgressBar id="prg_output" taborder="9" max="100" min="0" position2="absolute l:0 r:0 b:4 h:10" positiontype="position2"/>
        <Static id="stc_17" text="첨부파일" class="sta_workTitle2" position="absolute 10 46 84 66"/>
        <Button id="btn_FileUpload" taborder="10" text="저장" onclick="btn_fileControl_onclick" position2="absolute r:76 w:63 t:42 h:21" positiontype="position2"/>
        <FileDownload id="FileDownload00" taborder="11" retry="0" onload="FileDownload00_onload" text="FileDownload00" wordwrap="none" visible="false" position="absolute 30 149 140 170"/>
        <Button id="btn_close" taborder="12" text="닫기" onclick="btn_close_onclick" position2="absolute r:9 w:63 t:42 h:21" positiontype="position2"/>
        <Button id="btn_FileDel" taborder="13" text="삭제" onclick="btn_fileControl_onclick" visible="false" position2="absolute r:215 w:70 t:42 h:20" positiontype="position2" style="padding:0 0 0 0;align:center middle;font:맑은 고딕,9,bold antialias;"/>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="ds_File" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="filePath" type="STRING" size="256"/>
          <Column id="fileName" type="STRING" size="256"/>
          <Column id="fileSize" type="STRING" size="256"/>
          <Column id="fileUploadYN" type="STRING" size="256"/>
          <Column id="fileSaveNm" type="STRING" size="256"/>
          <Column id="chk" type="STRING" size="256"/>
          <Column id="atchNo" type="STRING" size="256"/>
          <Column id="atchSeq" type="STRING" size="256"/>
          <Column id="fileType" type="STRING" size="256"/>
          <Column id="file_id" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_DelFile" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="ATCH_NO" type="STRING" size="256"/>
          <Column id="ATCH_SEQ" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <FileDialog id="fd_file" filter="All(*.*)|*.*|" filterindex="0" defaultextention="false"/>
    </Objects>
    <Script type="xscript4.0"><![CDATA[/********************************************************************************************/
/* 1. Include Library include, variables Declaration 영역                                  */
/********************************************************************************************/
include "LIB::lib_All.xjs";

var fv_WorkMode = "UPLOAD";  	// UPLOAD(업로드), SINGLEDOWN(1건 다운로드), MULTIDOWN(멀티다운로드)
var fv_sUploadYn = "D"; 		//U:FileUpload, D:FileDownload
var fv_svcPath;
var arrFiles = new Array();	// FileDialog 선택을 통한 File Array
var fv_sdate                //  파일업로드일자
var fv_uploadResult = true;
/********************************************************************************************/
/* 2. Form 관련(onload 및 Form 이벤트) 처리                                           	*/
/********************************************************************************************/

function frm_onload(obj:Form, e:LoadEventInfo)
{
	fv_svcPath = gfn_getServiceUrl("fileUrl");
	fv_sdate   = p_sdate;
	
	//fv_svcPath = application.services["fileUrl"].url;
	
	
	fn_InitForm();
}


//폼 초기화
function fn_InitForm()
{

	try {
		if ( true === useUpload ) {
			fv_sUploadYn = "U";
		}
	} catch (ex) {
		//
	}

    //화면 조정
    fn_btnControl();

}



/********************************************************************************************/
/**   6. 사용자 함수                                                                   	*/
/********************************************************************************************/

//첨부파일 선택추가
function gfn_FileAdd(sMultiGubun, sFilter)
{
	var sFilterType, sFilePath, sFileName, nFileSize, nRow, objContents;
	
	if (gfn_isNull(sFilter)) {
		sFilterType = "All (*.*)|*.*";
	} else {
		sFilterType = sFilter;
	}

	sMultiGubun = gfn_isNull(sMultiGubun) ? "MULTI_UPLOAD" : sMultiGubun;

 	fileDialog = objects["fileDialog"];
 	if (fileDialog == null) {
		fileDialog = new FileDialog();
	}
	fileDialog.defaultextention = true;
	fileDialog.filter = sFilterType;
	
	var vFile 
	if (sMultiGubun == "UNI_UPLOAD") {
        vFile = fileDialog.open("파일 추가", FileDialog.LOAD);
        
        if (!vFile) return;	//파일을 선택하지 않은 경우
        
        var nIdx = 0;
        var nSeq;
        var nArrIdx = arrFiles.length;
        
        nRow = ds_File.findRow("fileName", vFile.filename);
        
        if (nRow > -1) {
            application.alert("중복되는 파일명이 있습니다.\nFile Name : " + vFile.filename);
        } else {
            arrFiles[nArrIdx] = vFile;	       // 파일 배열 생성
            nArrIdx++;                                 // 파일 배열 인덱스 증가
            vFile.open(VirtualFile.openRead| VirtualFile.openBinary);
            sFilePath = vFile.path;
            sFileName = vFile.filename;
            nFileSize = vFile.getFileSize();
            //objContents = vFile.read(nFileSize);   //blob로 등록시
            vFile.close();
            
            var nRowCnt = ds_File.getRowCount();
            nSeq = ds_File.addRow();
            
            ds_File.setColumn(nSeq, "chk", 0);
            
            ds_File.setColumn(nSeq, "filePath", sFilePath);
            ds_File.setColumn(nSeq, "fileName", sFileName);
            ds_File.setColumn(nSeq, "fileSize", nFileSize);	
            ds_File.setColumn(nSeq, "fileUploadYN", "N");	     //업로드여부
        }
	}
	else {
        arrFileList = fileDialog.open("파일 추가", FileDialog.MULTILOAD);

        if (!arrFileList) return;	//파일을 선택하지 않은 경우
        
        var nIdx = 0;
        var nSeq;
        
        var nArrIdx = arrFiles.length;
        
        for (var i=0; i<arrFileList.length; i++) {
            nRow = ds_File.findRow("fileName", arrFileList[i].filename);
            
            if (nRow > -1) {
                application.alert("중복되는 파일명이 있습니다.\nFile Name : " + arrFileList[i].filename);
            } else {
                arrFiles[nArrIdx] = arrFileList[i];	       // 파일 배열 생성
                nArrIdx++;                                 // 파일 배열 인덱스 증가
                arrFileList[i].open(VirtualFile.openRead| VirtualFile.openBinary);
                sFilePath = arrFileList[i].path;
                sFileName = arrFileList[i].filename;
                nFileSize = arrFileList[i].getFileSize();
                //objContents = arrFileList[i].read(nFileSize);   //blob로 등록시
                arrFileList[i].close();
                
                var nRowCnt = ds_File.getRowCount();
                nSeq = ds_File.addRow();
                
                ds_File.setColumn(nSeq, "chk", 0);                
                ds_File.setColumn(nSeq, "filePath", sFilePath);
                ds_File.setColumn(nSeq, "fileName", sFileName);
                ds_File.setColumn(nSeq, "fileSize", nFileSize);	
                ds_File.setColumn(nSeq, "fileUploadYN", "N");	     //업로드여부	
                //ds_File.setColumn(nSeq, "UP_FILE"  , objContents);  //blob로 등록시
            }
        }
	}
	
}

function fn_FileUpload(sSizeLimit)
{
	var bResult;
	var sAttBdlNo = "";
	var nSeq = 0;
	var nFileSize:int = 0;
	var nTotalFileSize:int = 0;
	var sSizeLimitYN = "";
	
	for (var k = 0; k < ds_File.rowcount; k++) {
		nFileSize = ds_File.getColumn(k, "fileSize");
		nTotalFileSize += nFileSize;
	}
	
	if(gfn_isNull(sSizeLimit)) {
		sSizeLimitYN = "Y";
	} else {
		sSizeLimitYN = sSizeLimit;
	}
	
	if (sSizeLimitYN == "Y") {
		// 5M 이상의 첨부파일은 제한함
		if (nTotalFileSize > 5242880) { // 5 * 1024 * 1024 = 5M
			//application.alert("총 5120KB 이상의 파일은 첨부할 수 없습니다.\n첨부파일의 용량이나 수를 줄여주세요.\n\n" +
			//	  "현재 첨부파일의 용량은 [ " + Math.round(nTotalFileSize / 1024) + "KB ] 입니다.");
			//return false;
		}
		
		// 1M 이상의 첨부파일은 경고메시지 출력후 전송
		if (nTotalFileSize > 1048576) { // 1 * 1024 * 1024 = 1M
			bResult = confirm("총 1024KB 이상의 대용량 파일 전송시에는\n전송시간이 다소 오래 걸릴 수 있습니다.\n" +
				    "현재 첨부파일의 용량은 [ " + Math.round(nTotalFileSize / 1024) + "KB ] 입니다.\n\n" +
				    "계속 진행하시겠습니까?\n");
				    
			if (bResult == false) {
				return false;
			}
		}		
	}
	sWorkMode = "UPLOAD";
	
 	//httpObjectInput = objects("httpObject");
 	httpObjectInput = objects["httpObject"];

 	if (httpObjectInput == null) {
		httpObjectInput = new HttpObject();
		httpObjectInput.onstatus.setHandler(HttpObject_onstatus);
		httpObjectInput.onload.setHandler(gfn_httpObject_onload);
	}
	
	// httpObjectInput.timeout = 180;
	fv_uploadResult = true;
	for (var i = 0; i < arrFiles.length; i++) {
		nRow = ds_File.findRow("fileName", arrFiles[i].filename);
		if (nRow > -1) {
            if (ds_File.getColumn(nRow, "fileUploadYN") != "Y") {
				// bResult = httpObjectInput.upload(fv_svcPath +"file/insert/test_rltnItemId", FileDialog.LOAD, arrFiles[i], false);
				bResult = httpObjectInput.upload(fv_svcPath +"acn/uploadAcnRecFile?sdate="+fv_sdate, FileDialog.LOAD, arrFiles[i], false);

				if(bResult == false) {
					fv_uploadResult = false;
					return false;
				}
			}
		}
	}
	
	if (fv_uploadResult == true) {
	 alert("저장완료");
	}
	return true;
}

function fn_fileDownload()
{
	if(fv_WorkMode == "MULTIDOWN") {
		if(ds_File.rowcount == 0){
			application.alert("다운로드할 파일이 없습니다.");
			return false;
		}
	}
    
 	objHtpInput = objects["httpObject"];
 	if (objHtpInput == null) {
		objHtpInput = new HttpObject();
		objHtpInput.onload.setHandler(HttpObject_onload);
	} 
	
 	fileDialog = objects["fileDialog"];
 	if (fileDialog == null) {
		fileDialog = new FileDialog();
		//httpObjectDown.onload.setHandler(gfn_httpObject_onload);
		objHtpInput.onload.setHandler(HttpObject_onload);
	} 

	var sPath = fileDialog.open("FileOpen", FileDialog.SELFOLDER,"%MYDOCUMENT%");

	if(fv_WorkMode == "MULTIDOWN") {
		if(!gfn_isNull(sPath))
		{
			for(var i=0;i<ds_File.rowcount;i++)
			{			
				if(ds_File.getColumn(i, "chk") == 1) {
					var sFile 	= sPath+"\\"+ ds_File.getColumn(i, "fileName");
					var sFileId = ds_File.getColumn(i, "atchSeq");
					
					var vFile_down = new VirtualFile;
					vFile_down.open(sFile, VirtualFile.openWrite);
					
					fv_svcPath = application.services["fileUrl"].url +"fileControll/fileDownload.jsp";
					var rtn = httpObjectInput.download(fv_svcPath + "?file="+ds_File.getColumn(i, "fileName"), vFile_down, false);				
				}
				
				//FileDown컴포넌트를 이용한 다운로드
		// 		FileDownload00.downloadfilename = ds_File.getColumn(i, "fileName");			
		// 		FileDownload00.downloadurl = fv_svcPath +"fileControll/fileDownload.jsp?file="+ds_File.getColumn(i, "fileName");
		// 		var bSucc = FileDownload00.download();
		// 		//var bSucc = FileDownload00.download(fv_svcPath +"fileControll/fileDownload.jsp?file="+ds_File.getColumn(i, "fileName"));
	
			
			}
			if(rtn) alert("선택하신 파일이 저장되었습니다.");
		}	
	} else if(fv_WorkMode == "SINGLEDOWN") {
		var sFileName 	= sPath+"\\"+ ds_File.getColumn(ds_File.rowposition, "fileName");
		
		var vFile = new VirtualFile;
		vFile.open(sFileName, VirtualFile.openWrite);
		//var rtn = httpObjectDown.download(gfn_getFileDownloadUrl() + "?fileId="+sFileId+"&UUID="+UUID, vFile, false);
		//var rtn = objHtpInput.download(fv_svcPath + "fileControll/fileDownload.jsp?file="+sFileName, vFile, false);

		//fv_svcPath = application.services["fileUrl"].url +"/upload/"+ ds_File.getColumn(ds_File.rowposition, "fileName");
		//var bSucc = objHtpInput.download(fv_svcPath, vFile, true);
		//fv_svcPath = application.services["fileUrl"].url +"file/download?file_id="+ ds_File.getColumn(ds_File.rowposition, "file_id");
		
		var bSucc = objHtpInput.download(fv_svcPath + "file/download?file_id="+ ds_File.getColumn(ds_File.rowposition, "file_id"), vFile, true);
	}	
}

//화면의 성격이 FileUpload이면 모든 버튼이 보이고, 
//그렇지 않으면 DownLoad용 버튼만 보인다. 
function fn_btnControl() 
{
    switch (fv_sUploadYn)
    {
        case "D":  //조회 화면이면            
            btn_FileAdd.visible 	= false;
            btn_FileDel.visible 	= false;
            btn_FileUpload.visible 	= false;
            break;
        case "U":  //등록화면 이면            
            btn_FileAdd.visible 	= true;
            //btn_FileDel.visible 	= true;
            btn_FileUpload.visible 	= true;
            break;
        default :    //옵션이 안들어 오면            
            this.close();
            break;
     }
}

function fn_Retrieve(divPrgm){

	trace('  첨부파일 처리후 등록/삭제/조회  tran ......'+ divPrgm);
	
	//첨부파일 데이타셋 : ds_File 
	//등록/삭제/조회 처리후 콜백 함수 fn_TrCallBack() 처리한다.
	
	//등록 transaction 호출	
	if (divPrgm =="Save"){
		trace("File 등록 결과 => " + ds_File.saveXML());
	
	//삭제 transaction 호출
	}else if (divPrgm =="Delete"){
	
	
	//조회 transaction 호출
	}else if (divPrgm =="Search"){

	}
}

/********************************************************************************************/
/**   7. 이벤트(Event) Function                                                          	*/
/********************************************************************************************/

function btn_fileControl_onclick(obj:Button,  e:ClickEventInfo)
{
	//파일첨부
	if (obj ==btn_FileAdd) {
		gfn_FileAdd("MULTI_UPLOAD");    	//멀티 : MULTI_UPLOAD, 단일 : UNI_UPLOAD

	//파일삭제
	}else if (obj==btn_FileDel){

		if (gfn_FileDel() == false) {    //dataset에 삭제처리
			return;
		}
		
		//삭제 transaction 호출
		fn_Retrieve("Delete");
	
	//파일다운로드-여러건
	}else if (obj==btn_FileDownLoad){

		fv_WorkMode = "MULTIDOWN";
		fn_fileDownload();
	
	//파일업로드
	}else if (obj==btn_FileUpload){
		fn_saveFileUpload();
	}
}


//파일업로드
function fn_saveFileUpload()
{
    var nChkCnt = 0;
    for(var i=0; i<ds_File.getRowCount(); i++) {
        if(ds_File.getRowType(i) == 2){
            nChkCnt++;
        }
    }
    
    if(nChkCnt == 0){
        application.alert("저장할 파일이 없습니다.");
        return false;
    }

    if (fn_FileUpload() == false) {    //파일업로드
        return;
    }
    
	//등록 transaction 호출
    fn_Retrieve("Save");

   return;
}


//파일다운로드-그리드 더블클릭
function grdFileList_oncelldblclick(obj:Grid, e:GridClickEventInfo)
{
	var nRow = obj.getDatasetRow(e.row);

	//정상적인 파일 업로드후 재조회tran 후 atchSeq 이 값이 없으면 다운로드 할 수 없게 처리 
	//if ( !gfn_isNull(ds_File.getColumn(nRow, "atchSeq")) ) {
		fv_WorkMode = "SINGLEDOWN";
		//var sSaveFlNm = ds_File.getColumn(nRow, "fileSaveNm");
		var sFileId = ds_File.getColumn(nRow, "file_id");
		var sFileName = ds_File.getColumn(nRow, "fileName");
		
		trace("그리드 단일 파일 다운로드 file_id => " + ds_File.getColumn(nRow, "file_id"));
		
		fn_fileDownload(fv_WorkMode, sFileId, sFileName);
	//}
}



/*  파일업로드 완료이벤트  */
function HttpObject_onload(obj:HttpObject, e:HttpObjLoadEventInfo)
{
	trace("HttpObject onload()    e.errormsg:: " + e.errormsg + " : " + e.errorcode);
	//prg_output.pos =0;
}

/*  파일업로드/다운로드 진행정보 표시  */
function HttpObject_onstatus(obj:HttpObject, e:HttpObjStatusEventInfo)
{
	//trace('파일업로드 성공 !! ');
	prg_output.pos = e.status;
}

/*  파일업로드 완료이벤트  */
function FileDownload00_onload(obj:FileDownload,  e:FileDownloadLoadEventInfo)
{
	//alert("다운로드 성공");
}

/*  파일업로드/다운로드 진행정보 표시  */
function httpObjectInput_onstatus(obj:HttpObject, e:HttpObjStatusEventInfo)
{
	prg_output.pos = e.status;	
}


/*  파일업로드 완료이벤트  */
function gfn_httpObject_onload(obj:HttpObject, e:HttpObjLoadEventInfo) 
{
	trace("----------------------- gfn_httpObject_onload : errorcode = " + e.errorcode + "\t" + "errormsg = " + e.errormsg);

	if (e.errorcode == 0) {
		if (sWorkMode == "UPLOAD") {
            ds_File.setColumn(nRow, "fileUploadYN", "Y");
			ds_File.setColumn(nRow, "file_id", e.errormsg);
			trace("파일 업로드 후 e.errormsg => " + e.errormsg);
		} 
		else if (sWorkMode == "UNI_DOWN") {
			if (confirm("다운받은 파일을 실행하시겠습니까?")) {
				//system.execShell(objVFile.fullpath);
                var objExtCommon = new ExtCommon();
                var rtn = objExtCommon.executeProcess(objVFile.fullpath, "", "")				
			}
		}
	} else if (e.errorcode < 0) {
		if (sWorkMode == "UPLOAD") {
			application.alert("첨부파일 업로드가 실패했습니다.");
		} else {
			application.alert("첨부파일 다운로드가 실패했습니다.");
		}
	}
}

//그리드 All Check
function grdFileList_onheadclick(obj:Grid, e:GridClickEventInfo)
{
	if(e.cell == 0) {
		if (ds_File.rowcount > 0)
			gfn_setGridCheckAll(obj, e);
	}	
}

//Drop하여 파일추가
function grdFileList_ondrop(obj:Grid, e:GridDragEventInfo)
{
	var objDataObj = new DragDataObject(); 
	var arrbuff = e.dragdata.getData(DragDataFormats.FILEDROP);
	var sFileNm, nRow;
	
	for(var i=0; i<arrbuff.length; i++)
	{	
		var fileArr = arrbuff[i].split("\\");
		
		fn_addDupCheck(fileArr[fileArr.length-1], arrbuff[i]);
	}
}

function fn_addDupCheck(sFileNm, sFilePath)
{
	var nRow = ds_File.findRow("fileName", sFileNm );
	if( nRow >= 0 )
	 {
		alert("동일한 이름의 파일이 있습니다.");
		return;
	 }
	
	nRow = ds_File.addRow();

	var fileArr = sFilePath.split("\\");
	ds_File.setColumn(nRow, "chk", 0);   
	ds_File.setColumn(nRow,"filePath",sFilePath);
	ds_File.setColumn(nRow,"fileName",sFileNm);
	ds_File.setColumn(nRow, "fileUploadYN", "N");	     //업로드여부
	
	var docPath = system.convertRealPath("%MYDOCUMENT%");
	
	var nFileSize;
	var filelist;
	
	if(sFilePath.indexOf(docPath) != -1)
	{
		//VirtualFile 객체 리턴
		filelist = new VirtualFile(sFilePath, VirtualFile.openRead | VirtualFile.openText);
		filelist.open(sFilePath.replace(docPath,""), filelist.openRead | filelist.openText );
		nFileSize = filelist.getFileSize();
		//filelist.close();
	}else{
		// Application의 filesecurelevel 속성 값이 'all'인 경우는 절대경로를 허용
		filelist = new VirtualFile(sFilePath, VirtualFile.openRead | VirtualFile.openText);
		//nFileSize = "Not in Document Folder.";
		//filelist.open(sFilePath, filelist.openRead | filelist.openText );
		nFileSize = filelist.getFileSize();
	}
	
	ds_File.setColumn(nRow, "fileSize", nFileSize);	

}
                

/************************************************************************************************
 * 각 COMPONENT 별 EVENT 영역
************************************************************************************************/

//닫기
function btn_Close_onclick(obj:Button,  e:ClickEventInfo)
{
	var arrResult = new Array();
	if (fv_sUploadYn = "U") {
		//arrResult[0] = edt_AtchNo.value;         //관리번호
		arrResult[1] = ds_File.getRowCount();    //저장된 파일 수
		
		var FileNames = "";
		for (i = 0; i < ds_File.getRowCount(); i++) {
			if (i > 0) {
				FileNames = FileNames + ",";
			}
			FileNames = FileNames + ds_File.getColumn(i, "fileName");
		}
		arrResult[2] = FileNames;                //저장된 파일명 리스트
	}
	else {
        arrResult[0] = "";
	}
    this.close(arrResult);
}



//처리전 체크
function fn_preRetrieve(argFuncId)
{
	switch (argFuncId) 
	{
        case "Search" : // 조회
//             if (gfn_isNull(edt_AtchNo.value) && fv_sUploadYn == "D") {
//                 gfn_Msg("CSMA0008","관리번호를"); //&ITEM1 확인하세요 &ITEM2                
//                 edt_AtchNo.setFocus();
//                 return false;  
//             }
            break;
 	}
	return true;
}

//후처리 함수 
function fn_TrCallBack(sSvcId, nErrorCode, sErrorMsg) 
{
	if (nErrorCode != 0) {
		return;
	}

    switch (sSvcId)
    {
        case "selectUploadFile":  //조회후처리 작업내용기술  
			//trace(ds_File.saveXML());
            trace("조회완료");
            break;
        case "saveUploadFile":  //조회후처리 작업내용기술            
            trace("저장완료");
            //edt_AtchNo.value = ds_File.getColumn(0, "atchNo");
            fn_Retrieve("Search");
            break;
         case "deleteUploadFile":  //조회후처리 작업내용기술            
            trace("삭제완료");
            break;
     }
}

function btn_close_onclick(obj:Button,  e:ClickEventInfo)
{
	close();
}
]]></Script>
  </Form>
</FDL>

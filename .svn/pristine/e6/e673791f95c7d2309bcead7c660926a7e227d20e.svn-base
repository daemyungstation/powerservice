<?xml version="1.0" encoding="utf-8"?>
<FDL version="1.5">
  <TypeDefinition url="..\default_typedef.xml"/>
  <Form id="PS020302" classname="PS020302" inheritanceid="" position="absolute 0 0 806 456" titletext="해약 등록" scrollbars="none" onload="PS020302_onload">
    <Layouts>
      <Layout>
        <Static id="stc_31" enable="false" position="absolute 0 0 806 456" class="sta_popupBg1"/>
        <Button id="btn_close" taborder="3" onclick="btn_onclick" class="btn_popupClose" position="absolute 764 8 784 27"/>
        <Static id="stc_30" text="해약 등록" class="sta_popupTitle" transparenthittest="true" position="absolute 10 8 363 28"/>
        <Static id="stc_25" text="해약 회원 정보" class="sta_workTitle2" position="absolute 11 46 128 66"/>
        <Static id="sta_GrayLine" class="sta_WF_Line1" position="absolute 10 66 791 67"/>
        <Static id="stc_13" text="해약방법" class="sta_workLabel1" position="absolute 10 67 95 93" style="font:Dotum,8;" validate=""/>
        <Static id="stc_20" class="sta_workData" position="absolute 94 67 791 93"/>
        <Static id="stc_memNm" text="회원번호" class="sta_workLabel1" position="absolute 209 67 294 93" validate=""/>
        <Edit id="edt_accnt_no" taborder="5" tabstop="false" position="absolute 296 70 384 90" readonly="false" onkeyup="edt_onkeydown"/>
        <Static id="stc_73" text="회원이름" class="sta_workLabel1" position="absolute 408 67 493 93" validate=""/>
        <Static id="stc_00" text="가입일자" class="sta_workLabel1" position="absolute 10 92 95 118" style="font:Dotum,8;" validate=""/>
        <Static id="stc_01" class="sta_workData" position="absolute 94 92 791 118"/>
        <Edit id="edt_mem_nm" taborder="8" tabstop="false" position="absolute 495 70 600 90" readonly="false" onkeyup="edt_onkeydown"/>
        <Static id="stc_memNm00" text="전화번호" class="sta_workLabel1" position="absolute 209 92 294 118" validate=""/>
        <Edit id="edt_home_tel" taborder="9" tabstop="false" position="absolute 296 95 401 115" class="edt_clssEnable" readonly="true"/>
        <Static id="stc_04" text="해약 정보" class="sta_workTitle2" position="absolute 11 128 308 148"/>
        <Static id="sta_GrayLine00" class="sta_WF_Line1" position="absolute 10 148 791 149"/>
        <Static id="stc_05" text="해약접수일" class="sta_workLabel1" position="absolute 10 149 95 175" style="font:Dotum,8;" validate=""/>
        <Static id="stc_06" class="sta_workData" position="absolute 94 149 791 175"/>
        <Static id="stc_memNm01" text="관계" class="sta_workLabel1" position="absolute 209 149 294 175" validate=""/>
        <Edit id="edt_new_chan_gunsu" taborder="13" tabstop="false" position="absolute 495 152 564 172" class="edt_clssEnable" readonly="true" style="align:center middle;"/>
        <Static id="stc_08" text="대체" class="sta_workLabel1" position="absolute 408 149 493 175" validate=""/>
        <Static id="stc_09" text="상조부금" class="sta_workLabel1" position="absolute 10 174 95 200" style="font:Dotum,8;" validate=""/>
        <Static id="stc_10" class="sta_workData" position="absolute 94 174 791 200"/>
        <Edit id="edt_pay_amt1" taborder="16" tabstop="false" position="absolute 97 177 207 197" class="edt_clssEnable" readonly="true" style="align:right middle;"/>
        <Static id="stc_memNm02" text="할부원금" class="sta_workLabel1" position="absolute 209 174 294 200" validate=""/>
        <Edit id="edt_pay_amt2" taborder="17" tabstop="false" position="absolute 296 177 406 197" readonly="true" class="edt_clssEnable" style="align:right middle;"/>
        <Static id="stc_12" text="추가부담금" class="sta_workLabel1" position="absolute 408 174 493 200" validate=""/>
        <Static id="stc_14" text="해약자" class="sta_workLabel1" position="absolute 10 199 95 225" style="font:Dotum,8;" validate=""/>
        <Static id="stc_15" class="sta_workData" position="absolute 94 199 791 225"/>
        <Static id="stc_memNm03" text="해약금" class="sta_workLabel1" position="absolute 209 199 294 225" validate=""/>
        <Edit id="edt_resn_amt" taborder="21" tabstop="false" position="absolute 296 202 406 222" class="edt_clssEnable" readonly="true" style="align:right middle;"/>
        <Static id="stc_17" text="가수금" class="sta_workLabel1" position="absolute 408 199 493 225" validate=""/>
        <Static id="stc_18" text="전화번호" class="sta_workLabel1" position="absolute 10 224 95 250" style="font:Dotum,8;" validate=""/>
        <Static id="stc_19" class="sta_workData" position="absolute 94 224 791 250"/>
        <Edit id="edt_tel_no" taborder="24" tabstop="false" position="absolute 97 227 207 247"/>
        <Static id="stc_memNm04" text="D/C금" class="sta_workLabel1" position="absolute 209 224 294 250" validate=""/>
        <Static id="stc_22" text="생년월일" class="sta_workLabel1" position="absolute 408 224 493 250" validate=""/>
        <Static id="stc_23" text="실지급금액" class="sta_workLabel1" position="absolute 10 249 95 275" style="font:Dotum,8;" validate=""/>
        <Static id="stc_24" class="sta_workData" position="absolute 94 249 791 275"/>
        <Edit id="edt_resn_pay_amt" taborder="28" tabstop="false" position="absolute 97 252 207 272" onkeydown="edt_onkeydown" style="align:right middle;font:Dotum,9,bold;"/>
        <Static id="stc_memNm05" text="환급금정산" class="sta_workLabel1" position="absolute 408 249 493 275" validate=""/>
        <Static id="stc_27" text="해약수입금" class="sta_workLabel1" position="absolute 582 249 667 275" validate=""/>
        <Static id="stc_txt_bank" text="은행명" class="sta_workLabel1" position="absolute 10 274 95 300" style="font:Dotum,8;" validate=""/>
        <Static id="stc_29" class="sta_workData" position="absolute 94 274 791 300"/>
        <Edit id="edt_bank_cd" taborder="32" tabstop="false" position="absolute 97 277 137 297" style="align:center middle;"/>
        <Static id="stc_txt_accnt" text="계좌번호" class="sta_workLabel1" position="absolute 408 274 493 300" validate=""/>
        <Static id="stc_txt_depr" text="예금주" class="sta_workLabel1" position="absolute 10 299 95 325" style="font:Dotum,8;" validate=""/>
        <Static id="stc_35" class="sta_workData" position="absolute 94 299 791 325"/>
        <Edit id="edt_depr" taborder="36" tabstop="false" position="absolute 97 302 207 322" lengthunit="ascii" maxlength="24"/>
        <Static id="stc_memNm07" class="sta_workLabel1" position="absolute 209 299 294 325" validate="" text="해약처리일"/>
        <Static id="stc_38" text="접수방법" class="sta_workLabel1" position="absolute 10 324 95 350" style="font:Dotum,8;" validate=""/>
        <Static id="stc_39" class="sta_workData" position="absolute 94 324 791 350"/>
        <Static id="stc_memNm08" text="비고" class="sta_workLabel1" position="absolute 209 324 294 350" validate=""/>
        <Static id="stc_42" text="회사사유" class="sta_workLabel1" position="absolute 832 349 917 375" style="font:Dotum,8;" validate="" visible="false"/>
        <Static id="stc_43" class="sta_workData" position="absolute 94 349 791 375"/>
        <Static id="stc_memNm09" text="고객사유" class="sta_workLabel1" position="absolute 10 349 95 375" validate=""/>
        <Button id="btn_save" taborder="52" style="border:0 none #000000ff ;padding:0 0 0 0;" anchor="default" position="absolute 493 43 565 63" positiontype="position" onclick="btn_onclick" class="btn_WF_Save"/>
        <Button id="btn_resn_canc" taborder="53" visible="true" style="border:0 none #000000ff ;padding:0 0 0 0;" anchor="default" position="absolute 568 43 640 63" positiontype="position" text="해약취소" enable="true" onclick="btn_onclick"/>
        <Button id="btn_resn_dsps01" taborder="54" visible="false" style="shadow:drop 0,0 0 #00000033;" anchor="default" position="absolute 644 43 716 63" positiontype="position" text="해약처리" onclick="btn_onclick"/>
        <Button id="btn_cancel" taborder="55" text="닫기" visible="true" position="absolute 719 43 791 63" style="shadow:drop 0,0 0 #00000033;" onclick="btn_onclick"/>
        <Calendar id="cal_join_dt" taborder="56" dateformat="yyyy-MM-dd" enable="false" anchor="default" position="absolute 97 95 186 115" positiontype="position"/>
        <Edit id="edt_emple_no" taborder="58" tabstop="false" position="absolute 495 95 585 115" class="edt_clssEnable" readonly="true"/>
        <Calendar id="cal_resn_acpt_day" taborder="59" dateformat="yyyy-MM-dd" enable="true" anchor="default" position="absolute 97 152 186 172" positiontype="position"/>
        <CheckBox id="chk_a" taborder="61" text="회원신분증사본" position="absolute 12 405 112 423" truevalue="Y" falsevalue="N"/>
        <CheckBox id="chk_b" taborder="62" text="해약신청서" position="absolute 124 405 199 423" truevalue="Y" falsevalue="N"/>
        <CheckBox id="chk_g" taborder="63" text="수령인통장사본" position="absolute 211 405 316 423" truevalue="Y" falsevalue="N"/>
        <Static id="stc_02" text="담당자" class="sta_workLabel1" position="absolute 408 92 493 118" validate=""/>
        <Edit id="edt_emple_nm" taborder="64" tabstop="false" position="absolute 587 95 784 115" class="edt_clssEnable" readonly="true"/>
        <Edit id="edt_new_chan_sum" taborder="65" tabstop="false" position="absolute 567 152 784 172" class="edt_clssEnable" readonly="true" style="align:right middle;"/>
        <Combo id="cbo_reltn" taborder="66" codecolumn="cd" datacolumn="cd_nm" position="absolute 296 152 406 172" innerdataset="@ds_reltn" oncloseup="cbo_oncloseup" displaynulltext="선택"/>
        <Edit id="edt_pay_amt3" taborder="67" tabstop="false" readonly="true" class="edt_clssEnable" position="absolute 495 177 784 197" style="align:right middle;"/>
        <Edit id="edt_gasu_amt" taborder="68" tabstop="false" readonly="true" class="edt_clssEnable" position="absolute 495 202 581 222" style="align:right middle;"/>
        <Edit id="edt_dc_amt" taborder="69" tabstop="false" readonly="true" class="edt_clssEnable" position="absolute 296 227 406 247" style="align:right middle;"/>
        <Combo id="cbo_calc_mthd" taborder="70" codecolumn="cd" datacolumn="cd_nm" position="absolute 495 252 580 272" innerdataset="@ds_calcMthd" onitemchanged="cbo_onitemchanged"/>
        <Edit id="edt_resn_plus" taborder="71" tabstop="false" readonly="true" class="edt_clssEnable" position="absolute 670 252 784 272" style="align:right middle;"/>
        <Combo id="cbo_reson_cmp" taborder="72" codecolumn="cd" datacolumn="cd_nm" position="absolute 919 352 1029 372" innerdataset="@ds_resonCmp" displaynulltext="선택" visible="false"/>
        <Combo id="cbo_reson" taborder="73" codecolumn="cd" datacolumn="cd_nm" position="absolute 97 352 207 372" innerdataset="@ds_resonCd" displaynulltext="선택"/>
        <Edit id="edt_bank_accnt_no" taborder="74" tabstop="false" position="absolute 495 277 784 297" inputtype="digit" ontextchange="edt_bank_accnt_no_ontextchange"/>
        <Edit id="edt_bank_nm" taborder="75" tabstop="false" position="absolute 139 277 279 297" onkeydown="edt_bank_nm_onkeydown"/>
        <Button id="btn_srchBank" taborder="76" onclick="btn_onclick" class="btn_workSrcPop" position="absolute 281 277 301 297"/>
        <Static id="stc_03" text="해약송금일" class="sta_workLabel1" position="absolute 408 299 493 325" validate=""/>
        <Calendar id="cal_resn_proc_day" taborder="77" dateformat="yyyy-MM-dd" position="absolute 296 302 385 322"/>
        <Calendar id="cal_resn_remit_day" taborder="78" dateformat="yyyy-MM-dd" position="absolute 495 302 584 322"/>
        <Combo id="cbo_acpt_mthd" taborder="79" codecolumn="cd" datacolumn="cd_nm" position="absolute 97 327 207 347" innerdataset="@ds_acptMthd" displaynulltext="선택"/>
        <Edit id="edt_note" taborder="80" tabstop="false" position="absolute 296 327 784 347" lengthunit="ascii" maxlength="200"/>
        <ActiveX id="CMSCommAX" visible="false" progid="{60601393-834E-44DA-84BE-99E08C9734FE}" useautobitmapcache="1" taborder="82" anchor="default" position="absolute 840 40 978 67" positiontype="position"/>
        <Static id="stc_txt_emart" text="미적립 이마트 포인트" class="sta_workLabel1" position="absolute 209 349 324 375" validate="" style="padding:6 0 0 3;" visible="false"/>
        <Edit id="edt_point" taborder="83" tabstop="false" position="absolute 326 352 431 372" class="edt_clssEnable" readonly="true" visible="false"/>
        <CheckBox id="chk_c" taborder="84" text="대리인신분증사본" position="absolute 323 405 438 423" visible="false" truevalue="Y" falsevalue="N"/>
        <CheckBox id="chk_d" taborder="85" text="대리환급확인서" position="absolute 449 405 549 423" visible="false" truevalue="Y" falsevalue="N"/>
        <CheckBox id="chk_e" taborder="86" text="가족관계증명서" position="absolute 564 405 664 423" visible="false" truevalue="Y" falsevalue="N"/>
        <CheckBox id="chk_f" taborder="87" text="사망진단서" position="absolute 12 427 112 445" visible="false" truevalue="Y" falsevalue="N"/>
        <CheckBox id="chk_death" taborder="88" text="회원사망" position="absolute 12 381 112 399" usebitmapcache="false" visible="false" truevalue="Y" falsevalue="N" onclick="chk_onclick"/>
        <Button id="btn_sbmt_ddln" taborder="90" text="서류제출 기한상실" visible="false" position="absolute 373 43 483 63" style="shadow:drop 0,0 0 #00000033;" onclick="btn_onclick"/>
        <Button id="btn_resn_dsps02" taborder="91" text="해약처리" visible="false" position="absolute 644 43 716 63" style="shadow:drop 0,0 0 #00000033;" onclick="btn_onclick"/>
        <Button id="btn_accntNo" taborder="92" onclick="btn_onclick" class="btn_workSrcPop" position="absolute 386 70 406 90"/>
        <Button id="btn_memNm" taborder="93" onclick="btn_onclick" class="btn_workSrcPop" position="absolute 602 70 622 90"/>
        <Combo id="cbo_card_cd" taborder="94" innerdataset="@ds_cardCd" codecolumn="cd" datacolumn="cd_nm" position="absolute 831 277 928 297" visible="false"/>
        <Edit id="edt_card_no" taborder="95" tabstop="false" position="absolute 832 302 964 322" visible="false"/>
        <Combo id="cbo_resn_cl" taborder="96" displaynulltext="선택" innerdataset="@ds_resnCl" codecolumn="cd" datacolumn="cd_nm" position="absolute 97 70 207 90" onitemchanged="cbo_onitemchanged"/>
        <CheckBox id="chk_cmsWdrwReqYn" taborder="97" text="결합상품 CMS/카드 산출(해약처리 완료되어야 적용됩니다.)" value="N" truevalue="Y" falsevalue="N" position="absolute 124 427 480 445" style="color:red;" visible="false"/>
        <Static id="stc_txt_resnProcComp" text="해약처리완료" position="absolute 678 427 758 447" style="color:red;" visible="false"/>
        <Calendar id="cal_brth_mon_day" taborder="98" dateformat="yyyy-MM-dd" position="absolute 495 227 584 247"/>
        <Static id="stc_txt_sbmt_ddln" text="서류제출 기한상실" visible="false" position="absolute 145 48 250 65" style="color:red;"/>
        <Button id="btn_print" taborder="99" text="접수확인증 인쇄" onclick="btn_onclick" visible="true" position="absolute 691 126 791 146" style="shadow:drop 0,0 0 #00000033;"/>
        <Edit id="edt_gcnt" taborder="100" tabstop="false" visible="false" position="absolute 836 70 968 90" oneditclick="GCNT_oneditclick"/>
        <Edit id="edt_use_amt" taborder="101" tabstop="false" position="absolute 698 202 784 222" style="align:right middle; :disabled {color:#ffffffff;font:Dotum,9;}" enable="false" visible="true"/>
        <Static id="stc_07" text="쇼핑몰사용금액" class="sta_workLabel1" position="absolute 590 199 695 225" validate=""/>
        <Edit id="edt_resn_man" taborder="102" tabstop="false" position="absolute 97 202 207 222"/>
        <CheckBox id="chk_bankYn" taborder="103" text="타계좌선택" value="N" truevalue="Y" falsevalue="N" position="absolute 308 277 383 295" visible="false"/>
        <Edit id="edt_use_amt_bold" taborder="104" tabstop="false" enable="true" position="absolute 698 202 784 222" style="align:right middle;font:Dotum,9,bold;" readonly="true"/>
        <Static id="stc_memNm06" text="실환급금" class="sta_workLabel1" position="absolute 209 249 294 275" validate="" style="font:Dotum,8;"/>
        <Edit id="edt_resn_amt2" taborder="105" tabstop="false" readonly="true" class="edt_clssEnable" position="absolute 296 252 406 272" style="align:right middle;"/>
        <Static id="stc_11" text="장례이행보증액" class="sta_workLabel1" position="absolute 590 224 695 250" style="font:Dotum,8;" validate=""/>
        <Edit id="edt_perf_amt" taborder="106" tabstop="false" onkeydown="edt_onkeydown" position="absolute 698 227 784 247" style="align:right middle;font:Dotum,9,bold;"/>
        <Button id="btn_tsConfirm" taborder="107" text="통장확인" position="absolute 587 302 637 322" style="shadow:drop 0,0 0 #00000033;" onclick="btn_onclick"/>
        <Edit id="edt_tsConfirmMsg" taborder="108" tabstop="false" visible="true" position="absolute 640 302 784 322" style="color:#333333ff;"/>
        <Static id="stc_txt_chk" text="★해약접수 : 추가정보 탐색 必 + 해약 전산 등록 여부 check★" visible="false" position="absolute 312 127 688 144" style="color:red;bordertype:normal 0 0 ;font:Dotum,8,bold;"/>
      </Layout>
    </Layouts>
    <Bind>
      <BindItem id="item0" compid="edt_gcnt" propid="value" datasetid="ds_resnDtpt" columnid="gcnt"/>
    </Bind>
    <Objects>
      <Dataset id="ds_trans_info" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="strSvcID" type="STRING" size="256"/>
          <Column id="strURL" type="STRING" size="256"/>
          <Column id="strInDatasets" type="STRING" size="256"/>
          <Column id="strOutDatasets" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_resnCl" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="cd" type="STRING" size="256"/>
          <Column id="cd_nm" type="STRING" size="256"/>
          <Column id="adtl_cd" type="STRING" size="256"/>
          <Column id="adtl_cd_nm" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_calcMthd" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="cd" type="STRING" size="256"/>
          <Column id="cd_nm" type="STRING" size="256"/>
          <Column id="adtl_cd" type="STRING" size="256"/>
          <Column id="adtl_cd_nm" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_inputChk" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="accnt_no" type="STRING" size="256"/>
          <Column id="evtChk" type="STRING" size="256"/>
          <Column id="resnChk" type="STRING" size="256"/>
          <Column id="taxtChk" type="STRING" size="256"/>
          <Column id="cmsChk" type="STRING" size="256"/>
          <Column id="cmsReqChk" type="STRING" size="256"/>
          <Column id="prod_cl" type="STRING" size="256"/>
          <Column id="join_type" type="STRING" size="256"/>
          <Column id="callcenterChk" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_resnInfo" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="accnt_no" type="STRING" size="256"/>
          <Column id="mem_no" type="STRING" size="256"/>
          <Column id="mem_nm" type="STRING" size="256"/>
          <Column id="brth_mon_day" type="STRING" size="256"/>
          <Column id="prod_cd" type="STRING" size="256"/>
          <Column id="prod_nm" type="STRING" size="256"/>
          <Column id="join_dt" type="STRING" size="256"/>
          <Column id="cell" type="STRING" size="256"/>
          <Column id="wrpl_tel" type="STRING" size="256"/>
          <Column id="home_tel" type="STRING" size="256"/>
          <Column id="emple_no" type="STRING" size="256"/>
          <Column id="emple_nm" type="STRING" size="256"/>
          <Column id="resn_cl" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_reltn" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="cd" type="STRING" size="256"/>
          <Column id="cd_nm" type="STRING" size="256"/>
          <Column id="adtl_cd" type="STRING" size="256"/>
          <Column id="adtl_cd_nm" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_inqCndt_cust" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="accnt_no" type="STRING" size="256"/>
          <Column id="athr_qury_fg" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_resonCmp" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="cd" type="STRING" size="256"/>
          <Column id="cd_nm" type="STRING" size="256"/>
          <Column id="adtl_cd" type="STRING" size="256"/>
          <Column id="adtl_cd_nm" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_acptMthd" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="cd" type="STRING" size="256"/>
          <Column id="cd_nm" type="STRING" size="256"/>
          <Column id="adtl_cd" type="STRING" size="256"/>
          <Column id="adtl_cd_nm" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_cardCd" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="cd" type="STRING" size="256"/>
          <Column id="cd_nm" type="STRING" size="256"/>
          <Column id="adtl_cd" type="STRING" size="256"/>
          <Column id="adtl_cd_nm" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_resonCd" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="cd" type="STRING" size="256"/>
          <Column id="cd_nm" type="STRING" size="256"/>
          <Column id="adtl_cd" type="STRING" size="256"/>
          <Column id="adtl_cd_nm" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_inqCndt_resnPay" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="accnt_no" type="STRING" size="256"/>
          <Column id="resnGubn" type="STRING" size="256"/>
          <Column id="join_dt" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_cmsInfo" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="mem_no" type="STRING" size="256"/>
          <Column id="mem_nm" type="STRING" size="256"/>
          <Column id="idn_no" type="STRING" size="256"/>
          <Column id="bank_cd" type="STRING" size="256"/>
          <Column id="bank_nm" type="STRING" size="256"/>
          <Column id="bank_accnt_no" type="STRING" size="256"/>
          <Column id="depr" type="STRING" size="256"/>
          <Column id="reg_dm" type="STRING" size="256"/>
          <Column id="card_cd" type="STRING" size="256"/>
          <Column id="card_no" type="STRING" size="256"/>
          <Column id="gubun" type="STRING" size="256"/>
          <Column id="cms_chk" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_resnDtpt" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false"/>
      <Dataset id="ds_accnt_info" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="page_indx" type="STRING" size="6"/>
          <Column id="accnt_no" type="STRING" size="100"/>
          <Column id="mem_no" type="STRING" size="100"/>
          <Column id="mem_nm" type="STRING" size="100"/>
          <Column id="home_tel" type="STRING" size="100"/>
          <Column id="cell" type="STRING" size="100"/>
          <Column id="wrpl_tel" type="STRING" size="100"/>
          <Column id="idn_no" type="STRING" size="100"/>
          <Column id="prod_cd" type="STRING" size="100"/>
          <Column id="prod_nm" type="STRING" size="100"/>
          <Column id="prod_amt" type="STRING" size="100"/>
          <Column id="mon_pay_amt" type="STRING" size="100"/>
          <Column id="expr_no" type="STRING" size="100"/>
          <Column id="emple_no" type="STRING" size="100"/>
          <Column id="emple_nm" type="STRING" size="100"/>
          <Column id="appfm_no" type="STRING" size="100"/>
          <Column id="join_dt" type="STRING" size="100"/>
          <Column id="compt_dt" type="STRING" size="100"/>
          <Column id="bef_emple_cd" type="STRING" size="100"/>
          <Column id="pay_perd" type="STRING" size="100"/>
          <Column id="pay_mthd" type="STRING" size="100"/>
          <Column id="join_prod" type="STRING" size="100"/>
          <Column id="new_chan_gunsu" type="STRING" size="100"/>
          <Column id="certf_rcv_chk" type="STRING" size="100"/>
          <Column id="pay_stat_1no" type="STRING" size="100"/>
          <Column id="ichae_dt" type="STRING" size="100"/>
          <Column id="bank_accnt_no" type="STRING" size="100"/>
          <Column id="old_mid" type="STRING" size="100"/>
          <Column id="reg_dm" type="STRING" size="100"/>
          <Column id="reg_man" type="STRING" size="100"/>
          <Column id="upd_dm" type="STRING" size="100"/>
          <Column id="upd_man" type="STRING" size="100"/>
          <Column id="accnt_stat" type="STRING" size="100"/>
          <Column id="total_pay" type="STRING" size="100"/>
          <Column id="last_no" type="STRING" size="100"/>
          <Column id="real_pay_no" type="STRING" size="100"/>
          <Column id="ded_no" type="STRING" size="100"/>
          <Column id="join_cl" type="STRING" size="100"/>
          <Column id="trans_gubun" type="STRING" size="100"/>
          <Column id="brth_mon_day" type="STRING" size="100"/>
          <Column id="pay_mthd" type="STRING" size="100"/>
          <Column id="emp_cell" type="STRING" size="100"/>
          <Column id="join_stat" type="STRING" size="100"/>
          <Column id="pay_stat" type="STRING" size="100"/>
          <Column id="pay_no" type="STRING" size="100"/>
          <Column id="pay_allt_no" type="STRING" size="100"/>
          <Column id="pay_add_no" type="STRING" size="100"/>
          <Column id="pay_amt" type="STRING" size="100"/>
          <Column id="pay_allt_amt" type="STRING" size="100"/>
          <Column id="pay_add_amt" type="STRING" size="100"/>
          <Column id="model_cl_nm" type="STRING" size="100"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_inqCndt_resnPayInq" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="accnt_no" type="STRING" size="256"/>
          <Column id="r_gubn" type="STRING" size="256"/>
          <Column id="join_dt" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_resnPayInq" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false"/>
      <Dataset id="ds_inqCndt_accnt" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="srch_typ" type="STRING" size="256"/>
          <Column id="srch_vl" type="STRING" size="256"/>
          <Column id="option" type="STRING" size="256"/>
          <Column id="ns_yn" type="STRING" size="256"/>
          <Column id="ichae_stt_dt" type="STRING" size="256"/>
          <Column id="ichae_end_dt" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_inqCndt_sbmtDdln" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="accnt_no" type="STRING" size="256"/>
          <Column id="resn_proc_yn" type="STRING" size="256"/>
          <Column id="chk_submit" type="STRING" size="256"/>
          <Column id="chk_death" type="STRING" size="256"/>
          <Column id="chk_a" type="STRING" size="256"/>
          <Column id="chk_b" type="STRING" size="256"/>
          <Column id="chk_g" type="STRING" size="256"/>
          <Column id="chk_c" type="STRING" size="256"/>
          <Column id="chk_d" type="STRING" size="256"/>
          <Column id="chk_e" type="STRING" size="256"/>
          <Column id="chk_f" type="STRING" size="256"/>
          <Column id="chk_cmsWdrwReqYn" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_inqCndt_regCons" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="accnt_no" type="STRING" size="256"/>
          <Column id="mem_no" type="STRING" size="256"/>
          <Column id="cons_memo_cntn" type="STRING" size="256"/>
          <Column id="cons_memo_tit" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_inqCndt_resnSave" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="mem_no" type="STRING" size="256"/>
          <Column id="accnt_no" type="STRING" size="256"/>
          <Column id="resn_cl" type="STRING" size="256"/>
          <Column id="resn_acpt_day" type="STRING" size="256"/>
          <Column id="reltn" type="STRING" size="256"/>
          <Column id="resn_man" type="STRING" size="256"/>
          <Column id="mem_tel" type="STRING" size="256"/>
          <Column id="note" type="STRING" size="256"/>
          <Column id="resn_proc_day" type="STRING" size="256"/>
          <Column id="resn_remit_day" type="STRING" size="256"/>
          <Column id="acpt_mthd" type="STRING" size="256"/>
          <Column id="reson" type="STRING" size="256"/>
          <Column id="resn_amt" type="STRING" size="256"/>
          <Column id="resn_pay_amt" type="STRING" size="256"/>
          <Column id="resn_plus" type="STRING" size="256"/>
          <Column id="reson_cmp" type="STRING" size="256"/>
          <Column id="calc_mthd" type="STRING" size="256"/>
          <Column id="bank_accnt_no" type="STRING" size="256"/>
          <Column id="bank_cd" type="STRING" size="256"/>
          <Column id="bank_nm" type="STRING" size="256"/>
          <Column id="depr" type="STRING" size="256"/>
          <Column id="card_no" type="STRING" size="256"/>
          <Column id="card_cd" type="STRING" size="256"/>
          <Column id="cmsWdrwReqYn" type="STRING" size="256"/>
          <Column id="chk_death" type="STRING" size="256"/>
          <Column id="chk_a" type="STRING" size="256"/>
          <Column id="chk_b" type="STRING" size="256"/>
          <Column id="chk_c" type="STRING" size="256"/>
          <Column id="chk_d" type="STRING" size="256"/>
          <Column id="chk_e" type="STRING" size="256"/>
          <Column id="chk_f" type="STRING" size="256"/>
          <Column id="chk_g" type="STRING" size="256"/>
          <Column id="resn_proc_yn" type="STRING" size="256"/>
          <Column id="chk_submit" type="STRING" size="256"/>
          <Column id="bank_no_yn" type="STRING" size="256"/>
          <Column id="shopping_use_amt" type="STRING" size="256"/>
          <Column id="resn_amt2" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_accntMap" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false"/>
      <Dataset id="ds_rgsnCms" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="accnt_no" type="STRING" size="256"/>
          <Column id="mem_no" type="STRING" size="256"/>
          <Column id="mem_nm" type="STRING" size="256"/>
          <Column id="idn_no" type="STRING" size="256"/>
          <Column id="bank_cd" type="STRING" size="256"/>
          <Column id="bank_accnt_no" type="STRING" size="256"/>
          <Column id="inv_tg_dt" type="STRING" size="256"/>
          <Column id="depr_nm" type="STRING" size="256"/>
          <Column id="rltn_cd" type="STRING" size="256"/>
          <Column id="depr_cell" type="STRING" size="256"/>
          <Column id="rgsn_dt" type="STRING" size="256"/>
          <Column id="acpt_mthd" type="STRING" size="256"/>
          <Column id="app_cl" type="STRING" size="256"/>
          <Column id="rltm_web_module" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_resl_cd" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="cd" type="STRING" size="256"/>
          <Column id="cd_nm" type="STRING" size="256"/>
          <Column id="adtl_cd" type="STRING" size="256"/>
          <Column id="adtl_cd_nm" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_resnDel" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="mem_no" type="STRING" size="256"/>
          <Column id="accnt_no" type="STRING" size="256"/>
          <Column id="resn_acpt_day" type="STRING" size="256"/>
          <Column id="edt_yn" type="STRING" size="256"/>
          <Column id="new_yn" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_listWdrwReq" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="accnt_no" type="STRING" size="256"/>
          <Column id="prod_cd" type="STRING" size="256"/>
          <Column id="pay_mthd" type="STRING" size="256"/>
          <Column id="req_bit" type="STRING" size="256"/>
          <Column id="stat" type="STRING" size="256"/>
          <Column id="kstbit" type="STRING" size="256"/>
          <Column id="true_cnt" type="STRING" size="256"/>
          <Column id="req_pay_no" type="STRING" size="256"/>
          <Column id="pay_bit" type="STRING" size="256"/>
          <Column id="ichae_no" type="STRING" size="256"/>
          <Column id="ichae_cd" type="STRING" size="256"/>
          <Column id="req_day" type="STRING" size="256"/>
          <Column id="bank_filin_brkdn" type="STRING" size="256"/>
          <Column id="pay_amt" type="STRING" size="256"/>
          <Column id="reg_dm" type="STRING" size="256"/>
          <Column id="reg_man" type="STRING" size="256"/>
          <Column id="ichae_dt" type="STRING" size="256"/>
          <Column id="req_pay_gunsu" type="STRING" size="256"/>
          <Column id="upd_dm" type="STRING" size="256"/>
          <Column id="upd_man" type="STRING" size="256"/>
          <Column id="del_fg" type="STRING" size="256"/>
          <Column id="birth" type="STRING" size="256"/>
          <Column id="bill_gubun" type="STRING" size="256"/>
          <Column id="result_key" type="STRING" size="256"/>
          <Column id="result_kind" type="STRING" size="256"/>
          <Column id="month_cnt" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_listPerfMain" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="accnt_no" type="STRING" size="256"/>
          <Column id="perf_day" type="STRING" size="256"/>
          <Column id="perf_amt" type="BIGDECIMAL" size="256"/>
          <Column id="perf_etc" type="STRING" size="256"/>
          <Column id="del_fg" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
      <Dataset id="ds_codeBank" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="cd" type="STRING" size="256"/>
          <Column id="cd_nm" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
    <Script type="xscript4.0"><![CDATA[/********************************************************************************************/
/* 1. Include Library include, variables Declaration 영역                                  */
/********************************************************************************************/
include "LIB::lib_All.xjs";

var gv_cmsInitYn = "N";
var gv_chkNum = 0;
var gv_resnProcCl = "";

var gv_tlno = "";		// 전화번호

var gv_prod_cl = "";
var gv_join_type = "";

// dtpt
var gv_chk_submit = "";
var gv_brth_mon_day = "";
var gv_org_resn_acpt_dt = "";
var gv_org_proc_dt = "";  
var gv_org_bank_nm = "";
var gv_org_bank_accnt_no = "";
var gv_org_depr = ""; 
var gv_org_resn_pay_amt = "";
var gv_org_note = "";
var gv_resn_man = "";
var gv_bank_accntno = "";
var gv_bank_cd = "";
var gv_bank_nm = "";
var gv_depr = "";

var gv_calc_mthd_str = "";
var gv_card_cd_str = "";
var gv_card_no_str = "";
var gv_card_cd = "";
var gv_totalPay = "";
var gv_dc_pay = "";
var gv_resn_cl = "";

var gv_reltn = "";
var gv_acpt_mthd = "";
var gv_reson = "";
var gv_reson_cmp = "";
var gv_calc_mthd = "";

var gv_new_yn = "";

var gv_resn_gubn_cbo = "";
var gv_resn_gubn = "";	// return
var checkB2bPay = "";

// parameter
var gv_gubun = "";		// 구분 reg update
var gv_accnt_no = "";
var gv_prod_cd = "";
var gv_main_yn = "";
//var gv_wdrw_req_accnt = 0;
var xMangiDate; // 만기일자

// 권한
var gv_clsDspsAthr = false;	// 마감처리
var gv_ddlnClsAthr = false;	// 서류제출기한마감
var gv_resnCancAthr = false;// 해약취소
var gv_resnAthr = false;// 해약등록

//웹모듈
var tmp_aplc_div = "";      //웹모듈 요청시 저장(신규,해지 구분)
var tmp_tmpr_resl = "";     //웹모듈 요청시 저장(웹모듈요청결과)

var xTsConfirmResultMsg; // 통장확인 결과 메시지

/********************************************************************************************/
/* 2. Form 관련(onload 및 Form 이벤트) 처리                                           	*/
/********************************************************************************************/
function PS020302_onload(obj:Form, e:LoadEventInfo)
{
	fn_setAthrPgmBtn();	// 권한에 따른 버튼 설정
	
	trace("p_gubun :=====>" +p_gubun);
	trace("p_accnt_no :=====>" +p_accnt_no);
	trace("p_prod_cd :=====>" +p_prod_cd);
	trace("p_mainYn :=====>" +p_mainYn);
	
	if (!gfn_isNull(p_gubun)) {
		gv_gubun = p_gubun;
		p_gubun = null;
	}

	if (!gfn_isNull(p_accnt_no)) {
		gv_accnt_no = p_accnt_no;
		p_accnt_no = null;
	}
	
	if(p_prod_cd == "EI" || p_prod_cd == "EJ")
	{
		if(confirm("두 구좌 상품으로 개별 해약 불가하며, 두 구좌중 1구좌 해약 처리시 동시 진행 바랍니다.") == true)
		{
			
		}
		else
		{
			close();
		}
	}
	
	if (!gfn_isNull(p_prod_cd)) {
		gv_prod_cd = p_prod_cd;
		p_prod_cd = null;
	}
	
	if (!gfn_isNull(p_mainYn)) {
		gv_main_yn = p_mainYn;
		p_mainYn = null;
	}
	
	/*해약등록시  콜센터에 데이터 있는 지 확인 검사 신규등록시에만.*/
	
	gfn_getList("dlwCd", "64,07,08,0116,0155,0120,84");	// 코드정보 조회
	
	// 2018.02.27 CMS이면 타계좌 선택 가능...
	fn_selectBankYn();
}

/********************************************************************************************/
/* 3. Callback(gfn_Transaction 호출 후 처리내용)                                   		*/
/********************************************************************************************/
function fn_callBack(svcid, errcd, errmsg)
{
	if (errcd != 0) {
		trace(errcd)
		return false;
	} else {
		switch (svcid) {
		
			case "selectDlwCode": // 공통코드 조회 callBack Service ID
				gfn_getCode("64", "SELECT", ds_resnCl, gds_DmlCd); 		// 해약방법
				gfn_getCode("07", "SELECT", ds_reltn, gds_DmlCd); 		// 관계
				gfn_getCode("08", "SELECT", ds_acptMthd, gds_DmlCd); 	// 접수방법
				gfn_getCode("0116", "SELECT", ds_resonCmp, gds_DmlCd); 	// 회사사유
				gfn_getCode("0155", "", ds_calcMthd, gds_DmlCd); 	    // 환급금정산
				gfn_getCode("0120", "SELECT", ds_cardCd, gds_DmlCd); 	// 카드사
				gfn_getCode("84", "", ds_resl_cd, gds_DmlCd); 			// 코드조회결과 필터
					
				fn_initPop();
			break;
			
			case "srchResnDtpt":
				if (ds_accnt_info.rowcount <= 0) {
					ds_accnt_info.clearData();
					ds_accnt_info.addRow();
					ds_accnt_info.setColumn(0, "mem_no", ds_resnDtpt.getColumn(0, "mem_no"));
					ds_accnt_info.setColumn(0, "accnt_no", ds_resnDtpt.getColumn(0, "accnt_no"));
				}
				
				gv_tlno = gfn_phoneNumStr(ds_resnDtpt.getColumn(0, "mem_tel"));
				gv_chk_submit = ds_resnDtpt.getColumn(0, "chk_submit");
				
				if (!gfn_isNull(ds_resnDtpt.getColumn(0, "idn_no"))) {
					cal_brth_mon_day.value = ds_resnDtpt.getColumn(0, "idn_no");
					gv_brth_mon_day = ds_resnDtpt.getColumn(0, "idn_no");
				}
				
				// update모드인경우 항목 수정 확인을 위해 데이터 저장
				gv_org_resn_acpt_dt = ds_resnDtpt.getColumn(0, "resn_acpt_day");
				gv_org_proc_dt = ds_resnDtpt.getColumn(0, "resn_proc_day");
				gv_bank_nm = ds_resnDtpt.getColumn(0, "bank_nm");
				gv_org_bank_accnt_no = ds_resnDtpt.getColumn(0, "bank_accnt_no");
				gv_org_depr = ds_resnDtpt.getColumn(0, "depr");
				gv_org_resn_pay_amt = ds_resnDtpt.getColumn(0, "resn_pay_amt");
				gv_org_note = ds_resnDtpt.getColumn(0, "note");
				
				edt_point.value = ds_resnDtpt.getColumn(0, "point");
				
				gv_calc_mthd_str = ds_resnDtpt.getColumn(0, "calc_mthd");
				gv_card_cd_str = ds_resnDtpt.getColumn(0, "card_cd");
				gv_card_no_str = ds_resnDtpt.getColumn(0, "card_no");
				
				edt_accnt_no.value = ds_resnDtpt.getColumn(0, "accnt_no");
				edt_mem_nm.value = ds_resnDtpt.getColumn(0, "mem_nm");
				cal_join_dt.value = ds_resnDtpt.getColumn(0, "join_dt");
				edt_home_tel.value = ds_resnDtpt.getColumn(0, "home_tel");
				edt_emple_no.value = ds_resnDtpt.getColumn(0, "emple_no");
				edt_emple_nm.value = ds_resnDtpt.getColumn(0, "emple_nm");
				
				cal_resn_acpt_day.value = ds_resnDtpt.getColumn(0, "resn_acpt_day");	// 해약접수일
				edt_resn_man.value = ds_resnDtpt.getColumn(0, "resn_man");
				edt_tel_no.value = gv_tlno;
				edt_note.value = ds_resnDtpt.getColumn(0, "note");
				cal_resn_proc_day.value = ds_resnDtpt.getColumn(0, "resn_proc_day");	// 해약처리일
				cal_resn_remit_day.value = ds_resnDtpt.getColumn(0, "resn_remit_day");	// 해약송금일
				edt_gasu_amt.value = gfn_setComma(ds_resnDtpt.getColumn(0, "gasu_amt"));// 가수금
				edt_resn_pay_amt.value = gfn_setComma(ds_resnDtpt.getColumn(0, "resn_pay_amt"));
												
				// 해약정보
				edt_new_chan_gunsu.value = gfn_setComma(ds_resnDtpt.getColumn(0, "new_chan_gunsu"));
				edt_new_chan_sum.value = gfn_setComma(ds_resnDtpt.getColumn(0, "daeche_sum"));
				edt_pay_amt1.value = gfn_setComma(ds_resnDtpt.getColumn(0, "pay_amt1"));
				edt_pay_amt2.value = gfn_setComma(ds_resnDtpt.getColumn(0, "pay_amt2"));
				edt_pay_amt3.value = gfn_setComma(ds_resnDtpt.getColumn(0, "pay_amt3"));
				edt_resn_amt.value = gfn_setComma(ds_resnDtpt.getColumn(0, "resn_amt"));
				
				//만기환급 시 
				var strReson = ds_resnDtpt.getColumn(0, "reson");
				
				if (strReson=="23"){
					edt_resn_amt2.value = gfn_setComma(ds_resnDtpt.getColumn(0, "resn_amt"));
				} else {
					edt_resn_amt2.value = gfn_setComma(ds_resnDtpt.getColumn(0, "resn_amt2"));
				}
				edt_dc_amt.value = gfn_setComma(ds_resnDtpt.getColumn(0, "dc_amt"));				
				edt_resn_plus.value = gfn_setComma(ds_resnDtpt.getColumn(0, "resn_plus"));
				
				
				// 쇼핑몰 실 사용금액
				edt_use_amt.value = gfn_setComma(ds_resnDtpt.getColumn(0, "use_amt"));
				edt_use_amt_bold.value = edt_use_amt.value;  // 2018.06.14 금액 bold 처리위해 EDIT 컴포넌트 추가
				
								
				//해약 완료는 저장된 금액 불러오고 해약미처리일 경우 최종 입금기준으로 실지금 계속 조회 해옴 20190122 임동진
				if(gfn_setComma(ds_resnDtpt.getColumn(0, "resn_proc_yn")) == 'Y') {
					edt_resn_amt2.value = gfn_setComma(ds_resnDtpt.getColumn(0, "resn_pay_amt"));
				}else{					
					if (strReson=="23"){
						sResnAmt2 = ds_resnDtpt.getColumn(0, "resn_amt");
					} else {
						sResnAmt2 = ds_resnDtpt.getColumn(0, "resn_amt2");
					}																		
					//var sResnAmt2 = ds_resnDtpt.getColumn(0, "resn_amt2");					
					var sDcAmt = String(edt_dc_amt.value).replace(',','');							
					var sUseAmt =String(edt_use_amt_bold.value).replace(',','');
					
					trace(sResnAmt2+' '+sDcAmt+' '+sUseAmt);

					edt_resn_amt2.value = gfn_setComma(sResnAmt2 - sDcAmt - sUseAmt);
					
					//해약접수상태+해약방법이 해약일때만 수입금 계산처리 
					if(ds_resnDtpt.getColumn(0, "resn_cl") == "01") { //해약방법 : 해약
						var tmp = String(edt_resn_pay_amt.value).replace(",","").replace(",","");
						edt_resn_plus.value = gfn_setComma(ds_resnDtpt.getColumn(0, "pay_amt1") - tmp);
					}
				}
				
				//2018.02.28 타계좌선택 추가 
				chk_bankYn.value =  gfn_setComma(ds_resnDtpt.getColumn(0, "bank_no_yn"));
				
				
				// 해약수입금
				var sResnCl = ds_resnDtpt.getColumn(0, "resn_cl");
				if (sResnCl == "02") {
					gv_totalPay = ds_resnDtpt.getColumn(0, "pay_amt");
					stc_txt_sbmt_ddln.visible = false;
					btn_sbmt_ddln.visible = false;
				} else {
					gv_totalPay = ds_resnDtpt.getColumn(0, "pay_amt1");
				}
				gv_dc_pay = ds_resnDtpt.getColumn(0, "dc_amt");
				gv_resn_cl = sResnCl;

				gv_reltn = ds_resnDtpt.getColumn(0, "reltn");
				gv_acpt_mthd = ds_resnDtpt.getColumn(0, "acpt_mthd");
				gv_reson = ds_resnDtpt.getColumn(0, "reson");
				gv_reson_cmp = ds_resnDtpt.getColumn(0, "reson_cmp");
				gv_calc_mthd = ds_resnDtpt.getColumn(0, "calc_mthd");
				
				if (gv_calc_mthd == "0001") {
					fn_setCompAccnt("cms");
					edt_bank_accnt_no.value = ds_resnDtpt.getColumn(0, "bank_accnt_no");
					edt_bank_cd.value = ds_resnDtpt.getColumn(0, "bank_cd");
					edt_bank_nm.value = ds_resnDtpt.getColumn(0, "bank_nm");
					gv_bank_nm = ds_resnDtpt.getColumn(0, "bank_nm");
					edt_depr.value = ds_resnDtpt.getColumn(0, "depr");
					gv_card_cd = "";
					cbo_card_cd.value = "";
					edt_card_no.value = "";			
					
				} else {
					fn_setCompAccnt("card");
					edt_bank_accnt_no.value = "";
					edt_bank_cd.value = "";
					edt_bank_nm.value = "";
					edt_depr.value = "";
					gv_bank_nm = "";
					gv_card_cd = ds_resnDtpt.getColumn(0, "card_cd");
					cbo_card_cd.value = ds_resnDtpt.getColumn(0, "card_cd");
					edt_card_no.value = ds_resnDtpt.getColumn(0, "card_no");
					
				}
				
				gv_new_yn = ds_resnDtpt.getColumn(0, "new_yn");		// 상조보증공제조합 전송여부
				
				var sDeathYn = ds_resnDtpt.getColumn(0, "death");
				if (gfn_isNull(sDeathYn)) {
					chk_death.value = "N";
				} else {
					chk_death.value = sDeathYn;
				}
				
				// 필수 서류 체크 항목 추가
				if (gfn_isNull(gv_reltn)) {
					chk_a.value = "N";
					chk_b.value = "N";
					chk_c.value = "N";
					chk_d.value = "N";
					chk_e.value = "N";
					chk_f.value = "N";
					chk_g.value = "N";
				} else if (gv_reltn == "20"){
					if (ds_resnDtpt.getColumn(0, "chk_a") == "Y") {
						chk_a.value = "Y";
					} else {
						chk_a.value = "N";
					}
					if (ds_resnDtpt.getColumn(0, "chk_b") == "Y") {
						chk_b.value = "Y";
					} else {
						chk_b.value = "N";
					}
					if (ds_resnDtpt.getColumn(0, "chk_g") == "Y") {
						chk_g.value = "Y";
					} else {
						chk_g.value = "N";
					}
					chk_c.value = "N";
					chk_d.value = "N";
					chk_e.value = "N";
					chk_f.value = "N";
				} else {
					if (ds_resnDtpt.getColumn(0, "chk_a") == "Y") {
						chk_a.value = "Y";
					} else {
						chk_a.value = "N";
					}
					if (ds_resnDtpt.getColumn(0, "chk_b") == "Y") {
						chk_b.value = "Y";
					} else {
						chk_b.value = "N";
					}
					if (ds_resnDtpt.getColumn(0, "chk_g") == "Y") {
						chk_g.value = "Y";
					} else {
						chk_g.value = "N";
					}
					if (ds_resnDtpt.getColumn(0, "chk_c") == "Y") {
						chk_c.value = "Y";
					} else {
						chk_c.value = "N";
					}
					if (ds_resnDtpt.getColumn(0, "chk_d") == "Y") {
						chk_d.value = "Y";
					} else {
						chk_d.value = "N";
					}
					if (ds_resnDtpt.getColumn(0, "chk_e") == "Y") {
						chk_e.value = "Y";
					} else {
						chk_e.value = "N";
					}
					if (ds_resnDtpt.getColumn(0, "chk_f") == "Y") {
						chk_f.value = "Y";
					} else {
						chk_f.value = "N";
					}
				}
				
				gv_prod_cl = ds_resnDtpt.getColumn(0, "prod_cl");
				gv_join_type = ds_resnDtpt.getColumn(0, "join_type");
				
				if (ds_resnDtpt.getColumn(0, "cms_wdrw_req_yn") == "Y") {
					chk_cmsWdrwReqYn.value = "Y";
				} else {
					chk_cmsWdrwReqYn.value = "N";
				}
				
				if (ds_resnDtpt.getColumn(0, "chk_submit") == "Y") {
					stc_txt_sbmt_ddln.visible = true;
					btn_sbmt_ddln.visible = false;
					chk_a.enable = false;
					chk_b.enable = false;
					chk_c.enable = false;
					chk_d.enable = false;
					chk_e.enable = false;
					chk_f.enable = false;
					chk_g.enable = false;
				} else {
					stc_txt_sbmt_ddln.visible = false;
					btn_sbmt_ddln.visible = gv_ddlnClsAthr;
					chk_a.enable = true;
					chk_b.enable = true;
					chk_c.enable = true;
					chk_d.enable = true;
					chk_e.enable = true;
					chk_f.enable = true;
					chk_g.enable = true;
				}
				if (ds_resnDtpt.getColumn(0, "resn_proc_yn") == "Y") {
					btn_sbmt_ddln.visible = false;
					stc_txt_resnProcComp.visible = true;
					btn_resn_dsps02.visible = false;
					chk_a.enable = false;
					chk_b.enable = false;
					chk_c.enable = false;
					chk_d.enable = false;
					chk_e.enable = false;
					chk_f.enable = false;
					chk_g.enable = false;
					
					/// 20170109 해약취소 권한 요청 - 컨텍센터/이인호
					/// 정명진(2016120003),김나경(2016080011),이인호(2016120004)
					/// 로그인 아이뒤 가져오기.
					/// 김경욱(2016110099) 권한부여
					/******************************************************************
					 2017.08.01 김준호 해약취소권한 요청 - 컨텍센터/이인호
					 버튼 권한부여 위치 이동 ( fn_initPop에서 실행 )
					******************************************************************/
					var fv_emple_no = gfn_getUserInfo("user_id");
					//if (fv_emple_no == '2016120003' ||  fv_emple_no == '2016080011'  || fv_emple_no == '2016120004' || fv_emple_no == '2016020003' ) {
					if (gv_resnAthr){ 
						btn_resn_dsps02.visible=true;		// 해약처리2 버튼
					}else{
						//btn_save.move(532,43,604,63);	// 버튼 위치 이동
						btn_save.move(644,43,716,63);	// 버튼 위치 이동
					}
				} else {
					if (ds_resnDtpt.getColumn(0, "chk_submit") == "Y") {
						stc_txt_sbmt_ddln.visible = true;
						btn_sbmt_ddln.visible = false;
					} else {
						stc_txt_resnProcComp.visible = false;
						
// 						if (gv_clsDspsAthr) {
// 							btn_resn_dsps02.position = "absolute 532 43 604 63";
// 						}
// 						btn_resn_dsps02.visible = gv_clsDspsAthr;
// 						btn_resn_dsps01.visible = false;
// 						btn_sbmt_ddln.visible = gv_ddlnClsAthr;
					}
				
				/*	btn_resn_canc.enable = gv_resnCancAthr;		// 해약취소*/
		
// 					if (gv_resn_cl != "02") {
// 						if (gv_clsDspsAthr) {
// 							btn_resn_dsps02.position = "absolute 532 43 604 63";
// 						}
// 						btn_resn_dsps02.visible = gv_clsDspsAthr;
// 					}
// 					
					btn_sbmt_ddln.visible = gv_ddlnClsAthr;
					if (gv_resn_cl != "01") {
						stc_txt_sbmt_ddln.visible = false;
						btn_sbmt_ddln.visible = false;
					}
				}
				fn_init();
			break;
			
			case "srchCmsInfo":
			
				var sCmsChk = ds_cmsInfo.getColumn(0, "cms_chk");
				if (sCmsChk == "Y") {
					if (ds_cmsInfo.getColumn(0, "gubun") == "CMS") {
						edt_resn_man.value = ds_cmsInfo.getColumn(0, "mem_nm");
						edt_tel_no.value = gv_tlno;
						
						if (cbo_reltn.value == "20") {
							edt_bank_cd.value = ds_cmsInfo.getColumn(0, "bank_cd");
							edt_bank_accnt_no.value = ds_cmsInfo.getColumn(0, "bank_accnt_no");
							edt_bank_nm.value = ds_cmsInfo.getColumn(0, "bank_nm");
							gv_bank_nm = ds_cmsInfo.getColumn(0, "bank_nm");
								
							if (gfn_isNull(ds_cmsInfo.getColumn(0, "depr"))) {
								edt_depr.value = ds_cmsInfo.getColumn(0, "mem_nm");
							} else {
								edt_depr.value = ds_cmsInfo.getColumn(0, "depr");
							}
						} else {
							edt_bank_accnt_no.value = "";
							edt_bank_cd.value = "";
							edt_bank_nm.value = "";
							gv_bank_nm = "";
							edt_depr.value = "";
						}
						
						fn_setCompAccnt("cms");		// CMS 설정
						cbo_calc_mthd.index = 0;	// 환급금정산
						cbo_card_cd.index = 0;		// 카드코드
						edt_card_no.value = "";
					} else {
						edt_resn_man.value = ds_cmsInfo.getColumn(0, "mem_nm");
						edt_tel_no.value = gv_tlno;
						
						edt_bank_accnt_no.value = "";
						edt_bank_cd.value = "";
						edt_bank_nm.value = "";
						gv_bank_nm = "";
						edt_depr.value = "";
							
						if (cbo_reltn.value == "20") {		// 관계: 본인
							fn_setCompAccnt("card");		// 카드설정
							cbo_card_cd.value = ds_cmsInfo.getColumn(0, "card_cd");
							cbo_calc_mthd.index = 1;
							edt_card_no.value = ds_cmsInfo.getColumn(0, "card_no");
						} else {							// CMS설정
							fn_setCompAccnt("cms");
							cbo_calc_mthd.index = 0;
							cbo_card_cd.index = 0;
							edt_card_no.value = "";
						}
					}
				} else {
					if (gv_gubun == "update") {		// 수정시 CMS정보
						edt_resn_man.value = gv_resn_man;
						edt_tel_no.value = gv_tlno;
						
						edt_bank_accnt_no.value = gv_bank_accntno;
						edt_bank_cd.value = gv_bank_cd;
						edt_bank_nm.value = gv_bank_nm;
						edt_depr.value = gv_depr;
						
						cbo_calc_mthd.value = gv_calc_mthd;
						if (gv_calc_mthd == "0001") {
							fn_setCompAccnt("cms");
						} else {
							fn_setCompAccnt("card");
						}
						
						cbo_card_cd.value = gv_card_cd_str;
						edt_card_no.value = gv_card_no_str;
					} else {
						edt_resn_man.value = ds_accnt_info.getColumn(0, "mem_nm");						
						edt_tel_no.value = gv_tlno;
						
						edt_bank_accnt_no.value = "";
						edt_bank_cd.value = "";
						edt_bank_nm.value = "";
						gv_bank_nm = "";
						edt_depr.value = "";
						
						cbo_calc_mthd.index = 0;
						cbo_card_cd.index = 0;
						edt_card_no.value = "";
						fn_setCompAccnt("cms");
					}
				}
				
				// 2018.02.27 CMS이면 타계좌 선택 가능...
				fn_selectBankYn();
			break;
			
			case "resnInputChk":
				gv_prod_cl = ds_inputChk.getColumn(0, "prod_cl");
				gv_join_type = ds_inputChk.getColumn(0, "join_type");
				
				if (ds_inputChk.getColumn(0, "evtChk") >= 1) {
					alert("행사처리 하신 회원입니다.");
					fn_clearObject();
				} else if (ds_inputChk.getColumn(0, "resnChk") >= 1) {
					alert("해약처리 하신 회원입니다.");
					fn_clearObject();
				} else if (ds_inputChk.getColumn(0, "taxtChk") >= 1) {
					alert("세무처리 하신 회원입니다");
					fn_clearObject();
				} else if (ds_inputChk.getColumn(0, "callcenterChk") >= 1) {
					alert("고객만족센터 등록된 회원입니다.!!");
					fn_clearObject();
				} else {	
					fn_srchResnGubn("srchResnGubn"); // 해약구분
				}
			break;
			
			// 고객사유 코드 설정
			case "selectDlwCd_reson":
				gfn_getCode(gv_tmp_cd, "SELECT", ds_resonCd, gds_DmlCd);
				cbo_reson.index = 0;
				cbo_reson.enable = true;	// 고객사유 enable
			break;
			
			case "srchResnPayInq":
				edt_point.value = gfn_setComma(ds_resnPayInq.getColumn(0, "point"));
				edt_new_chan_gunsu.value = gfn_setComma(ds_resnPayInq.getColumn(0, "new_chan_gunsu"));
				edt_new_chan_sum.value = gfn_setComma(ds_resnPayInq.getColumn(0, "new_chan_sum"));
				edt_pay_amt1.value = gfn_setComma(ds_resnPayInq.getColumn(0, "pay_amt1"));
				edt_pay_amt2.value = gfn_setComma(ds_resnPayInq.getColumn(0, "pay_amt2"));
				edt_pay_amt3.value = gfn_setComma(ds_resnPayInq.getColumn(0, "pay_amt3"));
				edt_resn_amt.value = gfn_setComma(ds_resnPayInq.getColumn(0, "resn_amt"));
				edt_resn_amt2.value = gfn_setComma(ds_resnPayInq.getColumn(0, "resn_amt2"));
				edt_gasu_amt.value = gfn_setComma(ds_resnPayInq.getColumn(0, "gasu_amt"));
				edt_dc_amt.value = gfn_setComma(ds_resnPayInq.getColumn(0, "dc_amt"));
				
				/* 쇼핑몰 실 사용금액 설정 */
				edt_use_amt.value = gfn_setComma(ds_resnPayInq.getColumn(0, "use_amt"));
				edt_use_amt_bold.value = edt_use_amt.value;  // 2018.06.14 금액 bold 처리위해 EDIT 컴포넌트 추가
					
				if (edt_resn_amt.value == "0") {
					edt_resn_pay_amt.value = "0";
				} else {
					var sResnAmt2 = ds_resnPayInq.getColumn(0, "resn_amt2");
					var sDcAmt = ds_resnPayInq.getColumn(0, "dc_amt");
					var sUseAmt = ds_resnPayInq.getColumn(0, "use_amt"); // 쇼핑몰 실 사용금액
					
					/* (해약등록 전) 실지급금액 연산 추가 (** 쇼핑몰 실 사용금액 감산 처리 추가) - 2018.01.22 */
					//edt_resn_pay_amt.value = gfn_setComma(sResnAmt - sDcAmt);					
					edt_resn_pay_amt.value = gfn_setComma(sResnAmt2 - sDcAmt - sUseAmt);
					
				}
					
				// 해약수입금 계산
				if (ds_resnPayInq.getColumn(0, "resn_gubn") == "02") {
					gv_totalPay = ds_resnPayInq.getColumn(0, "pay_amt");
				} else {
					gv_totalPay = ds_resnPayInq.getColumn(0, "pay_amt1");
				}
				
				gv_dc_pay = ds_resnPayInq.getColumn(0, "dc_amt");
					
				fn_payInc();
				fn_srchCmsInfo();
			break;
			
			// 해약구분(해약/청약)
			case "srchResnGubn":
				if (gv_resn_gubn == 0) {
					//cbo_resn_cl.value = "01";	// 해약방법(해약)
					cbo_resn_cl.value = "";	// 해약방법
					fn_setDlwCd("82");
					
					stc_txt_sbmt_ddln.visible = false;
				} else if (gv_resn_gubn == 1) {
					btn_resn_dsps01.visible = false;
					btn_resn_dsps02.visible = false;
					
					//cbo_resn_cl.value = "02";	// 해약방법(청약철회)
					cbo_resn_cl.value = "";	// 해약방법
					fn_setDlwCd("83");					
					
					stc_txt_sbmt_ddln.visible = false;
					btn_sbmt_ddln.visible = false;
				}
			break;
			
			case "srchResnGubnEvt":
			    gv_resn_gubn_cbo = cbo_resn_cl.value;
			    
				// 해약에 따른 사유 콤보박스 변경
				if (gv_resn_gubn == 0) {
					fn_setDlwCd("82");
				//	btn_resn_dsps01.visible = true;
					btn_sbmt_ddln.visible = gv_ddlnClsAthr;
				} else {
					btn_resn_dsps01.visible = false;
					btn_resn_dsps02.visible = false;
					btn_sbmt_ddln.visible = false;
					stc_txt_sbmt_ddln.visible = false;
					fn_setDlwCd("83");
				}
			break;
			
			case "updateResnProc2":	// 서류 제출 기한 상실
				fn_regConsChk();
				alert("저장되었습니다.");
				opener.fn_commSearch(gfn_getCommTypeInit());	//	재조회
				close();
			break;
			
			case "updateResn":
				if (ds_inqCndt_resnSave.getColumn(0, "edt_yn") == "N") {
					alert("마감된 데이터는 수정할 수 없습니다.");
					return;
				}
				if (gv_org_resn_acpt_dt != cal_resn_acpt_day.value || gv_org_proc_dt != cal_resn_proc_day.value
				 || gv_org_bank_nm != gv_bank_nm || gv_org_bank_accnt_no != edt_bank_accnt_no.value
				 || gv_org_depr != edt_depr.value || gv_org_resn_pay_amt != (edt_resn_amt.value).replace(",", "")
				 || gv_org_note != edt_note.value) {
					fn_regCons();
				}
				alert("저장되었습니다.");
				opener.fn_commSearch(gfn_getCommTypeInit());	//	재조회
				close();
			break;
			
			case "insertResn":
				if (ds_inqCndt_resnSave.getColumn(0, "edt_yn") == "N") {
					alert("마감된 데이터는 수정할 수 없습니다.");
					return;
				}
				
				var sResnProcYn = ds_inqCndt_resnSave.getColumn(0, "resn_proc_yn");
				if (ds_inqCndt_resnSave.getColumn(0, "msg") == "success") {
					if (!gfn_isNull(sResnProcYn) && sResnProcYn == "Y") {
						btn_resn_dsps01.visible = false; // 해약처리01
						fn_elementDisable(false);
					}
					
					fn_regCons(sResnProcYn);	// 상담기록 저장
					
					// 결합상품의 해약일 경우 결합상품 금액의 청구가 완료되지 않으면 Cms자동 해지 되지 않도록 수정
					var sResnProcCl = "";
					if (!gfn_isNull(sResnProcYn) && sResnProcYn == "Y") {
						sResnProcCl = "proc";
					} else {
						sResnProcCl = "";
					}
					
					fn_chkB2bPay(sResnProcCl);
				} else {
					alert("에러가 발생하였습니다.");
				}
			break;
			
			case "chkB2bPay":
				// Y(CMS 해지가능), F(CMS 해지불가)
				if (checkB2bPay == "Y") {
					if (gv_cmsInitYn == "Y") {	// cms 초기화 성공이면 부가서비스 해지
						if (gv_chkNum == 0) {
							if (gv_resnProcCl == "proc") {
								fn_selectAccntInfo(edt_accnt_no.value);
							} else {
								fn_delCmsInfo();
								++gv_chkNum;
							}
						} else {
							alert("저장되었습니다.");
							opener.fn_commSearch(gfn_getCommTypeInit());	//	재조회
							close();
						}
					} else {
						alert("저장되었습니다.");
						opener.fn_commSearch(gfn_getCommTypeInit());	//	재조회
						close();
					}
				} else {
					alert("저장되었습니다.");
					opener.fn_commSearch(gfn_getCommTypeInit());	//	재조회
					close();
				}
				gv_resnProcCl = "";
			break;
			
			case "selectAccntInfo":
				if (ds_accntMap.rowcount > 0) {
					if (ds_accntMap.getColumn(0, "del_fg") == "N") {
						fn_saveCmsRgsnAnxtSrvc(); // 부가서비스 실제 해지(금결원)모듈 호출
					} else {
						alert("저장되었습니다.");
						opener.fn_commSearch(gfn_getCommTypeInit());	//	재조회
						close();
					}
				} else {
					alert("저장되었습니다.");
					opener.fn_commSearch(gfn_getCommTypeInit());	//	재조회
					close();
				}
			break;
			
			case "saveCmsRgsnAnxtSrvc":
				alert("저장되었습니다.");
				opener.fn_commSearch(gfn_getCommTypeInit());	//	재조회
				close();
			break;
			
			case "delCmsInfo":
				alert("저장되었습니다.");
				opener.fn_commSearch(gfn_getCommTypeInit());	//	재조회
				close();
			break;
			
			case "updateResnProc":
				fn_regCons("Y");
				fn_chkB2bPay("proc");
			break;
			
			case "resnDel":
				if (ds_resnDel.getColumn(0, "edt_yn") == "N") {
					alert("마감된 데이터는 수정할 수 없습니다.");
					return;
				}
				var sNewYn = ds_resnDel.getColumn(0, "new_yn");
				if (sNewYn == "Y" || sNewYn == "E") {
				} else {
					alert("공제 조합에 해약 신고된 건입니다.\n공제전송모듈에서 해약취소 전문 전송 후\n해약취소를 진행하시기 바랍니다.");
					return;
				}
				
				fn_cnclReg(); // 취소 내역 등록 
			break;
			
			case "cnclReg":
				fn_regCancelCons();	// 상담내역 등록
				alert("삭제되었습니다.");
				opener.fn_commSearch(gfn_getCommTypeInit());	//	재조회
				close();
			break;
			
			case "getPerfMainPayAmt" :
				if(ds_listPerfMain.getRowCount() > 0)
				{
					edt_resn_pay_amt.value = gfn_setComma(ds_listPerfMain.getColumn(ds_listPerfMain.rowposition, "perf_amt"));
					edt_perf_amt.value     = gfn_setComma(ds_listPerfMain.getColumn(ds_listPerfMain.rowposition, "perf_amt"));
				}
				else
				{
					edt_resn_pay_amt.value = gfn_setComma(ds_resnDtpt.getColumn(0, "resn_pay_amt"));
					edt_perf_amt.value     = 0;
				}
			break;
			
			case "getCodeBank" :
				if(ds_codeBank.getRowCount() > 0)
				{
					edt_bank_cd.value = ds_codeBank.getColumn(0, "cd");
					edt_bank_nm.value = ds_codeBank.getColumn(0, "cd_nm");
					edt_bank_cd.enable = false;
					edt_bank_nm.enable = false;
				}
				else
				{
					edt_bank_cd.enable = true;
					edt_bank_nm.enable = true;
				}
			break;
			
			case "getTsConfirmSend" :				
				if (xTsConfirmResultMsg == "정상조회")
				{
					edt_tsConfirmMsg.value = "성공 : 통장확인이 완료되었습니다.";
					btn_tsConfirm.enable = false;
					return false;
				}
				else
				{
					edt_tsConfirmMsg.value = xTsConfirmResultMsg;
					btn_tsConfirm.enable = true;
					xTsConfirmResultMsg = "";
					return false;
				}
			break;
		}
	}
}

/********************************************************************************************/
/**   4. Validation 처리                                                                   	*/
/********************************************************************************************/
// 서류 제출 마감, 해약 처리 및 해약 저장전
function fn_preEvtVldtChk1()		// eventValidationcheck1
{
	// 해약처리일자를 넣을 경우 관계에 따른 해약관련 서류 필수 항목 유효성 체크
	if (gfn_isNull(cal_resn_proc_day.value)) {
		alert("해약처리일을 입력하십시요.");
		return false;
	} else {
		// 기본적으로 관계 유효성체크를 하므로 타지않는 조건, 보험용으로 넣어둠
		if (gfn_isNull(cbo_reltn.value)) {
			alert("관계를 선택하세요.");
			cbo_reltn.setFocus();
			return false;
		}
	}
	
	if(gfn_isNull(cbo_reson.value)) {
		alert("고객사유를 선택해 주세요.");
		cbo_reson.setFocus();
		return false;
	}
	
	if(gfn_isNull(edt_bank_accnt_no.value)) {
		var sCalcMthd = cbo_calc_mthd.value;
		
		if(sCalcMthd == "0001") 
		{
			alert("계좌번호를 입력해주세요.");
			edt_bank_accnt_no.setFocus();
			return false;
		}
		else
		{
			if(gfn_isNull(edt_card_no.value)){
				alert("카드번호를 입력해주세요.");
				return false;
			}			
		}						
	}
	
	if(gfn_isNull(cbo_resn_cl.value))
	{
		alert("해약방법을 선택하여 주십시오.");
		cbo_resn_cl.setFocus();
		return false;
	}
	
	var sReson = cbo_reson.value;
	
	var fv_emple_no = gfn_getUserInfo("user_id");
	
	if (fv_emple_no != '2017120011') {	
		if(sReson != "23" && (cal_resn_acpt_day.value > xMangiDate))
		{
			alert("해당 회원은 만기환급 회원 입니다. 고객사유를 다시 선택 후 해약 처리 부탁 드립니다.");
			return false;
		}
	}
	
	return true;
}

// data validation check
function fn_preEvtVldtChk()	// eventValidationcheck
{
	if (gfn_isNull(edt_accnt_no.value)) {
		alert("회원정보를 입력하세요.");
		edt_accnt_no.setFocus();
		return false;
	}
	if (gfn_isNull(edt_mem_nm.value)) {
		alert("회원이름을 입력하세요.");
		edt_mem_nm.setFocus();
		return false;
	}
	if (gfn_isNull(edt_emple_no.value)) {
		alert("회원을 검색하세요.");
		edt_accnt_no.setFocus();
		return false;
	}
	if (gfn_isNull(cal_resn_acpt_day.value)) {
		alert("해약접수일을 입력하세요.");
		cal_resn_acpt_day.setFocus();
		return false;
	}
	if (gfn_isNull(cbo_reltn.value)) {
		alert("관계를 선택하세요.");
		cbo_reltn.setFocus();
		return false;
	}
	if (gfn_isNull(edt_resn_man.value)) {
		alert("해약자를 입력하세요.");
		edt_resn_man.setFocus();
		return false;
	}
	if (gfn_isNull(edt_tel_no.value)) {
		alert("전화번호를 입력하세요.");
		edt_tel_no.setFocus();
		return false;
	}
	if (gfn_isNull(cal_brth_mon_day.value)) {
		alert("생년월일을 입력하세요.");
		cal_brth_mon_day.setFocus();
		return false;
	}
	if (gfn_isNull(edt_resn_pay_amt.value)) {
		alert("실지급금액을 입력하세요.");
		edt_resn_pay_amt.setFocus();
		return false;
	}
	if (gfn_isNull(edt_resn_plus.value)) {
		alert("해약수입금을 입력하세요.");
		edt_resn_plus.setFocus();
		return false;
	}
	if (gfn_isNull(cbo_acpt_mthd.value)) {
		alert("접수방법을 선택하세요.");
		cbo_acpt_mthd.setFocus();
		return false;
	}
	var sToday = gfn_getToday();
	if (cal_resn_proc_day.value > sToday) {
		alert("해약처리일이 오늘보다 클 수 없습니다.");
		cal_resn_proc_day.setFocus();
		return false;
	}
	
	if(gfn_isNull(cbo_reson.value)) {
		alert("고객사유를 선택해 주세요.");
		cbo_reson.setFocus();
		return false;
	}
	
	if(gfn_isNull(edt_bank_accnt_no.value)) {
		var sCalcMthd = cbo_calc_mthd.value;
		
		if(sCalcMthd == "0001") 
		{
			alert("계좌번호를 입력해주세요.");
			edt_bank_accnt_no.setFocus();
			return false;
		}
		else
		{
			if(gfn_isNull(edt_card_no.value)){
				alert("카드번호를 입력해주세요.");
				return false;
			}			
		}						
	}
	
	if(gfn_isNull(cbo_resn_cl.value))
	{
		alert("해약방법을 선택하여 주십시오.");
		cbo_resn_cl.setFocus();
		return false;
	}
	
	var sReson = cbo_reson.value;
	var fv_emple_no = gfn_getUserInfo("user_id");
	
	if (fv_emple_no != '2017120011') {
		if(sReson != "23" && (cal_resn_acpt_day.value > xMangiDate))
		{
			alert("해당 회원은 만기환급 회원 입니다.");
			return false;
		}
	}
	return true;
}

function fn_preSaveCmsRgsnAnxtSrvc() {// CMS 부가서비스 등록
	var accnt_no = ds_accntMap.getColumn(0, "accnt_no");
 	var mem_no = ds_accntMap.getColumn(0, "mem_no");
 	var mem_nm = ds_accntMap.getColumn(0, "depr");
 	var idn_no = ds_accntMap.getColumn(0, "idn_no");
	var bank_cd = ds_accntMap.getColumn(0, "bank_cd");
	var inv_tg_dt = ds_accntMap.getColumn(0, "ichae_dt");
	var bank_accnt_no = ds_accntMap.getColumn(0, "bank_accnt_no");
	var rltn_cd = ds_accntMap.getColumn(0, "reltn");
	var depr_cell = ds_accntMap.getColumn(0, "depr_cell");
	
	var acpt_mthd = "04";
	var app_cl = "3";
	
	ds_rgsnCms.clearData();
	ds_rgsnCms.addRow();
	ds_rgsnCms.setColumn(0, "accnt_no", accnt_no);
	ds_rgsnCms.setColumn(0, "mem_no", mem_no);
	ds_rgsnCms.setColumn(0, "mem_nm", mem_nm);
	ds_rgsnCms.setColumn(0, "idn_no", idn_no);
	ds_rgsnCms.setColumn(0, "bank_cd",  bank_cd);
	ds_rgsnCms.setColumn(0, "bank_accnt_no", bank_accnt_no);
	ds_rgsnCms.setColumn(0, "inv_tg_dt", inv_tg_dt);
	ds_rgsnCms.setColumn(0, "depr_nm", mem_nm);
	ds_rgsnCms.setColumn(0, "rltn_cd", rltn_cd);
	ds_rgsnCms.setColumn(0, "depr_cell", depr_cell);
		
	ds_rgsnCms.setColumn(0, "rgsn_dt", gfn_getToday());
		
	ds_rgsnCms.setColumn(0, "acpt_mthd", acpt_mthd);
	ds_rgsnCms.setColumn(0, "app_cl", app_cl);
	ds_rgsnCms.setColumn(0, "rltm_web_module", "N");	
	
	return true;
}

/********************************************************************************************/
/**   5. 서비스 호출(gfn_Transaction)                                                   	*/
/********************************************************************************************/
// 해약 상세 정보 조회
function fn_srchResnDtpt()	// resnDetail
{
	var szSvcid       = "srchResnDtpt";
    var szController  = "/dlw/resn/dtpt";
    var szInDs        = "";
    var szOutDs       = "ds_resnDtpt=ds_output";
    var szParam       = "accnt_no="+gv_accnt_no;
    var szRetCallback = "fn_callBack";
	
    // 트랜젝션 공통함수 호출
    gfn_transaction(this, szSvcid, szController, szInDs, szOutDs, szParam, szRetCallback);
}

// 관계-본인일 경우 CMS INFO DISPLAY
function fn_srchCmsInfo()	// cmsInfo
{
	var szSvcid       = "srchCmsInfo";
    var szController  = "/dlw/resn/cms-info";
    var szInDs        = "";
    var szOutDs       = "ds_cmsInfo=ds_output";
    var szParam       = "accnt_no="+edt_accnt_no.value;
    var szRetCallback = "fn_callBack";
	
    // 트랜젝션 공통함수 호출
    gfn_transaction(this, szSvcid, szController, szInDs, szOutDs, szParam, szRetCallback);
}

// 행사 해약  세무 유무 체크   //  콜센터 체크유무
function fn_inputCheck()	// inputCheck
{
	var szSvcid       = "resnInputChk";
    var szController  = "/dlw/resn/input-chk";
    var szInDs        = "";
    var szOutDs       = "ds_inputChk=ds_output";
    var szParam       = "accnt_no="+edt_accnt_no.value;
    var szRetCallback = "fn_callBack";
	
    // 트랜젝션 공통함수 호출
    gfn_transaction(this, szSvcid, szController, szInDs, szOutDs, szParam, szRetCallback);
}

// 회원번호 조회
function fn_srchAccntNo()
{   
    ds_inqCndt_accnt.clearData();
	ds_inqCndt_accnt.addRow();
	ds_inqCndt_accnt.setColumn(0, "srch_typ", "accnt_no");
	ds_inqCndt_accnt.setColumn(0, "srch_vl", gv_accnt_no);
	ds_inqCndt_accnt.setColumn(0, "option", "");
	ds_inqCndt_accnt.setColumn(0, "ichae_stt_dt", "");
	ds_inqCndt_accnt.setColumn(0, "ichae_end_dt", "");
	ds_inqCndt_accnt.setColumn(0, "ns_yn", "N");
	
	var szSvcid       = "selectCustAccnt";
    var szController  = "/dlw/cust/cust-acnt/list";
    var szInDs        = "ds_input=ds_inqCndt_accnt";
    var szOutDs       = "ds_accnt_info=ds_output";
    var szParam       = "";
    var szRetCallback = "fn_setAccntNo";

    // 트랜젝션 공통함수 호출
    gfn_transaction(this, szSvcid, szController, szInDs, szOutDs, szParam, szRetCallback);
}

// 구좌번호로 해약금 조회
function fn_srchResnPayInq()	// resnPayInq
{
	ds_inqCndt_resnPayInq.clearData();
	ds_inqCndt_resnPayInq.addRow();
	ds_inqCndt_resnPayInq.setColumn(0, "accnt_no", ds_accnt_info.getColumn(0, "accnt_no"));
	ds_inqCndt_resnPayInq.setColumn(0, "r_gubn", gv_resn_gubn_cbo);
	ds_inqCndt_resnPayInq.setColumn(0, "join_dt", cal_join_dt.value);
	
	var szSvcid       = "srchResnPayInq";
    var szController  = "/dlw/resn/pay-inq";  
    var szInDs        = "ds_input=ds_inqCndt_resnPayInq";
    var szOutDs       = "ds_resnPayInq=ds_output";
    var szParam       = "";
    var szRetCallback = "fn_callBack";
	
    // 트랜젝션 공통함수 호출
    gfn_transaction(this, szSvcid, szController, szInDs, szOutDs, szParam, szRetCallback);
}

// 해약구분(해약/청약)
function fn_srchResnGubn(p_svcId)	// resnGubn, resnGubnEvent
{
	if (cbo_resn_cl.value == "04") {	// 해약방법
		edt_resn_pay_amt.value = edt_pay_amt1.value;
	} else {	
		var szSvcid       = p_svcId;
		var szController  = "/dlw/resn/gubn";
		var szInDs        = "";
		var szOutDs       = "";
		var szParam       = "accnt_no="+ds_accnt_info.getColumn(0, "accnt_no");
		var szRetCallback = "fn_callBack";
		
		// 트랜젝션 공통함수 호출
		gfn_transaction(this, szSvcid, szController, szInDs, szOutDs, szParam, szRetCallback);
    }
}

// 서류 제출 기한 마감
function fn_sbmtDdln()
{
	if (confirm("서류제출 기한을 마감하시겠습니까?")) {
		if (!fn_preEvtVldtChk1()) return false;
		
		ds_inqCndt_sbmtDdln.clearData();
		ds_inqCndt_sbmtDdln.addRow();
		ds_inqCndt_sbmtDdln.setColumn(0, "accnt_no", edt_accnt_no.value);
		ds_inqCndt_sbmtDdln.setColumn(0, "resn_proc_yn", "Y");
		ds_inqCndt_sbmtDdln.setColumn(0, "chk_submit", "Y");
		if (chk_death.visible && chk_death.value == "Y") {
			ds_inqCndt_sbmtDdln.setColumn(0, "chk_death", chk_death.value);
		} else {
			ds_inqCndt_sbmtDdln.setColumn(0, "chk_death", "");
		}
		// 해약 처리일이 있는 경우 체크된 필수사항 저장
		if (chk_a.visible && chk_a.value == "Y") {
			ds_inqCndt_sbmtDdln.setColumn(0, "chk_a", chk_a.value);
		} else {
			ds_inqCndt_sbmtDdln.setColumn(0, "chk_a", "");
		}
		if (chk_b.visible && chk_b.value == "Y") {
			ds_inqCndt_sbmtDdln.setColumn(0, "chk_b", chk_b.value);
		} else {
			ds_inqCndt_sbmtDdln.setColumn(0, "chk_b", "");
		}
		if (chk_g.visible && chk_g.value == "Y") {
			ds_inqCndt_sbmtDdln.setColumn(0, "chk_g", chk_g.value);
		} else {
			ds_inqCndt_sbmtDdln.setColumn(0, "chk_g", "");
		}
		if (chk_c.visible && chk_c.value == "Y") {
			ds_inqCndt_sbmtDdln.setColumn(0, "chk_c", chk_c.value);
		} else {
			ds_inqCndt_sbmtDdln.setColumn(0, "chk_c", "");
		}
		if (chk_d.visible && chk_d.value == "Y") {
			ds_inqCndt_sbmtDdln.setColumn(0, "chk_d", chk_d.value);
		} else {
			ds_inqCndt_sbmtDdln.setColumn(0, "chk_d", "");
		}
		if (chk_e.visible && chk_e.value == "Y") {
			ds_inqCndt_sbmtDdln.setColumn(0, "chk_e", chk_e.value);
		} else {
			ds_inqCndt_sbmtDdln.setColumn(0, "chk_e", "");
		}
		if (chk_death.visible && chk_death.value == "Y" && chk_f.visible && chk_f.value == "Y") {
			ds_inqCndt_sbmtDdln.setColumn(0, "chk_f", chk_f.value);
		} else {
			ds_inqCndt_sbmtDdln.setColumn(0, "chk_f", "");
		}
		if (chk_cmsWdrwReqYn.visible && chk_cmsWdrwReqYn.value == "Y") {
			ds_inqCndt_sbmtDdln.setColumn(0, "chk_cmsWdrwReqYn", chk_cmsWdrwReqYn.value);
		} else {
			ds_inqCndt_sbmtDdln.setColumn(0, "chk_cmsWdrwReqYn", "");
		}
		
		var szSvcid       = "updateResnProc2";
		var szController  = "/dlw/resn/update/proc";
		var szInDs        = "ds_input=ds_inqCndt_sbmtDdln";
		var szOutDs       = "";
		var szParam       = "";
		var szRetCallback = "fn_callBack";
		
		// 트랜젝션 공통함수 호출
		gfn_transaction(this, szSvcid, szController, szInDs, szOutDs, szParam, szRetCallback);
	}
}

// 상담내역 기록 - 제출기한마감
function fn_regConsChk()	// regConsulchk
{
	ds_inqCndt_regCons.clearData();
	ds_inqCndt_regCons.addRow();
	ds_inqCndt_regCons.setColumn(0, "accnt_no", edt_accnt_no.value);
	ds_inqCndt_regCons.setColumn(0, "mem_no", ds_accnt_info.getColumn(0, "mem_no"));
	ds_inqCndt_regCons.setColumn(0, "cons_memo_tit", "제출기한마감");
	var sCnslDtlCon = cbo_resn_cl.text + " 서류제출마감일 : " + gfn_getToday() 
	                     + " 마감사원번호 : " + gds_UserInfo.getColumn(0, "user_id") 
	                     + " 마감사원명 : " + gds_UserInfo.getColumn(0, "user_nm");
	ds_inqCndt_regCons.setColumn(0, "cons_memo_cntn", sCnslDtlCon);
	
	var szSvcid       = "insertConsEtc";
	var szController  = "/dlw/resn/insert/etc";
	var szInDs        = "ds_input=ds_inqCndt_regCons";
	var szOutDs       = "";
	var szParam       = "";
	var szRetCallback = "";
		
	// 트랜젝션 공통함수 호출
	gfn_transaction(this, szSvcid, szController, szInDs, szOutDs, szParam, szRetCallback);
}

// 해약 저장
function fn_resnSave()	// resnSave
{
	if (confirm("저장하시겠습니까?")) {
		fn_payInc();
		
		if (!fn_preEvtVldtChk()) return false;
		
		ds_inqCndt_resnSave.clearData();
		ds_inqCndt_resnSave.addRow();
		
		var sSvcId = "";
		if (gv_gubun == "update") {	// update
			sSvcId = "updateResn";
			ds_inqCndt_resnSave.setColumn(0, "mem_no", ds_accnt_info.getColumn(0, "mem_no"));
			ds_inqCndt_resnSave.setColumn(0, "accnt_no", edt_accnt_no.value);
		} else {					// insert
			sSvcId = "insertResn";
			ds_inqCndt_resnSave.setColumn(0, "mem_no", ds_accnt_info.getColumn(0, "mem_no"));
			ds_inqCndt_resnSave.setColumn(0, "accnt_no", ds_accnt_info.getColumn(0, "accnt_no"));
		}
		
		ds_inqCndt_resnSave.setColumn(0, "resn_cl", cbo_resn_cl.value);				// 해약방법
		ds_inqCndt_resnSave.setColumn(0, "resn_acpt_day", cal_resn_acpt_day.value);	// 해약접수일
		ds_inqCndt_resnSave.setColumn(0, "reltn", cbo_reltn.value);					// 관계
		ds_inqCndt_resnSave.setColumn(0, "resn_man", edt_resn_man.value);			// 해약자
		
		ds_inqCndt_resnSave.setColumn(0, "mem_tel", edt_tel_no.value);				// 전화번호
		ds_inqCndt_resnSave.setColumn(0, "note", edt_note.value);					// 비고
		ds_inqCndt_resnSave.setColumn(0, "resn_proc_day", cal_resn_proc_day.value);	// 해약처리일
		ds_inqCndt_resnSave.setColumn(0, "resn_remit_day", cal_resn_remit_day.value);// 해약송금일
		ds_inqCndt_resnSave.setColumn(0, "acpt_mthd", cbo_acpt_mthd.value);			// 접수방법
		
		ds_inqCndt_resnSave.setColumn(0, "reson", cbo_reson.value);					// 고객사유
		ds_inqCndt_resnSave.setColumn(0, "resn_amt", edt_resn_amt.value);			// 해약금
		ds_inqCndt_resnSave.setColumn(0, "resn_amt2", edt_resn_amt2.value);			// 해약금
		
		ds_inqCndt_resnSave.setColumn(0, "resn_pay_amt", edt_resn_pay_amt.value);	// 실지급금액
		ds_inqCndt_resnSave.setColumn(0, "resn_plus", edt_resn_plus.value);			// 해약수입금
		ds_inqCndt_resnSave.setColumn(0, "reson_cmp", cbo_reson_cmp.value);			// 회사사유
		
		var sCalcMthd = cbo_calc_mthd.value;
		ds_inqCndt_resnSave.setColumn(0, "calc_mthd", sCalcMthd);			// 환급금정산
		if (sCalcMthd == "0001") {
			ds_inqCndt_resnSave.setColumn(0, "bank_accnt_no", edt_bank_accnt_no.value);	// 계좌번호
			ds_inqCndt_resnSave.setColumn(0, "bank_cd", edt_bank_cd.value);				// 은행코드
			ds_inqCndt_resnSave.setColumn(0, "bank_nm", edt_bank_nm.value);				// 은행명
			if (edt_depr.value == null) {
			   edt_depr.value ="";
			} 
			var sDepr = edt_depr.value;
			sDepr = sDepr.substring(0,24);
			ds_inqCndt_resnSave.setColumn(0, "depr", sDepr);					        // 예금주
			ds_inqCndt_resnSave.setColumn(0, "card_no", "");							// 카드번호
			ds_inqCndt_resnSave.setColumn(0, "card_cd", "");							// 카드코드
		} else {
			ds_inqCndt_resnSave.setColumn(0, "bank_accnt_no", "");						// 계좌번호
			ds_inqCndt_resnSave.setColumn(0, "bank_cd", "");							// 은행코드
			ds_inqCndt_resnSave.setColumn(0, "bank_nm", "");							// 은행명
			ds_inqCndt_resnSave.setColumn(0, "depr", "");								// 예금주
			ds_inqCndt_resnSave.setColumn(0, "card_no", edt_card_no.value);				// 카드번호
			ds_inqCndt_resnSave.setColumn(0, "card_cd", cbo_card_cd.value);				// 카드코드
		}
		
		if (chk_cmsWdrwReqYn.visible && chk_cmsWdrwReqYn.value == "Y") {
			ds_inqCndt_resnSave.setColumn(0, "cmsWdrwReqYn", "Y");					// 결합상품 CMS/카드 산출
		} else {
			ds_inqCndt_resnSave.setColumn(0, "cmsWdrwReqYn", "");
		}
		if (chk_death.visible && chk_death.value == "Y") {
			ds_inqCndt_resnSave.setColumn(0, "chk_death", chk_death.value);
		} else {
			ds_inqCndt_resnSave.setColumn(0, "chk_death", "");
		}
		// 해약 처리일이 있는 경우 체크된 필수사항 저장
		if (chk_a.visible && chk_a.value == "Y") {
			ds_inqCndt_resnSave.setColumn(0, "chk_a", chk_a.value);
		} else {
			ds_inqCndt_resnSave.setColumn(0, "chk_a", "");
		}
		if (chk_b.visible && chk_b.value == "Y") {
			ds_inqCndt_resnSave.setColumn(0, "chk_b", chk_b.value);
		} else {
			ds_inqCndt_resnSave.setColumn(0, "chk_b", "");
		}
		if (chk_g.visible && chk_g.value == "Y") {
			ds_inqCndt_resnSave.setColumn(0, "chk_g", chk_g.value);
		} else {
			ds_inqCndt_resnSave.setColumn(0, "chk_g", "");
		}
		if (chk_c.visible && chk_c.value == "Y") {
			ds_inqCndt_resnSave.setColumn(0, "chk_c", chk_c.value);
		} else {
			ds_inqCndt_resnSave.setColumn(0, "chk_c", "");
		}
		if (chk_d.visible && chk_d.value == "Y") {
			ds_inqCndt_resnSave.setColumn(0, "chk_d", chk_d.value);
		} else {
			ds_inqCndt_resnSave.setColumn(0, "chk_d", "");
		}
		if (chk_e.visible && chk_e.value == "Y") {
			ds_inqCndt_resnSave.setColumn(0, "chk_e", chk_e.value);
		} else {
			ds_inqCndt_resnSave.setColumn(0, "chk_e", "");
		}
		if (chk_death.visible && chk_death.value == "Y" && chk_f.visible && chk_f.value == "Y") {
			ds_inqCndt_resnSave.setColumn(0, "chk_f", chk_f.value);
		} else {
			ds_inqCndt_resnSave.setColumn(0, "chk_f", "");
		}
		
		ds_inqCndt_resnSave.setColumn(0, "bank_no_yn", chk_bankYn.value);			// 2018.02.27 CMS이면 타계좌 선택 저장...
		ds_inqCndt_resnSave.setColumn(0, "shopping_use_amt", edt_use_amt.value);		// 2018.02.27 쇼핑사용금액 저장...
		
		
		var szSvcid       = sSvcId;
		var szController  = "/dlw/resn/save/"+sSvcId;
		var szInDs        = "ds_input=ds_inqCndt_resnSave";
		var szOutDs       = "ds_inqCndt_resnSave=ds_output";
		var szParam       = "";
		var szRetCallback = "fn_callBack";
			
		// 트랜젝션 공통함수 호출
		gfn_transaction(this, szSvcid, szController, szInDs, szOutDs, szParam, szRetCallback);
	}
}

// 상담내역 기록
function fn_regCons(sType)		// regConsul
{
	var sResnCl = cbo_resn_cl.value;
	
	ds_inqCndt_regCons.clearData();
	ds_inqCndt_regCons.addRow();
	ds_inqCndt_regCons.setColumn(0, "mem_no", ds_accnt_info.getColumn(0, "mem_no"));
	
	if (gv_gubun == "insert") {
		ds_inqCndt_regCons.setColumn(0, "accnt_no", ds_accnt_info.getColumn(0, "accnt_no"));
		
		if (sType == "Y") {
			ds_inqCndt_regCons.setColumn(0, "cons_memo_tit", "해약처리 완료");
		} else {
			if (sResnCl == "01") {
				ds_inqCndt_regCons.setColumn(0, "cons_memo_tit", "해약등록 정보");
			} else if (sResnCl == "02") {
				ds_inqCndt_regCons.setColumn(0, "cons_memo_tit", "철회등록 정보");
			} else if (sResnCl == "03") {
				ds_inqCndt_regCons.setColumn(0, "cons_memo_tit", "무환급해약등록 정보");
			}
		}
	} else {
		ds_inqCndt_regCons.setColumn(0, "accnt_no", edt_accnt_no.value);
		
		if (sType == "Y") {
			ds_inqCndt_regCons.setColumn(0, "cons_memo_tit", "해약처리 완료");
		} else {
			if (sResnCl == "01") {
				ds_inqCndt_regCons.setColumn(0, "cons_memo_tit", "해약수정 정보");
			} else if (sResnCl == "02") {
				ds_inqCndt_regCons.setColumn(0, "cons_memo_tit", "철회수정 정보");
			} else if (sResnCl == "03") {
				ds_inqCndt_regCons.setColumn(0, "cons_memo_tit", "무환급해약수정 정보");
			}
		}
	}
	
	var sConsMemoCntn = "";
	var sResnCl = cbo_resn_cl.value;	// 방법
	var sNote = edt_note.value;
	if (gfn_isNull(sNote)) sNote = "";
	if (cbo_calc_mthd.value == "0001") {
		sConsMemoCntn = sResnCl + "등록일 : " + cal_resn_acpt_day.value + "\n"
		              + sResnCl + "처리일 : " + cal_resn_proc_day.value + "\n"
		              + sResnCl + "은행명 : " + gv_bank_nm + "\n"
		              + sResnCl + "계좌번호 : " + edt_bank_accnt_no.value + "\n"
		              + sResnCl + "예금주 : " + edt_depr.value + "\n"
		              + sResnCl + "실지급금액 : " + edt_resn_pay_amt.value + "\n"
		              + sResnCl + "비고 : " + sNote + "\n";
	} else {
		sConsMemoCntn = sResnCl + "등록일 : " + cal_resn_acpt_day.value + "\n"
		              + sResnCl + "처리일 : " + cal_resn_proc_day.value + "\n"
		              + sResnCl + "카드사 : " + cbo_card_cd.text + "\n"
		              + sResnCl + "카드번호 : " + edt_card_no.value + "\n"
		              + sResnCl + "실지급금액 : " + edt_resn_pay_amt.value + "\n"
		              + sResnCl + "비고 : " + sNote + "\n";
	}
	ds_inqCndt_regCons.setColumn(0, "cons_memo_cntn", sConsMemoCntn);
	
	var szSvcid       = "insertConsEtc";
	var szController  = "/dlw/resn/insert/etc";
	var szInDs        = "ds_input=ds_inqCndt_regCons";
	var szOutDs       = "";
	var szParam       = "";
	var szRetCallback = "";
			
	// 트랜젝션 공통함수 호출
	gfn_transaction(this, szSvcid, szController, szInDs, szOutDs, szParam, szRetCallback);
}

// 결합상품(PROD_CD :03)의 경우 부가상품의 할부원금이 남았는지 아닌지 확인한다
// return - Y(남아있지 않음, CMS 해지가능), F(남아있음, CMS 해지불가)
function fn_chkB2bPay(sType)	// fnChkB2bPay
{
	gv_resnProcCl = sType;
	
	var szSvcid       = "chkB2bPay";
	var szController  = "/dlw/evnt/check-b2b-pay";
	var szInDs        = "";
	var szOutDs       = "";
	var szParam       = "accnt_no="+edt_accnt_no.value;
	var szRetCallback = "fn_callBack";
			
	// 트랜젝션 공통함수 호출
	gfn_transaction(this, szSvcid, szController, szInDs, szOutDs, szParam, szRetCallback);
}

// 구좌번호 를 받아서 부가서비스 신청에 필요한 정보(계좌)를 읽어온다.
function fn_selectAccntInfo(sType)
{
	var szSvcid       = "selectAccntInfo";
	var szController  = "/dlw/cms/accnt-info";
	var szInDs        = "";
	var szOutDs       = "ds_accntMap=ds_output";
	var szParam       = "accnt_no="+sType;
	var szRetCallback = "fn_callBack";
			
	// 트랜젝션 공통함수 호출
	gfn_transaction(this, szSvcid, szController, szInDs, szOutDs, szParam, szRetCallback);
}

function fn_saveCmsRgsnAnxtSrvc()
{
	if (!fn_preSaveCmsRgsnAnxtSrvc()) return false;
	
	//웹모듈 연동		
	var resl = fn_rltmWebModuleRequest();
	if (!resl) {
		return false;
	}
	var szSvcid       = "saveCmsRgsnAnxtSrvc";
	var szController  = "/dlw/cms/cms-anxt-srvc/save";
	var szInDs        = "ds_input=ds_rgsnCms";
	var szOutDs       = "";
	var szParam       = "";
	var szRetCallback = "fn_callBack";
	
	// 트랜젝션 공통함수 호출
    gfn_transaction(this, szSvcid, szController, szInDs, szOutDs, szParam, szRetCallback);
}

// 해약 발생시 CMS 부가서비스 등록 정보를 해지한다.
function fn_delCmsInfo()	// fnDeleteCmsInfo
{
	var szSvcid       = "delCmsInfo";
	var szController  = "/dlw/resn/delCmsInfo";
	var szInDs        = "";
	var szOutDs       = "ds_accntMap=ds_output";
	var szParam       = "accnt_no="+edt_accnt_no.value;
	var szRetCallback = "fn_callBack";
			
	// 트랜젝션 공통함수 호출
	gfn_transaction(this, szSvcid, szController, szInDs, szOutDs, szParam, szRetCallback);
}

// 해약처리01
function fn_resnDsps01()
{
	if (cbo_reltn.value == "20") {
		if (!(chk_a.value == "Y" && chk_b.value == "Y" && chk_g.value == "Y")) {
			alert("회원신분증사본, 해약신청서, 수령인통장사본 항목을 체크해야합니다.");
			return false;
		}
	}
	
	if (confirm("해약처리하시겠습니까?")) {
		if (!fn_preEvtVldtChk1()) return false;
		
		ds_inqCndt_resnSave.clearData();
		ds_inqCndt_resnSave.addRow();
		
		ds_inqCndt_resnSave.setColumn(0, "mem_no", ds_accnt_info.getColumn(0, "mem_no"));
		ds_inqCndt_resnSave.setColumn(0, "accnt_no", ds_accnt_info.getColumn(0, "accnt_no"));		
		ds_inqCndt_resnSave.setColumn(0, "resn_cl", cbo_resn_cl.value);				// 해약방법
		ds_inqCndt_resnSave.setColumn(0, "resn_acpt_day", cal_resn_acpt_day.value);	// 해약접수일
		ds_inqCndt_resnSave.setColumn(0, "reltn", cbo_reltn.value);					// 관계
		ds_inqCndt_resnSave.setColumn(0, "resn_man", edt_resn_man.value);			// 해약자
		
		ds_inqCndt_resnSave.setColumn(0, "mem_tel", edt_tel_no.value);				// 전화번호
		ds_inqCndt_resnSave.setColumn(0, "note", edt_note.value);					// 비고
		ds_inqCndt_resnSave.setColumn(0, "resn_proc_day", cal_resn_proc_day.value);	// 해약처리일
		ds_inqCndt_resnSave.setColumn(0, "resn_remit_day", cal_resn_remit_day.value);// 해약송금일
		ds_inqCndt_resnSave.setColumn(0, "acpt_mthd", cbo_acpt_mthd.value);			// 접수방법
		
		ds_inqCndt_resnSave.setColumn(0, "reson", cbo_reson.value);					// 고객사유
		ds_inqCndt_resnSave.setColumn(0, "resn_amt", edt_resn_amt.value);			// 해약금
		ds_inqCndt_resnSave.setColumn(0, "resn_amt2", edt_resn_amt2.value);			// 해약금
		ds_inqCndt_resnSave.setColumn(0, "resn_pay_amt", edt_resn_pay_amt.value);	// 실지급금액
		ds_inqCndt_resnSave.setColumn(0, "resn_plus", edt_resn_plus.value);			// 해약수입금
		ds_inqCndt_resnSave.setColumn(0, "reson_cmp", cbo_reson_cmp.value);			// 회사사유
		
		var sCalcMthd = cbo_calc_mthd.value;
		ds_inqCndt_resnSave.setColumn(0, "calc_mthd", sCalcMthd);			// 환급금정산
		if (sCalcMthd == "0001") {
			ds_inqCndt_resnSave.setColumn(0, "bank_accnt_no", edt_bank_accnt_no.value);	// 계좌번호
			ds_inqCndt_resnSave.setColumn(0, "bank_cd", edt_bank_cd.value);				// 은행코드
			ds_inqCndt_resnSave.setColumn(0, "bank_nm", edt_bank_nm.value);				// 은행명
			ds_inqCndt_resnSave.setColumn(0, "depr", edt_depr.value);					// 예금주
			ds_inqCndt_resnSave.setColumn(0, "card_no", "");							// 카드번호
			ds_inqCndt_resnSave.setColumn(0, "card_cd", "");							// 카드코드
		} else {
			ds_inqCndt_resnSave.setColumn(0, "bank_accnt_no", "");						// 계좌번호
			ds_inqCndt_resnSave.setColumn(0, "bank_cd", "");							// 은행코드
			ds_inqCndt_resnSave.setColumn(0, "bank_nm", "");							// 은행명
			ds_inqCndt_resnSave.setColumn(0, "depr", "");								// 예금주
			ds_inqCndt_resnSave.setColumn(0, "card_no", edt_card_no.value);				// 카드번호
			ds_inqCndt_resnSave.setColumn(0, "card_cd", cbo_card_cd.value);				// 카드코드
		}
		
		if (chk_cmsWdrwReqYn.visible && chk_cmsWdrwReqYn.value == "Y") {
			ds_inqCndt_resnSave.setColumn(0, "cmsWdrwReqYn", "Y");					// 결합상품 CMS/카드 산출
		} else {
			ds_inqCndt_resnSave.setColumn(0, "cmsWdrwReqYn", "");
		}
		if (chk_death.visible && chk_death.value == "Y") {
			ds_inqCndt_resnSave.setColumn(0, "chk_death", chk_death.value);
		} else {
			ds_inqCndt_resnSave.setColumn(0, "chk_death", "");
		}
		// 해약 처리일이 있는 경우 체크된 필수사항 저장
		if (chk_a.visible && chk_a.value == "Y") {
			ds_inqCndt_resnSave.setColumn(0, "chk_a", chk_a.value);
		} else {
			ds_inqCndt_resnSave.setColumn(0, "chk_a", "");
		}
		if (chk_b.visible && chk_b.value == "Y") {
			ds_inqCndt_resnSave.setColumn(0, "chk_b", chk_b.value);
		} else {
			ds_inqCndt_resnSave.setColumn(0, "chk_b", "");
		}
		if (chk_g.visible && chk_g.value == "Y") {
			ds_inqCndt_resnSave.setColumn(0, "chk_g", chk_g.value);
		} else {
			ds_inqCndt_resnSave.setColumn(0, "chk_g", "");
		}
		if (chk_c.visible && chk_c.value == "Y") {
			ds_inqCndt_resnSave.setColumn(0, "chk_c", chk_c.value);
		} else {
			ds_inqCndt_resnSave.setColumn(0, "chk_c", "");
		}
		if (chk_d.visible && chk_d.value == "Y") {
			ds_inqCndt_resnSave.setColumn(0, "chk_d", chk_d.value);
		} else {
			ds_inqCndt_resnSave.setColumn(0, "chk_d", "");
		}
		if (chk_e.visible && chk_e.value == "Y") {
			ds_inqCndt_resnSave.setColumn(0, "chk_e", chk_e.value);
		} else {
			ds_inqCndt_resnSave.setColumn(0, "chk_e", "");
		}
		if (chk_death.visible && chk_death.value == "Y" && chk_f.visible && chk_f.value == "Y") {
			ds_inqCndt_resnSave.setColumn(0, "chk_f", chk_f.value);
		} else {
			ds_inqCndt_resnSave.setColumn(0, "chk_f", "");
		}
		
		ds_inqCndt_resnSave.setColumn(0, "resn_proc_yn", "Y");
		
		var szSvcid       = "insertResn";
		var szController  = "/dlw/resn/save/insertResn";
		var szInDs        = "ds_input=ds_inqCndt_resnSave";
		var szOutDs       = "ds_inqCndt_resnSave=ds_output";
		var szParam       = "";
		var szRetCallback = "fn_callBack";
				
		// 트랜젝션 공통함수 호출
		gfn_transaction(this, szSvcid, szController, szInDs, szOutDs, szParam, szRetCallback);
	}
}

// 해약처리02
function fn_resnDsps02()	// resnSave1
{
	if (cbo_reltn.value == "20") {
		if (!(chk_a.value == "Y" && chk_b.value == "Y" && chk_g.value == "Y")) {
			alert("회원신분증사본, 해약신청서, 수령인통장사본 항목을 체크해야합니다.");
			return false;
		}
	}
	
	if (confirm("해약처리와 해약처리 필수 항목이 저장됩니다.\n해약처리하시겠습니까?")) {
		
		if (!fn_preEvtVldtChk1()) return false;
		
		ds_inqCndt_resnSave.clearData();
		ds_inqCndt_resnSave.addRow();
		
		// 회원사망 항목 추가
		if (gv_chk_submit == "Y") {
			ds_inqCndt_resnSave.setColumn(0, "chk_submit", chk_submit);
		} else {
			ds_inqCndt_resnSave.setColumn(0, "chk_submit", "");
		}
		if (chk_cmsWdrwReqYn.visible && chk_cmsWdrwReqYn.value == "Y") {
			ds_inqCndt_resnSave.setColumn(0, "cmsWdrwReqYn", "Y");					// 결합상품 CMS/카드 산출
		} else {
			ds_inqCndt_resnSave.setColumn(0, "cmsWdrwReqYn", "");
		}
		if (chk_death.visible && chk_death.value == "Y") {
			ds_inqCndt_resnSave.setColumn(0, "chk_death", chk_death.value);
		} else {
			ds_inqCndt_resnSave.setColumn(0, "chk_death", "");
		}
		// 해약 처리일이 있는 경우 체크된 필수사항 저장
		if (chk_a.visible && chk_a.value == "Y") {
			ds_inqCndt_resnSave.setColumn(0, "chk_a", chk_a.value);
		} else {
			ds_inqCndt_resnSave.setColumn(0, "chk_a", "");
		}
		if (chk_b.visible && chk_b.value == "Y") {
			ds_inqCndt_resnSave.setColumn(0, "chk_b", chk_b.value);
		} else {
			ds_inqCndt_resnSave.setColumn(0, "chk_b", "");
		}
		if (chk_g.visible && chk_g.value == "Y") {
			ds_inqCndt_resnSave.setColumn(0, "chk_g", chk_g.value);
		} else {
			ds_inqCndt_resnSave.setColumn(0, "chk_g", "");
		}
		if (chk_c.visible && chk_c.value == "Y") {
			ds_inqCndt_resnSave.setColumn(0, "chk_c", chk_c.value);
		} else {
			ds_inqCndt_resnSave.setColumn(0, "chk_c", "");
		}
		if (chk_d.visible && chk_d.value == "Y") {
			ds_inqCndt_resnSave.setColumn(0, "chk_d", chk_d.value);
		} else {
			ds_inqCndt_resnSave.setColumn(0, "chk_d", "");
		}
		if (chk_e.visible && chk_e.value == "Y") {
			ds_inqCndt_resnSave.setColumn(0, "chk_e", chk_e.value);
		} else {
			ds_inqCndt_resnSave.setColumn(0, "chk_e", "");
		}
		if (chk_death.visible && chk_death.value == "Y" && chk_f.visible && chk_f.value == "Y") {
			ds_inqCndt_resnSave.setColumn(0, "chk_f", chk_f.value);
		} else {
			ds_inqCndt_resnSave.setColumn(0, "chk_f", "");
		}
		
		ds_inqCndt_resnSave.setColumn(0, "mem_no", ds_accnt_info.getColumn(0, "mem_no"));
		ds_inqCndt_resnSave.setColumn(0, "accnt_no", edt_accnt_no.value);
		ds_inqCndt_resnSave.setColumn(0, "resn_proc_day", gfn_getToday());
		ds_inqCndt_resnSave.setColumn(0, "resn_proc_yn", "Y");
		
		cal_resn_proc_day.value = gfn_getToday(); //해약처리버튼 클릭후 저장시 처리일이 변경되는 현상 수정
		
		var tmp = String(edt_resn_amt2.value).replace(",","").replace(",","");
		var tmp2 = String(edt_resn_plus.value).replace(",","").replace(",","");
		ds_inqCndt_resnSave.setColumn(0, "resn_amt2", tmp);			// 해약금
		ds_inqCndt_resnSave.setColumn(0, "resn_plus", tmp2);		// 해약수입금	
		
		var szSvcid       = "updateResnProc";
		var szController  = "/dlw/resn/update/proc";
		var szInDs        = "ds_input=ds_inqCndt_resnSave";
		var szOutDs       = "ds_inqCndt_resnSave=ds_output";
		var szParam       = "";
		var szRetCallback = "fn_callBack";
		
		// 트랜젝션 공통함수 호출
		gfn_transaction(this, szSvcid, szController, szInDs, szOutDs, szParam, szRetCallback);
	}
}

// 해약 정보 삭제
function fn_resnDel()	// resnDel
{
	ds_resnDel.clearData();
	ds_resnDel.addRow();
	ds_resnDel.setColumn(0, "mem_no", ds_accnt_info.getColumn(0, "mem_no")); //
	ds_resnDel.setColumn(0, "accnt_no", edt_accnt_no.value);
	ds_resnDel.setColumn(0, "resn_acpt_day", cal_resn_acpt_day.value);

	var szSvcid       = "resnDel";
	var szController  = "/dlw/resn/delete";
	var szInDs        = "ds_input=ds_resnDel";
	var szOutDs       = "ds_resnDel=ds_output";
	var szParam       = "";
	var szRetCallback = "fn_callBack";
				
	// 트랜젝션 공통함수 호출
	gfn_transaction(this, szSvcid, szController, szInDs, szOutDs, szParam, szRetCallback);
}

// 취소 내역 등록
function fn_cnclReg()	// cnclReg
{
	var szSvcid       = "cnclReg";
	var szController  = "/dlw/evnt/cncl-reg";
	var szInDs        = "";
	var szOutDs       = "";
	var szParam       = "accnt_no="+edt_accnt_no.value+" cl=01";
	var szRetCallback = "fn_callBack";
				
	// 트랜젝션 공통함수 호출
	gfn_transaction(this, szSvcid, szController, szInDs, szOutDs, szParam, szRetCallback);
}

// 상담내역 기록 - 해약취소
function fn_regCancelCons()	// regCancelConsul
{
	ds_inqCndt_regCons.clearData();
	ds_inqCndt_regCons.addRow();
	ds_inqCndt_regCons.setColumn(0, "accnt_no", edt_accnt_no.value);
	ds_inqCndt_regCons.setColumn(0, "mem_no", ds_accnt_info.getColumn(0, "mem_no"));
	if (cbo_resn_cl.value == "01") {
		ds_inqCndt_regCons.setColumn(0, "cons_memo_tit", "해약취소 정보");
	} else {
		ds_inqCndt_regCons.setColumn(0, "cons_memo_tit", "철회취소 정보");
	}
	var sCnslDtlCon = cbo_resn_cl.text + " 취소일 : " + gfn_getToday() 
	                     + " 취소사원번호 : " + gds_UserInfo.getColumn(0, "user_id") 
	                     + " 취소사원명 : " + gds_UserInfo.getColumn(0, "user_nm");
	ds_inqCndt_regCons.setColumn(0, "cons_memo_cntn", sCnslDtlCon);
	
	var szSvcid       = "insertConsEtc";
	var szController  = "/dlw/resn/insert/etc";
	var szInDs        = "ds_input=ds_inqCndt_regCons";
	var szOutDs       = "";
	var szParam       = "";
	var szRetCallback = "";
		
	// 트랜젝션 공통함수 호출
	gfn_transaction(this, szSvcid, szController, szInDs, szOutDs, szParam, szRetCallback);
}

/********************************************************************************************/
/**   6. 사용자 함수                                                                   	*/
/********************************************************************************************/
// 권한에 따른 버튼 설정
function fn_setAthrPgmBtn()
{
	gfn_athrPgm(gfn_gdsCd_admin(), "CM000329");
	
	for (var i=0; i<ds_indvFnctAthrPgmFilter.rowcount; i++) {
		if (ds_indvFnctAthrPgmFilter.getColumn(i, "cnpn_id") == "clsDsps") {
			if (ds_indvFnctAthrPgmFilter.getColumn(i, "amnt_yn") == "1") {
				gv_clsDspsAthr = true;
			}
		}
		
		if (ds_indvFnctAthrPgmFilter.getColumn(i, "cnpn_id") == "ddlnCls") {
			if (ds_indvFnctAthrPgmFilter.getColumn(i, "amnt_yn") == "1") {
				gv_ddlnClsAthr = true;
			}
		}
		
		if (ds_indvFnctAthrPgmFilter.getColumn(i, "cnpn_id") == "resnCanc") {
			if (ds_indvFnctAthrPgmFilter.getColumn(i, "amnt_yn") == "1") {
				gv_resnCancAthr = true;
			}
		}
		/******************************************************************
		 2017.08.01 김준호 해약취소권한 요청 - 컨텍센터/이인호
		 정명진 (2016120003), 김나경 (2016080011), 이지혜 (2017060008)
		 이인호 (2016120004), 서경미 (2017060007)  권한 부여
		 2017.08.28 김경욱 테스트 / 진민희 추가
		 2019.05.29 김찬영, 정명진, 김나경 삭제 / 송준빈이름 주석 추가 / 김소연 추가
		 2019.07.08 변희정, 노지혜, 나지식, 김주연 추가 / 서경미, 김소연 주석처리
		 2019.08.01 김수미 추가
		 2019.12.17 우옥두 추가
		 2020.02.28 김효재 추가
		 2020.03.06 최영은 추가
		 2020.03.06 양윤희 추가
		 2020.05.07 이준수 추가
		 2021.01.11 김진아 추가
		 2021.02.02 서인정 추가
		 2021.02.03 이인호, 진민희, 노지혜, 김주연, 구예나 퇴사자 주석처리
		 2021.05.10 이지혜, 변희정 주석처리 / 이채아 추가
		 2021.08.02 이진주 추가
		 2021.09.09 이해영 추가
		 2021.10.18 김주영 추가
		 2021.11.01 김도형 추가
		 2022.01.24 김나라 추가
		 2022.01.24 김유리 추가
		 2022.02.08 김수미 주석처리
		 2022.02.16 김혜자 추가
		 2022.02.16 정종욱 추가
		 2022.03.07 김보선 추가
		 2022.04.07 안지애 추가
		******************************************************************/		
		var fv_emple_no = gfn_getUserInfo("user_id");
		if (fv_emple_no == '2016110099'  // 김경욱 메니저
			|| fv_emple_no == '2017080003' // 김주용
			|| fv_emple_no == '2016112400' // 김경욱테스트
		    || fv_emple_no == '2017080004' // 송준빈
			|| fv_emple_no == '2017110016' // 나지식			
			|| fv_emple_no == '2017120011' // 우옥두
			|| fv_emple_no == '2020020038' // 김효재
			|| fv_emple_no == '2015040053' // 최영은
			|| fv_emple_no == '2016030008' // 양윤희
			|| fv_emple_no == '2020040014' // 이준수
			|| fv_emple_no == '2020110007' // 김진아
			|| fv_emple_no == '2021010012' // 서인정
			|| fv_emple_no == '2020070003' // 이채아
			|| fv_emple_no == '2021070027' // 이진주
			|| fv_emple_no == '2020020016' // 이해영
			|| fv_emple_no == '2021100013' // 김주영
			|| fv_emple_no == '2021100009' // 김도형
			|| fv_emple_no == '2022010017' // 김나라
			|| fv_emple_no == '2022010018' // 김유리
			|| fv_emple_no == '2019120007' // 김혜자
			|| fv_emple_no == '2021120014' // 정종욱
			|| fv_emple_no == '2022030028' // 김보선
			|| fv_emple_no == '2020020011' // 안지애
			|| fv_emple_no == '2022060013' // 정혜영
//			|| fv_emple_no == '2019060003' // 김수미
//			|| fv_emple_no == '2017060008' // 이지혜
//			|| fv_emple_no == '2017110004' // 변희정
//			|| fv_emple_no == '2016120004' // 이인호
// 			|| fv_emple_no == '2014030028' // 진민희
// 			|| fv_emple_no == '2014060006' // 노지혜
// 			|| fv_emple_no == '2018110004' // 김주연
// 			|| fv_emple_no == '2020010017' // 구예나
// 		    || fv_emple_no == '2017060007' // 서경미
// 		    || fv_emple_no == '2019050027' // 김소연 
		    )
		{   
			gv_resnAthr = true;	// 해약처리버튼권한
		}
		// 그룹권한용
		if (ds_indvFnctAthrPgmFilter.getColumn(i, "cnpn_id") == "resn") {
			if (ds_indvFnctAthrPgmFilter.getColumn(i, "amnt_yn") == "1") {
				gv_resnAthr = true;	// 해약처리버튼권한
			}
		}	
	}
}

// 팝업 초기화
function fn_initPop()	// initPopUp
{
	//CMS 실시간웹모듈 초기화
// 	if (gfn_CmsInit() != 1) {
// 		alert("CMS WebModule 초기화 실패\n관리자에게 문의하세요.");
// 		gv_cmsInitYn = "N";
// 	} else {
// 		gv_cmsInitYn = "Y";
// 	}
// 	
	fn_init();
	// 수정이라면 ( 저장후 )
	if (gv_gubun == "update") {
		cbo_resn_cl.enable = false; 		// 해약방법
		cal_resn_acpt_day.enable = false;	// 해약접수일
		edt_accnt_no.enable = false;
		btn_accntNo.visible = false;
		edt_mem_nm.enable = false;
		btn_memNm.visible = false;
		
		fn_srchResnDtpt();
		
		/******************************************************************
		 2017.08.01 김준호 해약처리권한 요청 - 컨텍센터/이인호
		******************************************************************/
		if (gv_resnAthr){
			//btn_save.move(381,43,453,63); //저장버튼 위치를 옮긴다.
			btn_save.move(493,43,565,63); //저장버튼 위치를 옮긴다.
			btn_resn_dsps01.visible = false;		// 해약처리01
			btn_resn_dsps02.visible = true; // 해약처리02버튼
			btn_resn_canc.visible = true;		// 해약취소버튼
			
		}else{
			// 권한이 없으면 둘다 보이지 않는다.
			//btn_save.move(532,43,604,63); //저장버튼 위치를 닫기 옆으로 옮긴다.
			btn_save.move(644,43,716,63); //저장버튼 위치를 닫기 옆으로 옮긴다.
			btn_resn_dsps01.visible = false;		// 해약처리01
			btn_resn_dsps02.visible = false; // 해약처리02버튼
			btn_resn_canc.visible = false;		// 해약취소버튼
		}
// 		if (gv_clsDspsAthr) {
// 			btn_resn_dsps02.position = "absolute 532 43 604 63";
// 		}
// 		btn_resn_dsps02.visible = gv_clsDspsAthr;
		btn_sbmt_ddln.visible = gv_ddlnClsAthr;
		
		if (gv_prod_cd == "N5") {
			stc_txt_emart.visible = true;	// 미적립 이마트 포인트 visible
			edt_point.visible = true;
		} else {
			stc_txt_emart.visible = false;
			edt_point.visible = false;
		}
		
		stc_txt_chk.visible = false;
	} else {
		/******************************************************************
		 2017.08.01 김준호 해약처리권한 요청 - 컨텍센터/이인호
		******************************************************************/
		if (gv_resnAthr){
			//btn_save.move(456,43,528,63); //저장버튼 위치를 옮긴다.
			btn_save.move(568,43,640,63); //저장버튼 위치를 옮긴다.
			btn_resn_dsps01.visible = true;		// 해약처리01
			btn_resn_dsps02.visible = false; // 해약처리02버튼
			btn_resn_canc.visible = false;		// 해약취소버튼
		}else{
			// 권한이 없으면
			//btn_save.move(532,43,604,63); //저장버튼 위치를 닫기 옆으로 옮긴다.
			btn_save.move(644,43,716,63); //저장버튼 위치를 닫기 옆으로 옮긴다.
			btn_resn_canc.visible = false;		// 해약취소
			btn_resn_dsps01.visible = false;	// 해약처리01
			btn_resn_dsps02.visible = false;	// 해약처리02
		}
		
		// 오류 발생시 주석 제거
		//fn_init();
		
		var sToday = gfn_getToday();
		cal_resn_acpt_day.value = sToday;	// 해약접수일
		cal_resn_proc_day.value = sToday; 	// 해약처리일
		
		
		stc_txt_sbmt_ddln.visible = false;	// 서류제출 기한상실
		btn_sbmt_ddln.visible = false;		// 서류제출 기한상실
		
		fn_elementDisable(true);
		
		if(!confirm("해당 회원 해약 접수 진행하시겠습니까?"))
		{
			close();
		}
		stc_txt_chk.visible = true;
	}
}

function fn_init()
{
	// initPopUp => comboBinding => initComponent
	cbo_calc_mthd.index = 0;
	
	if (gv_gubun == "update") {
		cbo_resn_cl.value = gv_resn_cl;		// 해약방법
		cbo_reltn.value = gv_reltn;			// 관계
		
		fn_setReltnCheck1();
		
		cbo_acpt_mthd.value = gv_acpt_mthd;	// 접수방법
		
		cbo_card_cd.value = gv_card_cd;
		cbo_calc_mthd.value = gv_calc_mthd;
		
		if (gv_calc_mthd == "0001") {
			fn_setCompAccnt("cms");
		} else {
			fn_setCompAccnt("card");
		}
		
		// 해약에 따른 사유 콤보박스 변경
		if (gv_resn_cl == "02") {	// 청약해약
			fn_setDlwCd("83");
		} else {					// 해약
			fn_setDlwCd("82");
		}
	} else {
		cbo_reltn.index = 1;		// 관계
		cbo_acpt_mthd.index = 4;	// 접수방법
		
		// 회원 등록 창에서 해약 등록시
		if (!gfn_isNull(gv_accnt_no) && gv_main_yn == "Y") {
			edt_accnt_no.value = gv_accnt_no;
			fn_srchAccntNo();
		//	btn_resn_dsps02.visible = false;	// 해약처리
			btn_sbmt_ddln.visible = false;		// 서류제출 기한상실
			stc_txt_sbmt_ddln.visible = false;
		}
	}
	
	// 2018.02.27 CMS이면 타계좌 선택 가능...
	//fn_selectBankYn();
	fn_getWdrwReqAccntConfirm();
	fn_getWdrwReqAccntConfirm2();
	fn_getPerfMainPayAmt();
	fn_getMangiDate();
}

function fn_elementDisable(sType)	// elementDisable
{
	cbo_reltn.enable = sType;
	chk_death.enable = sType;
	
	chk_a.enable = sType;
	chk_b.enable = sType;
	chk_g.enable = sType;
	chk_c.enable = sType;
	chk_d.enable = sType;
	chk_e.enable = sType;
	chk_f.enable = sType;
}

// 회원정보 조회 팝업
function fn_srchAccntNoPop(sType, sVal)
{
	if (gfn_isNull(sVal)) sVal = "";
	var sPrmr = {"p_srch_typ":sType, "p_srch_vl":sVal, "p_gubun_mode":"", "p_option":""};
	gfn_diaLog("회원 조회", -1, -1, 884, 601, "PS990000::PS992400.xfdl", false, sPrmr, true, false, true, null, null, true);
}

// 회원정보 선택시
function fn_setAccntNo()	// setAccntInfo
{
	edt_accnt_no.value = ds_accnt_info.getColumn(0, "accnt_no");
	edt_mem_nm.value = ds_accnt_info.getColumn(0, "mem_nm");
	cal_join_dt.value = ds_accnt_info.getColumn(0, "join_dt");
	edt_emple_no.value = ds_accnt_info.getColumn(0, "emple_no");
	edt_emple_nm.value = ds_accnt_info.getColumn(0, "emple_nm");
	cal_brth_mon_day.value = ds_accnt_info.getColumn(0, "brth_mon_day");
	var sHomeTel = gfn_phoneNumStr(ds_accnt_info.getColumn(0, "home_tel"));
	edt_home_tel.value = sHomeTel;
	
	// 전화번호 전역변수 설정
	if (!gfn_isNull(ds_accnt_info.getColumn(0, "cell"))) {
		gv_tlno = gfn_phoneNumStr(ds_accnt_info.getColumn(0, "cell"));
	} else if (!gfn_isNull(ds_accnt_info.getColumn(0, "home_tel"))) {
		gv_tlno = sHomeTel;
	} else if (!gfn_isNull(ds_accnt_info.getColumn(0, "wrpl_tel"))) {
		gv_tlno = gfn_phoneNumStr(ds_accnt_info.getColumn(0, "wrpl_tel"));
	}
	
	if (ds_accnt_info.getColumn(0, "prod_cd") == "N5") {
		stc_txt_emart.visible = true;
		edt_point.value = true;
	} else {
		stc_txt_emart.visible = false;
		edt_point.value = false;
		edt_point.value = "";
	}
	
	fn_inputCheck();	// 행사 해약 보류 체크
	
	if (cbo_resn_cl.value == "04") {
		edt_resn_pay_amt.value = edt_pay_amt1.value;
	}	
	
	//fn_getWdrwReqAccntConfirm();
	fn_getWdrwReqAccntConfirm2();
}

// 관계코드 콤보 드랍다운시 호출
// 관계 - 본인 체크
function fn_reltnCheck()	// reltnCheck
{
	var sReltn = cbo_reltn.value; // 관계
	if (sReltn == "20") {
		if (!gfn_isNull(edt_accnt_no.value)) {
			fn_srchCmsInfo();	// 본인정보 출력
			
			if (gv_gubun == "update") {
				cal_brth_mon_day.value = gv_brth_mon_day;
			} else {
				if (!gfn_isNull(ds_accnt_info.getColumn(0, "brth_mon_day"))) {
					cal_brth_mon_day.value = ds_accnt_info.getColumn(0, "brth_mon_day");
				}
			}
		}
		
		// 본인이면 상망정보를 체크할 수 없음
		chk_death.visible = false;
	} else {
		// 계좌정보 초기화
		if (!gfn_isNull(edt_accnt_no.value)) {
			fn_srchCmsInfo();
		} else {
			fn_cmsClear();
		}
		
		// 본인이 아니면 회원사망 활성화
		if (gfn_isNull(sReltn)) {
			chk_death.visible = false;
		} else {
			chk_death.visible = true;
		}
	}
	
	fn_chngReltn(sReltn);
}

// 입력 정보 초기화
function fn_clearObject()	// clearObject
{
	edt_accnt_no.value = "";
	edt_mem_nm.value = "";
	edt_emple_no.value = "";
	edt_emple_nm.value = "";
	edt_home_tel.value = "";
	cal_join_dt.value = "";
	cal_brth_mon_day.value = "";
	edt_resn_man.value = "";// 해약자
	
	cbo_resn_cl.index = 0;	// 해약방법
	cbo_reltn.index = 1;	// 관계
	cbo_acpt_mthd.index = 1;// 접수방법
	
	// 금액 정보 초기화
	edt_new_chan_gunsu.value = "";	// 대체
	edt_new_chan_sum.value = "";
	edt_pay_amt1.value = "";		// 상조부금
	edt_pay_amt2.value = "";		// 할부원금
	edt_pay_amt3.value = "";		// 추가부담금
	edt_resn_amt.value = "";		// 해약금
	edt_dc_amt.value = "";			// D/C금
	edt_resn_pay_amt.value = "";	// 실지급액
	edt_resn_plus.value = "";		// 해약수익금
	
	fn_cmsClear();
}

// CMS 정보 초기화
function fn_cmsClear()	// cmsClear
{
	edt_bank_cd.value = "";			// 은행코드
	edt_bank_accnt_no.value = "";
	edt_depr.value = "";			// 예금주
	gv_bank_nm = "";
	
	cbo_calc_mthd.index = 0;		// 환급금 정산
	cbo_card_cd.index = 0;			// 카드코드
	edt_card_no.value = "";
	
	fn_setCompAccnt("cms");
}

// cms card 에 따른 컴포넌트 설정
function fn_setCompAccnt(sType)
{
	if (sType == "card") {
		stc_txt_bank.text = "카드사";
		stc_txt_accnt.text = "카드번호";
		
		edt_bank_cd.visible = false;
		edt_bank_nm.visible = false;
		btn_srchBank.visible = false;
		edt_bank_accnt_no.visible = false;
		
		edt_bank_cd.value = "";
		edt_bank_nm.value = "";
		edt_bank_accnt_no.value = "";
							
		cbo_card_cd.position = "absolute 97 277 202 297";
		//edt_card_no.position = "absolute 495 277 672 297";
		edt_card_no.position = "absolute 495 277 784 297";
		cbo_card_cd.visible = true;
		edt_card_no.visible = true;
		
		edt_depr.value = "";
		edt_depr.visible = false;
		stc_txt_depr.text = "";
	} else {
		stc_txt_bank.text = "은행명";
		stc_txt_accnt.text = "계좌번호";
		
		edt_bank_cd.visible = true;
		edt_bank_nm.visible = true;
		btn_srchBank.visible = true;
		edt_bank_accnt_no.visible = true;
							
		cbo_card_cd.visible = false;
		edt_card_no.visible = false;
		
		cbo_card_cd.index = 0;
		edt_card_no.value = "";
		
		if(gfn_isNull(edt_depr.value) == true)
		{
			edt_depr.value = edt_mem_nm.value;
		}
		edt_depr.visible = true;
		stc_txt_depr.text = "예금주";
	}
	
	//alert(edt_depr.value);
	// 2018.02.27 CMS이면 타계좌 선택 가능...
	fn_selectBankYn();
}

// 관계 - 본인 CHECK
function fn_setReltnCheck1()	// setreltnCheck1
{
	var sReltn = cbo_reltn.value;	// 관계
	if (sReltn == "20") {			// 본인
		chk_death.visible = false;	// 본인이면 사망정보를 체크 할 수 없음
	} else {
		if (gfn_isNull(sReltn)) {
			chk_death.visible = false;
		} else {
			chk_death.visible = true;
		}
	}
	// 2018.02.27 CMS이면 타계좌 선택 가능...
	fn_chngReltn(sReltn);
}

// 관계에 따른 필수항목 변경
function fn_chngReltn(sType)	// fn_ChgCriticalItem
{
	if (gfn_isNull(sType)) {
		chk_a.visible = false;
		chk_b.visible = false;
		chk_c.visible = false;
		chk_d.visible = false;
		chk_e.visible = false;
		chk_f.visible = false;
		chk_g.visible = false;
		
		chk_cmsWdrwReqYn.value.visible = false;
		btn_sbmt_ddln.visible = false;
		stc_txt_sbmt_ddln.visible = false;
	} else if (sType == "20") {
		chk_a.visible = true;
		chk_b.visible = true;
		chk_c.visible = false;
		chk_d.visible = false;
		chk_e.visible = false;
		chk_f.visible = false;
		chk_g.visible = true;
		
		if (chk_a.visible && chk_a.value == "Y" && chk_b.visible && chk_b.value == "Y" && chk_g.visible && chk_g.value == "Y"
		    && gv_prod_cl == "03" && gv_join_type != "0002") {
		    chk_cmsWdrwReqYn.visible = true;
		} else {
			chk_cmsWdrwReqYn.visible = false;
		}
	} else {
		chk_a.visible = true;
		chk_b.visible = true;
		chk_c.visible = true;
		chk_d.visible = true;
		chk_e.visible = true;
		chk_f.visible = true;
		chk_g.visible = true;
		
		if (chk_death.visible && chk_death.value == "Y") {
			chk_f.visible = true;
			
			if (chk_a.visible && chk_a.value == "Y" && chk_b.visible && chk_b.value == "Y" && chk_c.visible && chk_c.value == "Y"
			    && chk_d.visible && chk_d.value == "Y" && chk_e.visible && chk_e.value == "Y" && chk_f.visible && chk_f.value == "Y"
			    && chk_g.visible && chk_g.value == "Y" && gv_prod_cl == "03" 
			    && gv_join_type != "0002") {
			    chk_cmsWdrwReqYn.visible = true;
			} else {
				chk_cmsWdrwReqYn.visible = false;
			}
		} else {
			chk_f.value = false;
			
			if (chk_a.visible && chk_a.value == "Y" && chk_b.visible && chk_b.value == "Y" && chk_c.visible && chk_c.value == "Y"
			    && chk_d.visible && chk_d.value == "Y" && chk_e.visible && chk_e.value == "Y" && chk_g.visible && chk_g.value == "Y" 
			    && gv_prod_cl == "03" && gv_join_type != "0002") {
			    chk_cmsWdrwReqYn.visible = true;
			} else {
				chk_cmsWdrwReqYn.visible = false;
			}
		}
	}
}

// 대명 코드셋 조회
function fn_setDlwCd(sType)	// resonComboBinding
{
	gv_tmp_cd = sType;
	gfn_getList("dlwCd", sType, null, null, "selectDlwCd_reson");	// 고객사유 코드 조회
	
	if (gv_gubun == "update") {
		cbo_reson.value = gv_reson;			// 고객사유
		cbo_reson_cmp.value = gv_reson_cmp;	// 회사사유
	} else {
		fn_srchResnPayInq();	// 해약금 조회
	}
}

// 해약수입금 계산
function fn_payInc()	// payInc
{		 	
	var tmp = String(edt_resn_pay_amt.value).replace(",","").replace(",","");
	edt_resn_plus.value = gfn_setComma(gv_totalPay - tmp);
	edt_resn_pay_amt.value = gfn_setComma(tmp);
	edt_resn_amt2.value = gfn_setComma(tmp);
}

function fn_chngCalcMthd()
{
	if (cbo_calc_mthd.value == "0001") {
		btn_tsConfirm.enable = true;
		edt_tsConfirmMsg.value = "";
		fn_setCompAccnt("cms");
	} else {
		btn_tsConfirm.enable = false;
		edt_tsConfirmMsg.value = "";
		fn_setCompAccnt("card");
	}
}

// 은행 조회 팝업
function fn_srchBank()	// setBankInfoByPop
{
	var sPrmr = {p_bank_nm : edt_bank_nm.value};
	var reVal = gfn_diaLog("은행 조회", -1, -1, 884, 601, "PS990000::PS992500.xfdl", false, sPrmr, false, false, true);
	
	if( reVal != null ){
		if(reVal.getColumn(0, "cd") != ""){
		    edt_bank_cd.value = reVal.getColumn(0, "cd");
		    edt_bank_nm.value = reVal.getColumn(0, "cd_nm");
		    gv_bank_nm = reVal.getColumn(0, "cd_nm");
		}
	}
}

/********************************************************************************************/
/**   웹모듈 관련     Function                                                          	*/
/********************************************************************************************/
//웹모듈 결과 요청
function fn_rltmWebModuleRequest()	// callBugaCancleFn
{
	//결과조회에 사용할 변수 초기화
	var aplc_div = "4"; //해지
    var tmpr_resl = ""; //임시결과
    
    var idn_no = ds_accntMap.getColumn(0,"idn_no");;    //개인식별번호
    var accnt_no = ds_accntMap.getColumn(0,"accnt_no");;   //회원번호(구좌)
    var bank_cd = ds_accntMap.getColumn(0,"bank_cd");
    var bank_accnt_no = ds_accntMap.getColumn(0,"bank_accnt_no");
    
    //임시구분값 >> aplc_div >> 2일경우 유효검사
    //aplc_div = "2";
	
    //웹모듈 부가서비스요청
	tmpr_resl = gfn_AdditionalServiceReq(aplc_div,bank_cd,bank_accnt_no,accnt_no,idn_no);
	
	//결과조회에 사용할 변수 저장
	tmp_aplc_div = aplc_div;
	tmp_tmpr_resl = tmpr_resl;
	
    //결과 조회
    var resl_bool = fn_rltmWebModuleResult();
    
    return resl_bool;
}

//웹모듈 결과 조회
function fn_rltmWebModuleResult()
{
    if(gfn_isNull(tmp_aplc_div) && gfn_isNull(tmp_tmpr_resl)){
		alert("결과 저장이 완료되지 않았습니다. 재호출 해주세요.");
		return false;
    }

    var FlReslCd = gfn_AdditionalServiceRes(tmp_aplc_div,tmp_tmpr_resl);
    var RlReslCd = FlReslCd.substring(0,4);
    
    if(RlReslCd == "0000") {    
        return true;
    } else {
		if (tmp_tmpr_resl.length > 0) {
			ds_resl_cd.filter("(cd=='"+ RlReslCd +"')");
			alert(ds_resl_cd.getColumn(0,"cd_nm"));
			ds_resl_cd.filter("");
			return false;
		} else {
			alert("처리오류!!");
			return false;
		}
    }
}

// 해약 취소
function fn_deleteResn()
{
	if (confirm("삭제하시겠습니까?")) {
		// 상조보증공제조합 정송 여부에 따른 삭제
		//var ksmacUse = false;
	//	if (ksmacUse) {
		var gcnt = edt_gcnt.value;
		if (gcnt >= "1"){
				alert("상조보증공제조합에 이미 전송된 정보 입니다. 건별 취소 전문 전송 후 삭제 가능합니다.");
			} else {
			if (gv_new_yn == "N") {
				alert("상조보증공제조합에 이미 전송된 정보 입니다. 건별 취소 전문 전송 후 삭제 가능합니다.");
			} else {
				fn_resnDel();
			}
		}
	} else {
	//	fn_resnDel();
		return false;
	//	}
	}
}

/********************************************************************************************/
/**   7. 이벤트(Event) Function                                                          	*/
/********************************************************************************************/
// button onclick
function btn_onclick(obj:Button,  e:ClickEventInfo)
{
	if (obj.name == "btn_close" || obj.name == "btn_cancel") {	// 닫기
		close();
	} else if (obj.name == "btn_sbmt_ddln") {					// 서류제출 기한상실
		fn_sbmtDdln();
	} else if (obj.name == "btn_save") {						// 저장
		/*
		if(gv_wdrw_req_accnt == 0)
		{
			fn_resnSave();
		}
		else
		{
			alert("현재 금액 청구중인 회원입니다. 청구 삭제후 등록 가능합니다.");
			return false;
		}
		*/
		var sDelFg = ds_listWdrwReq.getColumn(0, "del_fg");
		var sResnAcptDay = cal_resn_acpt_day.value;
		var sResnProcDay = cal_resn_proc_day.value;
		
		if(!gfn_isNull(sResnAcptDay) && !gfn_isNull(sResnProcDay))
		{
			if(sResnAcptDay > sResnProcDay)
			{
				alert("해약처리일은 해약등록일 보다 작을수 없습니다.");
			    return false;
			}
		}
		
		if(sDelFg == "N")
		{
			alert("현재 금액 산출이 되어있는  회원입니다. 산출 삭제후 등록 가능합니다.");
			return false;
		}
		else if(sDelFg == "R")
		{
			if (confirm("현재 금액 청구가 진행중인 회원입니다. 그래도 저장하시겠습니까?")) 
			{
				fn_resnSave();
			}
		}
		else
		{
			fn_resnSave();
		}
	} else if (obj.name == "btn_resn_canc") {					// 해약취소
		fn_deleteResn();
	} else if (obj.name == "btn_resn_dsps01") {					// 해약처리
		var sDelFg = ds_listWdrwReq.getColumn(0, "del_fg");
		var sResnAcptDay = cal_resn_acpt_day.value;
		var sResnProcDay = cal_resn_proc_day.value;
		
		if(!gfn_isNull(sResnAcptDay) && !gfn_isNull(sResnProcDay))
		{
			if(sResnAcptDay > sResnProcDay)
			{
				alert("해약처리일은 해약등록일 보다 작을수 없습니다.");
			    return false;
			}
		}
		
		if(sDelFg == "N")
		{
			alert("현재 금액 산출이 되어있는  회원입니다. 산출 삭제후 등록 가능합니다.");
			return false;
		}
		else if(sDelFg == "R")
		{
			if (confirm("현재 금액 청구가 진행중인 회원입니다. 그래도 저장하시겠습니까?")) 
			{
				fn_resnDsps01();
			}
		}
		else
		{
			fn_resnDsps01();
		}
	} else if (obj.name == "btn_resn_dsps02") {					// 해약처리		
		var sDelFg = ds_listWdrwReq.getColumn(0, "del_fg");
		var sResnAcptDay = cal_resn_acpt_day.value;
		var sResnProcDay = cal_resn_proc_day.value;
		
		if(!gfn_isNull(sResnAcptDay) && !gfn_isNull(sResnProcDay))
		{
			if(sResnAcptDay > sResnProcDay)
			{
				alert("해약처리일은 해약등록일 보다 작을수 없습니다.");
			    return false;
			}
		}
		
		if(sDelFg == "N")
		{
			alert("현재 금액 산출이 되어있는  회원입니다. 산출 삭제후 등록 가능합니다.");
			return false;
		}
		else if(sDelFg == "R")
		{
			if (confirm("현재 금액 청구가 진행중인 회원입니다. 그래도 저장하시겠습니까?")) 
			{
				fn_resnDsps02();
			}
		}
		else
		{
			fn_resnDsps02();
		}
	} else if (obj.name == "btn_accntNo") {						// 회원정보조회 팝업
		fn_srchAccntNoPop("accnt_no");
	} else if (obj.name == "btn_memNm") {						// 회원정보조회 팝업
		fn_srchAccntNoPop("mem_nm");
	} else if (obj.name == "btn_srchBank") {					// 은행조회 팝업
		fn_srchBank();
	} else if (obj.name == "btn_print") {						// 접수확인증 인쇄
		var sFormId = "CancelCrtf_sinit";
		var sAccntNo = edt_accnt_no.value;
		
		if (gfn_isNull(sAccntNo)) {
			alert("회원번호를 입력하십시요.");
			return;
		}
		
		var sPrmr = {form_id: sFormId, accnt_no: sAccntNo};
		var reVal = gfn_diaLog("resnOzReportPrint", -1, -1, 884, 601, "PS990000::PS994500.xfdl", false, sPrmr, false, false, true);
	} else if (obj.name == "btn_tsConfirm") {
		fn_srchTsConfirmSend();
	}
}

// edit onkeydown
function edt_onkeydown(obj:Edit, e:KeyEventInfo)
{
	if (e.keycode == 13) { // 엔터
		if (obj.name == "edt_accnt_no") {
			fn_srchAccntNoPop("accnt_no", obj.value);
		} else if (obj.name == "edt_mem_nm") {
			fn_srchAccntNoPop("mem_nm", obj.value);
		} else if (obj.name == "edt_resn_pay_amt") {	// 실지급금액
			fn_payInc();
		}
	}
}

// combo closeup
function cbo_oncloseup(obj:Combo, e:ComboCloseUpEventInfo)
{
	if (obj.name == "cbo_reltn") {		// 관계코드
		fn_reltnCheck();
	}
}

// combo onchange
function cbo_onitemchanged(obj:Combo, e:ItemChangeEventInfo)
{
	if (obj.name == "cbo_resn_cl") {			// 해약방법
		fn_srchResnGubn("srchResnGubnEvt");
	} else if (obj.name == "cbo_calc_mthd") {	// 환급금정산
		fn_chngCalcMthd();
	}
}

// checkbox onclick
function chk_onclick(obj:CheckBox,  e:ClickEventInfo)
{
	fn_chngReltn(cbo_reltn.value);
}

// 2018.02.27 CMS이면 타계좌 선택 가능...
function fn_selectBankYn()
{
	//trace("AAA:====>:"+cbo_calc_mthd.index);
	
	var sCalcMthd = cbo_calc_mthd.index;
	if (sCalcMthd == "0") 
	{
		chk_bankYn.visible = true;
	} 
	else 
	{
		chk_bankYn.visible = false;
	}
	
	/* 삭제 20190530 임동진
	trace("yyyyyyyyyyyyyyyyyyyy : " + gfn_setComma(ds_resnDtpt.getColumn(0, "resn_pay_amt")));
	
	if(ds_listPerfMain.getRowCount() > 0)
	{
		edt_resn_pay_amt.value = gfn_setComma(ds_listPerfMain.getColumn(ds_listPerfMain.rowposition, "perf_amt"));
		edt_perf_amt.value     = gfn_setComma(ds_listPerfMain.getColumn(ds_listPerfMain.rowposition, "perf_amt"));
	}
	else
	{
		edt_resn_pay_amt.value = gfn_setComma(ds_resnDtpt.getColumn(0, "resn_pay_amt"));
		edt_perf_amt.value     = 0;
		
	}
	*/
}

/*************************************************************************************************************************************************
 * 현재 금액 청구중인 회원인지 아닌지 여부 확인 20181023 송준빈
 *************************************************************************************************************************************************/
function fn_getWdrwReqAccntConfirm()
{
	var sAccntNo = edt_accnt_no.value;
	
	var szSvcid       = "getWdrwReqAccntConfirm";
	var szController  = "/dlw/pay/getWdrwReqAccntConfirm";
	var szInDs        = "";
	var szOutDs       = "";
	var szParam       = "accnt_no=" + sAccntNo;
	var szRetCallback = "fn_callBack";
		
	// 트랜젝션 공통함수 호출
	gfn_transaction(this, szSvcid, szController, szInDs, szOutDs, szParam, szRetCallback);
}

function fn_getWdrwReqAccntConfirm2()
{
	var sAccntNo = edt_accnt_no.value;
	
	var szSvcid       = "getWdrwReqAccntEventConfirm";
	var szController  = "/dlw/pay/getWdrwReqAccntEventConfirm";
	var szInDs        = "";
	var szOutDs       = "ds_listWdrwReq=ds_output";
	var szParam       = "accnt_no=" + sAccntNo;
	var szRetCallback = "fn_callBack";
			
	// 트랜젝션 공통함수 호출
	gfn_transaction(this, szSvcid, szController, szInDs, szOutDs, szParam, szRetCallback);
}

function fn_getPerfMainPayAmt()
{
	var sAccntNo = edt_accnt_no.value;
	
	var szSvcid       = "getPerfMainPayAmt";
	var szController  = "/dlw/pay/perf/getPerfMainPayAmt";
	var szInDs        = "";
	var szOutDs       = "ds_listPerfMain=ds_output";
	var szParam       = "accnt_no=" + sAccntNo;
	var szRetCallback = "fn_callBack";

    gfn_transaction(this, szSvcid, szController, szInDs, szOutDs, szParam, szRetCallback);
}

function edt_bank_nm_onkeydown(obj:Edit, e:KeyEventInfo)
{
	if (e.keycode == 13) 
	{
		var sBankNm = edt_bank_nm.value;
		
		var szSvcid       = "getCodeBank";
		var szController  = "/dlw/resn/getCodeBank";
		var szInDs        = "";
		var szOutDs       = "ds_codeBank=ds_output";
		var szParam       = "cd_nm=" + sBankNm;
		var szRetCallback = "fn_callBack";

		gfn_transaction(this, szSvcid, szController, szInDs, szOutDs, szParam, szRetCallback);
	}
}

/* 추가 */
function fn_getMangiDate()
{
	var sAccntNo = edt_accnt_no.value;
	
	var szSvcid       = "getMangiDate";
	var szController  = "/dlw/resn/getMangiDate";
	var szInDs        = "";
	var szOutDs       = "";
	var szParam       = "accnt_no=" + sAccntNo;
	var szRetCallback = "fn_callBack";

    gfn_transaction(this, szSvcid, szController, szInDs, szOutDs, szParam, szRetCallback);
}

function fn_srchTsConfirmSend()
{
	//https://iniweb-api.inicis.com/DefaultWebApp/service/acct_cfrm/inicis.jsp?banksett=03&noacct=28403983001014&nmcomp=송준빈&mid=INIpayTest
	var sBankSett = edt_bank_cd.value; 
	var sNoAcct = edt_bank_accnt_no.value;
	var sNmcomp = edt_depr.value;
	//var sNmcomp = "임동진";
	var sMid = "daemyungim"; // "INIpayTest";
	
	if(gfn_isNull(sBankSett) || gfn_isNull(sNoAcct) || gfn_isNull(sNmcomp))
	{
		alert("은행코드, 계좌번호, 예금주 정보를 정확하게 입력하여 주십시오.");
		return false;
	}
	
	if(sBankSett.length < 2)
	{
		alert("은행코드는 2자리 이상입니다.");
		return false;
	}
	
	var nBankSettStartLength = sBankSett.length - 2;
	var nBankSettEndLength = sBankSett.length;
	
	sBankSett = sBankSett.substr(nBankSettStartLength, nBankSettEndLength);
	
	var szSvcid       = "getTsConfirmSend";
	var szController  = "/dlw/resn/getTsConfirmSend";
	var szInDs        = "";
	var szOutDs       = "";
	var szParam       = "banksett=" + sBankSett + " noacct=" + sNoAcct + " nmcomp=" + sNmcomp + " mid=" + sMid;
	var szRetCallback = "fn_callBack";

    gfn_transaction(this, szSvcid, szController, szInDs, szOutDs, szParam, szRetCallback);
}

function edt_bank_accnt_no_ontextchange(obj:Edit,  e:TextChangeEventInfo)
{
	btn_tsConfirm.enable = true;
	edt_tsConfirmMsg.value = "";
}]]></Script>
  </Form>
</FDL>

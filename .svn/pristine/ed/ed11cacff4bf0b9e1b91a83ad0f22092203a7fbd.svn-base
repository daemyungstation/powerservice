<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="DlwMangiMemberMap">   
    
    <!-- ================================================================
     * 날짜 : 20210215
     * 이름 : 송준빈
     * 추가내용 : 일일종합현황데이터 조회 조회건수
     * 대상 테이블 : LF_DMUSER.TB_MEM_ACCNT_ALTR_HIST
     * ================================================================
     * -->
    <select id="DlwMangiMemberMap.getMangiMemberCount" parameterType="map" resultType="int">
        SELECT /* DlwMangiMemberMap.getMangiMemberCount */
            COUNT(*) AS ICNT
        FROM
        (
            SELECT 
                MB.MEM_NO,
                MPA.ACCNT_NO,
                MB.MEM_NM,
                FN_AGE_LVL2(MB.BRTH_MON_DAY) AS AGE,
                CASE WHEN MB.SEX = '0001' THEN '남성'
                     WHEN MB.SEX = '0002' THEN '여성'
                     ELSE '' END AS SEX_NM,
                MB.HOME_ZIP || ' ' || MB.HOME_ADDR || ' ' || MB.HOME_ADDR2 AS HOME_ADDR,
                MB.CELL,
                FN_COM_NM('0194', MPA.MAIN_CONTRACT) AS MAIN_CONTRACT_NM,
                PD.PROD_CD,
                PD.PROD_NM,
                MPA.KSTBIT,
                (SELECT CC.CD_NM FROM LF_DMUSER.COM_CD CC WHERE 1=1 AND CC.GRP_CD = 'S014' AND CC.COM_CD = MPA.KSTBIT) AS KSTBIT_NM,
                HC.STAT,
                (SELECT CC.CD_NM FROM LF_DMUSER.COM_CD CC WHERE 1=1 AND CC.GRP_CD = '81' AND CC.COM_CD = HC.STAT) AS STAT_NM,
                PD.SECTION_THR,
                (SELECT CC.CD_NM FROM LF_DMUSER.COM_CD CC WHERE 1=1 AND CC.GRP_CD = '0189' AND CC.COM_CD = PD.SECTION_THR) AS SECTION_THR_NM,
                MPA.JOIN_DT,
                (SELECT PTIV.STAT_TRUE FROM PAY_TOT_INFO_VIEW PTIV WHERE 1=1 AND PTIV.ACCNT_NO = MPA.ACCNT_NO) AS STAT_TRUE,
                TO_CHAR(ADD_MONTHS(MPA.JOIN_DT, PD.EXPR_NO - MPA.NEW_CHAN_GUNSU - 1 + NVL(MME.EXT_PERIOD, 0) * 12 ),'YYYYMMDD') AS MANGI_DATE,
                MB.MARKT_AGR_YN,
                NVL((SELECT 'Y' FROM TB_MEMBER_DLWMALL WHERE MEMBER_ID = MPA.MEM_NO AND GOODS_ID = MPA.ACCNT_NO), 'N') AS MALL_YN,
                (SELECT USE_AMT FROM TB_MEMBER_DLWMALL WHERE MEMBER_ID = MPA.MEM_NO AND GOODS_ID = MPA.ACCNT_NO) AS USE_AMT
            FROM LF_DMUSER.MEM_PROD_ACCNT MPA INNER JOIN
                LF_DMUSER.MEMBER MB ON MPA.MEM_NO = MB.MEM_NO AND MB.DEL_FG = 'N' AND MPA.DEL_FG = 'N' INNER JOIN
                LF_DMUSER.PRODUCT PD ON MPA.PROD_CD = PD.PROD_CD AND PD.DEL_FG = 'N' INNER JOIN
                LF_DMUSER.HP_CALL HC ON MPA.ACCNT_NO = HC.ACCNT_NO LEFT OUTER JOIN
                LF_DMUSER.TB_MEMBER_MANGI_EXT MME ON MPA.ACCNT_NO = MME.ACCNT_NO AND MME.DEL_FG = 'N'
            WHERE 1=1
            <if test="prod_cd != null and prod_cd != ''">
                AND PD.PROD_CD = #{prod_cd}
            </if>
            <if test="kstbit != null and kstbit != ''">
                AND MPA.KSTBIT = #{kstbit}
            </if>
            <if test="stat != null and stat != ''">
                AND HC.STAT = #{stat}
            </if>
        ) SUB_TBL
        WHERE 1=1
        <if test="mangi_date_stt != null and mangi_date_stt != '' and mangi_date_end != null and mangi_date_end != ''">
            AND SUB_TBL.MANGI_DATE BETWEEN #{mangi_date_stt} AND #{mangi_date_end}
        </if>
        <if test="stat_true != null and stat_true != '' and stat_true.equalsIgnoreCase('N')">
            AND SUB_TBL.STAT_TRUE IN ('당월미납', '완납', '정상납입')
        </if>
        <if test="stat_true != null and stat_true != '' and stat_true.equalsIgnoreCase('Y')">
            AND SUB_TBL.STAT_TRUE NOT IN ('당월미납', '완납', '정상납입')
        </if>
    </select>

    <!-- ================================================================
     * 날짜 : 20210215
     * 이름 : 송준빈
     * 추가내용 : 일일종합현황데이터 조회 조회리스트
     * 대상 테이블 : LF_DMUSER.TB_MEM_ACCNT_ALTR_HIST
     * ================================================================
     * -->
    <select id="DlwMangiMemberMap.getMangiMemberList" parameterType="map" resultType="resultMap">
        SELECT /* DlwMangiMemberMap.getMangiMemberList */
            MAIN_TBL.*
        FROM 
        (
            SELECT
                <choose>
                    <when test="orderBy != null and orderBy != ''">
                        ROW_NUMBER() OVER(ORDER BY ${orderBy} ${orderDirection}) AS PAGE_INDX,
                    </when>
                    <otherwise>
                        ROW_NUMBER() OVER(ORDER BY SUB_TBL.ACCNT_NO ASC) AS PAGE_INDX,
                    </otherwise>
                </choose>
                SUB_TBL.*
            FROM
            (
                SELECT 
                    MB.MEM_NO,
                    MPA.ACCNT_NO,
                    MB.MEM_NM,
                    FN_AGE_LVL2(MB.BRTH_MON_DAY) AS AGE,
                    CASE WHEN MB.SEX = '0001' THEN '남성'
                         WHEN MB.SEX = '0002' THEN '여성'
                         ELSE '' END AS SEX_NM,
                    MB.HOME_ZIP || ' ' || MB.HOME_ADDR || ' ' || MB.HOME_ADDR2 AS HOME_ADDR,
                    MB.CELL,
                    FN_COM_NM('0194', MPA.MAIN_CONTRACT) AS MAIN_CONTRACT_NM,
                    PD.PROD_CD,
                    PD.PROD_NM,
                    MPA.KSTBIT,
                    (SELECT CC.CD_NM FROM LF_DMUSER.COM_CD CC WHERE 1=1 AND CC.GRP_CD = 'S014' AND CC.COM_CD = MPA.KSTBIT) AS KSTBIT_NM,
                    HC.STAT,
                    (SELECT CC.CD_NM FROM LF_DMUSER.COM_CD CC WHERE 1=1 AND CC.GRP_CD = '81' AND CC.COM_CD = HC.STAT) AS STAT_NM,
                    PD.SECTION_THR,
                    (SELECT CC.CD_NM FROM LF_DMUSER.COM_CD CC WHERE 1=1 AND CC.GRP_CD = '0189' AND CC.COM_CD = PD.SECTION_THR) AS SECTION_THR_NM,
                    MPA.JOIN_DT,
                    (SELECT PTIV.STAT_TRUE FROM PAY_TOT_INFO_VIEW PTIV WHERE 1=1 AND PTIV.ACCNT_NO = MPA.ACCNT_NO) AS STAT_TRUE,
                    TO_CHAR(ADD_MONTHS(MPA.JOIN_DT, PD.EXPR_NO - MPA.NEW_CHAN_GUNSU - 1 + NVL(MME.EXT_PERIOD, 0) * 12 ),'YYYYMMDD') AS MANGI_DATE,
                    MB.MARKT_AGR_YN,
                    NVL((SELECT 'Y' FROM TB_MEMBER_DLWMALL WHERE MEMBER_ID = MPA.MEM_NO AND GOODS_ID = MPA.ACCNT_NO), 'N') AS MALL_YN,
                    (SELECT USE_AMT FROM TB_MEMBER_DLWMALL WHERE MEMBER_ID = MPA.MEM_NO AND GOODS_ID = MPA.ACCNT_NO) AS USE_AMT
                FROM LF_DMUSER.MEM_PROD_ACCNT MPA INNER JOIN
                    LF_DMUSER.MEMBER MB ON MPA.MEM_NO = MB.MEM_NO AND MB.DEL_FG = 'N' AND MPA.DEL_FG = 'N' INNER JOIN
                    LF_DMUSER.PRODUCT PD ON MPA.PROD_CD = PD.PROD_CD AND PD.DEL_FG = 'N' INNER JOIN
                    LF_DMUSER.HP_CALL HC ON MPA.ACCNT_NO = HC.ACCNT_NO LEFT OUTER JOIN
                    LF_DMUSER.TB_MEMBER_MANGI_EXT MME ON MPA.ACCNT_NO = MME.ACCNT_NO AND MME.DEL_FG = 'N'
                WHERE 1=1
                <if test="prod_cd != null and prod_cd != ''">
                    AND PD.PROD_CD = #{prod_cd}
                </if>
                <if test="kstbit != null and kstbit != ''">
                    AND MPA.KSTBIT = #{kstbit}
                </if>
                <if test="stat != null and stat != ''">
                    AND HC.STAT = #{stat}
                </if>
            ) SUB_TBL
            WHERE 1=1
            <if test="mangi_date_stt != null and mangi_date_stt != '' and mangi_date_end != null and mangi_date_end != ''">
                AND SUB_TBL.MANGI_DATE BETWEEN #{mangi_date_stt} AND #{mangi_date_end}
            </if>
            <if test="stat_true != null and stat_true != '' and stat_true.equalsIgnoreCase('N')">
                AND SUB_TBL.STAT_TRUE IN ('당월미납', '완납', '정상납입')
            </if>
            <if test="stat_true != null and stat_true != '' and stat_true.equalsIgnoreCase('Y')">
                AND SUB_TBL.STAT_TRUE NOT IN ('당월미납', '완납', '정상납입')
            </if>
        ) MAIN_TBL
        WHERE 1=1 
        <if test="startLine != null and startLine != '' and endLine != null and endLine != ''">
            AND PAGE_INDX <![CDATA[>=]]> #{startLine}
            AND PAGE_INDX <![CDATA[< ]]> #{endLine}
        </if>
    </select>
    
    <!-- ================================================================
     * 날짜 : 20220105
     * 이름 : 임동
     * 추가내용 : 만기방어를 위한 주간 만기현황 리스트
     * 대상 테이블 : LF_DMUSER.TB_CLOSE_MEMBER_MON
     * ================================================================
    * -->
    <select id="DlwMangiMemberMap.getMangiLIst" parameterType="map" resultType="resultMap">
			WITH MANGI_TBL
			AS
			(
			     SELECT 
			        MBID.ACCNT_NO,
			        MBID.KSTBIT,
			        MBID.PROD_CD,
			        MBID.TRUE_CNT,
			        PD.EXPR_NO,
			        TO_CHAR(ADD_MONTHS(MBID.JOIN_DT, PD.EXPR_NO - MBID.NEW_CHAN_GUNSU - 1 +
			        NVL((SELECT 
			        NVL(MME.EXT_PERIOD, 0) 
			        FROM LF_DMUSER.TB_MEMBER_MANGI_EXT MME 
			        WHERE 1=1 
			        AND DEL_FG = 'N' 
			        AND MME.ACCNT_NO = MBID.ACCNT_NO), 0) * 12 ),'YYYYMM') AS MAN_DAY,
			        (((CASE WHEN MONTH_COUNT <![CDATA[< ]]> EXPR_NO THEN MONTH_COUNT  ELSE EXPR_NO END) - MBID.NEW_CHAN_GUNSU) - TRUE_CNT) AS DIFF_CNT,
			        NVL(RS.RESON,'00') AS RESON, 
			        NVL(RESN_PROC_YN,'N') AS RESN_PROC_YN,
			        RESN_CL,
			        SORT,
			        TRUE_DAY,
			        (CASE WHEN TRUE_DAY BETWEEN SUBSTR(#{mangi_stt_date},0,6) || '01' AND TO_CHAR(LAST_DAY(#{mangi_stt_date}),'YYYYMMDD') THEN 'Y' ELSE 'N' END) AS ETC_YN,
			        (SELECT COUNT(*) FROM TB_MEMBER_MANGI_DTL WHERE ACCNT_NO = MBID.ACCNT_NO AND GIFT_CODE = '10004' AND DEL_FG = 'N') AS VIP_CNT,
			         SUBSTR(RS.RESN_PROC_DAY,0,6) AS RESN_PROC_DAY
			    FROM TB_CLOSE_MEMBER_MON MBID INNER JOIN
			        PRODUCT PD ON MBID.PROD_CD = PD.PROD_CD LEFT OUTER JOIN
			        RESCISSION RS ON MBID.ACCNT_NO = RS.ACCNT_NO AND RS.DEL_FG = 'N' LEFT OUTER JOIN
			        EVENT EV ON MBID.ACCNT_NO = EV.ACCNT_NO AND EV.DEL_FG = 'N' LEFT OUTER JOIN
			        TB_MEMBER_DLWMALL DLW ON MBID.ACCNT_NO = DLW.GOODS_ID
			    WHERE 1=1
			        AND EXT_DT = SUBSTR(#{mangi_stt_date},0,6)
			        AND TRUE_CNT > 0
			        AND NVL(RESN_CL,'00') != '02' 
			        <if test="mangi_imi=='false'">
			        AND PD.EXPR_NO NOT IN (1,2,5)
			        </if>
			           			       
			)
			
			SELECT
			    EXT_DT,
			    ACCNT_CNT,
			    (RESN_CNT - RESN_MAN_CNT) AS RESN_CNT,
			    EVENT_CNT,
			    ACCNT_CNT - ((RESN_CNT - RESN_MAN_CNT) + EVENT_CNT) AS TRUE_CNT,
			    RESN_MAN_CNT ,
			    VIP_CNT,
			    (ACCNT_CNT - ((RESN_CNT - RESN_MAN_CNT) + EVENT_CNT)) - RESN_MAN_CNT AS REMAIN_CNT,
			    NORMAL_CNT,
			    YEN_CNT,
			    RESN_PROC_CNT
			FROM
			(
			    SELECT
			        '200001' AS EXT_DT,
			        COUNT(*) AS ACCNT_CNT,
			        SUM(CASE WHEN NVL(RESN_CL,'00') != '00' THEN 1 ELSE 0 END) AS RESN_CNT,
			        SUM(CASE WHEN NVL(SORT,'00') != '00' THEN 1 ELSE 0 END) AS EVENT_CNT, 
			        SUM(CASE WHEN RESON  = '23' AND RESN_PROC_YN = 'Y' THEN 1 ELSE 0 END) AS RESN_MAN_CNT,    
			        SUM(CASE WHEN NVL(RESN_CL,'00') = '00' AND NVL(SORT,'00') = '00' AND (DIFF_CNT <![CDATA[< ]]> 3 OR DIFF_CNT >= 3 AND ETC_YN = 'Y') THEN 1 ELSE 0 END) AS NORMAL_CNT,
			        SUM(CASE WHEN NVL(RESN_CL,'00') = '00' AND NVL(SORT,'00') = '00' AND DIFF_CNT >= 3 AND ETC_YN = 'N' THEN 1 ELSE 0 END) AS YEN_CNT,
			        SUM(VIP_CNT) AS VIP_CNT,
			        SUM(CASE WHEN RESON  = '23' AND RESN_PROC_YN = 'Y' AND RESN_PROC_DAY = MAN_DAY+1 THEN 1 ELSE 0 END) AS RESN_PROC_CNT
			    FROM MANGI_TBL
			    WHERE 1=1
			    	<if test="mangi_date_gbn=='01'">
			        	AND MAN_DAY   <![CDATA[< ]]>   TO_CHAR(ADD_MONTHS(#{mangi_date}||'01',-1),'YYYYMM')
			        </if>
			
					<if test="mangi_date_gbn=='02'">
						AND MAN_DAY <![CDATA[< ]]> #{mangi_date}									        
			        </if>
			    UNION ALL 
			
			    SELECT
		    		<if test="mangi_date_gbn=='01'">
			        	TO_CHAR(ADD_MONTHS(MAN_DAY||'01',1),'YYYYMM') AS EXT_DT,
			        </if>			    
			    	<if test="mangi_date_gbn=='02'">
			        	MAN_DAY AS EXT_DT,
			        </if>
			        COUNT(*) AS ACCNT_CNT,
			        SUM(CASE WHEN NVL(RESN_CL,'00') != '00' THEN 1 ELSE 0 END) AS RESN_CNT,
			        SUM(CASE WHEN NVL(SORT,'00') != '00' THEN 1 ELSE 0 END) AS EVENT_CNT, 
			        SUM(CASE WHEN RESON  = '23' AND RESN_PROC_YN = 'Y' THEN 1 ELSE 0 END) AS RESN_MAN_CNT,    
			        SUM(CASE WHEN NVL(RESN_CL,'00') = '00' AND NVL(SORT,'00') = '00' AND (DIFF_CNT <![CDATA[< ]]> 3 OR DIFF_CNT >= 3 AND ETC_YN = 'Y') THEN 1 ELSE 0 END) AS NORMAL_CNT,
			        SUM(CASE WHEN NVL(RESN_CL,'00') = '00' AND NVL(SORT,'00') = '00' AND DIFF_CNT >= 3 AND ETC_YN = 'N' THEN 1 ELSE 0 END) AS YEN_CNT,
			        SUM(VIP_CNT) AS VIP_CNT,
			        SUM(CASE WHEN RESON  = '23' AND RESN_PROC_YN = 'Y' AND RESN_PROC_DAY LIKE MAN_DAY+1 || '%' THEN 1 ELSE 0 END) AS RESN_PROC_CNT
			    FROM MANGI_TBL
			    WHERE 1=1
			    	<if test="mangi_date_gbn=='01'">
			    		AND MAN_DAY BETWEEN TO_CHAR(ADD_MONTHS(#{mangi_date}||'01',-1),'YYYYMM') AND TO_CHAR(ADD_MONTHS(#{mangi_date}||'01',10),'YYYYMM')
			    	</if>
			    	<if test="mangi_date_gbn=='02'">
			        	AND MAN_DAY BETWEEN #{mangi_date} AND TO_CHAR(ADD_MONTHS(#{mangi_date}||'01',11),'YYYYMM')
			        </if>
			        
			    GROUP BY MAN_DAY
			) MAIN 
			ORDER BY EXT_DT ASC
    </select>
    
        <!-- ================================================================
     * 날짜 : 20220105
     * 이름 : 임동진
     * 추가내용 : 만기방어를 위한 주간 만기현황 리스트 (금액)
     * 대상 테이블 : LF_DMUSER.TB_CLOSE_MEMBER_MON
     * ================================================================
    * -->
    <select id="DlwMangiMemberMap.getMangiAmtLIst" parameterType="map" resultType="resultMap">
			WITH MANGI_TBL 
			AS
			(
			     SELECT 
			        MBID.ACCNT_NO,
			        MBID.KSTBIT,
			        MBID.PROD_CD,
			        NVL((SELECT SUM(AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = MBID.PROD_CD),0) AS TRUE_AMT,
			        NVL((SELECT SUM(REL_AMT) + SUM(ADD_AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = MBID.PROD_CD),0) AS REL_AMT,        
			        NVL(DLW.USE_AMT,0) AS USE_AMT,
			        PD.EXPR_NO,
			        TO_CHAR(ADD_MONTHS(MBID.JOIN_DT, PD.EXPR_NO - MBID.NEW_CHAN_GUNSU - 1 +
			        NVL((SELECT 
			        NVL(MME.EXT_PERIOD, 0) 
			        FROM LF_DMUSER.TB_MEMBER_MANGI_EXT MME 
			        WHERE 1=1 
			        AND DEL_FG = 'N' 
			        AND MME.ACCNT_NO = MBID.ACCNT_NO), 0) * 12 ),'YYYYMM') AS MAN_DAY,
			        (((CASE WHEN MONTH_COUNT <![CDATA[< ]]> EXPR_NO THEN MONTH_COUNT  ELSE EXPR_NO END) - MBID.NEW_CHAN_GUNSU) - TRUE_CNT) AS DIFF_CNT,
			        NVL(RS.RESON,'00') AS RESON, 
			        NVL(RESN_PROC_YN,'N') AS RESN_PROC_YN,
			        RESN_CL, 
			        SORT,
			        TRUE_DAY, 
			        (CASE WHEN TRUE_DAY BETWEEN SUBSTR(#{mangi_stt_date},0,6) || '01' AND TO_CHAR(LAST_DAY(#{mangi_stt_date}),'YYYYMMDD') THEN 'Y' ELSE 'N' END) AS ETC_YN,
			        SUBSTR(RS.RESN_PROC_DAY,0,6) AS RESN_PROC_DAY
			    FROM TB_CLOSE_MEMBER_MON MBID INNER JOIN
			        PRODUCT PD ON MBID.PROD_CD = PD.PROD_CD LEFT OUTER JOIN
			        RESCISSION RS ON MBID.ACCNT_NO = RS.ACCNT_NO AND RS.DEL_FG = 'N' LEFT OUTER JOIN
			        EVENT EV ON MBID.ACCNT_NO = EV.ACCNT_NO AND EV.DEL_FG = 'N' LEFT OUTER JOIN
			        TB_MEMBER_DLWMALL DLW ON MBID.ACCNT_NO = DLW.GOODS_ID
			    WHERE 1=1
			        AND EXT_DT = SUBSTR(#{mangi_stt_date},0,6)
			        AND TRUE_CNT > 0
			        AND NVL(RESN_CL,'00') != '02'     
			        <if test="mangi_imi=='false'">
			        	AND	PD.EXPR_NO NOT IN (1,2,5)
			        </if>
			)
			
			SELECT
			    EXT_DT,
			    ACCNT_CNT,
			    (RESN_CNT - RESN_MAN_CNT) AS RESN_CNT,
			    EVENT_CNT,
			    ACCNT_CNT - ((RESN_CNT - RESN_MAN_CNT) + EVENT_CNT) AS TRUE_CNT,
			    RESN_MAN_CNT ,
			    (ACCNT_CNT - ((RESN_CNT - RESN_MAN_CNT) + EVENT_CNT)) - RESN_MAN_CNT AS REMAIN_CNT,
			    NORMAL_CNT,
			    YEN_CNT,
			    RESN_PROC_CNT
			FROM
			(
			
			    SELECT
			        '200001' AS EXT_DT,
			        SUM(TRUE_AMT) + SUM(REL_AMT) - SUM(USE_AMT)  AS ACCNT_CNT,
			        SUM(CASE WHEN NVL(RESN_CL,'00') != '00' THEN (TRUE_AMT + REL_AMT)-USE_AMT ELSE 0 END) AS RESN_CNT,
			        SUM(CASE WHEN NVL(SORT,'00') != '00' THEN (TRUE_AMT + REL_AMT)-USE_AMT  ELSE 0 END) AS EVENT_CNT, 
			        SUM(CASE WHEN RESON  = '23' AND RESN_PROC_YN = 'Y' THEN (TRUE_AMT + REL_AMT)-USE_AMT  ELSE 0 END) AS RESN_MAN_CNT,    
			        SUM(CASE WHEN NVL(RESN_CL,'00') = '00' AND NVL(SORT,'00') = '00' AND (DIFF_CNT <![CDATA[< ]]> 3 OR DIFF_CNT >= 3 AND ETC_YN = 'Y') THEN (TRUE_AMT + REL_AMT)-USE_AMT  ELSE 0 END) AS NORMAL_CNT,
			        SUM(CASE WHEN NVL(RESN_CL,'00') = '00' AND NVL(SORT,'00') = '00' AND DIFF_CNT >= 3 AND ETC_YN = 'N'  THEN (TRUE_AMT + REL_AMT)-USE_AMT  ELSE 0 END) AS YEN_CNT,
			        SUM(CASE WHEN RESON  = '23' AND RESN_PROC_YN = 'Y' AND RESN_PROC_DAY = MAN_DAY+1 THEN (TRUE_AMT + REL_AMT)-USE_AMT ELSE 0 END) AS RESN_PROC_CNT
			    FROM MANGI_TBL
			    WHERE 1=1
			    	<if test="mangi_date_gbn=='01'">
			        	AND MAN_DAY   <![CDATA[< ]]>   TO_CHAR(ADD_MONTHS(#{mangi_date}||'01',-1),'YYYYMM')
			        </if>
			
					<if test="mangi_date_gbn=='02'">
						AND MAN_DAY <![CDATA[< ]]> #{mangi_date}									        
			        </if>
			    
			    UNION ALL
			    
			    SELECT
		    		<if test="mangi_date_gbn=='01'">
			        	TO_CHAR(ADD_MONTHS(MAN_DAY||'01',1),'YYYYMM') AS EXT_DT,
			        </if>			    
			    	<if test="mangi_date_gbn=='02'">
			        	MAN_DAY AS EXT_DT,
			        </if>
			        SUM(TRUE_AMT) + SUM(REL_AMT) - SUM(USE_AMT) AS ACCNT_CNT,
			        SUM(CASE WHEN NVL(RESN_CL,'00') != '00' THEN (TRUE_AMT + REL_AMT)-USE_AMT ELSE 0 END) AS RESN_CNT,
			        SUM(CASE WHEN NVL(SORT,'00') != '00' THEN (TRUE_AMT + REL_AMT)-USE_AMT  ELSE 0 END) AS EVENT_CNT, 
			        SUM(CASE WHEN RESON  = '23' AND RESN_PROC_YN = 'Y' THEN (TRUE_AMT + REL_AMT)-USE_AMT  ELSE 0 END) AS RESN_MAN_CNT,    
			        SUM(CASE WHEN NVL(RESN_CL,'00') = '00' AND NVL(SORT,'00') = '00' AND (DIFF_CNT <![CDATA[< ]]> 3 OR DIFF_CNT >= 3 AND ETC_YN = 'Y') THEN (TRUE_AMT + REL_AMT)-USE_AMT  ELSE 0 END) AS NORMAL_CNT,
			        SUM(CASE WHEN NVL(RESN_CL,'00') = '00' AND NVL(SORT,'00') = '00' AND DIFF_CNT >= 3 AND ETC_YN = 'N' THEN (TRUE_AMT + REL_AMT)-USE_AMT  ELSE 0 END) AS YEN_CNT,
			        SUM(CASE WHEN RESON  = '23' AND RESN_PROC_YN = 'Y' AND RESN_PROC_DAY LIKE MAN_DAY+1 || '%' THEN (TRUE_AMT + REL_AMT)-USE_AMT ELSE 0 END) AS RESN_PROC_CNT
			    FROM MANGI_TBL
			    WHERE 1=1 
			       	<if test="mangi_date_gbn=='01'">
			    		AND MAN_DAY BETWEEN TO_CHAR(ADD_MONTHS(#{mangi_date}||'01',-1),'YYYYMM') AND TO_CHAR(ADD_MONTHS(#{mangi_date}||'01',10),'YYYYMM')
			    	</if>
			    	<if test="mangi_date_gbn=='02'">
			        	AND MAN_DAY BETWEEN #{mangi_date} AND TO_CHAR(ADD_MONTHS(#{mangi_date} ||'01',11),'YYYYMM')
			        </if>
			    GROUP BY MAN_DAY
			) MAIN
			ORDER BY EXT_DT ASC
    </select>
    
</mapper>
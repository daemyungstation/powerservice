<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="DlwCustMap">

    <select id="DlwCustMap.getDlwCustPrdtList" parameterType="map" resultType="resultMap">
        <!-- sql-life.xml selectMemberList -->
        /* DlwCustMap.getDlwCustPrdtList */
		<!--
        SELECT
               A.MEM_NO, A.MEM_NM, A.SEX, A.HOME_ZIP, A.HOME_ADDR
             , A.HOME_ADDR2, A.WRPL_ZIP, A.WRPL_ADDR, A.WRPL_ADDR2, A.CELL
             , A.HOME_TEL, A.WRPL_TEL, A.CI_VAL, A.CREDIT_RATING, A.DEPT_NM
             , A.CI_VAL AS OLD_CI_VAL, A.HOME_ZIP AS OLD_HOME_ZIP, A.HOME_ADDR AS OLD_HOME_ADDR, A.HOME_ADDR2 AS OLD_HOME_ADDR2
             , A.OCB_YN, A.MARKT_AGR_YN
             , CASE WHEN (A.BRTH_MON_DAY = '19000101' OR A.BRTH_MON_DAY IS NULL) THEN ''
                    ELSE A.BRTH_MON_DAY
                END AS BRTH_MON_DAY
             , (SELECT CD_NM
                  FROM COM_CD
                 WHERE USE_YN = 'Y'
                   AND GRP_CD = '0123'
                   AND COM_CD = A.SEX) AS SEX_NM
             , CASE WHEN  LENGTH(A.IDN_NO) = 10
                    THEN 'Y'
                    ELSE 'N'
                END AS BUSINESS_YN
             , CASE WHEN LENGTH(A.IDN_NO)  = 13
                    THEN SUBSTR(A.BRTH_MON_DAY, 0,8)
                    ELSE  A.IDN_NO
                     END AS IDN_NO
             , A.EMAIL, A.EMAIL_CHK, A.SMS_CHK
             , A.CRDT_MNG_NO
             , A.NOTE
             , A.DEL_FG
             , NVL(A.BLACK_CONSUMER,'N') BLACK_CONSUMER

             , B.ACCNT_NO, B.PROD_CD
             , B.BANK_ACCNT_NO  AS BANK_ACCNT_NO
             , B.JOIN_DT
             , B.EMPLE_NO
             , FN_EMPLE_NM(B.EMPLE_NO) AS EMPLE_NM
             , FN_DEPT_NM((SELECT DEPT_CD
                           FROM EMPLOYEE
                           WHERE EMPLE_NO = B.EMPLE_NO)) AS EMPLE_DEPT_NM
             , D.EXPR_NO
             , A.SAFEKEY
             , A.SAFEKEY_SRCH_DT
             , A.ACUON_FITNESS_YN
             , TO_CHAR(SYSDATE, 'YYYYMMDD') AS CURR_YMD
             , A.DM_YN
             , A.EMAIL_YN
             , SMS_YN
             , TEL_YN
             , MARRY_YN
             , CHILD_CNT
          FROM MEMBER A
          LEFT OUTER JOIN MEM_PROD_ACCNT B
                          ON A.MEM_NO = B.MEM_NO
                          AND B.DEL_FG = 'N'
          LEFT OUTER JOIN EMPLOYEE EMP
                          ON EMP.EMPLE_NO = B.EMPLE_NO

          LEFT OUTER JOIN PRODUCT D
                          ON B.PROD_CD = D.PROD_CD
                          AND D.DEL_FG = 'N'
          LEFT OUTER JOIN PAY_MNG E
                          ON B.ACCNT_NO = E.ACCNT_NO
                          AND E.DEL_FG = 'N'
                          AND E.NO = 1
          LEFT OUTER JOIN RESCISSION F
                          ON B.ACCNT_NO = F.ACCNT_NO
                          AND F.DEL_FG = 'N'
          LEFT OUTER JOIN CMS_MEM G
                          ON B.ACCNT_NO = G.ACCNT_NO
                          AND G.DEL_FG = 'N'
         WHERE A.DEL_FG = 'N'
          -->

        SELECT
            /*+INDEX(MPA, IDX_MEM_PROD_ACCNT_MEM_NO)*/
            MB.MEM_NO,
            MPA.ACCNT_NO,
            MB.MEM_NM,
            MB.SEX,
            MB.HOME_ZIP,
            MB.HOME_ADDR,
            MB.HOME_ADDR2,
            MB.WRPL_ZIP,
            MB.WRPL_ADDR,
            MB.WRPL_ADDR2,
            MB.CELL,
            MB.HOME_TEL,
            MB.WRPL_TEL,
            MB.CI_VAL,
            MB.CREDIT_RATING,
            MB.DEPT_NM,
            MB.CI_VAL AS OLD_CI_VAL,
            MB.HOME_ZIP AS OLD_HOME_ZIP,
            MB.HOME_ADDR AS OLD_HOME_ADDR,
            MB.HOME_ADDR2 AS OLD_HOME_ADDR2,
            MB.OCB_YN,
            MB.MARKT_AGR_YN,
            CASE WHEN (MB.BRTH_MON_DAY = '19000101' OR MB.BRTH_MON_DAY IS NULL) THEN '' ELSE MB.BRTH_MON_DAY END AS BRTH_MON_DAY,
            (SELECT CD_NM
                  FROM COM_CD
                 WHERE USE_YN = 'Y'
                   AND GRP_CD = '0123'
                   AND COM_CD = MB.SEX) AS SEX_NM ,
             (CASE WHEN  LENGTH(MB.IDN_NO) = 10 THEN 'Y' ELSE 'N' END) AS BUSINESS_YN,
             (CASE WHEN LENGTH(MB.IDN_NO)  = 13 THEN SUBSTR(MB.BRTH_MON_DAY, 0,8) ELSE  MB.IDN_NO END) AS IDN_NO,
             MB.EMAIL,
             MB.EMAIL_CHK,
             MB.SMS_CHK,
             MB.CRDT_MNG_NO,
             MB.NOTE,
             MB.DEL_FG,
             NVL(MB.BLACK_CONSUMER,'N') BLACK_CONSUMER,
             MPA.ACCNT_NO,
             MPA.PROD_CD,
             MPA.BANK_ACCNT_NO  AS BANK_ACCNT_NO,
             MPA.JOIN_DT,
             MPA.EMPLE_NO,
             EMP.EMPLE_NM AS EMPLE_NM,
             DEP.DEPT_NM AS EMPLE_DEPT_NM,
             PD.EXPR_NO,
             MB.SAFEKEY,
             MB.SAFEKEY_SRCH_DT,
             MB.ACUON_FITNESS_YN,
             TO_CHAR(SYSDATE, 'YYYYMMDD') AS CURR_YMD,
             MB.DM_YN,
             MB.EMAIL_YN,
             MB.SMS_YN,
             MB.TEL_YN,
             MB.MARRY_YN,
             MB.CHILD_CNT
          FROM MEMBER MB LEFT OUTER JOIN
              MEM_PROD_ACCNT MPA ON MPA.MEM_NO = MB.MEM_NO AND MPA.DEL_FG = 'N' LEFT OUTER JOIN
              EMPLOYEE EMP ON EMP.EMPLE_NO = MPA.EMPLE_NO LEFT OUTER JOIN
              DEPARTMENT DEP ON EMP.DEPT_CD = DEP.DEPT_CD  LEFT OUTER JOIN
              PRODUCT PD ON MPA.PROD_CD = PD.PROD_CD AND PD.DEL_FG = 'N'
         WHERE 1=1
         	AND MB.DEL_FG = 'N'

        <if test="dataAthrQury != null and dataAthrQury != ''">
            ${dataAthrQury}
        </if>
        <if test="mem_no != null and mem_no != ''">
            AND MB.MEM_NO = #{mem_no}
        </if>
        <if test="mem_nm != null and mem_nm != ''">
            AND MB.MEM_NM = #{mem_nm}
        </if>
        <if test="idn_no != null and idn_no != ''">
            AND MB.IDN_NO LIKE REPLACE(#{idn_no}, '-', '') || '%'
        </if>
        <if test="ci_val != null and ci_val != ''">
            AND MB.CI_VAL = #{ci_val}
        </if>
        <if test="accnt_no != null and accnt_no != ''">
            <if test="accnt_no != '00000'">
                AND MPA.ACCNT_NO = #{accnt_no}
            </if>
        </if>
        <if test="home_tel != null and home_tel != ''">
            AND MB.HOME_TEL = #{home_tel}
        </if>
        <if test="cell != null and cell != ''">
            AND REPLACE(MB.CELL,'-','') = REPLACE(#{cell},'-','')  <!-- 2017.11.10 김찬영 REPLACE추가  -->
        </if>
        <if test="wrpl_tel != null and wrpl_tel != ''">
            AND MB.WRPL_TEL = #{wrpl_tel}
        </if>
        <if test="brth_mon_day != null and brth_mon_day != ''">
            <!-- AND CONVERT(VARCHAR, A.BRTH_MON_DAY, 112) = CONVERT(VARCHAR, #{brth_mon_day}, 112) -->
            AND MB.BRTH_MON_DAY = #{brth_mon_day}
        </if>
        <if test="sex != null and sex != ''">
            AND MB.SEX = #{sex}
        </if>
        <if test="unty_inq_yn != null and unty_inq_yn != ''">
            AND ROWNUM = 1
        </if>
        ORDER BY MB.MEM_NM, MB.BRTH_MON_DAY
    </select>

    <select id="DlwCustMap.getDlwMemberInfo" parameterType="map" resultType="resultMap">
        /* DlwCustMap."DlwCustMap.getDlwMemberInfo" */

        SELECT A.MEM_NO, A.MEM_NM, A.HUSHLD, A.WRPL_NM, A.DEPT_NM
             , A.CELL, A.HOME_TEL, A.WRPL_TEL, A.HOME_ZIP, A.HOME_ADDR
             , A.HOME_ADDR2, A.WRPL_ZIP, A.WRPL_ADDR, A.WRPL_ADDR2, A.EMAIL
             , A.EMAIL_CHK, A.SMS_CHK, A.CONTC_TM, A.CONTC_TM_FROM, A.CONTC_TM_TO
             , A.CERTF_RCV_CHK, A.SOL_LUN, A.RE_JOIN, A.OCB_YN, A.MARKT_AGR_YN
             , CASE WHEN (A.BRTH_MON_DAY = '19000101' OR A.BRTH_MON_DAY IS NULL) THEN ''
                    ELSE A.BRTH_MON_DAY
                END AS BRTH_MON_DAY
             , CASE WHEN (A.ANNV = '19000101' OR A.ANNV IS NULL) THEN ''
                    ELSE A.ANNV
                END AS ANNV
             , A.NOTE, A.CL, A.OLD_MEM_NO, A.DEL_FG, A.ENG_NM, A.INSPL_ZIP
             , A.INSPL_ADDR, A.INSPL_ADDR2, A.IDN_NO_CHK_NOT_USE, A.CI_VAL
             , A.SEX, A.CREDIT_RATING, A.ADDR_UPDATE, A.CRDT_MNG_NO, A.CARD_AUTH
             , A.PRN_SI_NM, A.HOME_ZIP_OLD, A.WRPL_ZIP_OLD
             , CASE WHEN LENGTH(A.IDN_NO) = 13
                    THEN SUBSTR(A.BRTH_MON_DAY, 3)
                    ELSE  SUBSTR(A.IDN_NO, 1, 3) || '-'
                         || SUBSTR(A.IDN_NO, 4, 2) || '-'
                         || SUBSTR(A.IDN_NO, 6, 5)
                     END AS IDN_NO
             , NVL(A.BLACK_CONSUMER,'N') BLACK_CONSUMER <!-- 관리회원 유무 -->
          FROM MEMBER A
         WHERE A.DEL_FG = 'N'
           AND A.MEM_NO = #{mem_no}
    </select>

    <insert id="DlwCustMap.insertMember" parameterType="map" timeout="3">
        <!-- sql-life.xml insertMember -->

        /* DlwCustMap.insertMember */


        <selectKey keyProperty="mem_no" resultType="String" order="BEFORE">
            SELECT FN_CREATE_MEM_NO_NEW() AS MEMNO FROM DUAL
        </selectKey>

        INSERT
          INTO MEMBER
               (MEM_NO, MEM_NM, IDN_NO, HUSHLD, WRPL_NM
              , DEPT_NM, CELL, HOME_TEL, WRPL_TEL, HOME_ZIP
              , HOME_ADDR, HOME_ADDR2, WRPL_ZIP, WRPL_ADDR, WRPL_ADDR2
              , EMAIL, EMAIL_CHK, SMS_CHK, CONTC_TM, CONTC_TM_FROM
              , CONTC_TM_TO, CERTF_RCV_CHK, BRTH_MON_DAY, SOL_LUN, ANNV
              , RE_JOIN, NOTE, CL, OLD_MEM_NO, REG_DM
              , REG_MAN, UPD_DM, UPD_MAN, DEL_FG, ENG_NM
            <if test="idn_no_chk_not_use != null and idn_no_chk_not_use != ''">
                , IDN_NO_CHK_NOT_USE
            </if>
            <if test="ci_val != null and ci_val != ''">
                , CI_VAL
            </if>
            <if test="safekey != null and safekey != ''">
                , SAFEKEY
            </if>
            <if test="safekey_srch_dt != null and safekey_srch_dt != ''">
                , SAFEKEY_SRCH_DT
            </if>
            <if test="acuon_fitness_yn != null and acuon_fitness_yn != ''">
                , ACUON_FITNESS_YN
            </if>
            <if test="sex != null and sex != ''">
                , SEX
            </if>
            <if test="credit_rating != null and credit_rating != ''">
                , CREDIT_RATING
            </if>
            <if test="crdt_mng_no != null and crdt_mng_no != ''">
                , CRDT_MNG_NO
            </if>
            <if test="black_consumer != null and black_consumer != ''">
                , BLACK_CONSUMER
            </if>
            <if test="ocb_yn != null and ocb_yn != ''">
                , OCB_YN
            </if>
               ,MARKT_AGR_YN
               ,DM_YN
               ,EMAIL_YN
               ,SMS_YN
               ,TEL_YN

                )
        VALUES (#{mem_no}, #{mem_nm}, #{idn_no}, #{hushld}, #{wrpl_nm}
              , #{dept_nm}, #{cell}, #{home_tel}, #{wrpl_tel}, REPLACE(#{home_zip}, '-', '')
              , #{home_addr}, #{home_addr2}, #{wrpl_zip}, #{wrpl_addr}, #{wrpl_addr2}
              , #{email}, #{email_chk}, #{sms_chk},'0', #{contc_tm_from}
              , #{contc_tm_to}, #{certf_rcv_chk}, #{brth_mon_day}, #{sol_lun}, #{annv}
              , #{re_join}, #{note}, #{cl}, #{old_mem_no}, sysdate
              , #{rgsr_id}, sysdate, #{amnd_id}, 'N', #{eng_nm}
            <if test="idn_no_chk_not_use != null and idn_no_chk_not_use != ''">
                , #{idn_no_chk_not_use}
            </if>
            <if test="ci_val != null and ci_val != ''">
                , #{ci_val}
            </if>
            <if test="safekey != null and safekey != ''">
                , #{safekey}
            </if>
            <if test="safekey_srch_dt != null and safekey_srch_dt != ''">
                , #{safekey_srch_dt}
            </if>
            <if test="acuon_fitness_yn != null and acuon_fitness_yn != ''">
                , #{acuon_fitness_yn}
            </if>
            <if test="sex != null and sex != ''">
                , #{sex}
            </if>
            <if test="credit_rating != null and credit_rating != ''">
                , #{credit_rating}
            </if>
            <if test="crdt_mng_no != null and crdt_mng_no != ''">
                , #{crdt_mng_no}
            </if>
            <if test="black_consumer != null and black_consumer != ''">
                , #{black_consumer}
            </if>
            <if test="ocb_yn != null and ocb_yn != ''">
                , #{ocb_yn}
            </if>
            <if test="markt_agr_yn != null and markt_agr_yn != ''">
                , #{markt_agr_yn}
            </if>
            <if test="markt_agr_yn == null or markt_agr_yn == ''">
                , 'Y'
            </if>
             ,#{dm_yn}
             ,#{email_yn}
             ,#{sms_yn}
             ,#{tel_yn}
                )

    </insert>

    <update id="DlwCustMap.updateMember" parameterType="map" timeout="3">
        <!-- sql-life.xml updateMember -->

        /* DlwCustMap.updateMember */

        <!--
        IF NOT EXISTS (
            select * from sys.openkeys where key_name = 'KeyAES256'
        ) OPEN SYMMETRIC KEY KeyAES256 DECRYPTION BY CERTIFICATE CertKeyProtect
        -->

        UPDATE MEMBER
           SET MEM_NM           = trim(#{mem_nm})
             , IDN_NO           = TO_CHAR(REPLACE(#{idn_no}, '-', ''))
             <!-- , HUSHLD          = #{hushld}
             , WRPL_NM          = #{wrpl_nm}
             , DEPT_NM          = #{dept_nm} -->
             , CELL             = #{cell}
             , HOME_TEL         = #{home_tel}
             , WRPL_TEL         = #{wrpl_tel}
            <if test="home_zip != null and home_zip != ''">
                , HOME_ZIP      = REPLACE(#{home_zip}, '-', '')
                , HOME_ADDR         = #{home_addr}
                , HOME_ADDR2        = #{home_addr2}
            </if>
             <!-- , WRPL_ZIP        = #{wrpl_zip}
             , WRPL_ADDR        = #{wrpl_addr}
             , WRPL_ADDR2       = #{wrpl_addr2} -->
             , EMAIL            = #{email}
             <!-- , EMAIL_CHK       = #{email_chk}
             , SMS_CHK          = #{sms_chk}
             , CONTC_TM         = #{contc_tm}
             , CONTC_TM_FROM    = #{contc_tm_from}
             , CONTC_TM_TO      = #{contc_tm_to}
             , CERTF_RCV_CHK    = #{certf_rcv_chk} -->
            <if test="brth_mon_day != null and brth_mon_day != ''">
             , BRTH_MON_DAY     = #{brth_mon_day}
            </if>
             <!-- , SOL_LUN             = #{sol_lun}
             , ANNV             = #{annv}
             , RE_JOIN          = #{re_join}
             , CL               = #{cl}
             , OLD_MEM_NO       = #{old_mem_no} -->
             , NOTE             = #{note}
             , UPD_DM           = sysdate
             , UPD_MAN          = #{amnd_id}
             , DEL_FG           = #{del_fg}
             <!-- , ENG_NM          = #{eng_nm} -->
            <if test="ci_val != null and ci_val != ''">
                , CI_VAL = #{ci_val}
            </if>
            <!-- <if test="idn_no_chk_not_use != null and idn_no_chk_not_use != ''">
                , IDN_NO_CHK_NOT_USE = #{idn_no_chk_not_use}
            </if> -->
            <if test="sex != null and sex != ''">
                , SEX = #{sex}
            </if>
            <if test="credit_rating != null and credit_rating != ''">
                , CREDIT_RATING = #{credit_rating}
            </if>
            <if test="crdt_mng_no != null and crdt_mng_no != ''">
                , CRDT_MNG_NO = #{crdt_mng_no}
            </if>
            <if test="ocb_yn != null and ocb_yn != ''">
                , OCB_YN = #{ocb_yn}
            </if>
            <if test="markt_agr_yn != null and markt_agr_yn != ''">
                , MARKT_AGR_YN = #{markt_agr_yn}
            </if>
            <!-- <if test="black_consumer != null and black_consumer != ''">
                , BLACK_CONSUMER = #{black_consumer}
            </if> -->

            <if test="safekey != null and safekey != ''">
                , SAFEKEY = #{safekey}
            </if>
            <if test="safekey_srch_dt != null and safekey_srch_dt != ''">
                , SAFEKEY_SRCH_DT = #{safekey_srch_dt}
            </if>
            <if test="acuon_fitness_yn != null and acuon_fitness_yn != ''">
                , ACUON_FITNESS_YN = #{acuon_fitness_yn}
            </if>
                ,dm_yn =#{dm_yn}
                ,email_yn =#{email_yn}
                ,SMS_YN =#{sms_yn}
                ,TEL_YN =#{tel_yn}

                ,MARRY_YN = #{marry_yn}
                ,CHILD_CNT = #{child_cnt}

        WHERE MEM_NO = #{mem_no}

        <!--
        IF EXISTS (
            select * from sys.openkeys where key_name = 'KeyAES256'
        ) CLOSE SYMMETRIC KEY KeyAES256
        -->
    </update>

    <select id="DlwCustMap.getDlwCustAcntCount" parameterType="map" resultType="int">

        SELECT /* DlwCustMap.getDlwCustAcntCount */
               COUNT(*)
          FROM MEM_PROD_ACCNT A JOIN MEMBER B
                                  ON A.MEM_NO = B.MEM_NO
                                 AND B.DEL_FG = 'N'
                                JOIN PRODUCT C
                                  ON A.PROD_CD = C.PROD_CD
                                JOIN EMPLOYEE EMP
                                  ON EMP.EMPLE_NO = A.EMPLE_NO
                     LEFT OUTER JOIN CMS_MEM D
                                  ON A.ACCNT_NO = D.ACCNT_NO
                                 AND D.DEL_FG = 'N'
                     LEFT OUTER JOIN CARD_MEM E
                                  ON A.ACCNT_NO = E.ACCNT_NO
                                 AND E.DEL_FG = 'N'
         WHERE A.DEL_FG = 'N'
        <if test="dataAthrQury != null and dataAthrQury != '' and user_athrCd != 'TM40'">	 <!-- 2018.03.20 TM40이면 제외  -->
             ${dataAthrQury}
         </if>
         <if test="ns_yn != null and ns_yn.equalsIgnoreCase('Y')">
             AND EMP.DEPT_CD = '1602'
         </if>
         <if test="srch_vl != null and srch_vl != ''">
             <if test="srch_typ == 'all'">
                 AND (A.ACCNT_NO = #{srch_vl}
                      OR  A.MEM_NO = #{srch_vl}
                      OR  B.MEM_NM LIKE '%' || #{srch_vl} || '%'
                      OR  B.IDN_NO LIKE '%' || #{srch_vl} || '%'
                      OR  D.BANK_ACCNT_NO = #{srch_vl}
                      )
             </if>
             <if test="srch_typ == 'mem_nm'">
                 AND B.MEM_NM LIKE #{srch_vl} || '%'
             </if>
             <if test="srch_typ == 'accnt_no'">
                 AND A.ACCNT_NO = #{srch_vl}
             </if>
             <if test="srch_typ == 'mem_no'">
                 AND A.MEM_NO = #{srch_vl}
             </if>
             <if test="srch_typ == 'birth'">
                 AND B.IDN_NO LIKE '%' || #{srch_vl} || '%'
             </if>
             <if test="srch_typ == 'bank_accnt_no'">
                 AND  D.BANK_ACCNT_NO LIKE '%' || #{srch_vl} || '%'
             </if>
             <if test="srch_typ == 'pre_accnt_no'">
                 AND A.OLD_MID LIKE '%' || #{srch_vl} || '%'
             </if>
         </if>
         <if test="srch_typ == 'ichae_dt'">
             <if test="ichae_stt_dt != null and ichae_stt_dt != '' and ichae_end_dt != null and ichae_end_dt != ''">
                 AND  TO_NUMBER(A.ICHAE_DT) <![CDATA[>=]]> #{ichae_stt_dt}
                 AND  TO_NUMBER(A.ICHAE_DT) <![CDATA[<=]]> #{ichae_end_dt}
             </if>
         </if>

         <if test="option == 'cms_non'">
             AND a.accnt_no NOT IN (SELECT accnt_no
                                      FROM CMS_MEM
                                     WHERE del_fg = 'N')
             AND a.accnt_no NOT IN (SELECT accnt_no
                                      FROM NEW_CANCL_APP
                                     WHERE stat IN ('01', '02'))
         </if>
         <if test="option == 'cms'">
             AND a.accnt_no IN (SELECT accnt_no
                                  FROM CMS_MEM
                                 WHERE del_fg = 'N')
             AND a.accnt_no NOT IN (SELECT accnt_no
                                      FROM wdrw_req
                                     WHERE stat IN ('01', '02'))
             AND a.accnt_no NOT IN (SELECT accnt_no
                                      FROM card_wdrw_req
                                     WHERE stat IN ('01', '02'))
         </if>

         <if test="option == 'card_non'">
             AND a.accnt_no NOT IN (SELECT accnt_no
                                      FROM CARD_MEM
                                     WHERE del_fg = 'N')
         </if>
         <if test="option == 'card'">
             AND a.accnt_no IN (SELECT accnt_no
                                  FROM CARD_MEM
                                 WHERE del_fg = 'N')
             AND a.accnt_no NOT IN (SELECT accnt_no
                                      FROM card_wdrw_req
                                     WHERE stat IN ('01', '02'))
             AND a.accnt_no NOT IN (SELECT accnt_no
                                      FROM card_wdrw_req
                                     WHERE stat IN ('01', '02'))
         </if>
         <if test="option == 'call'">
             <!-- 수정 : 고객만족센터 파일 산출에 카드산출 포함 by lbk_2013_06_19  -->
             AND
             (
                 (
                 a.PAY_MTHD = '04'
                 AND a.accnt_no IN (SELECT accnt_no
                                      FROM CMS_MEM
                                     WHERE del_fg = 'N')
                 AND a.accnt_no NOT IN (SELECT accnt_no
                                          FROM wdrw_req
                                         WHERE stat IN ('01', '02'))
                 and a.accnt_no NOT IN (SELECT accnt_no
                                          FROM wdrw_req_call_center
                                         WHERE WDRW_REQ_YN = 'N'
                                           AND DEL_FG IS NULL)
                 )
                 OR
                 (
                 a.PAY_MTHD = '06'
                 AND a.accnt_no IN (SELECT accnt_no
                                      FROM CARD_MEM
                                     WHERE del_fg = 'N')
                 AND a.accnt_no NOT IN (SELECT accnt_no
                                          FROM card_wdrw_req
                                         WHERE stat IN ('01', '02'))
                 and a.accnt_no NOT IN (SELECT accnt_no
                                          FROM wdrw_req_call_center
                                         WHERE WDRW_REQ_YN = 'N'
                                           AND DEL_FG IS NULL)
                 )
             )

         </if>
         <if test="option == 'pay_able'">
             <!-- AND FN_ACCNT_STAT(a.accnt_no) in ('Y','E') //청약철회가 아니면 조회되도록 수정 by lbk_2012_07_31 -->
             AND FN_EVENT(a.accnt_no) != '청약철회'
         </if>
         <if test="option == 'cms_card_non'">
             AND a.accnt_no NOT IN (SELECT accnt_no
                                      FROM CMS_MEM
                                     WHERE del_fg = 'N')
             AND a.accnt_no NOT IN (SELECT accnt_no
                                      FROM NEW_CANCL_APP
                                     WHERE stat IN ('01', '02'))
             AND a.accnt_no NOT IN (SELECT accnt_no
                                      FROM CARD_MEM
                                     WHERE del_fg = 'N')
         </if>
         <if test="option == 'event'">
             AND a.accnt_no IN (SELECT accnt_no
                                      FROM EVENT
                                     WHERE del_fg = 'N')
         </if>
         <if test="option == 'prod_trans'">
             <!-- 상품변경은 정상 구좌이면서 출금이체 신청전,중이 아니면서 양도양수 공제 신고된건만 조회  -->
             AND FN_ACCNT_STAT(a.accnt_no) = 'Y'
             AND a.accnt_no NOT IN (SELECT accnt_no
                                      FROM CMS_MEM
                                     WHERE del_fg = 'N')
             AND a.accnt_no NOT IN (SELECT accnt_no
                                      FROM NEW_CANCL_APP
                                     WHERE stat IN ('01', '02'))
             AND a.accnt_no NOT IN (SELECT ACCNT_NO FROM TRANSFER_BRKDN WHERE NEW_YN IN ('Y', 'S', 'E'))
         </if>
         <!-- ORDER BY b.mem_nm -->
    </select>
    
    <select id="DlwCustMap.getDlwCustAcntList" parameterType="map" resultType="resultMap">
        <!-- sql-common.xml selectAccntInfo -->

        SELECT /* DlwCustMap.getDlwCustAcntList */
               B.*
          FROM (SELECT A.*,
                    <choose>
                        <when test="orderBy != null and orderBy != ''">
                            ROW_NUMBER() OVER(ORDER BY ${orderBy} ${orderDirection}) AS PAGE_INDX
                        </when>
                        <otherwise>
                            ROW_NUMBER() OVER(ORDER BY UPD_DM DESC) AS PAGE_INDX
                        </otherwise>
                    </choose>
                 FROM (SELECT A.ACCNT_NO
                            , A.MEM_NO
                            , A.RESORT_NO
                            , B.MEM_NM
                            , B.HOME_TEL
                            , B.CELL AS CELL
                            , B.WRPL_TEL
                            , CASE WHEN LENGTH(NVL(TO_CHAR(B.IDN_NO), '')) = 10
                                   THEN B.IDN_NO
                                   ELSE SUBSTR(B.BRTH_MON_DAY, -6)
                               END IDN_NO
                            , A.PROD_CD
                            , C.PROD_NM
                            , C.PROD_AMT
                            , C.MON_PAY_AMT
                            , C.EXPR_NO
                            , A.EMPLE_NO
                            , EMP.EMPLE_NM
                            , A.APPFM_NO
                            , JOIN_DT
                            , COMPT_DT
                            , A.BEF_EMPLE_CD
                            , A.PAY_PERD
                            , A.PAY_MTHD
                            , A.JOIN_PROD
                            , A.NEW_CHAN_GUNSU
                            , A.CERTF_RCV_CHK
                            , A.PAY_STAT_1NO
                            , D.ICHAE_DT
                            , A.BANK_ACCNT_NO AS BANK_ACCNT_NO
                            , A.OLD_MID
                            , A.REG_DM
                            , A.REG_MAN
                            , A.UPD_DM
                            , A.UPD_MAN
                              , FN_ACCNT_STAT(A.ACCNT_NO) AS ACCNT_STAT
                            , (SELECT NVL(MAX (NO),1)
                                 FROM PAY_MNG
                                WHERE ACCNT_NO = A.ACCNT_NO
                                  AND DEL_FG = 'N') * C.MON_PAY_AMT AS TOTAL_PAY
                            , (SELECT NVL(MAX (NO),1)
                                 FROM PAY_MNG
                                WHERE ACCNT_NO = A.ACCNT_NO
                                  AND DEL_FG = 'N') LAST_NO
                            , (SELECT NVL(MAX (NO),0)
                                 FROM PAY_MNG
                                WHERE ACCNT_NO = A.ACCNT_NO
                                  AND DEL_FG = 'N') REAL_PAY_NO
                            , A.DED_NO
                            , NVL(A.JOIN_CL,'01') AS JOIN_CL
                            , CASE WHEN (SELECT COUNT(ACCNT_NO) FROM TRANSFER_BRKDN WHERE ACCNT_NO = A.ACCNT_NO) > 0
                                   THEN 'Y'
                                   ELSE 'N'
                               END AS TRANS_GUBUN
                            , B.BRTH_MON_DAY
                            , NVL((SELECT CELL
                                        FROM EMPLOYEE
                                       WHERE EMPLE_NO = A.EMPLE_NO), '') AS EMP_CELL
                            , FN_EVENT(A.ACCNT_NO) AS JOIN_STAT
                            , FN_EVENT(A.ACCNT_NO) AS STAT
                            , FN_YEN_CHE(A.ACCNT_NO) AS PAY_STAT
                            , (SELECT NVL(MAX (NO),0)
                                 FROM PAY_MNG
                                WHERE ACCNT_NO = A.ACCNT_NO
                                  AND DEL_FG = 'N') AS PAY_NO
                            , (SELECT NVL(MAX (NO),0)
                                 FROM PAY_MNG_DTL
                                WHERE ACCNT_NO = A.ACCNT_NO
                                  AND DEL_FG = 'N') AS PAY_ALLT_NO
                            , (SELECT NVL(MAX (NO),0)
                                 FROM PAY_MNG_DTL1
                                WHERE ACCNT_NO = A.ACCNT_NO
                                  AND DEL_FG = 'N') AS PAY_ADD_NO
                            , (SELECT NVL(SUM (PAY_AMT),0)
                                 FROM PAY_MNG
                                WHERE ACCNT_NO = A.ACCNT_NO
                                  AND DEL_FG = 'N') AS PAY_AMT
                            , (SELECT NVL(SUM (PAY_AMT),0)
                                 FROM PAY_MNG_DTL
                                WHERE ACCNT_NO = A.ACCNT_NO
                                  AND DEL_FG = 'N') AS PAY_ALLT_AMT
                            , (SELECT NVL(SUM (PAY_AMT),0)
                                 FROM PAY_MNG_DTL1
                                WHERE ACCNT_NO = A.ACCNT_NO
                                  AND DEL_FG = 'N') AS PAY_ADD_AMT
                            , NVL((SELECT MODEL_CL_NM
                                        FROM PRODUCT_MODEL_CL_CD
                                       WHERE MODEL_CL_CD = A.PROD_MODEL_KIND), '') AS MODEL_CL_NM
                             , CASE WHEN A.KSTBIT = '01' THEN '대기'
                                    WHEN A.KSTBIT = '02' THEN '가입'
                                    WHEN A.KSTBIT = '03' THEN '해약'
                                    WHEN A.KSTBIT = '04' THEN '행사'
                                    WHEN A.KSTBIT = '09' THEN '만기' ELSE A.KSTBIT END KSTBIT
                              , FN_CMS_CARD_MEM(A.ACCNT_NO) YN
                         FROM MEM_PROD_ACCNT A
                         JOIN MEMBER B
                              ON A.MEM_NO = B.MEM_NO
                             AND B.DEL_FG = 'N'
                         JOIN PRODUCT C
                              ON A.PROD_CD = C.PROD_CD
                         JOIN EMPLOYEE EMP
                              ON EMP.EMPLE_NO = A.EMPLE_NO
              LEFT OUTER JOIN CMS_MEM D
                              ON A.ACCNT_NO = D.ACCNT_NO
                              AND D.DEL_FG = 'N'
              LEFT OUTER JOIN CARD_MEM E
                              ON A.ACCNT_NO = E.ACCNT_NO
                              AND E.DEL_FG = 'N'
                         <!-- 2018.02.08 임의 등록시 고객 선택 할 때 해피콜 상태가 01,011 인것만 조회 -->
                         <!-- 2018.02.13 임의 등록시 고객 선택 할 때만 해피콜 조인 / hp_join_gb 구분자 추가 -->
                        <if test="hp_join_gb != null and hp_join_gb != ''">
                         INNER JOIN HP_CALL HP
                              ON A.ACCNT_NO = HP.ACCNT_NO AND HP.STAT IN ('01', '011')
                        </if>

                         <!-- 2018.03.20 TM40:MG권한 일 경우 -->
                         <if test="user_athrCd != null and user_athrCd == 'TM40'">
                                  INNER JOIN LF_DMUSER.RESN_CREDIT_LIST K
                                  ON K.ACCNT_NO = A.ACCNT_NO
                                  AND K.DEL_FG = 'N'
                                  AND K.TARGET_YM = TO_CHAR(SYSDATE, 'YYYYMM')
                         </if>

                        WHERE A.DEL_FG = 'N'
                        <if test="dataAthrQury != null and dataAthrQury != '' and user_athrCd != 'TM40'">	 <!-- 2018.03.20 TM40이면 제외  -->

                            ${dataAthrQury}
                        </if>
                        <if test="ns_yn != null and ns_yn.equalsIgnoreCase('Y')">
                            AND EMP.DEPT_CD = '1602'
                        </if>
                        <if test="srch_vl != null and srch_vl != ''">
                            <if test="srch_typ == 'all'">
                                AND (A.ACCNT_NO = #{srch_vl}
                                     OR  A.MEM_NO = #{srch_vl}
                                     OR  B.MEM_NM LIKE '%' || #{srch_vl} || '%'
                                     OR  B.IDN_NO LIKE '%' || #{srch_vl} || '%'
                                     OR  D.BANK_ACCNT_NO = #{srch_vl}
                                     )
                            </if>
                            <if test="srch_typ == 'mem_nm'">
                                AND B.MEM_NM LIKE #{srch_vl} || '%'
                            </if>
                            <if test="srch_typ == 'accnt_no'">
                                AND A.ACCNT_NO = #{srch_vl}
                            </if>
                            <if test="srch_typ == 'mem_no'">
                                AND A.MEM_NO = #{srch_vl}
                            </if>
                            <if test="srch_typ == 'birth'">
                                AND B.IDN_NO LIKE '%' || #{srch_vl} || '%'
                            </if>
                            <if test="srch_typ == 'bank_accnt_no'">
                                AND D.BANK_ACCNT_NO LIKE '%' || #{srch_vl} || '%'
                            </if>
                            <if test="srch_typ == 'pre_accnt_no'">
                                AND A.OLD_MID LIKE '%' || #{srch_vl} || '%'
                            </if>
                        </if>
                        <if test="srch_typ == 'ichae_dt'">
                            <if test="ichae_stt_dt != null and ichae_stt_dt != '' and ichae_end_dt != null and ichae_end_dt != ''">
                                AND TO_NUMBER(A.ICHAE_DT) <![CDATA[>=]]> #{ichae_stt_dt}
                                AND TO_NUMBER(A.ICHAE_DT) <![CDATA[<=]]> #{ichae_end_dt}
                            </if>
                        </if>


                        <if test="option == 'cms_non'">
                            AND a.accnt_no NOT IN (SELECT accnt_no
                                                     FROM CMS_MEM
                                                    WHERE del_fg = 'N')
                            AND a.accnt_no NOT IN (SELECT accnt_no
                                                     FROM NEW_CANCL_APP
                                                    WHERE stat IN ('01', '02'))
                        </if>
                        <if test="option == 'cms'">
                            AND a.accnt_no IN (SELECT accnt_no
                                                 FROM CMS_MEM
                                                WHERE del_fg = 'N')
                            AND a.accnt_no NOT IN (SELECT accnt_no
                                                     FROM wdrw_req
                                                    WHERE stat IN ('01', '02'))
                            AND a.accnt_no NOT IN (SELECT accnt_no
                                                     FROM card_wdrw_req
                                                    WHERE stat IN ('01', '02'))
                        </if>

                        <if test="option == 'card_non'">
                            AND a.accnt_no NOT IN (SELECT accnt_no
                                                     FROM CARD_MEM
                                                    WHERE del_fg = 'N')
                        </if>
                        <if test="option == 'card'">
                            AND a.accnt_no IN (SELECT accnt_no
                                                 FROM CARD_MEM
                                                WHERE del_fg = 'N')
                            AND a.accnt_no NOT IN (SELECT accnt_no
                                                     FROM card_wdrw_req
                                                    WHERE stat IN ('01', '02'))
                            AND a.accnt_no NOT IN (SELECT accnt_no
                                                     FROM card_wdrw_req
                                                    WHERE stat IN ('01', '02'))
                        </if>
                        <if test="option == 'call'">
                            <!-- 수정 : 고객만족센터 파일 산출에 카드산출 포함 by lbk_2013_06_19  -->
                            AND
                            (
                                (
                                a.PAY_MTHD = '04'
                                AND a.accnt_no IN (SELECT accnt_no
                                                     FROM CMS_MEM
                                                    WHERE del_fg = 'N')
                                AND a.accnt_no NOT IN (SELECT accnt_no
                                                         FROM wdrw_req
                                                        WHERE stat IN ('01', '02'))
                                and a.accnt_no NOT IN (SELECT accnt_no
                                                         FROM wdrw_req_call_center
                                                        WHERE WDRW_REQ_YN = 'N'
                                                          AND DEL_FG IS NULL)
                                )
                                OR
                                (
                                a.PAY_MTHD = '06'
                                AND a.accnt_no IN (SELECT accnt_no
                                                     FROM CARD_MEM
                                                    WHERE del_fg = 'N')
                                AND a.accnt_no NOT IN (SELECT accnt_no
                                                         FROM card_wdrw_req
                                                        WHERE stat IN ('01', '02'))
                                and a.accnt_no NOT IN (SELECT accnt_no
                                                         FROM wdrw_req_call_center
                                                        WHERE WDRW_REQ_YN = 'N'
                                                          AND DEL_FG IS NULL)
                                )
                            )

                        </if>
                        <if test="option == 'pay_able'">
                            <!-- AND FN_ACCNT_STAT(a.accnt_no) in ('Y','E') //청약철회가 아니면 조회되도록 수정 by lbk_2012_07_31 -->
                            AND FN_EVENT(a.accnt_no) != '청약철회'
                        </if>
                        <if test="option == 'cms_card_non'">
                            AND a.accnt_no NOT IN (SELECT accnt_no
                                                     FROM CMS_MEM
                                                    WHERE del_fg = 'N')
                            AND a.accnt_no NOT IN (SELECT accnt_no
                                                     FROM NEW_CANCL_APP
                                                    WHERE stat IN ('01', '02'))
                            AND a.accnt_no NOT IN (SELECT accnt_no
                                                     FROM CARD_MEM
                                                    WHERE del_fg = 'N')
                        </if>
                        <if test="option == 'event'">
                            AND a.accnt_no IN (SELECT accnt_no
                                                     FROM EVENT
                                                    WHERE del_fg = 'N')
                        </if>
                        <if test="option == 'prod_trans'">
                            <!-- 상품변경은 정상 구좌이면서 출금이체 신청전,중이 아니면서 양도양수 공제 신고된건만 조회  -->
                            AND FN_ACCNT_STAT(a.accnt_no) = 'Y'
                            AND a.accnt_no NOT IN (SELECT accnt_no
                                                     FROM CMS_MEM
                                                    WHERE del_fg = 'N')
                            AND a.accnt_no NOT IN (SELECT accnt_no
                                                     FROM NEW_CANCL_APP
                                                    WHERE stat IN ('01', '02'))
                            AND a.accnt_no NOT IN (SELECT ACCNT_NO FROM TRANSFER_BRKDN WHERE NEW_YN IN ('Y', 'S', 'E'))
                        </if>
                        <!-- ORDER BY b.mem_nm -->
                       ) A
                ) B
        <if test="startLine != null and startLine != '' and endLine != null and endLine != ''">
            <![CDATA[
            WHERE PAGE_INDX >= #{startLine}
              AND PAGE_INDX < #{endLine}
            ]]>
        </if>
    </select>

    <select id="DlwCustMap.getDlwOnlineMemberCmsInfo" parameterType="map" resultType="resultMap">
        <!-- sql-life.xml selectOnlineMemberCmsInfo -->

        SELECT ACCNT_NO
             , BANK_CD
             , FN_COM_NM('63',BANK_CD) AS BANK_NM
             , BANK_ACCNT_NO AS BANK_ACCNT_NO
             , BIRTH AS IDN_NO
             , ICHAE_DT
             , DEPR
             , RELTN
             , DEPR_CELL
          FROM DMLIFEONLINE.CMS_MEM_TMP CMS
         INNER JOIN DMLIFEONLINE.MEM_PROD_ACCNTNO ACCNT
            ON ACCNT.ACCNT_NO = #{accnt_no}
           AND ACCNT.MEM_SEQ = CMS.MEM_SEQ
    </select>

    <select id="DlwCustMap.getDlwOnlineSSMemberCmsInfo" parameterType="map" resultType="resultMap">
        <!-- sql-life.xml selectOnlineSSMemberCmsInfo -->

        SELECT /* DlwCustMap.getDlwOnlineSSMemberCmsInfo */
                 ACCNT_NO
               , BANK_CD
               , FN_COM_NM('63',BANK_CD) AS BANK_NM
               , BANK_ACCNT_NO AS BANK_ACCNT_NO
               , BIRTH AS IDN_NO
               , ICHAE_DT
               , DEPR
               , RELTN
               , DEPR_CELL
          FROM DMLIFEONLINE_SS.CMS_MEM_TMP CMS
          INNER JOIN DMLIFEONLINE_SS.MEM_PROD_ACCNTNO ACCNT ON CMS.SITE_ID = ACCNT.SITE_ID
                   AND ACCNT.ACCNT_NO = #{accnt_no}
                   AND ACCNT.SITE_ID  = #{site_id}
                   AND ACCNT.MEM_SEQ  = CMS.MEM_SEQ
    </select>

    <select id="DlwCustMap.getDlwOnlineMemberCardInfo" parameterType="map" resultType="resultMap">
        <!-- sql-life.xml selectOnlineMemberCardInfo -->

        SELECT /* DlwCustMap.getDlwOnlineMemberCardInfo */
               ACCNT_NO
             , CARD_CD
             , CARD_NO AS CARD_NO
             , EXPIRE_DATE
             , ICHAE_DT
             , CARD_BIRTH
      FROM DMLIFEONLINE.CARD_MEM_TMP CARD
      INNER JOIN DMLIFEONLINE.MEM_PROD_ACCNTNO ACCNT
        ON ACCNT.ACCNT_NO = #{accnt_no}
        AND ACCNT.MEM_SEQ = CARD.MEM_SEQ
    </select>

    <select id="DlwCustMap.getDlwOnlineSSMemberCardInfo" parameterType="map" resultType="resultMap">
        <!-- sql-life.xml selectOnlineSSMemberCardInfo -->

        SELECT /* DlwCustMap.getDlwOnlineSSMemberCardInfo */
               ACCNT_NO
             , CARD_CD
             , CARD_NO AS CARD_NO
             , EXPIRE_DATE
             , ICHAE_DT
             , CARD_BIRTH
          FROM DMLIFEONLINE_SS.CARD_MEM_TMP CARD
         INNER JOIN DMLIFEONLINE_SS.MEM_PROD_ACCNTNO ACCNT
            ON CARD.SITE_ID = ACCNT.SITE_ID
           AND ACCNT.ACCNT_NO = #{accnt_no}
           AND ACCNT.SITE_ID  = #{site_id}
           AND ACCNT.MEM_SEQ  = CARD.MEM_SEQ
    </select>

    <select id="DlwCustMap.getBugaSrvcMemChk" parameterType="map" resultType="resultMap">

        SELECT /* DlwCustMap.getBugaSrvcMemChk */
               A.MEM_NO, A.ACCNT_NO
          FROM MEM_PROD_ACCNT A
          JOIN MEMBER B
               ON A.MEM_NO = B.MEM_NO
              AND B.DEL_FG = 'N'
          JOIN EMPLOYEE EMP
               ON EMP.EMPLE_NO = A.EMPLE_NO
         WHERE A.DEL_FG = 'N'
           AND A.ACCNT_NO = #{accnt_no}
        <if test="cmsfg != null and cmsfg != ''">
            AND A.ACCNT_NO NOT IN (SELECT ACCNT_NO
                                     FROM CMS_MEM
                                    WHERE DEL_FG = 'N'
                                      AND ACCNT_NO = #{accnt_no})
            AND A.ACCNT_NO NOT IN (SELECT ACCNT_NO
                                     FROM NEW_CANCL_APP
                                    WHERE STAT IN ('01', '02')
                                      AND ACCNT_NO = #{accnt_no})
        </if>
        <if test="cardfg != null and cardfg != ''">
            AND A.ACCNT_NO NOT IN (SELECT ACCNT_NO
                                     FROM CARD_MEM
                                    WHERE DEL_FG = 'N'
                                      AND ACCNT_NO = #{accnt_no})
        </if>
        <if test="nsfg != null and nsfg.equalsIgnoreCase('Y')">
            AND EMP.DEPT_CD = '1602'
        </if>
        <if test="dataAthrQury != null and dataAthrQury != ''">
            ${dataAthrQury}
        </if>
    </select>

    <!-- 회원별 부가서비스(CMS 또는 CARD) 신청구분 조회 -->
    <select id="DlwCustMap.getBugaSrvcAppCl" parameterType="map" resultType="String">
        SELECT
               APP_CL     <!-- 1:신청, 3:해지, 7:임의해지 -->
          FROM ( SELECT ACCNT_NO, APP_DT, APP_CL, REG_DM FROM NEW_CANCL_APP
                 UNION ALL
                 SELECT ACCNT_NO, APP_DT, APP_CL, REG_DM FROM CARD_NEW_CANCL_APP
               )
         WHERE ACCNT_NO = #{accnt_no}
           AND REG_DM = ( SELECT MAX(REG_DM)
                            FROM ( SELECT REG_DM
                                     FROM NEW_CANCL_APP
                                    WHERE ACCNT_NO = #{accnt_no}
                                    UNION ALL
                                   SELECT REG_DM
                                     FROM CARD_NEW_CANCL_APP
                                    WHERE ACCNT_NO = #{accnt_no}
                                 )
                        )
    </select>

    <!-- idn_no나 ci값으로 회원명을 가져와 온라인상의 이름과 비교해 같을 경우에만 erp회원 등록 -->
    <select id="DlwCustMap.getErpMemNm" parameterType="map" resultType="String">
    <!-- sql-life.xml selectErpMemNm -->

        SELECT MEM_NM
          FROM MEMBER
         WHERE DEL_FG = 'N'
        <choose>
            <when test="ci_val != null and ci_val != '' and di != null and di != ''">
                AND (CI_VAL = #{ci_val}
                     OR CI_VAL = #{di})
            </when>
            <when test="ci_val != null and ci_val != ''">
                AND CI_VAL = #{ci_val}
            </when>
            <when test="di != null and di != ''">
                AND CI_VAL = #{di}
            </when>
        </choose>
      GROUP BY MEM_NM
    </select>

    <!--
        2016. 06. 10 최현식
        PS5 MEMBER Table 삭제에 따른 추가
    -->
<sql id="DlwCustMap.selectCondition_fragment">
        <if test='select_gb == "N"'>
            <if test="mem_nm != null and mem_nm != '' ">
                <choose>
                    <when test='admr_yn == "N"'>
                        AND A.MEM_NM LIKE '%' || #{mem_nm} || '%'
                        AND A.BRTH_MON_DAY = '19000101' -- 생년월일이 '19000101' 인 경우 사업자 <!-- 2018.02.08 사업자조건 추가 -->
                    </when>
                    <otherwise>
                        AND A.MEM_NM LIKE '%' || #{mem_nm} || '%'
                        AND A.BRTH_MON_DAY = '19000101' -- 생년월일이 '19000101' 인 경우 사업자 <!-- 2018.02.08 사업자조건 추가 -->
                    </otherwise>
                </choose>
            </if>
        </if>
        <if test='select_gb == "Y"'>
            <if test="mem_nm != null and mem_nm != ''">
                <choose>
                    <when test='admr_yn == "N"'>
                        AND A.MEM_NM =  #{mem_nm}
                    </when>
                    <otherwise>
                        AND A.MEM_NM =  #{mem_nm}
                    </otherwise>
                </choose>
            </if>
        </if>
        <if test="cell != null and cell != ''">
            AND REPLACE(A.CELL,'-','') = REPLACE(#{cell},'-','') <!-- 2017.11.10 김찬영 REPLACE추가  -->
        </if>
        <if test="home_tel != null and home_tel != ''">
            AND A.HOME_TEL = #{home_tel}
        </if>
        <if test="sex != null and sex != ''">
            AND A.SEX = #{sex}
        </if>
        <if test="brth_mon_day != null and brth_mon_day != ''">
             <choose>
                <when test="brth_mon_day.length() == 6">
            AND SUBSTR(A.BRTH_MON_DAY, 3) = #{brth_mon_day}
                </when>
                <otherwise>
            AND A.BRTH_MON_DAY = #{brth_mon_day}
                </otherwise>
            </choose>

        </if>
        <if test="idn_no != null and idn_no != ''">
            AND A.IDN_NO =  #{idn_no}
        </if>

        <if test="srch_vl != null and srch_vl != ''">
            <if test="srch_typ == 'home_tel'">
                AND A.HOME_TEL = #{srch_vl}
            </if>
            <if test="srch_typ == 'cell'">
                AND A.CELL1 = REPLACE(#{srch_vl},'-','') <!-- 2017.11.10 김찬영 REPLACE추가  -->
            </if>
            <if test="srch_typ == 'wrpl_tel'">
                AND A.WRPL_TEL = #{srch_vl}
            </if>
            <if test="srch_typ == 'emil'">
                AND A.EMIL LIKE #{srch_vl} || '%'
            </if>
        </if>
        <if test="mem_no != null and mem_no != ''">
            AND A.MEM_NO = #{mem_no}
        </if>
        <if test="dept_cd != null and dept_cd != ''">
            AND EMP.DEPT_CD = #{dept_cd}
        </if>
        <if test="dataAthrQury != null and dataAthrQury != '' and user_athrCd != 'TM40'">	 <!-- 2018.03.20 TM40이면 제외  -->
            ${dataAthrQury}
        </if>
        <if test="inco_tlno != null and inco_tlno != ''">
            <choose>
                <when test="like_srch_yn != null and like_srch_yn.equalsIgnoreCase('Y')">
                    AND (A.CELL LIKE #{inco_tlno} || '%'
                         OR A.HOME_TEL LIKE #{inco_tlno} || '%'
                         OR A.WRPL_TEL LIKE #{inco_tlno} || '%')
                </when>
                <otherwise>
                    AND (A.CELL = #{inco_tlno}
                         OR A.HOME_TEL = #{inco_tlno}
                         OR A.WRPL_TEL = #{inco_tlno})
                </otherwise>
            </choose>
        </if>
        <if test="accnt_no != null and accnt_no != ''">
            AND B.ACCNT_NO = #{accnt_no}
        </if>
        <if test="emple_no != null and emple_no != ''">
            AND B.EMPLE_NO = #{emple_no}
        </if>
    </sql>


    <sql id="DlwCustMap.selectCondition_fragment_NEW">
        <if test="mem_nm != null and mem_nm != ''">
            <choose>
                <when test='admr_yn == "N"'>
                    AND B.MEM_NM = #{mem_nm}
                </when>
                <otherwise>
                    AND B.MEM_NM LIKE #{mem_nm} || '%'
                </otherwise>
            </choose>
        </if>
        <if test="cell != null and cell != ''">
            AND B.CELL = #{cell}
        </if>
        <if test="home_tel != null and home_tel != ''">
            AND B.HOME_TEL = #{home_tel}
        </if>
        <if test="sex != null and sex != ''">
            AND B.SEX = #{sex}
        </if>
        <if test="brth_mon_day != null and brth_mon_day != ''">
             <choose>
                <when test="brth_mon_day.length() == 6">
            AND SUBSTR(B.BRTH_MON_DAY, 3) = #{brth_mon_day}
                </when>
                <otherwise>
            AND B.BRTH_MON_DAY = #{brth_mon_day}
                </otherwise>
            </choose>

        </if>
        <if test="idn_no != null and idn_no != ''">
            AND B.IDN_NO =  #{idn_no}
        </if>

        <if test="srch_vl != null and srch_vl != ''">
            <if test="srch_typ == 'home_tel'">
                AND B.HOME_TEL = #{srch_vl}
            </if>
            <if test="srch_typ == 'cell'">
                AND B.CELL = #{srch_vl}
            </if>
            <if test="srch_typ == 'wrpl_tel'">
                AND B.WRPL_TEL = #{srch_vl}
            </if>
            <if test="srch_typ == 'emil'">
                AND B.EMAIL LIKE #{srch_vl} || '%'
            </if>
        </if>
        <if test="mem_no != null and mem_no != ''">
            AND B.MEM_NO = #{mem_no}
        </if>
        <if test="dept_cd != null and dept_cd != ''">
            AND EMP.DEPT_CD = #{dept_cd}
        </if>
        <if test="dataAthrQury != null and dataAthrQury != ''">
            ${dataAthrQury}
        </if>
        <if test="inco_tlno != null and inco_tlno != ''">
            <choose>
                <when test="like_srch_yn != null and like_srch_yn.equalsIgnoreCase('Y')">
                    AND (A.CELL LIKE #{inco_tlno} || '%'
                         OR B.HOME_TEL LIKE #{inco_tlno} || '%'
                         OR B.WRPL_TEL LIKE #{inco_tlno} || '%')
                </when>
                <otherwise>
                    AND (A.CELL = #{inco_tlno})
                </otherwise>
            </choose>
        </if>
        <if test="accnt_no != null and accnt_no != ''">
            AND MPA.ACCNT_NO = #{accnt_no}
        </if>
        <if test="emple_no != null and emple_no != ''">
            AND MPA.EMPLE_NO = #{emple_no}
        </if>
                
        <if test="true_count != null and true_count != ''">
            AND NVL((SELECT MAX(NO) FROM PAY_MNG PM WHERE PM.ACCNT_NO = MPA.ACCNT_NO AND PM.DEL_FG='N'),0) = #{true_count}
        </if>
        <if test="prod_nm != null and prod_nm != ''">
            AND C.PROD_NM LIKE '%' || #{prod_nm} || '%'
        </if>
        <if test="b2b_comnm != null and b2b_comnm != ''">
            AND (SELECT COM_NM FROM B2BCOMCD B2B WHERE B2B.COM_CD = MPA.B2B_COMP_CD) LIKE '%' || #{b2b_comnm} || '%'
        </if>
    </sql>

    <select id="DlwCustMap.getCustBasiCount" parameterType="map" resultType="int" timeout="20">

        SELECT /* DlwCustMap.getCustBasiCount */
               COUNT(*)
          FROM MEMBER A
          LEFT OUTER JOIN MEM_PROD_ACCNT B
                       ON A.MEM_NO = B.MEM_NO
                      AND B.DEL_FG = 'N'
                    <!-- <if test="accnt_no != null and accnt_no != ''">
                        AND B.ACCNT_NO = #{accnt_no}
                    </if>
                    <if test="emple_no != null and emple_no != ''">
                        AND B.EMPLE_NO = #{emple_no}
                    </if> -->
          LEFT OUTER JOIN EMPLOYEE EMP
                       ON B.EMPLE_NO = EMP.EMPLE_NO
         WHERE A.DEL_FG = 'N'

        <include refid="DlwCustMap.selectCondition_fragment" />
    </select>


    <!--
         <2018.02.12>
           1. 불필요한 컬럼 및 쿼리 정리작업으로 기존소스 전체주석처리 및 새로 작성
           2. (상담/관리업무의)고객조회 팝업과 관리업무의 고객정보관리 쿼리 분리
    -->

    <!-- (상담/관리업무의)고객조회 팝업-->
    <select id="DlwCustMap.getCustBasiList" parameterType="map" resultType="resultMap" timeout="50">

    <!-- sql-cond.xml selectMemberListForCallCenter -->
        SELECT /* DlwCustMap.getCustBasiList */
                   PAGE_INDX                                  <!-- PAGE INDEX -->
                 , MEM_NO                                     <!-- 고유번호   -->
                 , ACCNT_NO                                   <!-- 회원번호   -->
                 , MEM_NM                                     <!-- 회원명     -->
                 , BRTH_MON_DAY                               <!-- 생년월일   -->
                 , HOME_TEL
                 , CELL
--                 , REPLACE(HOME_TEL, '-', '') AS HOME_TEL     <!-- 자택전화   -->
--                 , REPLACE(CELL, '-', '') AS CELL             <!-- 휴대전화   -->
                 , PROD_NM                                    <!-- 상품명     -->
                 , KSTBIT                                     <!-- 회원상태   -->
                 , JOIN_DT                                    <!-- 가입일자   -->
          FROM (SELECT C.*
                         , ROW_NUMBER() OVER(ORDER BY BRTH_MON_DAY, MEM_NM) AS PAGE_INDX
                  FROM (SELECT
                                   A.MEM_NO
                                 , B.ACCNT_NO
                                 , A.MEM_NM
                                 , A.BRTH_MON_DAY
--                                 , A.HOME_TEL
--                                 , A.CELL
                                 , CASE WHEN LENGTH(REPLACE(A.HOME_TEL, '-', '')) <![CDATA[<]]> 5 OR A.HOME_TEL IS NULL THEN ''
                                        WHEN LENGTH(REPLACE(A.HOME_TEL, '-', '')) = 9 THEN SUBSTR(REPLACE(A.HOME_TEL, '-', ''), 1, 2) || '-***-' || SUBSTR(REPLACE(A.HOME_TEL, '-', ''), 6, 9)
                                        WHEN LENGTH(REPLACE(A.HOME_TEL, '-', '')) = 10 AND SUBSTR(REPLACE(A.HOME_TEL, '-', ''), 1,2) = '02' THEN SUBSTR(REPLACE(A.HOME_TEL, '-', ''), 1, 2) || '-****-' || SUBSTR(REPLACE(A.HOME_TEL, '-', ''), 7, 10)
                                        WHEN LENGTH(REPLACE(A.HOME_TEL, '-', '')) = 10 AND SUBSTR(REPLACE(A.HOME_TEL, '-', ''), 1,2) != '02' THEN SUBSTR(REPLACE(A.HOME_TEL, '-', ''), 1, 3) || '-***-' || SUBSTR(REPLACE(A.HOME_TEL, '-', ''), 7, 10)
                                        WHEN LENGTH(REPLACE(A.HOME_TEL, '-', '')) = 11 THEN SUBSTR(REPLACE(A.HOME_TEL, '-', ''), 1, 3) || '-****-' || SUBSTR(REPLACE(A.HOME_TEL, '-', ''), 8, 11)
                                        ELSE SUBSTR(REPLACE(A.HOME_TEL, '-', ''), 1, 3) || '-****-' || SUBSTR(REPLACE(A.HOME_TEL, '-', ''), 8, 11) END AS HOME_TEL
                                 , CASE WHEN LENGTH(REPLACE(A.CELL, '-', '')) = 9 THEN SUBSTR(REPLACE(A.CELL, '-', ''), 1, 2) || '-***-' || SUBSTR(REPLACE(A.CELL, '-', ''), 6, 9)
                                        WHEN LENGTH(REPLACE(A.CELL, '-', '')) = 10 THEN SUBSTR(REPLACE(A.CELL, '-', ''), 1, 2) || '-****-' || SUBSTR(REPLACE(A.CELL, '-', ''), 7, 10)
                                        WHEN LENGTH(REPLACE(A.CELL, '-', '')) = 11 THEN SUBSTR(REPLACE(A.CELL, '-', ''), 1, 3) || '-****-' || SUBSTR(REPLACE(A.CELL, '-', ''), 8, 11)
                                        ELSE SUBSTR(REPLACE(A.CELL, '-', ''), 1, 3) || '-****-' || SUBSTR(REPLACE(A.CELL, '-', ''), 8, 11) END AS CELL
                                 , PD.PROD_NM
                                 , DECODE(B.KSTBIT,'01','접수'
                                                  ,'02','가입'
                                                  ,'03','해약'
                                                  ,'04','행사'
                                                  ,'접수(문의)') AS KSTBIT

                                 , B.JOIN_DT
                                 , DECODE(B.KSTBIT, '01', 2, '02', 1, '03', 3, '04', 4, 5) AS KSTBIT_CNT
                          FROM MEMBER A
                          LEFT OUTER JOIN MEM_PROD_ACCNT B
                                       ON A.MEM_NO = B.MEM_NO
                                      AND B.DEL_FG = 'N'
                          <!-- 2018.03.20 TM40:MG권한 일 경우 -->
                          <if test="user_athrCd != null and user_athrCd == 'TM40'">
                          INNER JOIN LF_DMUSER.RESN_CREDIT_LIST C
                                       ON B.ACCNT_NO = C.ACCNT_NO
                                      AND C.DEL_FG = 'N'
                                      AND C.TARGET_YM = TO_CHAR(SYSDATE, 'YYYYMM')
                          </if>
                          LEFT OUTER JOIN PRODUCT PD
                                       ON B.PROD_CD = PD.PROD_CD
                          LEFT OUTER JOIN EMPLOYEE EMP
                                       ON B.EMPLE_NO = EMP.EMPLE_NO
                         WHERE A.DEL_FG = 'N'
                         <include refid="DlwCustMap.selectCondition_fragment" />
                        ) C
                    ) D
            <if test="startLine != null and startLine != '' and endLine != null and endLine != ''">
                <![CDATA[
                 WHERE PAGE_INDX >= #{startLine}
                   AND PAGE_INDX < #{endLine}
                ]]>
            </if>
            ORDER BY KSTBIT_CNT, JOIN_DT DESC
        <!--
        SELECT /* DlwCustMap.getCustBasiList */
               PAGE_INDX, MEM_NO, MEM_NM, EMAIL, SEX
             , CI_VAL, CREDIT_RATING, HOME_ADDR, HOME_ADDR2, CRDT_MNG_NO
             , DEL_FG, OLD_CI_VAL, OLD_HOME_ADDR, OLD_HOME_ADDR2, ACCNT_NO
             , BLACK_CONSUMER, PROD_NM, EMPLE_NO, DEPT_CD, EMPLE_NM
             , RGSR_ID, AMND_ID, NOTE
             , TO_CHAR(RGSN_DTTM, 'YYYY-MM-DD HH24:MM:SS') AS RGSN_DTTM
             , TO_CHAR(AMNT_DTTM, 'YYYY-MM-DD HH24:MM:SS') AS AMNT_DTTM
             , OCB_YN, MARKT_AGR_YN
             , BRTH_MON_DAY
             , JOIN_DT
             , REPLACE(CELL, '-', '') AS CELL
             , REPLACE(HOME_TEL, '-', '') AS HOME_TEL
             , REPLACE(WRPL_TEL, '-', '') AS WRPL_TEL
             , REPLACE(HOME_ZIP, '-', '') AS HOME_ZIP
             , REPLACE(OLD_HOME_ZIP, '-', '') AS OLD_HOME_ZIP
             , (SELECT E.EMPLE_NM
                  FROM EMPLOYEE E
                 WHERE E.EMPLE_NO = D.RGSR_ID) AS RGSR_NM
             , (SELECT E.EMPLE_NM
                  FROM EMPLOYEE E
                 WHERE E.EMPLE_NO = D.AMND_ID) AS AMND_NM
             , CASE WHEN LENGTH(D.IDN_NO) =1
                    THEN 'Y'
                    ELSE 'N'
                END AS BUSINESS_YN
             , D.IDN_NO AS IDN_NO
             , FN_EVENT(D.ACCNT_NO) AS EVT_NM
             , RESORT_NO
             , SAFEKEY
             , SAFEKEY_SRCH_DT
             , ACUON_FITNESS_YN
             , TO_CHAR(SYSDATE, 'YYYYMMDD') AS CURR_YMD
          FROM (SELECT C.*,
                    <choose>
                        <when test="orderBy != null and orderBy != ''">
                            ROW_NUMBER() OVER(ORDER BY ${orderBy} ${orderDirection}) AS PAGE_INDX
                        </when>
                        <otherwise>
                            ROW_NUMBER() OVER(ORDER BY BRTH_MON_DAY, MEM_NM) AS PAGE_INDX
                        </otherwise>
                    </choose>
                  FROM (SELECT
                               A.MEM_NO, A.MEM_NM, A.BRTH_MON_DAY, A.CELL, A.HOME_TEL
                             , A.EMAIL, A.REG_MAN AS RGSR_ID, A.REG_DM AS RGSN_DTTM, A.UPD_MAN AS AMND_ID, A.UPD_DM AS AMNT_DTTM
                             , A.SEX, A.CI_VAL, A.IDN_NO, A.CREDIT_RATING
                             , A.WRPL_TEL, A.CRDT_MNG_NO, A.DEL_FG, A.HOME_ZIP, A.HOME_ADDR
                             , A.HOME_ADDR2, A.CI_VAL AS OLD_CI_VAL, A.HOME_ZIP AS OLD_HOME_ZIP, A.HOME_ADDR AS OLD_HOME_ADDR, A.HOME_ADDR2 AS OLD_HOME_ADDR2
                             , A.NOTE, A.OCB_YN, A.MARKT_AGR_YN
                             , B.ACCNT_NO, B.JOIN_DT, B.EMPLE_NO, B.RESORT_NO
                             , EMP.DEPT_CD, EMP.EMPLE_NM
                             , NVL(A.BLACK_CONSUMER,'N') BLACK_CONSUMER --><!-- 관리회원 유무 --><!--
                             , (SELECT P.PROD_NM FROM PRODUCT P WHERE P.PROD_CD = B.PROD_CD) AS PROD_NM
                             , A.SAFEKEY, A.SAFEKEY_SRCH_DT, A.ACUON_FITNESS_YN
                          FROM MEMBER A
                          LEFT OUTER JOIN MEM_PROD_ACCNT B
                                       ON A.MEM_NO = B.MEM_NO
                                      AND B.DEL_FG = 'N'
                          LEFT OUTER JOIN EMPLOYEE EMP
                                       ON B.EMPLE_NO = EMP.EMPLE_NO
                         WHERE A.DEL_FG = 'N'
                        <include refid="DlwCustMap.selectCondition_fragment" />
                        ORDER BY BRTH_MON_DAY, MEM_NM
                        ) C
                ) D
        <if test="startLine != null and startLine != '' and endLine != null and endLine != ''">
            <![CDATA[
             WHERE PAGE_INDX >= #{startLine}
               AND PAGE_INDX < #{endLine}
            ]]>
        </if>
         -->

    </select>

    <!-- 관리업무의 고객정보관리 쿼리 -->
    <select id="DlwCustMap.getCustBasiList2" parameterType="map" resultType="resultMap" timeout="5">

    <!-- sql-cond.xml selectMemberListForCallCenter -->

        SELECT /* DlwCustMap.getCustBasiList2 */
                   PAGE_INDX                                  <!-- PAGE INDEX -->
                 , MEM_NO                                     <!-- 고유번호   -->
                 , ACCNT_NO                                   <!-- 회원번호   -->
                 , MEM_NM                                     <!-- 회원명     -->
                 , BRTH_MON_DAY                               <!-- 생년월일   -->
                 , REPLACE(HOME_TEL, '-', '') AS HOME_TEL     <!-- 자택전화   -->
                 , REPLACE(CELL, '-', '') AS CELL             <!-- 휴대전화   -->
                 , EMAIL                                      <!-- 이메일     -->
                 , JOIN_DT                                    <!-- 가입일자   -->
                 , AMND_NM                                    <!-- 수정자     -->
                 , TO_CHAR(AMNT_DTTM, 'YYYY-MM-DD HH24:MM:SS') AS AMNT_DTTM
                                                              <!-- 수정일시   -->
          FROM (SELECT C.*,
                    <choose>
                        <when test="orderBy != null and orderBy != ''">
                            ROW_NUMBER() OVER(ORDER BY ${orderBy} ${orderDirection}) AS PAGE_INDX
                        </when>
                    </choose>
                  FROM (SELECT
                                   A.MEM_NO
                                 , B.ACCNT_NO
                                 , A.MEM_NM
                                 , A.BRTH_MON_DAY
                                 , A.HOME_TEL
                                 , A.CELL
                                 , A.EMAIL
                                 , B.JOIN_DT
                                 , EMP.EMPLE_NM  AS AMND_NM
                                 , A.UPD_DM      AS AMNT_DTTM
                          FROM MEMBER A
                          LEFT OUTER JOIN MEM_PROD_ACCNT B
                                       ON A.MEM_NO = B.MEM_NO
                                      AND B.DEL_FG = 'N'
                          LEFT OUTER JOIN EMPLOYEE EMP
                                       ON A.UPD_MAN = EMP.EMPLE_NO
                         WHERE A.DEL_FG = 'N'
                         <include refid="DlwCustMap.selectCondition_fragment" />
                        ) C
                    ) D
            <if test="startLine != null and startLine != '' and endLine != null and endLine != ''">
                <![CDATA[
                 WHERE PAGE_INDX >= #{startLine}
                   AND PAGE_INDX < #{endLine}
                ]]>
            </if>

    </select>

        <select id="DlwCustMap.getCompUseListCount" parameterType="map" resultType="int">

        SELECT /* DlwCustMap.getCompUseListCount */
               COUNT(*)
        FROM MEM_PROD_ACCNT MPA INNER JOIN
           MEMBER B ON MPA.MEM_NO = B.MEM_NO AND MPA.DEL_FG = 'N' INNER JOIN
           PRODUCT C ON MPA.PROD_CD = C.PROD_CD AND C.DEL_FG = 'N' LEFT OUTER JOIN
           RESCISSION RS ON MPA.ACCNT_NO = RS.ACCNT_NO AND RS.DEL_FG = 'N' LEFT OUTER JOIN
           EMPLOYEE EMP ON MPA.EMPLE_NO = EMP.EMPLE_NO
        WHERE 1=1
        <if test="dateTyp =='01'">
            <if test="stt_dt != null and stt_dt != '' and end_dt != null and end_dt != ''">
                AND MPA.REG_DM BETWEEN TO_TIMESTAMP(#{stt_dt} || '000000000','YYYYMMDDHH24MISSFF') AND TO_TIMESTAMP(#{end_dt} || '235959999','YYYYMMDDHH24MISSFF')
            </if>
        </if>
        <if test="dateTyp =='02'">
            <if test="stt_dt != null and stt_dt != '' and end_dt != null and end_dt != ''">
                AND MPA.JOIN_DT BETWEEN #{stt_dt} AND #{end_dt}
            </if>
        </if>
		<if test="prod_cd != null and prod_cd != ''">
                AND C.PROD_CD = #{prod_cd}
        </if>

        <include refid="DlwCustMap.selectCondition_fragment_NEW" />
    </select>

    <select id="DlwCustMap.getCompUseList" parameterType="map" resultType="resultMap">

        SELECT  /* DLWCUSTMAP.GETCOMPUSELIST */
            CASE MARKT_AGR_YN
                WHEN  'Y' THEN '동의'
                WHEN  'N' THEN '미동의'
            END AS MARKT_AGR_YN,
            PAGE_INDX,
            MEM_NO,
            ACCNT_NO,
            TRIM(MEM_NM) AS MEM_NM,
            BRTH_MON_DAY,
            TRIM(HOME_TEL) AS HOME_TEL,
            REPLACE(CELL,CHR(0),'') AS CELL,
            REPLACE(EMAIL,CHR(0),'') AS EMAIL,
            JOIN_DT,
            REG_MAN,
            PROD_NM,
            MODEL_CL_NM,
            MODEL_NM,
            TO_CHAR(REG_DM,'YYYYMMDD') AS REG_DM,
            EMPLE_NM,
            ICHAE_DT,
            PAY_MTHD,
            PAY_STAT,
            ACC_STAT,
            NEW_CHAN_GUNSU,
            TRUE_COUNT,
            RESN_PROC_YN,
            STAT,
            JOIN_CL,
            B2B_COMNM,
            KB_NO,
            REPLACE(B2B_EMPLE_NO,CHR(0),''    ) AS B2B_EMPLE_NO,
            REPLACE(CRDT_MNG_NO,CHR(0),''    ) AS CRDT_MNG_NO,
            REPLACE(HOME_ADDR,CHR(0),''     ) AS HOME_ADDR,     <!-- 주소          -->
            REPLACE(HOME_ADDR_2,CHR(0),''   ) AS HOME_ADDR_2,   <!-- 상세주소      -->
            REPLACE(ALL_HOME_ADDR,CHR(0),'' ) AS ALL_HOME_ADDR, <!-- 주소+상세주소 -->
            REPLACE(INSPL_ADDR,CHR(0),''    ) AS INSPL_ADDR,
            REPLACE(INSPL_PHONE,CHR(0),''    ) AS INSPL_PHONE,
            REPLACE(ID_NO,CHR(0),''    ) AS ID_NO,
            REPLACE(SHOP_INFO,CHR(0),''    ) AS SHOP_INFO,
            REPLACE(ORDER_NUM,CHR(0),''    ) AS ORDER_NUM,
            MAIN_CONTRACT,
            MAIN_CONTRACT_NM,
            DELIVERY_DT,
            UTM_SOURCE
            , CARD_NM
        FROM    (SELECT    C.*,
                    <choose>
                        <when test="orderBy != null and orderBy != ''">
                            ROW_NUMBER() OVER(ORDER BY ${orderBy} ${orderDirection}) AS PAGE_INDX
                        </when>
                        <otherwise>
                            ROW_NUMBER() OVER(ORDER BY REG_DM DESC) AS PAGE_INDX
                        </otherwise>
                    </choose>
                  FROM (SELECT
                            MPA.MEM_NO,
                            MPA.ACCNT_NO,
                            B.MEM_NM,
                            B.BRTH_MON_DAY,
                            B.HOME_TEL,
                            B.CELL,
                            C.PROD_NM,
                             B.MARKT_AGR_YN AS MARKT_AGR_YN,
                            (SELECT MODEL_CL_NM FROM PRODUCT_MODEL_CL_CD WHERE MODEL_CL_CD = MPA.PROD_MODEL_KIND) AS MODEL_CL_NM,
                            (SELECT PMD.MODEL_NM FROM PRODUCT_MODEL_MST PMM INNER JOIN
                                PRODUCT_MODEL_DTL PMD ON PMM.SEQ = PMD.SEQ AND PMM.DEL_FG = 'N'
                            WHERE PROD_CD = C.PROD_CD  AND PROD_KIND = MPA.PROD_MODEL_KIND AND MODEL_CD = PROD_MODEL_CD ) AS MODEL_NM,
                            MPA.JOIN_DT,
                            MPA.REG_DM,
                            EMP.EMPLE_NM,
                            FN_ICHAE_DT2(MPA.ACCNT_NO,MPA.PAY_MTHD) AS ICHAE_DT,
                            FN_COM_NM('01',PAY_MTHD) AS PAY_MTHD,
                            FN_YEN_CHE(MPA.ACCNT_NO) AS PAY_STAT,
                            DECODE(FN_ACCNT_STAT(MPA.ACCNT_NO),'Y','정상','R','해약','C','청약철회','E','행사') AS ACC_STAT,
                            MPA.NEW_CHAN_GUNSU,
                            NVL((SELECT MAX(NO) FROM PAY_MNG PM WHERE PM.ACCNT_NO = MPA.ACCNT_NO AND PM.DEL_FG='N'),0) AS TRUE_COUNT ,
                            RS.RESN_PROC_YN,
                            FN_COM_NM('81',(SELECT STAT FROM HP_CALL WHERE ACCNT_NO = MPA.ACCNT_NO)) STAT ,
                            FN_COM_NM('113',MPA.JOIN_CL) AS JOIN_CL,
                            (SELECT COM_NM FROM B2BCOMCD B2B WHERE B2B.COM_CD = MPA.B2B_COMP_CD) AS B2B_COMNM,
                            MPA.B2B_EMPLE_NO,
                            MPA.CRDT_MNG_NO,
                            <!-- 상세주소 마스킹 위해 주소 분리 - 2018.05.16 -->
                            <!-- (B.HOME_ZIP || ') ' || B.HOME_ADDR || ' ' || B.HOME_ADDR2) AS HOME_ADDR , -->
                            (B.HOME_ZIP || ') ' || B.HOME_ADDR) AS HOME_ADDR ,
                            B.HOME_ADDR2 AS HOME_ADDR_2 ,
                            (B.HOME_ZIP || ') ' || B.HOME_ADDR || ' ' || B.HOME_ADDR2) AS ALL_HOME_ADDR ,
                            (MPA.INSPL_ZIP || ') ' || MPA.INSPL_ADDR || ' ' || MPA.INSPL_ADDR2) AS INSPL_ADDR ,
                            MPA.INSPL_PHONE,
                            MPA.ID_NO,
                            FN_COM_NM('0184',MPA.SM_SHOP_INFO) AS SHOP_INFO,
                            MPA.REG_MAN,
                              B.EMAIL,
                              MPA.ORDER_NUM,
                            MPA.KB_NO,
                            MPA.MAIN_CONTRACT,
                            FN_COM_NM('0194', MPA.MAIN_CONTRACT) AS MAIN_CONTRACT_NM,
                            (SELECT DELIVERY_DT FROM DELIVERY_INFO WHERE ACCNT_NO = MPA.ACCNT_NO) AS DELIVERY_DT,
                            (SELECT UTM_SOURCE FROM TB_DR_I_ORD_DTL@DLCCSUB WHERE ORD_MST_IDX = MPA.ID_NO) AS UTM_SOURCE
                            , CASE WHEN PAY_MTHD = '04' THEN LF_DMUSER.FN_COM_NM('63',(SELECT Z.BANK_CD FROM CMS_MEM Z WHERE Z.ACCNT_NO = MPA.ACCNT_NO))			                       
     							   WHEN PAY_MTHD = '06' THEN (CASE WHEN NVL((SELECT Z.INI_YN FROM CARD_MEM Z WHERE Z.ACCNT_NO = MPA.ACCNT_NO),'N') = 'N' 
     							   								   THEN LF_DMUSER.FN_COM_NM('0120',(SELECT Z.CARD_CD FROM CARD_MEM Z WHERE Z.ACCNT_NO = MPA.ACCNT_NO))
                                                      			   ELSE LF_DMUSER.FN_COM_NM('0196',(SELECT Z.CARD_CD FROM CARD_MEM Z WHERE Z.ACCNT_NO = MPA.ACCNT_NO)) 
                                                 			  END)
                 			  END AS CARD_NM
                        FROM MEM_PROD_ACCNT MPA INNER JOIN
                           MEMBER B ON MPA.MEM_NO = B.MEM_NO AND MPA.DEL_FG = 'N' INNER JOIN
                           PRODUCT C ON MPA.PROD_CD = C.PROD_CD AND C.DEL_FG = 'N' LEFT OUTER JOIN
                           RESCISSION RS ON MPA.ACCNT_NO = RS.ACCNT_NO AND RS.DEL_FG = 'N' LEFT OUTER JOIN
                           EMPLOYEE EMP ON MPA.EMPLE_NO = EMP.EMPLE_NO
                           WHERE 1=1
                            <if test="dateTyp =='01'">
                                <if test="stt_dt != null and stt_dt != '' and end_dt != null and end_dt != ''">                                    
                                    AND MPA.REG_DM BETWEEN TO_TIMESTAMP(#{stt_dt} || '000000000','YYYYMMDDHH24MISSFF') AND TO_TIMESTAMP(#{end_dt} || '235959999','YYYYMMDDHH24MISSFF')
                                </if>
                            </if>
                            <if test="dateTyp =='02'">
                                <if test="stt_dt != null and stt_dt != '' and end_dt != null and end_dt != ''">
                                    AND MPA.JOIN_DT BETWEEN #{stt_dt} AND #{end_dt}
                                </if>
                            </if>
                            <if test="prod_cd != null and prod_cd != ''">
                                AND C.PROD_CD = #{prod_cd}
                            </if>
                        <include refid="DlwCustMap.selectCondition_fragment_NEW" />
                        ) C
                ) D
        <if test="startLine != null and startLine != '' and endLine != null and endLine != ''">
            <![CDATA[
             WHERE PAGE_INDX >= #{startLine}
               AND PAGE_INDX < #{endLine}
            ]]>
        </if>
    </select>

    <select id="DlwCustMap.getAnalResultList" parameterType="map" resultType="resultMap" timeout="5">

        SELECT  /* DlwCustMap.getAnalResultList */
                        SUBSTR(JOIN_DT,1,6) JOIN_YYMM,
                        B2B_COMNM,
                        SUM((CASE WHEN KSTBIT = '01' THEN 1 ELSE 0 END)) K1,
                        SUM((CASE WHEN KSTBIT = '02' THEN 1 ELSE 0 END)) K2,
                        SUM((CASE WHEN KSTBIT = '03' AND ACC_STAT = '청약철회' THEN 1 ELSE 0 END)) K3,
                        SUM((CASE WHEN KSTBIT = '03' AND ACC_STAT = '해약' THEN 1 ELSE 0 END)) K4,
                        SUM((CASE WHEN KSTBIT NOT IN('01','02','03') THEN 1 ELSE 0 END)) K5,
                        SUM((CASE WHEN KSTBIT IN('01','02','03') THEN 1 ELSE 0 END)) KTOT
                  FROM (SELECT C.*,

                                    ROW_NUMBER() OVER(ORDER BY accnt_no desc) AS PAGE_INDX

                          FROM (SELECT
                                    MPA.MEM_NO,
                                    MPA.ACCNT_NO,
                                    B.MEM_NM,
                                    MPA.KSTBIT,
                                    B.BRTH_MON_DAY,
                                    B.HOME_TEL,
                                    B.CELL,
                                    C.PROD_NM,
                                    (SELECT MODEL_CL_NM FROM PRODUCT_MODEL_CL_CD WHERE MODEL_CL_CD = MPA.PROD_MODEL_KIND) AS MODEL_CL_NM,
                                    (SELECT PMD.MODEL_NM FROM PRODUCT_MODEL_MST PMM INNER JOIN
                                        PRODUCT_MODEL_DTL PMD ON PMM.SEQ = PMD.SEQ AND PMM.DEL_FG = 'N'
                                    WHERE PROD_CD = C.PROD_CD  AND PROD_KIND = MPA.PROD_MODEL_KIND AND MODEL_CD = PROD_MODEL_CD ) AS MODEL_NM,
                                    MPA.JOIN_DT,
                                    MPA.REG_DM,
                                    EMP.EMPLE_NM,
                                    FN_ICHAE_DT2(MPA.ACCNT_NO,MPA.PAY_MTHD) AS ICHAE_DT,
                                    FN_COM_NM('01',PAY_MTHD) AS PAY_MTHD,
                                    FN_YEN_CHE(MPA.ACCNT_NO) AS PAY_STAT,
                                    DECODE(FN_ACCNT_STAT(MPA.ACCNT_NO),'Y','정상','R','해약','C','청약철회','E','행사') AS ACC_STAT,
                                    MPA.NEW_CHAN_GUNSU,
                                    NVL((SELECT MAX(NO) FROM PAY_MNG PM WHERE PM.ACCNT_NO = MPA.ACCNT_NO AND PM.DEL_FG='N'),0) AS TRUE_COUNT ,
                                    RS.RESN_PROC_YN,
                                    FN_COM_NM('81',(SELECT STAT FROM HP_CALL WHERE ACCNT_NO = MPA.ACCNT_NO)) STAT ,
                                    FN_COM_NM('113',MPA.JOIN_CL) AS JOIN_CL,
                                    MPA.B2B_COMP_CD,
                                    (SELECT COM_NM FROM B2BCOMCD B2B WHERE B2B.COM_CD = MPA.B2B_COMP_CD) AS B2B_COMNM,
                                    MPA.B2B_EMPLE_NO,
                                    MPA.CRDT_MNG_NO,
                                    (B.HOME_ZIP || ') ' || B.HOME_ADDR || ' ' || B.HOME_ADDR2) AS HOME_ADDR ,
                                    (MPA.INSPL_ZIP || ') ' || MPA.INSPL_ADDR || ' ' || MPA.INSPL_ADDR2) AS INSPL_ADDR ,
                                    MPA.INSPL_PHONE,
                                    MPA.ID_NO,
                                    FN_COM_NM('0184',MPA.SM_SHOP_INFO) AS SHOP_INFO,
                                    MPA.REG_MAN,
                                      B.EMAIL,
                                      MPA.ORDER_NUM
                                FROM MEM_PROD_ACCNT MPA INNER JOIN
                                   MEMBER B ON MPA.MEM_NO = B.MEM_NO AND MPA.DEL_FG = 'N' INNER JOIN
                                   PRODUCT C ON MPA.PROD_CD = C.PROD_CD AND C.DEL_FG = 'N' LEFT OUTER JOIN
                                   RESCISSION RS ON MPA.ACCNT_NO = RS.ACCNT_NO AND RS.DEL_FG = 'N' LEFT OUTER JOIN
                                   EMPLOYEE EMP ON MPA.EMPLE_NO = EMP.EMPLE_NO
                                   WHERE 1=1
                                        AND SUBSTR(MPA.JOIN_DT,1,4) = #{yymm}
                                        AND B2B_COMP_CD = #{b2b_com_cd}
                                ) C
                        ) D
        GROUP BY SUBSTR(JOIN_DT,1,6), B2B_COMNM
        ORDER BY SUBSTR(JOIN_DT,1,6)

    </select>

    <select id="DlwCustMap.getCustBasiConsInfo" parameterType="map" resultType="resultMap">
        SELECT /* DlwCustMap.getCustBasiConsInfo */
               MEM_NO
             , MEM_NM
             , EMAIL
             , SEX
             , CI_VAL
             , CREDIT_RATING
             , HOME_ADDR
             , HOME_ADDR2
             , RGSR_ID
             , RGSN_DTTM
             , AMND_ID
             , AMNT_DTTM
             , ACCNT_NO
             , EMPLE_NO
             , EMPLE_NM
             , DEPT_CD
             , NOTE
             , OCB_YN
             , MARKT_AGR_YN
             , BRTH_MON_DAY
             , JOIN_DT
             , REPLACE(CELL, '-', '') AS CELL
             , REPLACE(HOME_TEL, '-', '') AS HOME_TEL
             , REPLACE(WRPL_TEL, '-', '') AS WRPL_TEL
             , CRDT_MNG_NO
             , DEL_FG
             , REPLACE(HOME_ZIP, '-', '') AS HOME_ZIP
             , (SELECT E.EMPLE_NM
                  FROM EMPLOYEE E
                 WHERE E.EMPLE_NO = C.RGSR_ID) AS RGSR_NM
             , (SELECT E.EMPLE_NM
                  FROM EMPLOYEE E
                 WHERE E.EMPLE_NO = C.AMND_ID) AS AMND_NM
             , CASE WHEN LENGTH(IDN_NO) = 10
                    THEN 'Y'
                    ELSE 'N'
                END AS BUSINESS_YN
          FROM (SELECT A.MEM_NO
                     , A.MEM_NM
                     , A.BRTH_MON_DAY
                     , A.CELL
                     , A.HOME_TEL
                     , A.EMAIL
                     , A.SEX
                     , A.CI_VAL
                     , A.CREDIT_RATING
                     , A.WRPL_TEL
                     , A.CRDT_MNG_NO
                     , A.DEL_FG
                     , A.HOME_ZIP
                     , A.HOME_ADDR
                     , A.HOME_ADDR2
                     , A.REG_MAN AS RGSR_ID
                     , A.REG_DM AS RGSN_DTTM
                     , A.UPD_MAN AS AMND_ID
                     , A.UPD_DM AS AMNT_DTTM
                     , A.NOTE
                     , A.OCB_YN
                     , A.MARKT_AGR_YN
                     , B.ACCNT_NO
                     , B.JOIN_DT
                     , B.EMPLE_NO
                     , EMP.DEPT_CD
                     , EMP.EMPLE_NM
                     , NVL(A.BLACK_CONSUMER,'N') BLACK_CONSUMER
                     , A.IDN_NO AS IDN_NO
                  FROM (SELECT A.*
                          FROM MEMBER A
                         WHERE A.DEL_FG = 'N'
                           AND A.MEM_NO = #{mem_no}
                       ) A
                  LEFT OUTER JOIN MEM_PROD_ACCNT B
                    ON B.MEM_NO = A.MEM_NO
                   AND B.DEL_FG = 'N'
                <if test="accnt_no != null and accnt_no != ''">
                   AND B.ACCNT_NO = #{accnt_no}
                </if>
                  LEFT OUTER JOIN EMPLOYEE EMP
                    ON EMP.EMPLE_NO = B.EMPLE_NO
                   AND EMP.DEL_FG = 'N'
                 ) C
           WHERE ROWNUM = 1
           ORDER BY JOIN_DT DESC
    </select>

    <!-- OCB UPDATE -->
    <update id="DlwCustMap.updateMemberOCB" parameterType="map" timeout="3">
    <!-- sql-life.xml updateMemberOCB -->
        UPDATE /* DlwCustMap.updateMemberOCB */
               MEMBER
           SET OCB_YN	= #{ocb_yn}
             , UPD_DM	= SYSDATE
             , UPD_MAN	= #{amnd_id}
         WHERE MEM_NO 	= #{mem_no}
    </update>

    <select id="DlwCustMap.getDlwMemberDtpt" parameterType="String" resultType="resultMap">

        SELECT /* DlwCustMap.getDlwMemberDtpt */
               MEM_NO, MEM_NM, HUSHLD, WRPL_NM, DEPT_NM
             ,  nvl(CELL,' ') CELL, nvl(HOME_TEL,' ') HOME_TEL, nvl(WRPL_TEL,' ') WRPL_TEL, nvl(HOME_ZIP,' ')HOME_ZIP, nvl(HOME_ADDR,' ') HOME_ADDR
             ,  nvl(HOME_ADDR2 ,' ')HOME_ADDR2, nvl(WRPL_ZIP,' ') WRPL_ZIP, nvl(WRPL_ADDR,' ') WRPL_ADDR,  nvl(WRPL_ADDR2,' ') WRPL_ADDR2, nvl(EMAIL,' ') EMAIL
             ,  nvl(EMAIL_CHK,' ') EMAIL_CHK
             ,  nvl(SMS_CHK,' ') SMS_CHK
             ,  nvl(CONTC_TM,' ') CONTC_TM
             ,  nvl(CONTC_TM_FROM,' ') CONTC_TM_FROM
             ,  nvl(CONTC_TM_TO,' ')  CONTC_TM_TO
             ,  nvl(CERTF_RCV_CHK,' ')  CERTF_RCV_CHK
             , BRTH_MON_DAY
             ,  nvl(SOL_LUN,' ')  SOL_LUN
             , ANNV
             ,  nvl(RE_JOIN,' ')  RE_JOIN
             ,  nvl(NOTE,' ')  NOTE
             ,  nvl(CL,' ')  CL
             ,  nvl(OLD_MEM_NO,' ')  OLD_MEM_NO
             , TO_CHAR(REG_DM,'YYYYMMDD') AS RGSN_DTTM
             ,  nvl(REG_MAN,' ')   RGSR_ID
             , TO_CHAR(UPD_DM,'YYYYMMDDHH24MMSS') AS AMNT_DTTM
             ,  nvl(UPD_MAN,' ')    AMND_ID
             ,  nvl(DEL_FG,' ')  DEL_FG
             ,  nvl(ENG_NM,' ')  ENG_NM
             ,  nvl(INSPL_ZIP,' ')  INSPL_ZIP
             ,  nvl(INSPL_ADDR,' ')  INSPL_ADDR
             ,  nvl(INSPL_ADDR2,' ')  INSPL_ADDR2
             ,  nvl(IDN_NO_CHK_NOT_USE,' ')  IDN_NO_CHK_NOT_USE
             ,  nvl(CI_VAL,' ')  CI_VAL
             ,  IDN_NO  AS IDN_NO
             ,  nvl(SEX,' ')  SEX
             ,  nvl(CREDIT_RATING,' ')  CREDIT_RATING
             ,  nvl(ADDR_UPDATE,' ')  ADDR_UPDATE
             ,  nvl(CRDT_MNG_NO,' ')  CRDT_MNG_NO
             ,  nvl(CARD_AUTH,' ')  CARD_AUTH
             ,  nvl(PRN_SI_NM,' ')  PRN_SI_NM
             ,  nvl(HOME_ZIP_OLD,' ')  HOME_ZIP_OLD
             ,  nvl(WRPL_ZIP_OLD,' ')  WRPL_ZIP_OLD
             ,  nvl(BLACK_CONSUMER,' ')  BLACK_CONSUMER
             ,  nvl(OCB_YN,' ')  OCB_YN
             ,  nvl(ACEEPT_YN,' ')  ACEEPT_YN
             ,  nvl(MARKT_AGR_YN,' ')  MARKT_AGR_YN
             ,  nvl(SAFEKEY,' ')  SAFEKEY
             ,  nvl(SAFEKEY_SRCH_DT,' ')  SAFEKEY_SRCH_DT
             , ACUON_FITNESS_YN
             , NVL(DM_YN,' ')  DM_YN
             , NVL(EMAIL_YN,' ') EMAIL_YN
             , NVL(SMS_YN,' ')  SMS_YN
             , NVL(TEL_YN,' ')  TEL_YN
          FROM MEMBER
         WHERE MEM_NO = #{mem_no}
    </select>

    <!-- 온라인 고객정보 업데이트 -->
    <update id="DlwCustMap.updateOnlnMember" parameterType="map">
        /* DlwCustMap.updateOnlnMember */

        UPDATE MEMBER
           SET UPD_DM           = SYSDATE
             , UPD_MAN          = 'ADMIN'
             , MARKT_AGR_YN		= #{markt_agr_yn}
            <if test="mem_nm != null and mem_nm != ''">
                , MEM_NM        = #{mem_nm}
            </if>
            <if test="cell != null and cell != ''">
                , CELL          = #{cell}
                , CELL1         = REPLACE(#{cell},'-','')
            </if>
            <if test="home_tel != null and home_tel != ''">
                , HOME_TEL      = #{home_tel}
            </if>
            <if test="home_zip != null and home_zip != ''">
                , HOME_ZIP      = REPLACE(#{home_zip}, '-', '')
                , HOME_ADDR     = #{home_addr}
                , HOME_ADDR2    = #{home_addr2}
            </if>
            <if test="email != null and email != ''">
                , EMAIL         = #{email}
            </if>
                , DM_YN			= #{dm_pcus_cnsn_yn}			<!-- 2017.11.10 채널동의 추가 DM_YN,EMAIL_YN,SMS_YN,TEL_YN-->
                , EMAIL_YN		= #{emil_pcus_cnsn_yn}
                , SMS_YN		= #{chat_pcus_cnsn_yn}
                , TEL_YN		= #{tel_pcus_cnsn_yn}
         WHERE MEM_NO = #{mem_no}
    </update>

    <!-- 양도양수 정보 등록 -->
    <insert id="DlwCustMap.insertYdysMemTrans" parameterType="map">

        <selectKey keyProperty="seq" resultType="String" order="BEFORE">
            SELECT MAX(SEQ) + 1 AS SEQ
            FROM TRANSFER_BRKDN
        </selectKey>

        INSERT /* DlwCustMap.insertYdysMemTrans */
            INTO TRANSFER_BRKDN(SEQ, TRSFO_MEM_NO, TRSFE_MEM_NO, ACCNT_NO, HANOV_DT, REG_DM, REG_MAN, NEW_YN)
        VALUES (#{seq}, #{mem_no}, #{ys_mem_no}, #{accnt_no}, #{hanov_dt}, SYSDATE, #{reg_man}, 'Y')

    </insert>

    <!-- 양도양수 정보 등록 -->
    <update id="DlwCustMap.updateYdysMemProd" parameterType="map">

        UPDATE /* DlwCustMap.updateYdysMemProd */
            MEM_PROD_ACCNT
        SET MEM_NO = #{ys_mem_no}
        WHERE ACCNT_NO = #{accnt_no}

    </update>

    <!-- 상담내역 고유번호 변경 -->
    <update id="DlwCustMap.updateYdysClsl" parameterType="map">
    
    	BEGIN
	    	MERGE INTO (SELECT * FROM CNSL_DTL WHERE MEM_NO = #{mem_no}) AA
			USING
			(
				SELECT 
				    MEM_NO,
				    SEQ,
				    CNSL_SEQ
				FROM CNSL_MNG
				WHERE 1=1
					AND MEM_NO = #{mem_no}  
	        		AND ACCNT_NO = #{accnt_no}  
			) BB
			ON (AA.SEQ = BB.SEQ AND AA.CNSL_SEQ = BB.CNSL_SEQ)
			WHEN MATCHED THEN 
			UPDATE SET MEM_NO =  #{ys_mem_no}
			 ;  
			
			UPDATE CNSL_MNG
	        SET MEM_NO = #{ys_mem_no} 
	        WHERE 1=1
	        	AND MEM_NO = #{mem_no}  
	        	AND ACCNT_NO = #{accnt_no} ;

        END;

		<!-- 
        <selectKey keyProperty="seq" resultType="String" order="BEFORE">
            SELECT MAX(NVL(SEQ,0)) + 1 AS SEQ
            FROM CNSL_MNG
            WHERE MEM_NO = #{ys_mem_no}
        </selectKey>

        INSERT /* DlwCustMap.updateYdysClsl */
            INTO CNSL_MNG(MEM_NO, SEQ, CNSL_SEQ, ACCNT_NO, CNSL_DT, CNSL_CON, CNSL_MAN, CALL_TEL, REC_PATH, REC_FILE, CTI_ID, REG_MAN, REG_DM, UPD_MAN, UPD_DM, REG_CL)
        SELECT
            #{ys_mem_no},
            ROW_NUMBER()OVER(ORDER BY A.SEQ) + TO_NUMBER(NVL(#{seq},0)),
            ROW_NUMBER()OVER(ORDER BY A.SEQ) + NVL(B.M_SEQ,0),
            A.ACCNT_NO,
            CNSL_DT,
            CNSL_CON,
            CNSL_MAN,
            CALL_TEL,
            REC_PATH,
            REC_FILE,
            CTI_ID,
            REG_MAN,
            REG_DM,
            UPD_MAN,
            UPD_DM,
            REG_CL
        FROM CNSL_MNG A
            LEFT OUTER JOIN(SELECT MAX(NVL(CNSL_SEQ,0)) M_SEQ, ACCNT_NO FROM CNSL_MNG WHERE ACCNT_NO = #{accnt_no} GROUP BY ACCNT_NO) B ON A.ACCNT_NO = B.ACCNT_NO
        WHERE A.ACCNT_NO = #{accnt_no}
         -->
    </update>

    <!-- 정보변경 내역 변경 -->
    <update id="DlwCustMap.updateYdysChng" parameterType="map">
        UPDATE /* DlwCustMap.updateYdysChng */
            REG_UPD_DEL_INF
        SET MEM_NO = #{ys_mem_no}
        WHERE ACCNT_NO = #{accnt_no}

    </update>

    <!-- 온라인정보로 고유번호 확인 -->
    <select id="DlwCustMap.getMemInfoByOnln" parameterType="map" resultType="resultMap">
        SELECT /* DlwCustMap.getMemInfoByOnln*/
               nvl(MEM_NO, '') AS MEM_NO
             , nvl(NOTE, '') AS NOTE
          FROM MEMBER
         WHERE DEL_FG = 'N'
           AND MEM_NM = #{mem_nm}
           AND CELL = #{cell}
           AND SEX = #{sex}
           AND BRTH_MON_DAY = #{brth_mon_day}
           AND ROWNUM = 1
    </select>

    <!-- 직권해지 COUNT -->
    <select id="DlwCustMap.getResnAuthListCount" parameterType="map" resultType="int">
         SELECT /*DlwCustMap.getResnAuthListCount*/
             COUNT(*)
        FROM RESN_TARGET_LIST RTL INNER JOIN
            MEM_PROD_ACCNT MPA ON RTL.ACCNT_NO = MPA.ACCNT_NO AND MPA.DEL_FG = 'N' INNER JOIN
            MEMBER MB ON MPA.MEM_NO = MB.MEM_NO INNER JOIN
            PRODUCT PD ON MPA.PROD_CD = PD.PROD_CD
        WHERE 1=1
            AND NVL(RTL.DEL_FG,'N') = 'N'
            <if test="srch_typ == '01'">
                AND TO_CHAR(RTL.REG_DM,'YYYYMMDD') BETWEEN ${stt_dt} AND ${end_dt}
            </if>

            <if test="srch_typ == '02'">
                AND RTL.JOIN_DT BETWEEN ${stt_dt} AND ${end_dt}
            </if>

            <if test="mem_nm != '' and mem_nm != null">
                AND MB.MEM_NM =  #{mem_nm}
            </if>

            <if test="accnt_no != '' and accnt_no != null">
                AND RTL.ACCNT_NO =  #{accnt_no}
            </if>

            <if test="sms_yn != '' and sms_yn != null">
                AND DECODE(NVL(RTL.SMS_DT,'N'),'N','N','Y') =  #{sms_yn}
            </if>

            <if test="print_yn != '' and print_yn != null">
                AND DECODE(NVL(RTL.PRINT_DT,'N'),'N','N','Y') =  #{print_yn}
            </if>

            <if test="resnauth_yn != '' and resnauth_yn != null">
                AND DECODE(NVL(RTL.RESN_TARGET_DT,'N'),'N','N','Y') =  #{resnauth_yn}
            </if>

    </select>

    <!-- 채권추심 COUNT -->
    <select id="DlwCustMap.getResnCreditMainListCount" parameterType="map" resultType="int">
        SELECT /*DlwCustMap.getResnCreditMainListCount*/
            COUNT(*)
        FROM LF_DMUSER.RESN_CREDIT_LIST
        WHERE TARGET_YM = ${stt_dt}
          AND DEL_FG = 'N'
    </select>

    <!-- 채권추심 입금 COUNT -->
    <select id="DlwCustMap.getResnCreditpayMainListCount" parameterType="map" resultType="int">

        SELECT
            COUNT(*)
        FROM
        (
            SELECT
                RCL.ACCNT_NO,
                PAY.PAY_DAY,
                PAY_MTHD
            FROM RESN_CREDIT_LIST RCL LEFT OUTER JOIN
                (
                    SELECT ACCNT_NO,
                        PAY_DAY,
                        PAY_MTHD
                    FROM PAY_MNG A
                    WHERE DEL_FG = 'N'
                    AND PAY_DAY BETWEEN #{pay_stt} AND  #{pay_end}
                ) PAY ON RCL.ACCNT_NO = PAY.ACCNT_NO
            WHERE 1=1
                AND TARGET_YM = #{stt_dt}
            GROUP BY RCL.ACCNT_NO, PAY.PAY_DAY, PAY_MTHD
        ) TBL LEFT OUTER JOIN
        MEM_PROD_ACCNT MPA ON TBL.ACCNT_NO = MPA.ACCNT_NO AND MPA.DEL_FG = 'N' LEFT OUTER JOIN
        MEMBER MB ON MPA.MEM_NO = MB.MEM_NO
        WHERE 1=1
            <if test="mem_nm != '' and mem_nm != null">
                AND MB.MEM_NM =  #{mem_nm}
            </if>

            <if test="accnt_no != '' and accnt_no != null">
                AND TBL.ACCNT_NO =  #{accnt_no}
            </if>
    </select>

    <!-- 직권해지 list -->
    <select id="DlwCustMap.getResnAuthList" parameterType="map" resultType="resultMap">
         SELECT /*DlwCustMap.getResnAuthList*/
            RTL.ACCNT_NO,
            MPA.MEM_NO,
            PD.PROD_NM,
            RTL.YENCHE_CNT,
            RTL.MEM_NM,
            RTL.PROD_CD,
            RTL.JOIN_DT,
            RTL.MAX_CNT,
            RTL.MONTH_CNT,
            RTL.TRUE_CNT,
            RTL.TRUE_AMT,
            RTL.PAY_DAY,
            RTL.MON_AMT,
            RTL.DIFF_AMT,
            REPLACE(RTL.SMS_DT, CHR(0),'') AS SMS_DT,
            REPLACE(RTL.RESN_TARGET_DT, CHR(0), '') AS RESN_TARGET_DT ,
            REPLACE(RTL.PRINT_DT, CHR(0), '') AS PRINT_DT,
            REPLACE(MB.HOME_ZIP, CHR(0),'') AS HOME_ZIP ,
            <!-- 상세주소 마스킹 위해 주소 분리 - 2018.04.19 -->
            <!-- REPLACE((MB.HOME_ADDR || ' ' || HOME_ADDR2),CHR(0),'') AS HOME_ADDR, -->
            REPLACE(MB.HOME_ADDR,CHR(0),'') AS HOME_ADDR,                             <!-- 주소          -->
            REPLACE(MB.HOME_ADDR2,CHR(0),'') AS HOME_ADDR2,                           <!-- 상세주소      -->
            REPLACE((MB.HOME_ADDR || ' ' || HOME_ADDR2),CHR(0),'') AS ALL_HOME_ADDR,  <!-- 주소+상세주소 -->
            REPLACE(MB.CELL, CHR(0),'') AS CELL,
            ROUND(NVL(RTL.RESN_AMT,0)) AS RESN_AMT
        FROM RESN_TARGET_LIST RTL INNER JOIN
            MEM_PROD_ACCNT MPA ON RTL.ACCNT_NO = MPA.ACCNT_NO AND MPA.DEL_FG = 'N' INNER JOIN
            MEMBER MB ON MPA.MEM_NO = MB.MEM_NO INNER JOIN
            PRODUCT PD ON MPA.PROD_CD = PD.PROD_CD
        WHERE 1=1
            AND NVL(RTL.DEL_FG,'N') = 'N'
            <if test="srch_typ == '01'">
                AND TO_CHAR(RTL.REG_DM,'YYYYMMDD') BETWEEN ${stt_dt} AND ${end_dt}
            </if>

            <if test="srch_typ == '02'">
                AND RTL.JOIN_DT BETWEEN ${stt_dt} AND ${end_dt}
            </if>

            <if test="mem_nm != '' and mem_nm != null">
                AND MB.MEM_NM =  #{mem_nm}
            </if>

            <if test="accnt_no != '' and accnt_no != null">
                AND RTL.ACCNT_NO =  #{accnt_no}
            </if>

            <if test="sms_yn != '' and sms_yn != null">
                AND DECODE(NVL(RTL.SMS_DT,'N'),'N','N','Y') =  #{sms_yn}
            </if>

            <if test="print_yn != '' and print_yn != null">
                AND DECODE(NVL(RTL.PRINT_DT,'N'),'N','N','Y') =  #{print_yn}
            </if>

            <if test="resnauth_yn != '' and resnauth_yn != null">
                AND DECODE(NVL(RTL.RESN_TARGET_DT,'N'),'N','N','Y') =  #{resnauth_yn}
            </if>
    </select>

    <!-- 채권추심 list -->
    <select id="DlwCustMap.getResnCreditMainList" parameterType="map" resultType="resultMap">

        SELECT *
        FROM
        (
            SELECT
                A.*,
                <choose>
                    <when test="orderBy != null and orderBy != ''">
                        ROW_NUMBER() OVER(ORDER BY ${orderBy} ${orderDirection}) AS PAGE_INDX
                    </when>
                    <otherwise>
                        ROW_NUMBER() OVER(ORDER BY ACCNT_NO DESC) AS PAGE_INDX
                    </otherwise>
                </choose>
            FROM
            (
                SELECT /*DlwCustMap.getResnCreditMainList*/
                    RCL.TARGET_YM,
                    RCL.ACCNT_NO,
                    MB.MEM_NM,
                    MB.BRTH_MON_DAY,
                    MB.SEX,
                    RCL.DIFF_AMT,
                    MPA.JOIN_DT,
                    REPLACE(MB.HOME_TEL, CHR(0),'') AS HOME_TEL,
                    REPLACE(MB.CELL, CHR(0),'') AS CELL,
                    REPLACE(MB.WRPL_TEL, CHR(0),'') AS WRPL_TEL,
                    MB.HOME_ZIP,
                    MB.HOME_ADDR,
                    MB.HOME_ADDR2,
                    PD.PROD_NM,
                    RCL.PAY_DAY,
                    MTHD.PAY_MTHDNM,
                    MTHD.ICHAE_DT,
                    RCL.MONTH_CNT,
                    RCL.TRUE_CNT,
                    NVL(RCL.TRUE_AMT,0) AS TRUE_AMT,
                    NVL(RCL.REL_AMT,0) AS REL_AMT,
                    NVL(RCL.ADD_AMT,0) AS ADD_AMT ,
                    MPA.MEM_NO,
                    MPA.PROD_CD,
                    FN_DEPT_NM_BY_EMPLE_NO(MPA.EMPLE_NO) AS DEPT_NM,
                    RCL.DEL_FG
                FROM LF_DMUSER.RESN_CREDIT_LIST RCL INNER JOIN
                    MEM_PROD_ACCNT MPA ON RCL.ACCNT_NO = MPA.ACCNT_NO AND MPA.DEL_FG = 'N' INNER JOIN
                    MEMBER MB ON MPA.MEM_NO = MB.MEM_NO INNER JOIN
                    PRODUCT PD ON MPA.PROD_CD = PD.PROD_CD LEFT OUTER JOIN

                    (
                        SELECT
                            ACCNT_NO,
                            PAY_DT AS ICHAE_DT,
                            PAY_DAY_FIX_YN,
                            '06' AS PAY_MTHD,
                            'CARD' AS PAY_MTHDNM
                        FROM CARD_MEM
                        WHERE DEL_FG = 'N'

                        UNION ALL

                        SELECT
                            ACCNT_NO,
                            ICHAE_DT,
                            PAY_DAY_FIX_YN,
                            '04' AS PAY_MTHD,
                            'CMS' AS PAY_MTHD
                        FROM CMS_MEM
                        WHERE DEL_FG = 'N'
                    ) MTHD ON RCL.ACCNT_NO = MTHD.ACCNT_NO AND MPA.PAY_MTHD = MTHD.PAY_MTHD

                WHERE 1=1
                AND TARGET_YM = ${stt_dt}
                AND RCL.DEL_FG = 'N'

                <if test="mem_nm != null and mem_nm != ''">
                    AND MB.MEM_NM LIKE #{mem_nm} || '%'
                </if>

                <if test="accnt_no != null and accnt_no != ''">
                    AND RCL.ACCNT_NO = #{accnt_no}
                </if>

            )A
        )B
        <if test="startLine != null and startLine != '' and endLine != null and endLine != ''">
            <![CDATA[
            WHERE PAGE_INDX >= #{startLine}
              AND PAGE_INDX < #{endLine}
            ]]>
        </if>
    </select>

    <!-- 채권추심 pay list -->
    <select id="DlwCustMap.getResnCreditpayMainList" parameterType="map" resultType="resultMap">
        SELECT
            /*DlwCustMap.getResnCreditpayMainList*/
        *
        FROM
        (
            SELECT
                A.ACCNT_NO,
                A.PAY_DAY,
                A.PAY_MTHD,
                A.MEM_NM,
                (A.PAY_AMT + A.REL_AMT + A.ADD_AMT) AS PAY_AMT,
                (A.TOT_PAY_AMT + A.TOT_REL_AMT + A.TOT_ADD_AMT) AS TOT_PAY_AMT,
                (A.MON_PAY_AMT + A.MON_REL_AMT + A.MON_ADD_AMT) AS MON_PAY_AMT,
                <choose>
                    <when test="orderBy != null and orderBy != ''">
                        ROW_NUMBER() OVER(ORDER BY ${orderBy} ${orderDirection}) AS PAGE_INDX
                    </when>
                    <otherwise>
                        ROW_NUMBER() OVER(ORDER BY ACCNT_NO, PAY_DAY DESC) AS PAGE_INDX
                    </otherwise>
                </choose>
            FROM
            (
                SELECT
                    TBL.ACCNT_NO,
                    TBL.PAY_DAY,
                    TBL.PAY_MTHD,
                    MB.MEM_NM,
                    NVL((SELECT SUM(PAY_AMT) FROM PAY_MNG WHERE ACCNT_NO = TBL.ACCNT_NO AND DEL_FG = 'N' AND PAY_DAY BETWEEN #{pay_stt} AND  #{pay_end}),0) AS PAY_AMT,
                    NVL((SELECT SUM(PAY_AMT) FROM PAY_MNG_DTL WHERE ACCNT_NO = TBL.ACCNT_NO AND DEL_FG = 'N' AND PAY_DAY BETWEEN #{pay_stt} AND  #{pay_end}),0) AS REL_AMT,
                    NVL((SELECT SUM(PAY_AMT) FROM PAY_MNG_DTL1 WHERE ACCNT_NO = TBL.ACCNT_NO AND DEL_FG = 'N' AND PAY_DAY BETWEEN #{pay_stt} AND  #{pay_end}),0) AS ADD_AMT,
                    NVL((SELECT SUM(PAY_AMT) FROM PAY_MNG WHERE ACCNT_NO = TBL.ACCNT_NO AND DEL_FG = 'N' AND PAY_DAY  <![CDATA[<=]]> #{pay_end}),0) AS TOT_PAY_AMT,
                    NVL((SELECT SUM(PAY_AMT) FROM PAY_MNG_DTL WHERE ACCNT_NO = TBL.ACCNT_NO AND DEL_FG = 'N' AND PAY_DAY  <![CDATA[<=]]> #{pay_end}),0) AS TOT_REL_AMT,
                    NVL((SELECT SUM(PAY_AMT) FROM PAY_MNG_DTL1 WHERE ACCNT_NO = TBL.ACCNT_NO AND DEL_FG = 'N' AND PAY_DAY  <![CDATA[<=]]> #{pay_end}),0) AS TOT_ADD_AMT,
                    NVL((SELECT SUM(PAY_AMT) FROM PAY_MNG WHERE ACCNT_NO = TBL.ACCNT_NO AND DEL_FG = 'N' AND PAY_DAY BETWEEN #{stt_dt} || '01' AND TO_CHAR(SYSDATE,'YYYYMMDD')),0) AS MON_PAY_AMT,
                    NVL((SELECT SUM(PAY_AMT) FROM PAY_MNG_DTL WHERE ACCNT_NO = TBL.ACCNT_NO AND DEL_FG = 'N' AND PAY_DAY BETWEEN #{stt_dt} || '01' AND TO_CHAR(SYSDATE,'YYYYMMDD')),0) AS MON_REL_AMT,
                    NVL((SELECT SUM(PAY_AMT) FROM PAY_MNG_DTL1 WHERE ACCNT_NO = TBL.ACCNT_NO AND DEL_FG = 'N' AND PAY_DAY BETWEEN #{stt_dt} || '01' AND TO_CHAR(SYSDATE,'YYYYMMDD')),0) AS MON_ADD_AMT
                FROM
                (
                    SELECT
                        RCL.ACCNT_NO,
                        PAY.PAY_DAY,
                        PAY_MTHD
                    FROM RESN_CREDIT_LIST RCL LEFT OUTER JOIN
                        (
                            SELECT ACCNT_NO,
                                PAY_DAY,
                                PAY_MTHD
                            FROM PAY_MNG A
                            WHERE DEL_FG = 'N'
                            AND PAY_DAY BETWEEN #{pay_stt} AND  #{pay_end}
                        ) PAY ON RCL.ACCNT_NO = PAY.ACCNT_NO
                    WHERE 1=1
                        AND TARGET_YM = #{stt_dt}
                    GROUP BY RCL.ACCNT_NO, PAY.PAY_DAY, PAY_MTHD
                ) TBL LEFT OUTER JOIN
                MEM_PROD_ACCNT MPA ON TBL.ACCNT_NO = MPA.ACCNT_NO AND MPA.DEL_FG = 'N' LEFT OUTER JOIN
                MEMBER MB ON MPA.MEM_NO = MB.MEM_NO
                WHERE 1=1
                <if test="mem_nm != null and mem_nm != ''">
                    AND MB.MEM_NM LIKE #{mem_nm} || '%'
                </if>

                <if test="accnt_no != null and accnt_no != ''">
                    AND TBL.ACCNT_NO = #{accnt_no}
                </if>

            )A
        )B
        <if test="startLine != null and startLine != '' and endLine != null and endLine != ''">
            <![CDATA[
            WHERE PAGE_INDX >= #{startLine}
              AND PAGE_INDX < #{endLine}
            ]]>
        </if>
    </select>

    <!-- 직권해지 대상자 COUNT -->
    <select id="DlwCustMap.getResnTargetListCount" parameterType="map" resultType="int">
         SELECT /*DlwCustMap.getResnTargetListCount*/
             COUNT(*)
        FROM
        (
            SELECT MEM_NM
            FROM PS_WILLVI.TB_UNPY_MNGE TUM
            WHERE TUM.DATA_DT =  TO_CHAR(SYSDATE,'YYYYMM')
                AND ACCNT_NO NOT IN (SELECT ACCNT_NO FROM RESN_TARGET_LIST)
        )
        WHERE 1=1

        <if test="yenche_stt != null and yenche_stt != '' and yenche_end != null and yenche_end != ''">
            AND YENCHE_CNT BETWEEN ${yenche_stt} AND ${yenche_end}
        </if>

        <if test="yenche_stt != null and yenche_stt != '' and (yenche_end == null or yenche_end == '')">
            AND YENCHE_CNT <![CDATA[>=]]> ${yenche_stt}
        </if>

        <if test="(yenche_stt == null or yenche_stt == '') and (yenche_end != null and yenche_end != '')">
            AND YENCHE_CNT BETWEEN 13 AND  ${yenche_end}
        </if>

        <if test="pay_stt != null and pay_stt != '' and pay_end != null and pay_end != ''">
            AND TRUE_CNT BETWEEN ${pay_stt} AND ${pay_end}
        </if>

        <if test="pay_stt != null and pay_stt != '' and (pay_end == null or pay_end == '')">
            AND TRUE_CNT <![CDATA[>=]]> ${pay_stt}
        </if>

        <if test="(pay_stt == null or pay_stt == '') and (pay_end != null and pay_end != '')">
            AND TRUE_CNT BETWEEN 1 AND  ${pay_end}
        </if>

        <if test="(prod_section != null and prod_section != '')">
            AND SECTION_T = ${prod_section}
        </if>

        <if test="resn_amt == '01'">
            AND NVL(RESN_AMT,0) <![CDATA[>]]>  0
        </if>

        <if test="(confirm_val != null and confirm_val != '')">
            AND HPCALL_STAT = #{confirm_val}
        </if>

        <if test="resn_amt == '02'">
            AND NVL(RESN_AMT,0) =  0
        </if>

    </select>

    <!-- 직권해지 대상자 list -->
    <select id="DlwCustMap.getResnTargetList" parameterType="map" resultType="resultMap">
        SELECT /*DlwCustMap.getResnTargetList*/
		    TBL.*
		FROM
		(
		SELECT
		    MB.MEM_NM,
		    MPA.ACCNT_NO,
		    MPA.MEM_NO,
		    MPA.PROD_CD,
		    PD.PROD_NM,
		    DECODE(TYPE_C,'비채권','0001','0002') AS SECTION_T,
		    FN_COM_NM('81',(SELECT STAT FROM HP_CALL WHERE ACCNT_NO = MPA.ACCNT_NO)) AS HPCALL_STAT,
		    MPA.JOIN_DT,
		    PD.EXPR_NO AS MAX_CNT,
		    REAL_CNT + DIFF_CNT AS MONTH_CNT,
		    REAL_CNT  AS TRUE_CNT,
		    (CASE WHEN SUBSTR(PAY_BIT,0,1) = 'N' THEN TRUE_AMT + REL_AMT + ADD_AMT ELSE REL_AMT + ADD_AMT END) AS TRUE_AMT,
		    DIFF_CNT AS YENCHE_CNT,
		    PAY_DAY ,
		    (CASE WHEN SUBSTR(PAY_BIT,0,1) = 'N' THEN (TRUE_AMT + REL_AMT + ADD_AMT) + DIFF_AMT ELSE (REL_AMT + ADD_AMT) + DIFF_AMT END) AS MON_AMT,
		    DIFF_AMT,
		    LF_DMUSER.FN_RESN_AMT(MPA.PROD_CD, REAL_CNT,JOIN_DT) AS RESN_AMT
		FROM TB_MEMBER_YENCHE_MNG MYM INNER JOIN
		    MEM_PROD_ACCNT MPA ON MYM.ACCNT_NO = MPA.ACCNT_NO AND MPA.DEL_FG = 'N' INNER JOIN
		    MEMBER MB ON MPA.MEM_NO = MB.MEM_NO AND MB.DEL_FG ='N' INNER JOIN
		    PRODUCT PD ON MPA.PROD_CD = PD.PROD_CD
		) TBL
		WHERE 1=1

        <!--
        SELECT /*DlwCustMap.getResnTargetList*/
            MEM_NM,
            ACCNT_NO,
            MEM_NO,
            PROD_CD,
            PROD_NM,
            DECODE(SECTION_T,'0001','비채권','채권') AS SECTION_T,
            HPCALL_STAT,
            JOIN_DT,
            MAX_CNT,
            MONTH_CNT,
            TRUE_CNT,
            TRUE_AMT,
            YENCHE_CNT,
            PAY_DAY,
            MON_AMT,
            (MON_AMT - TRUE_AMT) AS DIFF_AMT,
            ROUND(NVL(RESN_AMT,0)) AS RESN_AMT
        FROM
        (
            SELECT MEM_NM,
                    ACCNT_NO,
                MEM_NO,
                TUM.PROD_CD,
                TUM.HPCALL_STAT,
                SUBSTR(JOIN_DT,0,8) AS JOIN_DT,
                (SELECT MAX(NO) FROM PRODUCT_NO_DATA WHERE PROD_CD = TUM.PROD_CD) AS MAX_CNT,
                TUM.MONTH_CNT,
                TUM.TRUE_CNT,
                TUM.TRUE_AMT,
                TUM.PAY_STATE AS YENCHE_CNT,
                SUBSTR(PAY_DAY,0,8) AS PAY_DAY,
                (SELECT SUM(AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = TUM.PROD_CD AND NO <![CDATA[<]]> TUM.MONTH_CNT) AS MON_AMT,
                LF_DMUSER.FN_RESN_AMT(TUM.PROD_CD,TUM.TRUE_CNT,JOIN_DT) AS RESN_AMT,
                PD.SECTION_T,
                PD.PROD_NM
            FROM PS_WILLVI.TB_UNPY_MNGE TUM INNER JOIN
                LF_DMUSER.PRODUCT PD ON TUM.PROD_CD = PD.PROD_CD
            WHERE TUM.DATA_DT =   TO_CHAR(SYSDATE,'YYYYMM')
                AND ACCNT_NO NOT IN (SELECT ACCNT_NO FROM RESN_TARGET_LIST WHERE NVL(DEL_FG,'N') = 'N')
        )
        WHERE 1=1
         -->

        <if test="yenche_stt != null and yenche_stt != '' and yenche_end != null and yenche_end != ''">
            AND YENCHE_CNT BETWEEN ${yenche_stt} AND ${yenche_end}
        </if>

        <if test="yenche_stt != null and yenche_stt != '' and (yenche_end == null or yenche_end == '')">
            AND YENCHE_CNT <![CDATA[>=]]> ${yenche_stt}
        </if>

        <if test="(yenche_stt == null or yenche_stt == '') and (yenche_end != null and yenche_end != '')">
            AND YENCHE_CNT BETWEEN 13 AND  ${yenche_end}
        </if>

        <if test="pay_stt != null and pay_stt != '' and pay_end != null and pay_end != ''">
            AND TRUE_CNT BETWEEN ${pay_stt} AND ${pay_end}
        </if>

        <if test="pay_stt != null and pay_stt != '' and (pay_end == null or pay_end == '')">
            AND TRUE_CNT <![CDATA[>=]]> ${pay_stt}
        </if>

        <if test="(pay_stt == null or pay_stt == '') and (pay_end != null and pay_end != '')">
            AND TRUE_CNT BETWEEN 1 AND  ${pay_end}
        </if>

        <if test="(prod_section != null and prod_section != '')">
            AND SECTION_T = ${prod_section}
        </if>

        <if test="resn_amt == '01'">
            AND NVL(RESN_AMT,0) <![CDATA[>]]>  0
        </if>

        <if test="(confirm_val != '선택')">
            AND HPCALL_STAT = #{confirm_val}
        </if>

        <if test="resn_amt == '02'">
            AND NVL(RESN_AMT,0) =  0
        </if>
    </select>

    <!-- 채권추심 대상자 list -->
    <select id="DlwCustMap.getResnCreditList" parameterType="map" resultType="resultMap">
        SELECT /*DlwCustMap.getResnCreditList*/
            SUBSTR(#{stt_dt},0,6) AS TARGET_YM,
            MEM_NM,
            ACCNT_NO,
            MEM_NO,
            PROD_CD,
            PROD_NM,
            DECODE(SECTION_T,'0001','비채권','채권') AS SECTION_T,
            HPCALL_STAT,
            JOIN_DT,
            MAX_CNT,
            MONTH_CNT,
            TRUE_CNT,
            TRUE_AMT,
            YENCHE_CNT,
            PAY_DAY,
            MON_AMT,
            (MON_AMT - TRUE_AMT) AS DIFF_AMT,
            ROUND(NVL(RESN_AMT,0)) AS RESN_AMT
        FROM
        (
            SELECT MEM_NM,
                    ACCNT_NO,
                MEM_NO,
                TUM.PROD_CD,
                TUM.HPCALL_STAT,
                SUBSTR(JOIN_DT,0,8) AS JOIN_DT,
                (SELECT MAX(NO) FROM PRODUCT_NO_DATA WHERE PROD_CD = TUM.PROD_CD) AS MAX_CNT,
                TUM.MONTH_CNT,
                TUM.TRUE_CNT,
                TUM.TRUE_AMT,
                TUM.PAY_STATE AS YENCHE_CNT,
                SUBSTR(PAY_DAY,0,8) AS PAY_DAY,
                (SELECT SUM(AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = TUM.PROD_CD AND NO <![CDATA[<]]> TUM.MONTH_CNT) AS MON_AMT,
                LF_DMUSER.FN_RESN_AMT(TUM.PROD_CD,TUM.TRUE_CNT,JOIN_DT) AS RESN_AMT,
                PD.SECTION_T,
                PD.PROD_NM
            FROM PS_WILLVI.TB_UNPY_MNGE TUM INNER JOIN
                LF_DMUSER.PRODUCT PD ON TUM.PROD_CD = PD.PROD_CD
            WHERE 1=1
                AND TUM.DATA_DT =   TO_CHAR(SYSDATE,'YYYYMM')
                --AND TUM.DATA_DT =   '201710'
                AND ACCNT_NO NOT IN
                    (
                        SELECT ACCNT_NO
                        FROM RESN_CREDIT_LIST
                        WHERE 1=1
                            AND TARGET_YM = SUBSTR(#{stt_dt},0,6)
                            AND NVL(DEL_FG,'N') = 'N'
                    )
        )
        WHERE 1=1

        <if test="yenche_stt != null and yenche_stt != '' and yenche_end != null and yenche_end != ''">
            AND YENCHE_CNT BETWEEN ${yenche_stt} AND ${yenche_end}
        </if>

        <if test="yenche_stt != null and yenche_stt != '' and (yenche_end == null or yenche_end == '')">
            AND YENCHE_CNT <![CDATA[>=]]> ${yenche_stt}
        </if>

        <if test="(yenche_stt == null or yenche_stt == '') and (yenche_end != null and yenche_end != '')">
            AND YENCHE_CNT BETWEEN 13 AND  ${yenche_end}
        </if>

        <if test="pay_stt != null and pay_stt != '' and pay_end != null and pay_end != ''">
            AND TRUE_CNT BETWEEN ${pay_stt} AND ${pay_end}
        </if>

        <if test="pay_stt != null and pay_stt != '' and (pay_end == null or pay_end == '')">
            AND TRUE_CNT <![CDATA[>=]]> ${pay_stt}
        </if>

        <if test="(pay_stt == null or pay_stt == '') and (pay_end != null and pay_end != '')">
            AND TRUE_CNT BETWEEN 1 AND  ${pay_end}
        </if>

        <if test="(prod_section != null and prod_section != '')">
            AND SECTION_T = ${prod_section}
        </if>

        <if test="resn_amt == '01'">
            AND NVL(RESN_AMT,0) <![CDATA[>]]>  0
        </if>

        <if test="(confirm_val != '선택')">
            AND HPCALL_STAT = #{confirm_val}
        </if>

        <if test="resn_amt == '02'">
            AND NVL(RESN_AMT,0) =  0
        </if>
    </select>


    <!-- 직권해지 대상자 등록 -->
    <insert id="DlwCustMap.insertTargetList" parameterType="map">

        <selectKey keyProperty="seq" resultType="String" order="BEFORE">
            SELECT MAX(NVL(SEQ,0)) + 1 AS SEQ
            FROM RESN_TARGET_LIST
        </selectKey>

        INSERT /* DlwCustMap.insertTargetList */
            INTO RESN_TARGET_LIST
            (
                SEQ, ACCNT_NO, YENCHE_CNT, MEM_NM, PROD_CD,
                JOIN_DT, MAX_CNT, MONTH_CNT, TRUE_CNT, TRUE_AMT,
                PAY_DAY, MON_AMT, DIFF_AMT, RESN_AMT, REG_DM, REG_USER
              )

        VALUES
        (
            #{seq}, #{accnt_no}, #{yenche_cnt}, #{mem_nm}, #{prod_cd},
            #{join_dt}, #{max_cnt}, #{month_cnt}, #{true_cnt}, #{true_amt},
            #{pay_day}, #{mon_amt}, #{diff_amt}, #{resn_amt}, SYSDATE, #{rgsr_id}
        )

    </insert>

    <!-- 채권자 추심 대상자 등록 -->
    <insert id="DlwCustMap.insertCreditList" parameterType="map">
        INSERT /* DlwCustMap.insertCreditList */
            INTO RESN_CREDIT_LIST
            (
                TARGET_YM, ACCNT_NO, DEL_FG, REG_DM, REG_MAN,
                MONTH_CNT, TRUE_CNT, PAY_DAY, DIFF_AMT
             )

        VALUES
        (
            #{target_ym}, #{accnt_no}, 'N', SYSDATE, #{rgsr_id},
            #{month_cnt}, #{true_cnt}, #{pay_day}, #{diff_amt}
        )

    </insert>

    <!-- 직권해지 설정일 업데이트 -->
    <update id="DlwCustMap.updateResnSenddt" parameterType="map" timeout="3">
    <!-- DM sql-id : sql-task.updateResnProc -->
        UPDATE /* DlwCustMap.updateResnSenddt*/
               RESN_TARGET_LIST
           SET

           <if test="select_type == '01'">
                SMS_DT 	= #{send_dt},
                SMS_USER = #{upd_man}
           </if>

           <if test="select_type == '02'">
                PRINT_DT 	= #{send_dt},
                PRINT_USER = #{upd_man}
           </if>

           <if test="select_type == '03'">
                RESN_TARGET_DT 	= #{send_dt},
                RESN_TARGET_USER = #{upd_man}
           </if>

           <if test="select_type == '04'">
                RESN_CNCL_DT 	= #{send_dt},
                RESN_CNCL_USER = #{upd_man},
                DEL_FG = 'Y'
           </if>

         WHERE ACCNT_NO			= #{accnt_no}
    </update>

    <!-- 채권추심 대상자 삭제 -->
    <update id="DlwCustMap.delResnCredit" parameterType="map" timeout="3">
    <!-- DM sql-id : sql-task.delResnCredit -->
        UPDATE /* DlwCustMap.delResnCredit*/
               RESN_CREDIT_LIST
           SET DEL_FG = 'Y'
         WHERE ACCNT_NO			= #{accnt_no}
             AND TARGET_YM = #{target_ym}
    </update>


     <!-- 대명 개명신청자 웹 디비  업데이트 -->
    <update id="DlwCustMap.updateMember_web" parameterType="map" timeout="3">
    <!-- DM sql-id : sql-task.updateMember_web -->
        UPDATE /* DlwCustMap.updateMember_web*/
               MB_MEM_MST@DMWEB
           SET NAME = #{dat3}
         WHERE UNQ_NO = #{mem_no}
    </update>

    <!-- 특이고객관리 상세보기 조회 -->
    <select id="DlwCustMap.getCustBasi" parameterType="map" resultType="resultMap">
        /* DlwCustMap."DlwCustMap."DlwCustMap.getCustBasi"" */

        SELECT  A.MEM_NO               <!-- 고유번호     -->
              , A.MEM_NM               <!-- 회원명       -->
              , A.SEX                  <!-- 성별         -->
              , A.BRTH_MON_DAY         <!-- 생년월일     -->
              , (SELECT COUNT(*)
                   FROM MEM_PROD_ACCNT B
                  WHERE B.MEM_NO = A.MEM_NO
                    AND B.DEL_FG = 'N') AS COUNT_ACCNT                      <!-- 구좌수     -->
              , DECODE(A.BRTH_MON_DAY, '19000101', 'Y', 'N') AS BUSINESS_YN <!-- 사업자여부 -->
              , A.HOME_TEL             <!-- 자택전화     -->
              , A.CELL                 <!-- 휴대전화     -->
              , A.WRPL_TEL             <!-- 회사전화     -->
              , A.CI_VAL               <!-- CI/DI        -->
              , A.IDN_NO               <!-- 사업자번호 또는 주민등록번호  -->
              , A.HOME_ZIP             <!-- 자택우편번호 -->
              , A.HOME_ADDR            <!-- 자택주소     -->
              , A.HOME_ADDR2           <!-- 자택주소2    -->
              , A.CREDIT_RATING        <!-- 신용등급     -->
              , A.CRDT_MNG_NO          <!-- 관리번호     -->
              , A.NOTE                 <!-- 비고         -->
              , A.EMAIL                <!-- 이메일       -->
              , A.MARKT_AGR_YN         <!-- 마케팅동의   -->
              , (SELECT C.EMPLE_NM
                   FROM EMPLOYEE C
                  WHERE C.EMPLE_NO = A.REG_MAN)       AS RGSR_NM     <!-- 등록자       -->
              , TO_CHAR(A.REG_DM, 'YYYYMMDDHH24MISS') AS RGSN_DTTM   <!-- 등록일시     -->
              , (SELECT D.EMPLE_NM
                   FROM EMPLOYEE D
                  WHERE D.EMPLE_NO = A.UPD_MAN)       AS AMND_NM     <!-- 수정자       -->
              , TO_CHAR(A.UPD_DM, 'YYYYMMDDHH24MISS') AS AMNT_DTTM   <!-- 수정일시     -->
          FROM MEMBER A
         WHERE A.DEL_FG = 'N'
           AND A.MEM_NO = #{mem_no}
    </select>


    <!--
    * ================================================================
    * 날짜 : 20180403
    * 이름 : 김찬영
    * 추가내용 : 쇼핑몰 연동 Table 에 고객의 상태를 양도로 변경
    * ================================================================
    -->
    <parameterMap id="getListByProcParamMap2" type="map">
        <parameter property="P_MEM_NO" 	 mode="IN" 	jdbcType="VARCHAR" javaType="java.lang.String" />
        <parameter property="P_ACCNT_NO" mode="IN" 	jdbcType="VARCHAR" javaType="java.lang.String" />
        <parameter property="P_STATE" 	 mode="IN" 	jdbcType="VARCHAR" javaType="java.lang.String" />
        <parameter property="P_CREATE_ID" 	 mode="IN" 	jdbcType="VARCHAR" javaType="java.lang.String" />
    </parameterMap>

    <update id="DlwCustMap.updateResnMemberState" statementType="CALLABLE" parameterMap="getListByProcParamMap2">
        {call SP_WEB_MEMBER_STATE(?, ?, ?, ?)}
    </update>
</mapper>

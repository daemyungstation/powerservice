<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ReqCustMap">

    <!-- 산출 가능 일자 체크  -->
    <select id="ReqCustMap.getWdrwReqCheck" parameterType="map" resultType="resultMap">
        SELECT /* ReqCustMap.getWdrwReqCheck */
            CASE WHEN EXT_CHK = 'H' THEN 'H' ELSE 'N'END  AS CHK_HOL,
            CASE WHEN NVL(EXT_WRITE_CMS,'N') != 'N' THEN 'Y' ELSE 'N' END AS CHK_CMS ,
            CASE WHEN NVL(EXT_WRITE_CARD,'N') != 'N' THEN 'Y' ELSE 'N' END AS CHK_CARD,
            CASE WHEN NVL(EXT_WRITE_CARD_NAUTH, 'N') != 'N' THEN 'Y' ELSE 'N' END AS CHK_CARD_NAUTH,
            CASE WHEN NVL(EXT_WRITE_INI_CARD, 'N') != 'N' THEN 'Y' ELSE 'N' END AS CHK_INI_CARD
        FROM LF_DMUSER.TB_MEMBER_EXT_CHECK
        WHERE EXT_REQ_DT  = #{wdrw_dt}
    </select>

    <!-- (상세구분별) 산출 조회 -->
    <select id="ReqCustMap.getDlwWdrwListByReqbit" parameterType="map" resultType="resultMap">
        SELECT
            PAY_MTHD,
            SUM(INI_N_JUNGI_CNT) AS INI_N_JUNGI_CNT,   /* 정기건 총건수 (청구전) 이니시스카드 */
            SUM(N_JUNGI_CNT) AS N_JUNGI_CNT,           /* 정기건 총건수 (청구전) 유승인 */
            SUM(NA_JUNGI_CNT) AS NA_JUNGI_CNT,         /* 정기건 총건수 (청구전) 무승인 */
            SUM(N_YENCHE_CNT) AS N_YENCHE_CNT,         /* 연체건 총건수 (청구전) */
            SUM(N_IMSI_CNT) AS N_IMSI_CNT,             /* 임시건 총건수 (청구전) */
            SUM(N_IM_CNT) AS N_IM_CNT,                 /* 임의건 총건수 (청구전) */
            SUM(INI_N_YENCHE_CNT) AS INI_N_YENCHE_CNT, /* 연체건 총건수 (청구전) 이니시스카드 */
            SUM(INI_N_IMSI_CNT) AS INI_N_IMSI_CNT,     /* 임시건 총건수 (청구전) 이니시스카드 */
            SUM(INI_N_IM_CNT) AS INI_N_IM_CNT,         /* 임의건 총건수 (청구전) 이니시스카드 */
            SUM(NA_CANCEL_CNT) AS NA_CANCEL_CNT,       /* 취소건 총건수 (청구전) 무승인 */

            SUM(INI_N_JUNGI_AMT) AS INI_N_JUNGI_AMT,   /* 정기건 총액   (청구전) 이니시스카드 */
            SUM(N_JUNGI_AMT) AS N_JUNGI_AMT,           /* 정기건 총액   (청구전) 유승인 */
            SUM(NA_JUNGI_AMT) AS NA_JUNGI_AMT,         /* 정기건 총액   (청구전) 무승인 */
            SUM(N_YENCHE_AMT) AS N_YENCHE_AMT,         /* 연체건 총액   (청구전) */
            SUM(N_IMSI_AMT) AS N_IMSI_AMT,             /* 임시건 총액   (청구전) */
            SUM(N_IM_AMT) AS N_IM_AMT,                 /* 임의건 총액   (청구전) */
            SUM(INI_N_YENCHE_AMT) AS INI_N_YENCHE_AMT, /* 연체건 총액   (청구전) 이니시스카드 */
            SUM(INI_N_IMSI_AMT) AS INI_N_IMSI_AMT,     /* 임시건 총액   (청구전) 이니시스카드 */
            SUM(INI_N_IM_AMT) AS INI_N_IM_AMT,         /* 임의건 총액   (청구전) 이니시스카드 */
            SUM(NA_CANCEL_AMT) AS NA_CANCEL_AMT,       /* 취소건 총액   (청구전) 무승인 */

            SUM(INI_R_JUNGI_CNT) AS INI_R_JUNGI_CNT,   /* 정기건 총건수 (청구완료) 이니시스카드 */
            SUM(R_JUNGI_CNT) AS R_JUNGI_CNT,           /* 정기건 총건수 (청구완료) 유승인 */
            SUM(RA_JUNGI_CNT) AS RA_JUNGI_CNT,         /* 정기건 총건수 (청구완료) 무승인 */
            SUM(R_YENCHE_CNT) AS R_YENCHE_CNT,         /* 연체건 총건수 (청구완료) */
            SUM(R_IMSI_CNT) AS R_IMSI_CNT,             /* 임시건 총건수 (청구완료) */
            SUM(R_IM_CNT) AS R_IM_CNT,                 /* 임의건 총건수 (청구완료) */
            SUM(INI_R_YENCHE_CNT) AS INI_R_YENCHE_CNT, /* 연체건 총건수 (청구완료) 이니시스카드 */
            SUM(INI_R_IMSI_CNT) AS INI_R_IMSI_CNT,     /* 임시건 총건수 (청구완료) 이니시스카드 */
            SUM(INI_R_IM_CNT) AS INI_R_IM_CNT,         /* 임의건 총건수 (청구완료) 이니시스카드 */
            SUM(RA_CANCEL_CNT) AS RA_CANCEL_CNT,       /* 취소건 총건수 (청구완료) 무승인 */

            SUM(INI_R_JUNGI_AMT) AS INI_R_JUNGI_AMT,   /* 정기건 총액   (청구완료) 이니시스카드 */
            SUM(R_JUNGI_AMT) AS R_JUNGI_AMT,           /* 정기건 총액   (청구완료) 유승인 */
            SUM(RA_JUNGI_AMT) AS RA_JUNGI_AMT,         /* 정기건 총액   (청구완료) 무승인 */
            SUM(R_YENCHE_AMT) AS R_YENCHE_AMT,         /* 연체건 총액   (청구완료) */
            SUM(R_IMSI_AMT) AS R_IMSI_AMT,             /* 임시건 총액   (청구완료) */
            SUM(R_IM_AMT) AS R_IM_AMT,                 /* 임의건 총액   (청구완료) */
            SUM(INI_R_YENCHE_AMT) AS INI_R_YENCHE_AMT, /* 연체건 총액   (청구완료) 이니시스카드 */
            SUM(INI_R_IMSI_AMT) AS INI_R_IMSI_AMT,     /* 임시건 총액   (청구완료) 이니시스카드 */
            SUM(INI_R_IM_AMT) AS INI_R_IM_AMT,         /* 임의건 총액   (청구완료) 이니시스카드 */
            SUM(RA_CANCEL_AMT) AS RA_CANCEL_AMT,       /* 취소건 총액   (청구완료) 무승인 */

            SUM(INI_C_JUNGI_CNT) AS INI_C_JUNGI_CNT,   /* 정기건 총건수 (입금완료) 이니시스카드 */
            SUM(C_JUNGI_CNT) AS C_JUNGI_CNT,           /* 정기건 총건수 (입금완료) 유승인 */
            SUM(CA_JUNGI_CNT) AS CA_JUNGI_CNT,         /* 정기건 총건수 (입금완료) 무승인 */
            SUM(C_YENCHE_CNT) AS C_YENCHE_CNT,         /* 연체건 총건수 (입금완료) */
            SUM(C_IMSI_CNT) AS C_IMSI_CNT,             /* 임시건 총건수 (입금완료) */
            SUM(C_IM_CNT) AS C_IM_CNT,                 /* 임의건 총건수 (입금완료) */
            SUM(INI_C_YENCHE_CNT) AS INI_C_YENCHE_CNT, /* 연체건 총건수 (입금완료) 이니시스카드 */
            SUM(INI_C_IMSI_CNT) AS INI_C_IMSI_CNT,     /* 임시건 총건수 (입금완료) 이니시스카드 */
            SUM(INI_C_IM_CNT) AS INI_C_IM_CNT,         /* 임의건 총건수 (입금완료) 이니시스카드 */
            SUM(XA_JUNGI_CNT) AS XA_JUNGI_CNT,         /* 취소건 총건수 (취소완료) 무승인 */

            SUM(INI_C_JUNGI_AMT) AS INI_C_JUNGI_AMT,   /* 정기건 총액   (입금완료) 이니시스카드 */
            SUM(C_JUNGI_AMT) AS C_JUNGI_AMT,           /* 정기건 총액   (입금완료) 유승인 */
            SUM(CA_JUNGI_AMT) AS CA_JUNGI_AMT,         /* 정기건 총액   (입금완료) 무승인 */
            SUM(C_YENCHE_AMT) AS C_YENCHE_AMT,         /* 연체건 총액   (입금완료) */
            SUM(C_IMSI_AMT) AS C_IMSI_AMT,             /* 임시건 총액   (입금완료) */
            SUM(C_IM_AMT) AS C_IM_AMT,                 /* 임의건 총액   (입금완료) */
            SUM(INI_C_YENCHE_AMT) AS INI_C_YENCHE_AMT, /* 연체건 총액   (입금완료) 이니시스카드 */
            SUM(INI_C_IMSI_AMT) AS INI_C_IMSI_AMT,     /* 임시건 총액   (입금완료) 이니시스카드 */
            SUM(INI_C_IM_AMT) AS INI_C_IM_AMT,         /* 임의건 총액   (입금완료) 이니시스카드 */
            SUM(XA_JUNGI_AMT) AS XA_JUNGI_AMT          /* 취소건 총액   (입금완료) 무승인 */
        FROM
        (
            SELECT
                 PAY_MTHD,
                 SUM(CASE WHEN REQ_BIT = '01' AND DEL_FG = 'N' AND AUTH_YN = 'Y' AND INI_YN = 'Y' THEN 1 ELSE 0 END ) AS INI_N_JUNGI_CNT,        /* 정기건 총건수 (청구전) 이니시스카드 */
                SUM(CASE WHEN REQ_BIT = '01' AND DEL_FG = 'N' AND AUTH_YN = 'Y' AND NVL(INI_YN, 'N') != 'Y' THEN 1 ELSE 0 END ) AS N_JUNGI_CNT,           /* 정기건 총건수 (청구전) 유승인 */
                SUM(CASE WHEN REQ_BIT = '01' AND DEL_FG = 'N' AND AUTH_YN = 'N' THEN 1 ELSE 0 END ) AS NA_JUNGI_CNT,                            /* 정기건 총건수 (청구전) 무승인 */
                SUM(CASE WHEN REQ_BIT = '04' AND DEL_FG = 'N' AND NVL(INI_YN, 'N') != 'Y' THEN 1 ELSE 0 END ) AS N_YENCHE_CNT,                            /* 연체건 총건수 (청구전) */
                SUM(CASE WHEN REQ_BIT = '05' AND DEL_FG = 'N' AND NVL(INI_YN, 'N') != 'Y' THEN 1 ELSE 0 END ) AS N_IMSI_CNT,                              /* 임시건 총건수 (청구전) */
                SUM(CASE WHEN REQ_BIT = '03' AND DEL_FG = 'N' AND NVL(INI_YN, 'N') != 'Y' THEN 1 ELSE 0 END ) AS N_IM_CNT,                                /* 임의건 총건수 (청구전) */
                SUM(CASE WHEN REQ_BIT = '04' AND DEL_FG = 'N' AND INI_YN = 'Y' THEN 1 ELSE 0 END ) AS INI_N_YENCHE_CNT,                         /* 연체건 총건수 (청구전) 이니시스카드 */
                SUM(CASE WHEN REQ_BIT = '05' AND DEL_FG = 'N' AND INI_YN = 'Y' THEN 1 ELSE 0 END ) AS INI_N_IMSI_CNT,                           /* 임시건 총건수 (청구전) 이니시스카드 */
                SUM(CASE WHEN REQ_BIT = '03' AND DEL_FG = 'N' AND INI_YN = 'Y' THEN 1 ELSE 0 END ) AS INI_N_IM_CNT,                             /* 임의건 총건수 (청구전) 이니시스카드 */
                0 AS NA_CANCEL_CNT,                                  /* 취소건 총건수 (청구전) 무승인 */

                SUM(CASE WHEN REQ_BIT = '01' AND DEL_FG = 'N' AND AUTH_YN = 'Y' AND INI_YN = 'Y' THEN PAY_AMT ELSE 0 END ) AS INI_N_JUNGI_AMT,  /* 정기건 총액   (청구전) 이니시스카드 */
                SUM(CASE WHEN REQ_BIT = '01' AND DEL_FG = 'N' AND AUTH_YN = 'Y' AND NVL(INI_YN, 'N') != 'Y' THEN PAY_AMT ELSE 0 END ) AS N_JUNGI_AMT,     /* 정기건 총액   (청구전) 유승인 */
                SUM(CASE WHEN REQ_BIT = '01' AND DEL_FG = 'N' AND AUTH_YN = 'N'  THEN PAY_AMT ELSE 0 END ) AS NA_JUNGI_AMT,                     /* 정기건 총액   (청구전) 무승인 */
                SUM(CASE WHEN REQ_BIT = '04' AND DEL_FG = 'N' AND NVL(INI_YN, 'N') != 'Y' THEN PAY_AMT ELSE 0 END ) AS N_YENCHE_AMT,                      /* 연체건 총액   (청구전) */
                SUM(CASE WHEN REQ_BIT = '05' AND DEL_FG = 'N' AND NVL(INI_YN, 'N') != 'Y' THEN PAY_AMT ELSE 0 END ) AS N_IMSI_AMT,                        /* 임시건 총액   (청구전) */
                SUM(CASE WHEN REQ_BIT = '03' AND DEL_FG = 'N' AND NVL(INI_YN, 'N') != 'Y' THEN PAY_AMT ELSE 0 END ) AS N_IM_AMT,                          /* 임의건 총액   (청구전) */
                SUM(CASE WHEN REQ_BIT = '04' AND DEL_FG = 'N' AND INI_YN = 'Y' THEN PAY_AMT ELSE 0 END ) AS INI_N_YENCHE_AMT,                   /* 연체건 총액   (청구전) 이니시스카드 */
                SUM(CASE WHEN REQ_BIT = '05' AND DEL_FG = 'N' AND INI_YN = 'Y' THEN PAY_AMT ELSE 0 END ) AS INI_N_IMSI_AMT,                     /* 임시건 총액   (청구전) 이니시스카드 */
                SUM(CASE WHEN REQ_BIT = '03' AND DEL_FG = 'N' AND INI_YN = 'Y' THEN PAY_AMT ELSE 0 END ) AS INI_N_IM_AMT,                       /* 임의건 총액   (청구전) 이니시스카드 */
                0 AS NA_CANCEL_AMT,                                  /* 취소건 총액   (청구전) 무승인 */

                SUM(CASE WHEN REQ_BIT = '01' AND DEL_FG = 'R' AND AUTH_YN = 'Y' AND INI_YN = 'Y' THEN 1 ELSE 0 END ) AS INI_R_JUNGI_CNT,        /* 정기건 총건수 (청구완료) 이니시스카드 */
                SUM(CASE WHEN REQ_BIT = '01' AND DEL_FG = 'R' AND AUTH_YN = 'Y' AND NVL(INI_YN, 'N') != 'Y' THEN 1 ELSE 0 END ) AS R_JUNGI_CNT,           /* 정기건 총건수 (청구완료) 유승인 */
                SUM(CASE WHEN REQ_BIT = '01' AND DEL_FG = 'R' AND AUTH_YN = 'N' THEN 1 ELSE 0 END ) AS RA_JUNGI_CNT,                            /* 정기건 총건수 (청구완료) 무승인 */
                SUM(CASE WHEN REQ_BIT = '04' AND DEL_FG = 'R' AND NVL(INI_YN, 'N') != 'Y' THEN 1 ELSE 0 END ) AS R_YENCHE_CNT,                            /* 연체건 총건수 (청구완료) */
                SUM(CASE WHEN REQ_BIT = '05' AND DEL_FG = 'R' AND NVL(INI_YN, 'N') != 'Y' THEN 1 ELSE 0 END ) AS R_IMSI_CNT,                              /* 임시건 총건수 (청구완료) */
                SUM(CASE WHEN REQ_BIT = '03' AND DEL_FG = 'R' AND NVL(INI_YN, 'N') != 'Y' THEN 1 ELSE 0 END ) AS R_IM_CNT,                                /* 임의건 총건수 (청구완료) */
                SUM(CASE WHEN REQ_BIT = '04' AND DEL_FG = 'R' AND INI_YN = 'Y' THEN 1 ELSE 0 END ) AS INI_R_YENCHE_CNT,                         /* 연체건 총건수 (청구완료) 이니시스카드 */
                SUM(CASE WHEN REQ_BIT = '05' AND DEL_FG = 'R' AND INI_YN = 'Y' THEN 1 ELSE 0 END ) AS INI_R_IMSI_CNT,                           /* 임시건 총건수 (청구완료) 이니시스카드 */
                SUM(CASE WHEN REQ_BIT = '03' AND DEL_FG = 'R' AND INI_YN = 'Y' THEN 1 ELSE 0 END ) AS INI_R_IM_CNT,                             /* 임의건 총건수 (청구완료) 이니시스카드 */
                0 AS RA_CANCEL_CNT,                                                    /* 취소건 총건수 (청구완료) 무승인 */

                SUM(CASE WHEN REQ_BIT = '01' AND DEL_FG = 'R' AND AUTH_YN = 'Y' AND INI_YN = 'Y' THEN PAY_AMT ELSE 0 END ) AS INI_R_JUNGI_AMT,  /* 정기건 총액   (청구완료) 이니시스카드 */
                SUM(CASE WHEN REQ_BIT = '01' AND DEL_FG = 'R' AND AUTH_YN = 'Y' AND NVL(INI_YN, 'N') != 'Y' THEN PAY_AMT ELSE 0 END ) AS R_JUNGI_AMT,     /* 정기건 총액   (청구완료) 유승인 */
                SUM(CASE WHEN REQ_BIT = '01' AND DEL_FG = 'R' AND AUTH_YN = 'N' THEN PAY_AMT ELSE 0 END ) AS RA_JUNGI_AMT,                      /* 정기건 총액   (청구완료) 무승인 */
                SUM(CASE WHEN REQ_BIT = '04' AND DEL_FG = 'R' AND NVL(INI_YN, 'N') != 'Y' THEN PAY_AMT ELSE 0 END ) AS R_YENCHE_AMT,                      /* 연체건 총액   (청구완료) */
                SUM(CASE WHEN REQ_BIT = '05' AND DEL_FG = 'R' AND NVL(INI_YN, 'N') != 'Y' THEN PAY_AMT ELSE 0 END ) AS R_IMSI_AMT,                        /* 임시건 총액   (청구완료) */
                SUM(CASE WHEN REQ_BIT = '03' AND DEL_FG = 'R' AND NVL(INI_YN, 'N') != 'Y' THEN PAY_AMT ELSE 0 END ) AS R_IM_AMT,                          /* 임의건 총액   (청구완료) */
                SUM(CASE WHEN REQ_BIT = '04' AND DEL_FG = 'R' AND INI_YN = 'Y' THEN PAY_AMT ELSE 0 END ) AS INI_R_YENCHE_AMT,                   /* 연체건 총액   (청구완료) 이니시스카드 */
                SUM(CASE WHEN REQ_BIT = '05' AND DEL_FG = 'R' AND INI_YN = 'Y' THEN PAY_AMT ELSE 0 END ) AS INI_R_IMSI_AMT,                     /* 임시건 총액   (청구완료) 이니시스카드 */
                SUM(CASE WHEN REQ_BIT = '03' AND DEL_FG = 'R' AND INI_YN = 'Y' THEN PAY_AMT ELSE 0 END ) AS INI_R_IM_AMT,                       /* 임의건 총액   (청구완료) 이니시스카드 */
                0 AS RA_CANCEL_AMT,                                                    /* 취소건 총액   (청구완료) 무승인 */

                SUM(CASE WHEN REQ_BIT = '01' AND DEL_FG IN ('C', 'X') AND AUTH_YN = 'Y' AND INI_YN = 'Y' THEN 1 ELSE 0 END ) AS INI_C_JUNGI_CNT, /* 정기건 총건수 (입금완료) 이니시스카드 */
                SUM(CASE WHEN REQ_BIT = '01' AND DEL_FG IN ('C', 'X') AND AUTH_YN = 'Y' AND NVL(INI_YN, 'N') != 'Y' THEN 1 ELSE 0 END ) AS C_JUNGI_CNT,    /* 정기건 총건수 (입금완료) 유승인 */
                SUM(CASE WHEN REQ_BIT = '01' AND DEL_FG IN ('C') AND AUTH_YN = 'N' THEN 1 ELSE 0 END ) AS CA_JUNGI_CNT,                          /* 정기건 총건수 (입금완료) 무승인 */
                SUM(CASE WHEN REQ_BIT = '04' AND DEL_FG IN ('C', 'X') AND NVL(INI_YN, 'N') != 'Y'  THEN 1 ELSE 0 END ) AS C_YENCHE_CNT,                    /* 연체건 총건수 (입금완료) */
                SUM(CASE WHEN REQ_BIT = '05' AND DEL_FG IN ('C', 'X') AND NVL(INI_YN, 'N') != 'Y' THEN 1 ELSE 0 END ) AS C_IMSI_CNT,                       /* 임시건 총건수 (입금완료) */
                SUM(CASE WHEN REQ_BIT = '03' AND DEL_FG IN ('C', 'X') AND NVL(INI_YN, 'N') != 'Y' THEN 1 ELSE 0 END ) AS C_IM_CNT,                         /* 임의건 총건수 (입금완료) */
                SUM(CASE WHEN REQ_BIT = '04' AND DEL_FG IN ('C', 'X') AND INI_YN = 'Y'  THEN 1 ELSE 0 END ) AS INI_C_YENCHE_CNT,                 /* 연체건 총건수 (입금완료) 이니시스카드 */
                SUM(CASE WHEN REQ_BIT = '05' AND DEL_FG IN ('C', 'X') AND INI_YN = 'Y' THEN 1 ELSE 0 END ) AS INI_C_IMSI_CNT,                    /* 임시건 총건수 (입금완료) 이니시스카드 */
                SUM(CASE WHEN REQ_BIT = '03' AND DEL_FG IN ('C', 'X') AND INI_YN = 'Y' THEN 1 ELSE 0 END ) AS INI_C_IM_CNT,                      /* 임의건 총건수 (입금완료) 이니시스카드 */
                0 AS XA_JUNGI_CNT,                         /* 취소건 총건수 (취소완료) 무승인 */

                SUM(CASE WHEN REQ_BIT = '01' AND DEL_FG IN ('C', 'X') AND AUTH_YN = 'Y' AND INI_YN = 'Y' THEN PAY_AMT ELSE 0 END ) AS INI_C_JUNGI_AMT, /* 정기건 총액   (입금완료) 이니시스카드 */
                SUM(CASE WHEN REQ_BIT = '01' AND DEL_FG IN ('C', 'X') AND AUTH_YN = 'Y' AND NVL(INI_YN, 'N') != 'Y' THEN PAY_AMT ELSE 0 END ) AS C_JUNGI_AMT,    /* 정기건 총액   (입금완료) 유승인 */
                SUM(CASE WHEN REQ_BIT = '01' AND DEL_FG IN ('C') AND AUTH_YN = 'N'  THEN PAY_AMT ELSE 0 END ) AS CA_JUNGI_AMT,                         /* 정기건 총액   (입금완료) 무승인 */
                SUM(CASE WHEN REQ_BIT = '04' AND DEL_FG IN ('C', 'X') AND NVL(INI_YN, 'N') != 'Y' THEN PAY_AMT ELSE 0 END ) AS C_YENCHE_AMT,                     /* 연체건 총액   (입금완료) */
                SUM(CASE WHEN REQ_BIT = '05' AND DEL_FG IN ('C', 'X') AND NVL(INI_YN, 'N') != 'Y' THEN PAY_AMT ELSE 0 END ) AS C_IMSI_AMT,                       /* 임시건 총액   (입금완료) */
                SUM(CASE WHEN REQ_BIT = '03' AND DEL_FG IN ('C', 'X') AND NVL(INI_YN, 'N') != 'Y' THEN PAY_AMT ELSE 0 END ) AS C_IM_AMT,                         /* 임의건 총액   (입금완료) */
                SUM(CASE WHEN REQ_BIT = '04' AND DEL_FG IN ('C', 'X') AND INI_YN = 'Y' THEN PAY_AMT ELSE 0 END ) AS INI_C_YENCHE_AMT,                  /* 연체건 총액   (입금완료) 이니시스카드 */
                SUM(CASE WHEN REQ_BIT = '05' AND DEL_FG IN ('C', 'X') AND INI_YN = 'Y' THEN PAY_AMT ELSE 0 END ) AS INI_C_IMSI_AMT,                    /* 임시건 총액   (입금완료) 이니시스카드 */
                SUM(CASE WHEN REQ_BIT = '03' AND DEL_FG IN ('C', 'X') AND INI_YN = 'Y' THEN PAY_AMT ELSE 0 END ) AS INI_C_IM_AMT,                      /* 임의건 총액   (입금완료) 이니시스카드 */
                0 AS XA_JUNGI_AMT                    /* 취소건 총액   (입금완료) 무승인 */
            FROM TB_MEMBER_WDRW_REQ_DAMO
            WHERE 1=1
            AND DEL_FG IN ('N','R','C','X')
            AND RESULT_KIND = '01'
            AND REQ_DAY = #{wdrw_dt}
            GROUP BY PAY_MTHD

            UNION ALL

            SELECT PAY_MTHD,
                0 AS INI_N_JUNGI_CNT,                                                         /* 정기건 총건수 (청구전) 이니시스카드 */
                0 AS N_JUNGI_CNT,                                                             /* 정기건 총건수 (청구전) 유승인 */
                0 AS NA_JUNGI_CNT,                                                            /* 정기건 총건수 (청구전) 무승인 */
                0 AS N_YENCHE_CNT,                                                            /* 연체건 총건수 (청구전) */
                0 AS N_IMSI_CNT,                                                              /* 임시건 총건수 (청구전) */
                0 AS N_IM_CNT,                                                                /* 임의건 총건수 (청구전) */
                0 AS INI_N_YENCHE_CNT,                                                        /* 연체건 총건수 (청구전) 이니시스카드 */
                0 AS INI_N_IMSI_CNT,                                                          /* 임시건 총건수 (청구전) 이니시스카드 */
                0 AS INI_N_IM_CNT,                                                            /* 임의건 총건수 (청구전) 이니시스카드 */
                SUM(CASE WHEN DEL_FG = 'N' THEN 1 ELSE 0 END ) AS NA_CANCEL_CNT,              /* 취소건 총건수 (청구전) 무승인 */

                0 AS INI_N_JUNGI_AMT,                                                         /* 정기건 총액   (청구전) 이니시스카드 */
                0 AS N_JUNGI_AMT,                                                             /* 정기건 총액   (청구전) 유승인 */
                0 AS NA_JUNGI_AMT,                                                            /* 정기건 총액   (청구전) 무승인 */
                0 AS N_YENCHE_AMT,                                                            /* 연체건 총액   (청구전) */
                0 AS N_IMSI_AMT,                                                              /* 임시건 총액   (청구전) */
                0 AS N_IM_AMT,                                                                /* 임의건 총액   (청구전) */
                0 AS INI_N_YENCHE_AMT,                                                        /* 연체건 총액   (청구전) 이니시스카드 */
                0 AS INI_N_IMSI_AMT,                                                          /* 임시건 총액   (청구전) 이니시스카드 */
                0 AS INI_N_IM_AMT,                                                            /* 임의건 총액   (청구전) 이니시스카드 */
                SUM(CASE WHEN DEL_FG = 'N' THEN PAY_AMT ELSE 0 END) AS NA_CANCEL_AMT,         /* 취소건 총액   (청구전) 무승인 */

                0 AS INI_R_JUNGI_CNT,                                                         /* 정기건 총건수 (청구완료) 이니시스카드 */
                0 AS R_JUNGI_CNT,                                                             /* 정기건 총건수 (청구완료) 유승인 */
                0 AS RA_JUNGI_CNT,                                                            /* 정기건 총건수 (청구완료) 무승인 */
                0 AS R_YENCHE_CNT,                                                            /* 연체건 총건수 (청구완료) */
                0 AS R_IMSI_CNT,                                                              /* 임시건 총건수 (청구완료) */
                0 AS R_IM_CNT,                                                                /* 임의건 총건수 (청구완료) */
                0 AS INI_R_YENCHE_CNT,                                                        /* 연체건 총건수 (청구완료) 이니시스카드 */
                0 AS INI_R_IMSI_CNT,                                                          /* 임시건 총건수 (청구완료) 이니시스카드 */
                0 AS INI_R_IM_CNT,                                                            /* 임의건 총건수 (청구완료) 이니시스카드 */
                SUM(CASE WHEN DEL_FG = 'R' THEN 1 ELSE 0 END ) AS RA_CANCEL_CNT,              /* 취소건 총건수 (청구완료) 무승인 */

                0 AS INI_R_JUNGI_AMT,                                                         /* 정기건 총액   (청구완료) 이니시스카드 */
                0 AS R_JUNGI_AMT,                                                             /* 정기건 총액   (청구완료) 유승인 */
                0 AS RA_JUNGI_AMT,                                                            /* 정기건 총액   (청구완료) 무승인 */
                0 AS R_YENCHE_AMT,                                                            /* 연체건 총액   (청구완료) */
                0 AS R_IMSI_AMT,                                                              /* 임시건 총액   (청구완료) */
                0 AS R_IM_AMT,                                                                /* 임의건 총액   (청구완료) */
                0 AS INI_R_YENCHE_AMT,                                                        /* 연체건 총액   (청구완료) 이니시스카드 */
                0 AS INI_R_IMSI_AMT,                                                          /* 임시건 총액   (청구완료) 이니시스카드 */
                0 AS INI_R_IM_AMT,                                                            /* 임의건 총액   (청구완료) 이니시스카드 */
                SUM(CASE WHEN DEL_FG = 'R' THEN PAY_AMT ELSE 0 END)AS RA_CANCEL_AMT,          /* 취소건 총액   (청구완료) 무승인 */

                0 AS INI_C_JUNGI_CNT,                                                         /* 정기건 총건수 (입금완료) 이니시스카드 */
                0 AS C_JUNGI_CNT,                                                             /* 정기건 총건수 (입금완료) 유승인 */
                0 AS CA_JUNGI_CNT,                                                            /* 정기건 총건수 (입금완료) 무승인 */
                0 AS C_YENCHE_CNT,                                                            /* 연체건 총건수 (입금완료) */
                0 AS C_IMSI_CNT,                                                              /* 임시건 총건수 (입금완료) */
                0 AS C_IM_CNT,                                                                /* 임의건 총건수 (입금완료) */
                0 AS INI_C_YENCHE_CNT,                                                        /* 연체건 총건수 (입금완료) 이니시스카드 */
                0 AS INI_C_IMSI_CNT,                                                          /* 임시건 총건수 (입금완료) 이니시스카드 */
                0 AS INI_C_IM_CNT,                                                            /* 임의건 총건수 (입금완료) 이니시스카드 */
                SUM(CASE WHEN DEL_FG IN ('C','X') THEN 1 ELSE 0 END ) AS XA_JUNGI_CNT,        /* 취소건 총건수 (취소완료) 무승인 */

                0 AS INI_C_JUNGI_AMT,                                                         /* 정기건 총액   (입금완료) 이니시스카드 */
                0 AS C_JUNGI_AMT,                                                             /* 정기건 총액   (입금완료) 유승인 */
                0 AS CA_JUNGI_AMT,                                                            /* 정기건 총액   (입금완료) 무승인 */
                0 AS C_YENCHE_AMT,                                                            /* 연체건 총액   (입금완료) */
                0 AS C_IMSI_AMT,                                                              /* 임시건 총액   (입금완료) */
                0 AS C_IM_AMT,                                                                /* 임의건 총액   (입금완료) */
                0 AS INI_C_YENCHE_AMT,                                                        /* 연체건 총액   (입금완료) 이니시스카드 */
                0 AS INI_C_IMSI_AMT,                                                          /* 임시건 총액   (입금완료) 이니시스카드 */
                0 AS INI_C_IM_AMT,                                                            /* 임의건 총액   (입금완료) 이니시스카드 */
                SUM(CASE WHEN DEL_FG IN ('C','X') THEN PAY_AMT ELSE 0 END ) AS XA_JUNGI_AMT   /* 취소건 총액   (입금완료) 무승인 */
            FROM LF_DMUSER.TB_MEMBER_REQ_NAUTH_CNCL
            WHERE 1=1
            AND DEL_FG IN ('N','R','C','X')
            AND REQ_DAY = #{wdrw_dt}
            GROUP BY PAY_MTHD
        )
        GROUP BY PAY_MTHD
    </select>

    <!-- 결과 데이터 건수조회 -->
    <select id="ReqCustMap.getReqResultCount" parameterType="map" resultType="resultMap">

        SELECT
            /* ReqCustMap.getReqResultCount */
               TBL.*
             , CARD_SUC_CNT + CARD_FAIL_CNT AS SUM_CARD_CNT /* Card 유승인 총건수 */
             , CARD_NAUTH_SUC_CNT + CARD_NAUTH_FAIL_CNT AS SUM_NAUTH_CARD_CNT /* Card 무승인 총건수 */
             , CMS_SUC_CNT + CMS_FAIL_CNT AS SUM_CMS_CNT    /* CMS  총건수 */
             , CARD_INI_SUC_CNT + CARD_INI_FAIL_CNT AS SUM_INI_CARD_CNT /* 이니시스카드 총건수 */
          FROM (
                 SELECT REQ_DAY
                      , SUM(CASE WHEN PAY_MTHD = '06' AND AUTH_YN = 'Y' AND NVL(INI_YN, 'N') != 'Y' AND RESULT_CD = '3001' THEN 1 ELSE 0 END) AS CARD_SUC_CNT                                                /* Card 유승인 성공건수 */
                      , SUM(CASE WHEN PAY_MTHD = '06' AND AUTH_YN = 'Y' AND NVL(INI_YN, 'N') != 'Y' AND ( RESULT_CD <![CDATA[<>]]> '3001' OR NVL(RESULT_CD, 'N') = 'N' ) THEN 1 ELSE 0 END) AS CARD_FAIL_CNT /* Card 유승인 실패건수 */
                      , SUM(CASE WHEN PAY_MTHD = '06' AND AUTH_YN = 'N' AND RESULT_CD = '00' THEN 1 ELSE 0 END) AS CARD_NAUTH_SUC_CNT                                                /* Card 무승인 성공건수 */
                      , SUM(CASE WHEN PAY_MTHD = '06' AND AUTH_YN = 'N' AND ( RESULT_CD <![CDATA[<>]]> '00' OR NVL(RESULT_CD, 'N') = 'N' ) THEN 1 ELSE 0 END) AS CARD_NAUTH_FAIL_CNT /* Card 무승인 실패건수 */
                      , SUM(CASE WHEN PAY_MTHD = '06' AND AUTH_YN = 'Y' AND INI_YN = 'Y' AND RESULT_CD = '00' THEN 1 ELSE 0 END) AS CARD_INI_SUC_CNT                                                /* 이니시스 Card 유승인 성공건수 */
                      , SUM(CASE WHEN PAY_MTHD = '06' AND AUTH_YN = 'Y' AND INI_YN = 'Y' AND ( RESULT_CD <![CDATA[<>]]> '00' OR NVL(RESULT_CD, 'N') = 'N' ) THEN 1 ELSE 0 END) AS CARD_INI_FAIL_CNT /* 이니시스 Card 유승인 실패건수 */
                      <!-- , ( SELECT COUNT(*) FROM TB_MEMBER_WDRW_REQ WHERE REQ_DAY = #{wdrw_dt} AND PAY_MTHD = '04' AND DEL_FG IN ('R','C','F') ) -->
                      <!-- - SUM(CASE WHEN PAY_MTHD = '04' AND ( RESULT_CD <![CDATA[<>]]> '3001' OR NVL(RESULT_CD, 'N') = 'N' ) THEN 1 ELSE 0 END) AS CMS_SUC_CNT   /* CMS 성공건수 = 청구건수 - 실패건수 */ -->
                      <!-- CMS 불능 데이터가 존재하면  성공/실패건수 조회 -->
                      , CASE WHEN SUM(CASE WHEN PAY_MTHD = '04' THEN 1 ELSE 0 END) > 0
                             THEN ( SELECT COUNT(*)
                                      FROM TB_MEMBER_WDRW_REQ
                                     WHERE REQ_DAY = #{wdrw_dt}
                                       AND PAY_MTHD = '04'
                                       <!-- AND DEL_FG IN ('R','C','F') -->
                                       AND DEL_FG IN ('R','C','F','X')
                                  )
                                 - SUM(CASE WHEN PAY_MTHD = '04' AND RESULT_CD IS NOT NULL THEN 1 ELSE 0 END)
                            ELSE 0
                        END AS CMS_SUC_CNT   /* CMS 성공건수 = 청구건수 - 실패건수 */
                      , SUM(CASE WHEN PAY_MTHD = '04' AND RESULT_CD IS NOT NULL THEN 1 ELSE 0 END) AS CMS_FAIL_CNT     /* CMS 실패건수 */
                   FROM TB_MEMBER_WDRW_RESULT
                  WHERE 1=1
                    AND REQ_DAY = #{wdrw_dt}
                    AND PAY_KIND = '01'  /* 파일 */
                  GROUP BY REQ_DAY
               ) TBL

    </select>

    <parameterMap id="selectImsiWdrwMap" type="resultMap"><!-- /*java.util.HashMap*/ -->
        <parameter property="emple_no" mode="IN" jdbcType="VARCHAR"  javaType="java.lang.String" />
        <parameter property="req_day" mode="IN" jdbcType="VARCHAR"  javaType="java.lang.String" />
    </parameterMap>

    <!-- 전체 임시건 산출 -->
    <select id="ReqCustMap.saveImsiWdrw" statementType="CALLABLE" parameterMap="selectImsiWdrwMap">
           {CALL SP_MEMBER_IMSI_REQ(?,?)}
    </select>

    <!-- ================================================================
     * 날짜 : 20181211
     * 이름 : 정승철
     * 추가내용 : 특수 산출 파라미터
     * ================================================================ -->
    <parameterMap id="selectSpecialWdrwMap" type="resultMap"><!-- /*java.util.HashMap*/ -->
        <parameter property="emple_no" mode="IN" jdbcType="VARCHAR"  javaType="java.lang.String" />
        <parameter property="req_day" mode="IN" jdbcType="VARCHAR"  javaType="java.lang.String" />
        <parameter property="pay_mthd" mode="IN" jdbcType="VARCHAR"  javaType="java.lang.String" />
    </parameterMap>







    <!-- ================================================================
     * 날짜 : 20181211
     * 이름 : 정승철
     * 추가내용 : 특수 산출
     * ================================================================ -->
    <select id="ReqCustMap.saveSpecialWdrw" statementType="CALLABLE" parameterMap="selectSpecialWdrwMap">
           {CALL SP_MEMBER_SPECIAL_REQ(?,?,?)}
    </select>
    <!-- CMS 변환 시 청구 테이블 결과값 반영 (DEL_FG = 'C'(성공) 'F'(실패), PAY_KIND = '01' 처리완료 및 결과 종류가 파일 -->
    <update id="ReqCustMap.uptReqResultStat" parameterType="map">
        /*ReqCustMap.uptReqResultStat*/
        BEGIN
            <if test='auth_yn == "Y"'>
                <if test="pay_mthd == '06'">
                    <if test='ini_yn == "N"'>
                        /*[001] 카드 유승인 성공 업데이트*/
                        MERGE INTO TB_MEMBER_WDRW_REQ_DAMO AAA
                        USING (
                                SELECT
                                    ACCNT_NO,
                                    RESULT_KEY,
                                    REQ_DAY
                                FROM TB_MEMBER_WDRW_RESULT
                                WHERE 1=1
                                AND REQ_DAY = #{req_day}
                                AND PAY_MTHD = '06'
                                AND PAY_KIND = '01'
                                AND NVL(INI_YN,'N') = 'N'
                                AND NVL(AUTH_YN,'Y') = 'Y'
                                AND NVL(RESULT_CD,'0000') = '3001'
                        ) BBB
                        ON ( AAA.ACCNT_NO = BBB.ACCNT_NO AND AAA.RESULT_KEY = BBB.RESULT_KEY AND AAA.REQ_DAY = BBB.REQ_DAY AND AAA.PAY_MTHD = '06' AND NVL(AAA.INI_YN,'N') = 'N')
                        WHEN MATCHED THEN
                        UPDATE SET AAA.DEL_FG = 'C', AAA.UPD_MAN = #{upd_man}, AAA.UPD_DM = SYSDATE;

                        /*[002] 카드 유승인 실패 업데이트*/
                        MERGE INTO TB_MEMBER_WDRW_REQ_DAMO AAA
                        USING (
                                SELECT
                                    ACCNT_NO,
                                    RESULT_KEY,
                                    REQ_DAY
                                FROM TB_MEMBER_WDRW_RESULT
                                WHERE 1=1
                                AND REQ_DAY = #{req_day}
                                AND PAY_MTHD = '06'
                                 AND PAY_KIND = '01'
                                AND NVL(INI_YN,'N') = 'N'
                                AND NVL(AUTH_YN,'Y') = 'Y'
                                AND NVL(RESULT_CD,'0000') != '3001'
                        ) BBB
                        ON ( AAA.ACCNT_NO = BBB.ACCNT_NO AND AAA.RESULT_KEY = BBB.RESULT_KEY AND AAA.REQ_DAY = BBB.REQ_DAY AND AAA.PAY_MTHD = '06' AND NVL(AAA.INI_YN,'N') = 'N')
                        WHEN MATCHED THEN
                        UPDATE SET AAA.DEL_FG = 'F', AAA.UPD_MAN = #{upd_man}, AAA.UPD_DM = SYSDATE;
                    </if>
                    <if test='ini_yn == "Y"'>
                        /*[001-1] 카드 유승인(이니시스) 성공 업데이트*/
                        MERGE INTO TB_MEMBER_WDRW_REQ_DAMO AAA
                        USING (
                                SELECT
                                    ACCNT_NO,
                                    RESULT_KEY,
                                    REQ_DAY
                                FROM TB_MEMBER_WDRW_RESULT
                                WHERE 1=1
                                AND REQ_DAY = #{req_day}
                                AND PAY_MTHD = '06'
                                AND PAY_KIND = '01'
                                AND NVL(INI_YN,'N') = 'Y'
                                AND NVL(AUTH_YN,'Y') = 'Y'
                                AND NVL(RESULT_CD,'FF') = '00'
                        ) BBB
                        ON ( AAA.ACCNT_NO = BBB.ACCNT_NO AND AAA.RESULT_KEY = BBB.RESULT_KEY AND AAA.REQ_DAY = BBB.REQ_DAY AND AAA.PAY_MTHD = '06' AND NVL(AAA.INI_YN,'N') = 'Y')
                        WHEN MATCHED THEN
                        UPDATE SET AAA.DEL_FG = 'C', AAA.UPD_MAN = #{upd_man}, AAA.UPD_DM = SYSDATE;

                        /*[002-1] 카드 유승인(이니시스) 실패 업데이트*/
                        MERGE INTO TB_MEMBER_WDRW_REQ_DAMO AAA
                        USING (
                                SELECT
                                    ACCNT_NO,
                                    RESULT_KEY,
                                    REQ_DAY
                                FROM TB_MEMBER_WDRW_RESULT
                                WHERE 1=1
                                AND REQ_DAY = #{req_day}
                                AND PAY_MTHD = '06'
                                AND PAY_KIND = '01'
                                AND NVL(INI_YN,'N') = 'Y'
                                AND NVL(AUTH_YN,'Y') = 'Y'
                                AND NVL(RESULT_CD,'FF') != '00'
                        ) BBB
                        ON ( AAA.ACCNT_NO = BBB.ACCNT_NO AND AAA.RESULT_KEY = BBB.RESULT_KEY AND AAA.REQ_DAY = BBB.REQ_DAY AND AAA.PAY_MTHD = '06' AND NVL(AAA.INI_YN,'N') = 'Y')
                        WHEN MATCHED THEN
                        UPDATE SET AAA.DEL_FG = 'F', AAA.UPD_MAN = #{upd_man}, AAA.UPD_DM = SYSDATE;
                    </if>
                </if>

                <if test="pay_mthd == '04'">
                    /*[003] CMS 유승인 실패 결과 업데이트*/
                    MERGE INTO TB_MEMBER_WDRW_REQ_DAMO AAA
                    USING (
                            SELECT
                                ACCNT_NO,
                                RESULT_KEY,
                                REQ_DAY
                            FROM TB_MEMBER_WDRW_RESULT
                            WHERE 1=1
                            AND REQ_DAY = #{req_day}
                            AND PAY_MTHD = '04'
                            AND NVL(AUTH_YN,'Y') = 'Y'
                    ) BBB
                    ON ( AAA.ACCNT_NO = BBB.ACCNT_NO AND AAA.RESULT_KEY = BBB.RESULT_KEY AND AAA.REQ_DAY = BBB.REQ_DAY AND  AAA.PAY_MTHD = '04')
                    WHEN MATCHED THEN
                    UPDATE SET AAA.DEL_FG = 'F', AAA.UPD_MAN = #{upd_man}, AAA.UPD_DM = SYSDATE;

                    /*[004] CMS 유승인 성공 업데이트*/
                    UPDATE TB_MEMBER_WDRW_REQ_DAMO AAA
                    SET DEL_FG = 'C', UPD_MAN = #{upd_man}, UPD_DM = SYSDATE
                    WHERE REQ_DAY = #{req_day}
                        AND DEL_FG = 'R'
                        AND PAY_MTHD = '04'
                        AND NVL(AUTH_YN,'Y') = 'Y';
                </if>
            </if>

            <if test='auth_yn == "N"'>
                    /*[005] 카드 무승인 성공 업데이트*/
                    MERGE INTO TB_MEMBER_WDRW_REQ_DAMO AAA
                    USING (
                            SELECT
                                ACCNT_NO,
                                RESULT_KEY,
                                REQ_DAY
                            FROM TB_MEMBER_WDRW_RESULT
                            WHERE 1=1
                            AND REQ_DAY = #{req_day}
                            AND PAY_KIND = '01'
                            AND NVL(AUTH_YN,'Y') = 'N'
                            AND NVL(RESULT_CD,'99') = '00'
                    ) BBB
                    ON ( AAA.ACCNT_NO = BBB.ACCNT_NO AND AAA.RESULT_KEY = BBB.RESULT_KEY AND AAA.REQ_DAY = BBB.REQ_DAY )
                    WHEN MATCHED THEN
                    UPDATE SET AAA.DEL_FG = 'C', AAA.UPD_MAN = #{upd_man}, AAA.UPD_DM = SYSDATE;

                    /*[006] 카드 무승인 실패 업데이트*/
                    MERGE INTO TB_MEMBER_WDRW_REQ_DAMO AAA
                    USING (
                            SELECT
                                ACCNT_NO,
                                RESULT_KEY,
                                REQ_DAY
                            FROM TB_MEMBER_WDRW_RESULT
                            WHERE 1=1
                            AND REQ_DAY = #{req_day}
                            AND PAY_KIND = '01'
                            AND NVL(AUTH_YN,'Y') = 'N'
                            AND NVL(RESULT_CD,'99') != '00'
                    ) BBB
                    ON ( AAA.ACCNT_NO = BBB.ACCNT_NO AND AAA.RESULT_KEY = BBB.RESULT_KEY AND AAA.REQ_DAY = BBB.REQ_DAY)
                    WHEN MATCHED THEN
                    UPDATE SET AAA.DEL_FG = 'F', AAA.UPD_MAN = #{upd_man}, AAA.UPD_DM = SYSDATE ;

                    /*[007] 카드 무승인 취소 성공 업데이트*/
                    MERGE INTO TB_MEMBER_REQ_NAUTH_CNCL AAA
                    USING (
                            SELECT
                                ACCNT_NO,
                                RESULT_KEY,
                                REQ_DAY
                            FROM TB_MEMBER_WDRW_RESULT
                            WHERE 1=1
                            AND REQ_DAY = #{req_day}
                            AND PAY_KIND = '01'
                            AND NVL(AUTH_YN,'Y') = 'N'
                            AND NVL(RESULT_CD,'99') = '00'
                    ) BBB
                    ON ( AAA.ACCNT_NO = BBB.ACCNT_NO AND AAA.CC_RESULT_KEY = BBB.RESULT_KEY AND AAA.REQ_DAY = BBB.REQ_DAY)
                    WHEN MATCHED THEN
                    UPDATE SET AAA.DEL_FG = 'C', AAA.UPD_MAN = #{upd_man}, AAA.UPD_DM = SYSDATE;

                    /*[008] 카드 무승인 취소 실패 업데이트*/
                    MERGE INTO TB_MEMBER_REQ_NAUTH_CNCL AAA
                    USING (
                            SELECT
                                ACCNT_NO,
                                RESULT_KEY,
                                REQ_DAY
                            FROM TB_MEMBER_WDRW_RESULT
                            WHERE 1=1
                            AND REQ_DAY = #{req_day}
                            AND PAY_KIND = '01'
                            AND NVL(AUTH_YN,'Y') = 'N'
                            AND NVL(RESULT_CD,'99') != '00'
                    ) BBB
                    ON ( AAA.ACCNT_NO = BBB.ACCNT_NO AND AAA.CC_RESULT_KEY = BBB.RESULT_KEY AND AAA.REQ_DAY = BBB.REQ_DAY)
                    WHEN MATCHED THEN
                    UPDATE SET AAA.DEL_FG = 'F', AAA.UPD_MAN = #{upd_man}, AAA.UPD_DM = SYSDATE;
             </if>
        END;

          <!-- 20200311 무승인 + 청구 업데이트 처리 변경 -->
        <!--
        <if test='auth_yn == "N"'>
            UPDATE TB_MEMBER_WDRW_REQ A
                SET A.DEL_FG = 'C',
                    A.UPD_MAN = #{upd_man},
                    A.UPD_DM = SYSDATE
            WHERE 1=1
            AND REQ_DAY = #{req_day}
            AND DEL_FG = 'R'
            AND PAY_MTHD = '06'
            AND RESULT_KIND = '01'
            AND NVL(AUTH_YN,'Y') = 'N'
            AND EXISTS
                (SELECT
                    RESULT_KEY
                 FROM TB_MEMBER_WDRW_RESULT
                 WHERE 1=1
                 AND ACCNT_NO = A.ACCNT_NO
                 AND RESULT_KEY = A.RESULT_KEY
                 AND REQ_DAY = A.REQ_DAY
                 AND NVL(RESULT_CD,'99') = '00') ;

            UPDATE TB_MEMBER_WDRW_REQ A
                SET A.DEL_FG = 'F',
                    A.UPD_MAN = #{upd_man},
                    A.UPD_DM = SYSDATE
            WHERE 1=1
            AND REQ_DAY = #{req_day}
            AND DEL_FG = 'R'
            AND PAY_MTHD = '06'
            AND RESULT_KIND = '01'
            AND NVL(AUTH_YN,'Y') = 'N'
            AND EXISTS
                (SELECT
                    RESULT_KEY
                 FROM TB_MEMBER_WDRW_RESULT
                 WHERE 1=1
                 AND ACCNT_NO = A.ACCNT_NO
                 AND RESULT_KEY = A.RESULT_KEY
                 AND REQ_DAY = A.REQ_DAY
                 AND NVL(RESULT_CD,'99') != '00'	);

            UPDATE TB_MEMBER_REQ_NAUTH_CNCL A
            SET DEL_FG = 'C',
                  A.UPD_MAN = #{upd_man},
                  A.UPD_DM = SYSDATE
            WHERE 1=1
            AND DEL_FG = 'R'
            AND REQ_DAY = #{req_day}
            AND EXISTS
                (SELECT
                    RESULT_KEY
                 FROM TB_MEMBER_WDRW_RESULT
                 WHERE RESULT_KEY = A.CC_RESULT_KEY
                 AND REQ_DAY = A.REQ_DAY
                 AND NVL(RESULT_CD,'99') = '00' ) ;

            UPDATE TB_MEMBER_REQ_NAUTH_CNCL A
            SET DEL_FG = 'F',
                  A.UPD_MAN = #{upd_man},
                  A.UPD_DM = SYSDATE
            WHERE 1=1
            AND DEL_FG = 'R'
            AND REQ_DAY = #{req_day}
            AND EXISTS
                (SELECT
                    RESULT_KEY
                 FROM TB_MEMBER_WDRW_RESULT
                 WHERE RESULT_KEY = A.CC_RESULT_KEY
                 AND REQ_DAY = #{req_day}
                 AND NVL(RESULT_CD,'99') != '00' ) ;
        </if>

        <if test='auth_yn != "N"'>
            UPDATE TB_MEMBER_WDRW_REQ A
                SET A.DEL_FG = 'C',
                    A.UPD_MAN = #{upd_man},
                    A.UPD_DM = SYSDATE
            WHERE 1=1
            AND REQ_DAY = #{req_day}
            AND DEL_FG = 'R'
            AND PAY_MTHD = #{pay_mthd}
            AND RESULT_KIND = '01'
            <if test="pay_mthd == '06'"> /* 카드 */
            AND EXISTS
                (SELECT
                    RESULT_KEY
                 FROM TB_MEMBER_WDRW_RESULT
                 WHERE 1=1
                 AND ACCNT_NO = A.ACCNT_NO
                 AND RESULT_KEY = A.RESULT_KEY
                 AND REQ_DAY = A.REQ_DAY
                 AND NVL(AUTH_YN,'Y') = 'Y'
                 AND NVL(RESULT_CD,'0000') = '3001') ;
            </if>
            <if test="pay_mthd == '04'"> /* CMS */
            AND NOT EXISTS
                (SELECT
                    RESULT_KEY
                 FROM TB_MEMBER_WDRW_RESULT
                 WHERE 1=1
                 AND ACCNT_NO = A.ACCNT_NO
                 AND RESULT_KEY = A.RESULT_KEY
                 AND REQ_DAY = A.REQ_DAY
                 AND RESULT_KIND = '01') ;
            </if>

            UPDATE TB_MEMBER_WDRW_REQ A
                SET A.DEL_FG = 'F',
                    A.UPD_MAN = #{upd_man},
                    A.UPD_DM = SYSDATE
            WHERE 1=1
            AND REQ_DAY = #{req_day}
            AND DEL_FG = 'R'
            AND PAY_MTHD = #{pay_mthd}
            AND RESULT_KIND = '01'
            AND EXISTS
                (SELECT
                    RESULT_KEY
                 FROM TB_MEMBER_WDRW_RESULT
                 WHERE 1=1
                 AND ACCNT_NO = A.ACCNT_NO
                 AND RESULT_KEY = A.RESULT_KEY
                 AND REQ_DAY = A.REQ_DAY
                 AND RESULT_KIND = '01'
                 <if test="pay_mthd == '06'"> /* 카드 */
                     AND NVL(AUTH_YN,'Y') = 'Y'
                     AND NVL(RESULT_CD,'0000') != '3001'
                 </if>
                );
        </if>
         -->

        <!--
        MERGE INTO TB_MEMBER_WDRW_REQ A
        USING (
                SELECT
                    MWQ.ACCNT_NO,
                    MWQ.PAY_MTHD,
                    MWQ.REQ_DAY,
                    MWQ.REQ_PAY_NO,
                    (CASE WHEN NVL(MWR.RESULT_CD,'3001') = '3001' THEN 'C' ELSE 'F' END) AS DEL_FG
                FROM TB_MEMBER_WDRW_REQ MWQ LEFT OUTER JOIN
                TB_MEMBER_WDRW_RESULT MWR ON MWQ.PAY_MTHD =MWR.PAY_MTHD AND MWQ.RESULT_KEY = MWR.RESULT_KEY AND MWQ.REQ_DAY = MWR.REQ_DAY
                WHERE 1=1
                    AND MWQ.DEL_FG = 'R'
                    AND MWQ.PAY_MTHD = #{pay_mthd}
                    AND MWQ.RESULT_KIND = '01'
                    AND MWQ.REQ_DAY = #{req_day}
            ) B
        ON (
                A.ACCNT_NO = B.ACCNT_NO
                AND A.REQ_PAY_NO = B.REQ_PAY_NO
                AND A.PAY_MTHD = B.PAY_MTHD
                AND A.REQ_DAY = B.REQ_DAY
                AND A.RESULT_KIND = '01'
            )
        WHEN MATCHED THEN
        UPDATE SET A.DEL_FG = B.DEL_FG,
                    A.UPD_MAN = #{upd_man},
                    A.UPD_DM = SYSDATE
     -->
    </update>

    <!-- 회원 상태값 및 가입일자 변경 (파일변경)-->
    <update id="ReqCustMap.uptMemJoinStatus" parameterType="map">
        <!--
         * 실시간 카드 정상 결제 회원이 1회 일때 가입일자와 상태값 변경
         -->
         UPDATE /*ReqCustMap.uptMemJoinStatus*/
             MEM_PROD_ACCNT MPA
         SET
                  KSTBIT = '02'
             , UPD_DM = SYSDATE
             , UPD_MAN = #{upd_man}
             <if test="pay_kind == '01' and pay_mthd == '06'">
                   , JOIN_DT = #{req_day}
                </if>

             <if test="pay_kind == '01' and pay_mthd != '06'">
                   , JOIN_DT = TO_CHAR(SYSDATE,'YYYYMMDD')
                </if>

             <if test="pay_kind == '02'">
                      , JOIN_DT = TO_CHAR(SYSDATE,'YYYYMMDD')
                </if>
         WHERE 1=1
           AND DEL_FG = 'N'
           AND KSTBIT = '01'
           AND EXISTS (
               SELECT ACCNT_NO FROM TB_MEMBER_WDRW_REQ
               WHERE 1=1
                   AND ACCNT_NO = MPA.ACCNT_NO
               <if test="pay_kind == '02'">
                   AND RESULT_KEY = #{result_key}
                   AND REQ_PAY_NO = 1
               </if>
               <if test="pay_kind == '01'">
                   AND DEL_FG = 'C'
                   AND PAY_MTHD = #{pay_mthd}
                   AND REQ_DAY = #{req_day}
                   AND REQ_PAY_NO = 1
               </if>
           )
    </update>

        <!-- 회원 상태값 및 가입일자 변경 (REALTIME 변경)-->
    <update id="ReqCustMap.uptMemJoinRealtimeStatus" parameterType="map">
        <!--
         * 실시간 카드 정상 결제 회원이 1회 일때 가입일자와 상태값 변경
         -->
         UPDATE /* ReqCustMap.uptMemJoinRealtimeStatus */
             MEM_PROD_ACCNT_DAMO
         SET
                  KSTBIT = '02'
             , UPD_DM = SYSDATE
             , UPD_MAN = #{upd_man}
                , JOIN_DT = TO_CHAR(SYSDATE,'YYYYMMDD')

         WHERE 1=1
           AND ACCNT_NO = #{accnt_no}
           AND DEL_FG = 'N'
           AND KSTBIT = '01'
    </update>

    <!-- 성공한 데이터 회원 입금 데이터 insert -->
    <insert id="ReqCustMap.insertMemPayData"  parameterType="map">
        INSERT ALL
        WHEN TRUE_AMT <![CDATA[>]]> 0 THEN
            INTO
                PAY_MNG(SEQ,ACCNT_NO, NO, PAY_AMT,PAY_DAY,PAY_MTHD,STAT,REG_DM,REG_MAN,DEL_FG,NEW_YN)
            VALUES (
                        NVL(TRUE_CNT,0) + 1,
                        ACCNT_NO,
                        REQ_PAY_NO,
                        TRUE_AMT,
                        REQ_DAY,
                        PAY_MTHD,
                        STAT, 		--STAT
                        SYSDATE,
                        REG_MAN,
                        'N',  		--DEL_FG
                        'Y'  		--NEW_N
                    )
        WHEN REL_AMT <![CDATA[>]]> 0 THEN
            INTO
                PAY_MNG_DTL(SEQ,ACCNT_NO, NO, PAY_AMT,PAY_DAY,PAY_MTHD,STAT,REG_DM,REG_MAN,DEL_FG)
            VALUES (
                        NVL(REL_CNT,0) + 1,
                        ACCNT_NO,
                        REQ_PAY_NO,
                        REL_AMT,
                        REQ_DAY,
                        PAY_MTHD,
                        STAT, 		--STAT
                        SYSDATE,
                        REG_MAN,
                        'N'  		--DEL_FG
                    )
        WHEN ADD_AMT <![CDATA[>]]> 0 THEN
            INTO
                PAY_MNG_DTL1(SEQ,ACCNT_NO, NO, PAY_AMT,PAY_DAY,PAY_MTHD,STAT,REG_DM,REG_MAN,DEL_FG)
            VALUES (
                        NVL(ADD_CNT,0) + 1,
                        ACCNT_NO,
                        REQ_PAY_NO,
                        ADD_AMT,
                        REQ_DAY,
                        PAY_MTHD,
                        STAT, 		--STAT
                        SYSDATE,
                        REG_MAN,
                        'N'  		--DEL_FG
                    )

            SELECT
                *
            FROM
            (
                SELECT
                    ACCNT_NO,
                    REQ.PROD_CD,
                    REQ_PAY_NO,
                    PAY_MTHD,
                    REQ_DAY,
                    DEL_FG,
                    CASE WHEN REQ_PAY_NO = 1 THEN '0'
                         WHEN (MONTH_CNT - REQ_PAY_NO) = 0 THEN '0'
                         WHEN (MONTH_CNT - REQ_PAY_NO) <![CDATA[<]]> 0 THEN '1'
                    ELSE '2' END AS STAT ,

                       <if test="pay_kind == '02'">
                        'RTIME_AUTO' AS REG_MAN,
                    </if>

                    <if test="pay_kind == '01'">
                        'FILE_AUTO' AS REG_MAN,
                    </if>

                    <if test="pay_kind == '04'">
                        'ETC_AUTO' AS REG_MAN,
                    </if>

                    (SELECT MAX(NVL(SEQ,0)) FROM LF_DMUSER.PAY_MNG WHERE ACCNT_NO = REQ.ACCNT_NO) AS TRUE_CNT,
                    (SELECT MAX(NVL(SEQ,0)) FROM LF_DMUSER.PAY_MNG_DTL WHERE ACCNT_NO = REQ.ACCNT_NO) AS REL_CNT,
                    (SELECT MAX(NVL(SEQ,0)) FROM LF_DMUSER.PAY_MNG_DTL1 WHERE ACCNT_NO = REQ.ACCNT_NO) AS ADD_CNT,
                    (CASE WHEN SUBSTR(PAY_BIT,1,1) != 'X' THEN PND.AMT ELSE 0 END) AS TRUE_AMT,
                    (CASE WHEN SUBSTR(PAY_BIT,2,1) != 'X' THEN PND.REL_AMT ELSE 0 END) AS REL_AMT,
                    (CASE WHEN SUBSTR(PAY_BIT,3,1) != 'X' THEN PND.ADD_AMT ELSE 0 END) AS ADD_AMT
                FROM TB_MEMBER_WDRW_REQ REQ INNER JOIN
                    PRODUCT_NO_DATA PND ON REQ.PROD_CD = PND.PROD_CD AND PND.NO = REQ.REQ_PAY_NO
                WHERE 1=1
                    <if test="pay_kind == '02'">
                        AND RESULT_KEY = #{result_key}
                    </if>

                    <if test="pay_kind == '01'">
                        AND RESULT_KIND = '01'
                        AND REQ.DEL_FG = 'C'
                        AND REQ.PAY_MTHD = #{pay_mthd}
                        AND REQ_DAY = #{req_day}
                    </if>
            )

    </insert>

    <!-- 빌키 대량 생성  -->
    <insert id="ReqCustMap.insertBillkeyMakeData"  parameterType="map">
           INSERT
            /* ReqCustMap.insertBillkeyMakeData */
        INTO LF_DMUSER.TB_INICIS_CARD_COMPARE
        (
            ACCNT_NO,
            CARD_NO,
            EXPIRE_DATE,
            CARD_BIRTH,
            INI_BID,
            MEMO
        )
        VALUES
        (
            #{accnt_no},
            #{card_no},
            #{expire_date},
            #{card_birth},
            #{ini_bid},
            #{memo}
        )

    </insert>

    <parameterMap id="selectFileInsertMap" type="resultMap"><!-- /*java.util.HashMap*/ -->
        <parameter property="req_day" mode="IN" jdbcType="VARCHAR"  javaType="java.lang.String" />
        <parameter property="pay_mthd" mode="IN" jdbcType="VARCHAR"  javaType="java.lang.String" />
        <parameter property="emple_no" mode="IN" jdbcType="VARCHAR"  javaType="java.lang.String" />
        <parameter property="deposit_day" mode="IN" jdbcType="VARCHAR"  javaType="java.lang.String" />
        <parameter property="auth_yn" mode="IN" jdbcType="VARCHAR"  javaType="java.lang.String" />
        <parameter property="ini_yn" mode="IN" jdbcType="VARCHAR"  javaType="java.lang.String" />
    </parameterMap>

    <!-- 청구데이터  파일 작성 후 결과 처리 -->
    <insert id="ReqCustMap.insertFilePayData" statementType="CALLABLE" parameterMap="selectFileInsertMap">
        {CALL SP_MEMBER_PAY_INSERT_INI(?,?,?,?,?,?)}
    </insert>

    <!-- ================================================================
     * 날짜 : 20181018
     * 이름 : 송준빈
     * 추가내용 : 출금이체의뢰내역(청구) 조회건수
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_WDRW_REQ
     * ================================================================
     * -->
    <select id="ReqCustMap.getDayCardNauthCount" parameterType="map" resultType="int">
        SELECT
            SUM(ICNT) AS SUM_ICNT
        FROM
        (
            SELECT
                COUNT(*) AS ICNT
            FROM TB_MEMBER_WDRW_REQ_DAMO
            WHERE 1=1
            AND REQ_BIT = '01'
            AND RESULT_KIND = '01'
            AND DEL_FG = 'N'
            AND AUTH_YN = 'N'
            AND REQ_DAY = #{req_day}

            UNION ALL

            SELECT
                COUNT(*) AS ICNT
            FROM LF_DMUSER.TB_MEMBER_REQ_NAUTH_CNCL
            WHERE 1=1
            AND DEL_FG IN ('P', 'F')
        )
        WHERE 1=1
    </select>

    <!-- ================================================================
     * 날짜 : 20191209
     * 이름 : 송준빈
     * 추가내용 : 카드 무승인 데이터 산출
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_REQ_NAUTH_CNCL
     * ================================================================
     * -->
    <update id="ReqCustMap.updateNauthCancelCalc" parameterType="map">
        UPDATE LF_DMUSER.TB_MEMBER_REQ_NAUTH_CNCL
        SET REQ_DAY = #{req_day},
            DEL_FG = 'N'
        WHERE 1=1
        AND DEL_FG IN ('P', 'F')
    </update>

     <!-- CMS파일 작성 시 RESULT키 업데이트 처리  향후 CMS 결과 데이터와 조인 -->
    <update id="ReqCustMap.uptReqResultKey" parameterType="map">

        /*ReqCustMap.uptReqResultKey*/
        MERGE INTO TB_MEMBER_WDRW_REQ_DAMO A
        USING (SELECT ACCNT_NO,
                REQ_PAY_NO,
                PAY_MTHD,
                <if test="pay_mthd == '06'">
                    AUTH_YN,
                    INI_YN,
                </if>
                DEL_FG,
                REQ_DAY,
                SUBSTR('0000000' || (RANK() OVER(ORDER BY REQ_PAY_NO ASC, ACCNT_NO ASC)),-8) || REQ_DAY || PAY_MTHD || NVL(INI_YN,'N') AS RANK
            FROM TB_MEMBER_WDRW_REQ
            WHERE 1=1
            AND DEL_FG = 'N'
            AND PAY_MTHD = #{pay_mthd}
            AND REQ_DAY = #{req_day}
            <if test="pay_mthd == '06'">
                <choose>
                    <when test="pay_mthd_auth.equalsIgnoreCase('Y') and ini_yn.equalsIgnoreCase('Y')">
                        AND AUTH_YN = 'Y'
                        AND INI_YN = 'Y'
                    </when>
                    <when test="pay_mthd_auth.equalsIgnoreCase('N')">
                        AND AUTH_YN = 'N'
                    </when>
                    <otherwise>
                        AND AUTH_YN = 'Y'
                        AND NVL(INI_YN, 'N') != 'Y'
                    </otherwise>
                </choose>
            </if>
        ) B
        ON (    A.ACCNT_NO = B.ACCNT_NO
                AND A.REQ_PAY_NO = B.REQ_PAY_NO
                AND A.PAY_MTHD = B.PAY_MTHD
                <if test="pay_mthd == '06'">
                    <choose>
                        <when test="pay_mthd_auth.equalsIgnoreCase('Y') and ini_yn.equalsIgnoreCase('Y')">
                            AND A.AUTH_YN = B.AUTH_YN
                            AND A.INI_YN = 'Y'
                        </when>
                        <when test="pay_mthd_auth.equalsIgnoreCase('N')">
                            AND A.AUTH_YN = B.AUTH_YN
                        </when>
                        <otherwise>
                            AND A.AUTH_YN = B.AUTH_YN
                            AND NVL(A.INI_YN, 'N') != 'Y'
                        </otherwise>
                    </choose>
                </if>
                AND A.DEL_FG = B.DEL_FG
                AND A.REQ_DAY = B.REQ_DAY
           )
        WHEN MATCHED THEN
        UPDATE SET A.RESULT_KEY = B.RANK,
                    A.RESULT_KIND = '01',
                    A.UPD_MAN = #{upd_man},
                    A.UPD_DM = SYSDATE
    </update>

    <select id="ReqCustMap.getWdrwReqList" parameterType="map" resultType="resultMap">
         SELECT /* ReqCustMap.getWdrwReqList */
             REQ.ACCNT_NO,
             REQ.PROD_CD,
             REQ.REQ_PAY_NO,
             MB.MEM_NM,
             PD.PROD_NM,
             REQ.PAY_AMT,
             REQ.ICHAE_NO,
             REQ.ICHAE_CD,
             REQ.REQ_DAY,
             REQ.BIRTH,
             REQ.BANK_FILIN_BRKDN,
             RESULT_KEY,

                CASE WHEN NVL(INI_YN,'N') = 'Y' AND TLM.LTI_USE_YN  = 'Y' AND NVL(TCB.GUBUN,'00') = '99' THEN SUBSTR('0'||REQ.REQ_PAY_NO,-2)
                ELSE NVL(TCB.GUBUN,'00')
                END AS BILL_GUBUN,
             REQ.FRANCHISEE_NO,
             REQ.EXPIRE_DATE,

             CASE WHEN NVL(INI_YN,'N') = 'N' THEN (SELECT MID||KEY FROM CARD_MID_LIST WHERE MID = SUBSTR(ICHAE_NO,5,10))
                  WHEN NVL(INI_YN,'N') = 'Y' AND TLM.LTI_USE_YN  = 'Y' THEN PD.MID_INFO_2
             ELSE NVL((SELECT INI_MID FROM CARD_MID_LIST WHERE MID = PD.MID),'daemyungT1')
             END  AS BILL_KEY
         FROM LF_DMUSER.TB_MEMBER_WDRW_REQ REQ INNER JOIN
             MEM_PROD_ACCNT MPA ON REQ.ACCNT_NO = MPA.ACCNT_NO AND MPA.DEL_FG = 'N' INNER JOIN
             MEMBER MB ON MPA.MEM_NO = MB.MEM_NO AND MB.DEL_FG = 'N' INNER JOIN
             PRODUCT PD ON MPA.PROD_CD = PD.PROD_CD LEFT OUTER JOIN
             TB_LTINSTALL_MNG TLM ON REQ.ACCNT_NO = TLM.ACCNT_NO AND TLM.DEL_FG = 'N' LEFT OUTER JOIN
             TB_CARD_BILL_GUBUN TCB ON TCB.PROD_CD = REQ.PROD_CD AND REQ.REQ_PAY_NO BETWEEN STT_PAY_NO AND END_PAY_NO
         WHERE 1=1
             AND REQ.DEL_FG = 'N'
             AND REQ.RESULT_KIND = '01' --파일
             AND REQ.PAY_MTHD = #{pay_mthd}
             <if test="pay_mthd == '06'">
                 <choose>
                     <when test="pay_mthd_auth.equalsIgnoreCase('Y') and ini_yn.equalsIgnoreCase('Y')">
                         AND REQ.AUTH_YN = 'Y'
                         AND REQ.INI_YN = 'Y'
                     </when>
                     <when test="pay_mthd_auth.equalsIgnoreCase('N')">
                         AND REQ.AUTH_YN = 'N'
                     </when>
                     <otherwise>
                         AND REQ.AUTH_YN = 'Y'
                         AND NVL(REQ.INI_YN, 'N') != 'Y'
                     </otherwise>
                 </choose>
             </if>
             AND REQ_DAY = #{req_day}
         ORDER BY RESULT_KEY ASC
    </select>

    <parameterMap id="selectReqWdrwMap" type="resultMap"><!-- /*java.util.HashMap*/ -->
        <parameter property="req_day" mode="IN" jdbcType="VARCHAR"  javaType="java.lang.String" />
        <parameter property="pay_mthd" mode="IN" jdbcType="VARCHAR"  javaType="java.lang.String" />
        <parameter property="emple_no" mode="IN" jdbcType="VARCHAR"  javaType="java.lang.String" />
        <parameter property="pay_mthd_auth" mode="IN" jdbcType="VARCHAR"  javaType="java.lang.String" />
        <parameter property="ini_yn" mode="IN" jdbcType="VARCHAR"  javaType="java.lang.String" />
    </parameterMap>

    <!-- 청구데이터  파일 작성 후 결과 처리 -->
    <insert id="ReqCustMap.insertReqWdrw" statementType="CALLABLE" parameterMap="selectReqWdrwMap">
        {CALL SP_MEMBER_REQ_CREATE_INI(?,?,?,?,?)}
    </insert>

    <!-- CMS기초 데이터 조회 -->
    <select id="ReqCustMap.getWdrwDlwCmsComnInfo" parameterType="map" resultType="resultMap">
        SELECT /* ReqCustMap.getWdrwDlwCmsComnInfo */
            USE_INST_CL_CD
            , USE_INST_NM
            , BANK_OP_BRACH_CD
            ,BANK_ACCNT_NO AS  BANK_ACCNT_NO
            , GUNDANG_WDRW_LIMIT
            , MON_WDRW_LIMIT
            , BANK_FILIN_BRKDN
            , FILE_PATH
            , WDRW_COM
            , WDRW_IMPS_COM
            , FILE_PATH
        FROM CMS_COM
    </select>

    <!-- ================================================================
     * 날짜 : 20191202
     * 이름 : 송준빈
     * 추가내용 : 카드 무승인 데이터 resultKey추출 (가맹점 번호 기준)
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_WDRW_REQ
     * ================================================================
     * -->
    <update id="ReqCustMap.uptReqNauthResultKey" parameterType="map">
        /* ReqCustMap.uptReqNauthResultKey */
        BEGIN
            MERGE INTO TB_MEMBER_WDRW_REQ_DAMO AAA
            USING (
                    SELECT
                        *
                    FROM
                    (
                        SELECT
                            ACCNT_NO,
                            REQ_PAY_NO,
                            PAY_MTHD,
                            REQ_DAY,
                            FRANCHISEE_NO,
                            RESULT_BIT,
                            SUBSTR('000' || DENSE_RANK() OVER(ORDER BY FRANCHISEE_NO ASC),-4) ||
                            SUBSTR('00000' || (RANK() OVER(PARTITION BY FRANCHISEE_NO ORDER BY REQ_PAY_NO ASC, ACCNT_NO ASC)),-6) || REQ_DAY AS RANK
                        FROM
                        (
                            SELECT ACCNT_NO,
                                REQ_PAY_NO,
                                PAY_MTHD,
                                REQ_DAY,
                                FRANCHISEE_NO,
                                'NA' AS RESULT_BIT
                            FROM TB_MEMBER_WDRW_REQ
                            WHERE 1=1
                            AND DEL_FG = 'N'
                            AND PAY_MTHD = '06'
                            AND REQ_DAY =  #{req_day}
                            AND AUTH_YN = 'N'

                            UNION ALL

                            SELECT
                                ACCNT_NO,
                                REQ_PAY_NO,
                                PAY_MTHD,
                                REQ_DAY,
                                FRANCHISEE_NO,
                                'CC' AS RESULT_BIT
                            FROM TB_MEMBER_REQ_NAUTH_CNCL
                            WHERE DEL_FG = 'N'
                        )
                    ) MAIN_TABLE
                    WHERE MAIN_TABLE.RESULT_BIT = 'NA'
                  ) BBB
            ON (
                    AAA.ACCNT_NO = BBB.ACCNT_NO AND
                    AAA.REQ_DAY = BBB.REQ_DAY AND
                    AAA.REQ_PAY_NO = BBB.REQ_PAY_NO AND
                    AAA.AUTH_YN = 'N' AND
                    AAA.DEL_FG = 'N'
               )

            WHEN MATCHED THEN
            UPDATE SET AAA.RESULT_KEY = BBB.RANK,
                       AAA.RESULT_KIND = '01',
                       AAA.UPD_MAN = #{upd_man},
                       AAA.UPD_DM = SYSDATE;


            MERGE INTO TB_MEMBER_REQ_NAUTH_CNCL AAA
            USING (
                    SELECT
                        *
                    FROM
                    (
                        SELECT
                            ACCNT_NO,
                            REQ_PAY_NO,
                            PAY_MTHD,
                            REQ_DAY,
                            FRANCHISEE_NO,
                            RESULT_BIT,
                            SUBSTR('000' || DENSE_RANK() OVER(ORDER BY FRANCHISEE_NO ASC),-4) ||
                            SUBSTR('00000' || (RANK() OVER(PARTITION BY FRANCHISEE_NO ORDER BY REQ_PAY_NO ASC, ACCNT_NO ASC)),-6) || REQ_DAY AS RANK
                        FROM
                        (
                            SELECT ACCNT_NO,
                                REQ_PAY_NO,
                                PAY_MTHD,
                                REQ_DAY,
                                FRANCHISEE_NO,
                                'NA' AS RESULT_BIT
                            FROM TB_MEMBER_WDRW_REQ
                            WHERE 1=1
                            AND DEL_FG = 'N'
                            AND PAY_MTHD = '06'
                            AND REQ_DAY = #{req_day}
                            AND AUTH_YN = 'N'

                            UNION ALL

                            SELECT
                                ACCNT_NO,
                                REQ_PAY_NO,
                                PAY_MTHD,
                                REQ_DAY,
                                FRANCHISEE_NO,
                                'CC' AS RESULT_BIT
                            FROM TB_MEMBER_REQ_NAUTH_CNCL
                            WHERE DEL_FG = 'N'
                        )
                    ) MAIN_TABLE
                    WHERE MAIN_TABLE.RESULT_BIT = 'CC'
                  ) BBB
            ON (
                    AAA.ACCNT_NO = BBB.ACCNT_NO AND
                    AAA.REQ_DAY = BBB.REQ_DAY AND
                    AAA.REQ_PAY_NO = BBB.REQ_PAY_NO AND
                    AAA.DEL_FG = 'N'
               )

            WHEN MATCHED THEN
            UPDATE SET AAA.CC_RESULT_KEY = BBB.RANK ;

        END ;



           <!--
            MERGE INTO TB_MEMBER_WDRW_REQ_DAMO A
            USING (SELECT ACCNT_NO,
                    REQ_PAY_NO,
                    PAY_MTHD,
                    AUTH_YN,
                    DEL_FG,
                    REQ_DAY,
                    FRANCHISEE_NO,
                    #{batch_num} || SUBSTR('00000' || (RANK() OVER(ORDER BY FRANCHISEE_NO ASC, REQ_PAY_NO ASC, ACCNT_NO ASC)),-6) AS RANK
                FROM TB_MEMBER_WDRW_REQ
                WHERE 1=1
                AND DEL_FG = 'N'
                AND PAY_MTHD = #{pay_mthd}
                AND REQ_DAY = #{req_day}
                AND FRANCHISEE_NO = #{franchisee_no}
                  AND AUTH_YN = 'N'
            ) B
            ON (    A.ACCNT_NO = B.ACCNT_NO
                    AND A.REQ_PAY_NO = B.REQ_PAY_NO
                    AND A.PAY_MTHD = B.PAY_MTHD
                    AND A.AUTH_YN = B.AUTH_YN
                    AND A.FRANCHISEE_NO = B.FRANCHISEE_NO
                    AND A.DEL_FG = B.DEL_FG
                    AND A.REQ_DAY = B.REQ_DAY
               )
            WHEN MATCHED THEN
            UPDATE SET A.RESULT_KEY = B.RANK,
                        A.RESULT_KIND = '01',
                        A.UPD_MAN = #{upd_man},
                        A.UPD_DM = SYSDATE
        -->
    </update>

    <!-- ================================================================
     * 날짜 : 20191202
     * 이름 : 송준빈
     * 추가내용 : 카드 무승인 전체 데이터 조회 (무승인 + 취소건)
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_WDRW_REQ
     * ================================================================
     * -->
    <select id="ReqCustMap.getWdrwNauthReqFranCnt" parameterType="map" resultType="resultMap">
         /* ReqCustMap.getWdrwNauthReqFranCnt */
        SELECT
            *
        FROM
        (
            SELECT
                REQ.ACCNT_NO,
                REQ.PROD_CD,
                REQ.REQ_PAY_NO,
                REQ.PAY_AMT,
                REQ.ICHAE_NO,
                REQ.ICHAE_CD,
                REQ.REQ_DAY,
                REQ.BIRTH,
                REQ.BANK_FILIN_BRKDN,
                REQ.RESULT_KEY,
                NVL((SELECT GUBUN FROM LF_DMUSER.TB_CARD_BILL_GUBUN WHERE PROD_CD = REQ.PROD_CD AND REQ.REQ_PAY_NO BETWEEN STT_PAY_NO AND END_PAY_NO),'000') AS BILL_GUBUN,
                REQ.FRANCHISEE_NO,
                REQ.EXPIRE_DATE,
                'NA' AS NAUTH_BIT
            FROM TB_MEMBER_WDRW_REQ REQ
            WHERE 1=1
                AND REQ_DAY = #{req_day}
                AND REQ.PAY_MTHD = '06'
                AND REQ.DEL_FG = 'N'
                AND REQ.AUTH_YN = 'N'

            UNION ALL

            SELECT
                CC.ACCNT_NO,
                REQ.PROD_CD,
                REQ.REQ_PAY_NO,
                REQ.PAY_AMT,
                REQ.ICHAE_NO,
                REQ.ICHAE_CD,
                REQ.REQ_DAY,
                REQ.BIRTH,
                REQ.BANK_FILIN_BRKDN,
                CC.CC_RESULT_KEY,
                NVL((SELECT GUBUN FROM LF_DMUSER.TB_CARD_BILL_GUBUN WHERE PROD_CD = REQ.PROD_CD AND REQ.REQ_PAY_NO BETWEEN STT_PAY_NO AND END_PAY_NO),'000') AS BILL_GUBUN,
                CC.FRANCHISEE_NO,
                REQ.EXPIRE_DATE,
                'CC' AS NAUTH_BIT
            FROM TB_MEMBER_REQ_NAUTH_CNCL CC INNER JOIN
                TB_MEMBER_WDRW_REQ REQ ON CC.ACCNT_NO = REQ.ACCNT_NO AND CC.PRE_REQ_DAY = REQ.REQ_DAY AND CC.RESULT_KEY = REQ.RESULT_KEY
            WHERE 1=1
                AND CC.REQ_DAY = #{req_day}
                AND REQ.PAY_MTHD = '06'
                AND CC.DEL_FG = 'N'
                AND REQ.AUTH_YN = 'N'

            UNION ALL

            SELECT
                CC.ACCNT_NO,
                REQ.PROD_CD,
                REQ.REQ_PAY_NO,
                REQ.PAY_AMT,
                REQ.ICHAE_NO,
                REQ.ICHAE_CD,
                REQ.REQ_DAY,
                REQ.BIRTH,
                REQ.BANK_FILIN_BRKDN,
                CC.CC_RESULT_KEY,
                NVL((SELECT GUBUN FROM LF_DMUSER.TB_CARD_BILL_GUBUN WHERE PROD_CD = REQ.PROD_CD AND REQ.REQ_PAY_NO BETWEEN STT_PAY_NO AND END_PAY_NO),'000') AS BILL_GUBUN,
                CC.FRANCHISEE_NO,
                REQ.EXPIRE_DATE,
                'CC' AS NAUTH_BIT
            FROM TB_MEMBER_REQ_NAUTH_CNCL CC INNER JOIN
                TB_MEMBER_WDRW_REQ_2021 REQ ON CC.ACCNT_NO = REQ.ACCNT_NO AND CC.PRE_REQ_DAY = REQ.REQ_DAY AND CC.RESULT_KEY = REQ.RESULT_KEY
            WHERE 1=1
                AND CC.REQ_DAY = #{req_day}
                AND REQ.PAY_MTHD = '06'
                AND CC.DEL_FG = 'N'
                AND REQ.AUTH_YN = 'N'
        ) MAIN_TBL
        ORDER BY RESULT_KEY ASC


        <!--
         SELECT /* ReqCustMap.getWdrwNauthReqFranCnt */
            FRANCHISEE_NO,
            NVL(SUM(BASI_ICNT), '0000000') AS BASI_ICNT,
            NVL(SUM(BASI_PURE_PAY_AMT_SUM), '000000000000') AS BASI_PURE_PAY_AMT_SUM,
            '000000000000' AS BASI_VOLUNT_AMT_SUM,
            NVL(SUM(BASI_PAY_AMT_SUM), '000000000000') AS BASI_PAY_AMT_SUM,
            NVL(SUM(CNCL_ICNT), '0000000') AS CNCL_ICNT,
            NVL(SUM(CNCL_PURE_PAY_AMT_SUM), '000000000000') AS CNCL_PURE_PAY_AMT_SUM,
            '000000000000' AS CNCL_VOLUNT_AMT_SUM,
            NVL(SUM(CNCL_PAY_AMT_SUM), '000000000000') AS CNCL_PAY_AMT_SUM,
            '0000000' AS PLAN_ICNT,
            '000000000000' AS PLAN_PAY_SUM,
            '0000000' AS PLAN_CNCL_ICNT,
            '000000000000' AS PLAN_CNCL_SUM
        FROM
        (
            SELECT
                REQ.FRANCHISEE_NO,
                COUNT(*) AS BASI_ICNT,
                SUM(PAY_AMT) AS BASI_PURE_PAY_AMT_SUM,
                NULL AS BASI_VOLUNT_AMT_SUM,
                SUM(PAY_AMT) AS BASI_PAY_AMT_SUM,
                NULL AS CNCL_ICNT,
                NULL AS CNCL_PURE_PAY_AMT_SUM,
                NULL AS CNCL_VOLUNT_AMT_SUM,
                NULL AS CNCL_PAY_AMT_SUM,
                NULL AS PLAN_ICNT,
                NULL AS PLAN_PAY_SUM,
                NULL AS PLAN_CNCL_ICNT,
                NULL AS PLAN_CNCL_SUM
            FROM LF_DMUSER.TB_MEMBER_WDRW_REQ REQ
            WHERE 1=1
            AND DEL_FG = 'N'
            AND RESULT_KIND = '01'
            AND PAY_MTHD = '06'
            AND AUTH_YN = 'N'
            AND REQ_DAY = #{req_day}
            GROUP BY REQ.FRANCHISEE_NO

            UNION ALL

            SELECT
                REQ.FRANCHISEE_NO,
                NULL AS BASI_ICNT,
                NULL AS BASI_PURE_PAY_AMT_SUM,
                NULL AS BASI_VOLUNT_AMT_SUM,
                NULL AS BASI_PAY_AMT_SUM,
                COUNT(*) AS CNCL_ICNT,
                SUM(REQ.PAY_AMT) AS CNCL_PURE_PAY_AMT_SUM,
                NULL AS CNCL_VOLUNT_AMT_SUM,
                SUM(REQ.PAY_AMT) AS CNCL_PAY_AMT_SUM,
                NULL AS PLAN_ICNT,
                NULL AS PLAN_PAY_SUM,
                NULL AS PLAN_CNCL_ICNT,
                NULL AS PLAN_CNCL_SUM
            FROM LF_DMUSER.TB_MEMBER_REQ_NAUTH_CNCL MRNC INNER JOIN
                LF_DMUSER.TB_MEMBER_WDRW_REQ REQ ON MRNC.PAY_MTHD = REQ.PAY_MTHD AND MRNC.ACCNT_NO = REQ.ACCNT_NO AND MRNC.REQ_PAY_NO = REQ.REQ_PAY_NO
            WHERE 1=1
            AND REQ.DEL_FG IN ('C', 'R')
            AND MRNC.DEL_FG = 'N'
            GROUP BY REQ.FRANCHISEE_NO
      ) A
      WHERE 1=1
      GROUP BY FRANCHISEE_NO
      ORDER BY FRANCHISEE_NO ASC
       -->
    </select>

    <!--* 카드 / CMS 결과데이터 인서트 (실시간, 파일배치)-->
    <insert id="ReqCustMap.insertReqWdrwResult"  parameterType="map">
        BEGIN
            INSERT
                /* ReqCustMap.insertReqWdrwResult */
            INTO TB_MEMBER_WDRW_RESULT
            (
                ACCNT_NO,
                REQ_DAY,
                REQ_NO,
                PAY_KIND,
                RESULT_KEY,
                RESULT_CD,
                RESULT_MSG,
                PAY_MTHD,
                AUTH_DT,
                AUTH_CD,
                ETC,
                TID,
                ICHAE_CD,
                REG_DM,
                REG_MAN
            )
            VALUES
            (
                #{accnt_no},
                <if test="pay_kind == '01'">
                    #{req_day},
                </if>
                <if test="pay_kind != '01'">
                    TO_CHAR(SYSDATE,'YYYYMMDD'),
                </if>
                #{pay_no},
                #{pay_kind},
                #{result_key},
                #{result_cd},
                #{result_msg},
                #{pay_mthd},
                #{auth_dt},
                #{auth_cd},
                #{etc},
                #{result_key},
                #{ichae_cd},
                SYSDATE,
                #{emple_no}
            );

            <if test="pay_kind == '02'">
                UPDATE TB_MEMBER_WDRW_REQ
                SET RESULT_KEY = #{result_key}
                    , REQ_DAY = TO_CHAR(SYSDATE,'YYYYMMDD')
                    , UPD_DM = SYSDATE
                    , UPD_MAN = #{emple_no}
                    , RESULT_KIND = #{pay_kind}
                    <if test="result_cd == '3001' or result_cd == '00'  ">
                        , DEL_FG = 'C'
                    </if>
                    <if test="result_cd != '3001' and result_cd != 'JL32' and result_cd != '00'  ">
                        , DEL_FG = 'F'
                    </if>
                WHERE 1=1
                    AND PAY_MTHD = '06'
                    AND DEL_FG = 'N'
                    AND ACCNT_NO =  #{accnt_no}
                    AND REQ_DAY = #{req_day}
                    AND REQ_PAY_NO = #{pay_no};

                 <if test="result_cd != '3001' and result_cd != '00'  ">
                     UPDATE TB_MEMBER_WDRW_REQ
                        SET DEL_FG = 'Y'
                          , UPD_DM = SYSDATE
                          , UPD_MAN = #{emple_no}
                      WHERE 1=1
                        AND ACCNT_NO = #{accnt_no}
                        AND DEL_FG = 'N';
                 </if>
            </if>
        END;

    </insert>

    <!-- ================================================================
     * 날짜 : 20190412
     * 이름 : 송준빈
     * 추가내용 : 일일청구 카드 회신 데이터 리스트 INSERT
     * 대상 테이블 : LF_DMUSER.TB_CARD_RECV_FILE_LIST
     * ================================================================
     * -->
    <insert id="ReqCustMap.insertCardRecvFileList"  parameterType="map">
        INSERT INTO /* ReqCustMap.insertCardRecvFileList */
            <choose>
                <when test="pay_mthd_auth.equalsIgnoreCase('Y') and ini_yn.equalsIgnoreCase('Y')">
                    LF_DMUSER.TB_INICARD_RECV_FILE_LIST
                </when>
                <when test="pay_mthd_auth.equalsIgnoreCase('N')">
                    LF_DMUSER.TB_CARDNAUTH_RECV_FILE_LIST
                </when>
                <otherwise>
                    LF_DMUSER.TB_CARD_RECV_FILE_LIST
                </otherwise>
            </choose>
             VALUES (#{req_month}, #{date}, #{file_name}, #{count}, #{rslt_yn})
    </insert>

    <!-- ================================================================
     * 날짜 : 20190412
     * 이름 : 송준빈
     * 추가내용 : 일일청구 카드 회신 데이터 리스트 조회
     * 대상 테이블 : LF_DMUSER.TB_CARD_RECV_FILE_LIST
     * ================================================================
     * -->
    <select id="ReqCustMap.getCardRecvFileList" parameterType="map" resultType="resultMap">
        SELECT /* ReqCustMap.getCardRecvFileList */
               REQ_MONTH
              ,REQ_DAY AS DATE1
              ,FILE_NAME
              ,COUNT
              ,RSLT_YN
              <if test="pay_mthd_auth.equalsIgnoreCase('N')">
                  ,TO_CHAR(TO_DATE(REQ_DAY, 'YYYYMMDD') - 2, 'YYYYMMDD') AS TARGET_DATE
              </if>
          FROM <choose>
                   <when test="pay_mthd_auth.equalsIgnoreCase('Y') and ini_yn.equalsIgnoreCase('Y')">
                       LF_DMUSER.TB_INICARD_RECV_FILE_LIST
                   </when>
                   <when test="pay_mthd_auth.equalsIgnoreCase('N')">
                       LF_DMUSER.TB_CARDNAUTH_RECV_FILE_LIST
                   </when>
                   <otherwise>
                       LF_DMUSER.TB_CARD_RECV_FILE_LIST
                   </otherwise>
               </choose>
         WHERE 1=1
           AND REQ_MONTH = #{req_month}
           <if test="pay_mthd_auth.equalsIgnoreCase('N')">
           OR  REQ_MONTH = TO_CHAR(ADD_MONTHS(TO_DATE(#{req_month}, 'YYYYMM'), +1), 'YYYYMM')
           </if>
    </select>

    <!-- ================================================================
     * 날짜 : 20190412
     * 이름 : 송준빈
     * 추가내용 : 이니시스카드 회신파일 존재여부 확인
     * 대상 테이블 : LF_DMUSER.TB_INICARD_RECV_FILE_LIST
     * ================================================================
     * -->
    <select id="ReqCustMap.getIniCardRecvFileConfirm" parameterType="map" resultType="resultMap">
        SELECT /* ReqCustMap.getIniCardRecvFileConfirm */
            REQ_MONTH,
            REQ_DAY AS DATE1,
            FILE_NAME,
            COUNT,
            RSLT_YN
        FROM LF_DMUSER.TB_INICARD_RECV_FILE_LIST
        WHERE 1=1
        AND FILE_NAME = #{file_name}
    </select>

    <!-- ================================================================
     * 날짜 : 20181025
     * 이름 : 송준빈
     * 추가내용 : Card File List 수신리스트 결과 반영 여부 확인
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_WDRW_RSLT
     * ================================================================
     * -->
    <select id="ReqCustMap.getWdrwResultCount" parameterType="map" resultType="int">
        SELECT
            /* ReqCustMap.getWdrwResultCount */
            COUNT(*) AS WDRW_CNT
          FROM ( SELECT ACCNT_NO   /* 회원번호                            */
                       ,REQ_DAY    /* 청구/납입 일자                      */
                       ,REQ_NO     /* 청구/납입회차                       */
                       ,PAY_KIND   /* 01:파일, 02:실시간, 03:자유,04:기타 */
                       ,RESULT_KEY /* 결과키(TID, CMS결과키)              */
                       ,RESULT_CD  /* 결과코드                            */
                       ,RESULT_MSG /* 결과메세지                          */
                       ,PAY_MTHD   /* 납입방법(CMS/카드)                  */
                       ,AUTH_DT    /* 승인일자                            */
                       ,AUTH_CD    /* 승인번호                            */
                       ,ICHAE_CD   /* 결과 이체 CD (카드사, 은행)         */
                       ,ETC        /* 결과이슈사항(통장기재내역등)        */
                       ,AUTH_YN    /* 승인여부(Y:유승인,N:무승인)         */
                       ,INI_YN
                   FROM LF_DMUSER.TB_MEMBER_WDRW_RESULT
                  WHERE 1=1
                    AND PAY_MTHD = #{pay_mthd}
                    AND PAY_KIND = #{pay_kind}
                    AND AUTH_YN  = #{auth_yn}
                    AND REQ_DAY  = #{req_day}
                    <choose>
                        <when test="ini_yn != null and ini_yn != '' and ini_yn.equalsIgnoreCase('Y')">
                            AND INI_YN = 'Y'
                        </when>
                        <otherwise>
                            AND NVL(INI_YN, 'N') != 'Y'
                        </otherwise>
                    </choose>
               ) A
         WHERE 1=1
    </select>

    <!-- ================================================================
     * 날짜 : 20190412
     * 이름 : 송준빈
     * 추가내용 :  일일청구 카드 회신 데이터 리스트 UPDATE
     * 대상 테이블 : LF_DMUSER.TB_CARD_RECV_FILE_LIST
     * ================================================================
     * -->
    <update id="ReqCustMap.updateCardRecvFileList" parameterType="map" >
        UPDATE /* ReqCustMap.updateCardRecvFileList */
            <choose>
                <when test="pay_mthd_auth.equalsIgnoreCase('Y') and ini_yn.equalsIgnoreCase('Y')">
                    LF_DMUSER.TB_INICARD_RECV_FILE_LIST
                </when>
                <when test="pay_mthd_auth.equalsIgnoreCase('N')">
                    LF_DMUSER.TB_CARDNAUTH_RECV_FILE_LIST
                </when>
                <otherwise>
                    LF_DMUSER.TB_CARD_RECV_FILE_LIST
                </otherwise>
            </choose>
           SET RSLT_YN = '반영완료'
         WHERE 1=1
           AND REQ_DAY = #{req_day}
    </update>

    <!-- ================================================================
     * 날짜 : 20181018
     * 이름 : 송준빈
     * 추가내용 : 출금이체의뢰내역(청구) 조회건수
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_WDRW_REQ
     * ================================================================
     * -->
    <select id="ReqCustMap.getWdrwReqListCount" parameterType="map" resultType="int">
        SELECT
            COUNT(*) AS ICNT
        FROM
        (
            SELECT /* ReqCustMap.getWdrwReqListCount */
               ROW_NUMBER() OVER(ORDER BY ${orderBy} ${orderDirection}) PAGE_INDX, /* PAGE INDX               */
               A.*
            FROM ( SELECT ACCNT_NO          /* 회원번호                                                                 */
                       ,PROD_CD           /* 상품코드                                                                 */
                       ,PAY_MTHD          /* 산출구분(CMS:04, CARD:06)                                                */
                       ,REQ_BIT           /* 산출상세구분(01:정기, 02:미출금, 03:임의 ,04:연체, 05:임시, 06:고객센터) */
                       ,STAT              /* 상태                                                                     */
                       ,KSTBIT            /* 회원상태(01:대기, 02:가입, 03:해약, 04:행사, 09:만기)                    */
                       ,TRUE_CNT          /* 실납입회수                                                               */
                       ,REQ_PAY_NO        /* 산출청구회차                                                             */
                       ,PAY_BIT           /* 산출비트                                                                 */
                       ,ICHAE_NO          /* 이체번호(계좌 혹은 BID)                                                  */
                       ,ICHAE_CD          /* 이체코드(은행, 카드사)                                                   */
                       ,REQ_DAY           /* 청구일                                                                   */
                       ,BANK_FILIN_BRKDN  /* 통장기재내역                                                             */
                       ,PAY_AMT           /* 청구금액                                                                 */
                       ,REG_MAN           /* 등록자                                                                   */
                       ,ICHAE_DT          /* 정기건 및 연체건 이체일                                                  */
                       ,REQ_PAY_GUNSU     /* 산출청구건수                                                             */
                       ,UPD_DM            /* 수정일                                                                   */
                       ,UPD_MAN           /* 수정자                                                                   */
                       ,DEL_FG            /* 청구여부(N:청구전 Y:삭제 R:청구 C:완료(변환/입금) F:완료(실패))          */
                       ,BIRTH             /* 생년월일(CMS용)                                                          */
                       ,BILL_GUBUN        /* 36회 카드사 전달 구분값                                                  */
                       ,RESULT_KEY        /* 카드/CMS결과KEY(실시간포함)                                              */
                       ,RESULT_KIND       /* 01:파일, 02:실시간, 03:자유,04:기타                                      */
                       ,MONTH_CNT         /* 당월회차                                                                 */
                       ,'REQ' AS REQ_CNCL_BIT
                   <choose>
                        <when test="search_yy != null and search_yy.equalsIgnoreCase('2')">
                            ,TO_CHAR(REG_DM, 'YYYYMMDD') AS REG_DM           /* 등록일                                     */
                            FROM TB_MEMBER_WDRW_REQ_2021
                        </when>
                        <when test="search_yy != null and search_yy.equalsIgnoreCase('3')">
                            ,TO_CHAR(REQ_REG_DM, 'YYYYMMDD') AS REG_DM           /* 등록일                                     */
                            FROM VIEW_MEMBER_WDRW_REQ
                        </when>
                        <otherwise>
                            ,TO_CHAR(REG_DM, 'YYYYMMDD') AS REG_DM           /* 등록일                                     */
                            FROM TB_MEMBER_WDRW_REQ
                        </otherwise>
                       </choose>
                  WHERE 1=1
                    AND DEL_FG != 'Y'
                  <if test="req_day_stt != null and req_day_stt != '' and req_day_end != null and req_day_end != ''">
                      AND REQ_DAY BETWEEN #{req_day_stt} AND #{req_day_end}
                  </if>
                  <if test="pay_mthd != null and pay_mthd != ''">
                      AND PAY_MTHD = #{pay_mthd}
                  </if>
                  <if test="auth_yn != null and auth_yn != ''">
                      AND AUTH_YN = #{auth_yn}
                  </if>
                  <if test="req_bit != null and req_bit != ''">
                      AND REQ_BIT = #{req_bit}
                  </if>
                  <if test="result_kind != null and result_kind != ''">
                      AND RESULT_KIND = #{result_kind}
                  </if>
                  <if test="del_fg != null and del_fg != '' and del_fg.equalsIgnoreCase('NR')">
                      AND DEL_FG IN ('N', 'R')
                  </if>
                  <if test="del_fg != null and del_fg != '' and !del_fg.equalsIgnoreCase('NR')">
                      AND DEL_FG = #{del_fg}
                  </if>
                  <if test="accnt_no != null and accnt_no != ''">
                      AND ACCNT_NO = #{accnt_no}
                  </if>

                  UNION ALL

                  SELECT
                        CNCL.ACCNT_NO          /* 회원번호                                                                */
                       ,REQ.PROD_CD           /* 상품코드                                                                 */
                       ,CNCL.PAY_MTHD          /* 산출구분(CMS:04, CARD:06)                                               */
                       ,REQ.REQ_BIT           /* 산출상세구분(01:정기, 02:미출금, 03:임의 ,04:연체, 05:임시, 06:고객센터) */
                       ,REQ.STAT              /* 상태                                                                     */
                       ,REQ.KSTBIT            /* 회원상태(01:대기, 02:가입, 03:해약, 04:행사, 09:만기)                    */
                       ,REQ.TRUE_CNT          /* 실납입회수                                                               */
                       ,CNCL.REQ_PAY_NO        /* 산출청구회차                                                            */
                       ,REQ.PAY_BIT           /* 산출비트                                                                 */
                       ,REQ.ICHAE_NO          /* 이체번호(계좌 혹은 BID)                                                  */
                       ,REQ.ICHAE_CD          /* 이체코드(은행, 카드사)                                                   */
                       ,CNCL.REQ_DAY           /* 청구일                                                                  */
                       ,REQ.BANK_FILIN_BRKDN  /* 통장기재내역                                                             */
                       ,CNCL.PAY_AMT           /* 청구금액                                                                */
                       ,CNCL.REG_MAN           /* 등록자                                                                  */
                       ,REQ.ICHAE_DT          /* 정기건 및 연체건 이체일                                                  */
                       ,REQ.REQ_PAY_GUNSU     /* 산출청구건수                                                             */
                       ,REQ.UPD_DM            /* 수정일                                                                   */
                       ,REQ.UPD_MAN           /* 수정자                                                                   */
                       ,CNCL.DEL_FG            /* 청구여부(N:청구전 Y:삭제 R:청구 C:완료(변환/입금) F:완료(실패))         */
                       ,REQ.BIRTH             /* 생년월일(CMS용)                                                          */
                       ,REQ.BILL_GUBUN        /* 36회 카드사 전달 구분값                                                  */
                       ,CNCL.RESULT_KEY        /* 카드/CMS결과KEY(실시간포함)                                             */
                       ,REQ.RESULT_KIND       /* 01:파일, 02:실시간, 03:자유,04:기타                                      */
                       ,REQ.MONTH_CNT         /* 당월회차                                                                 */
                       ,'CNCL' AS REQ_CNCL_BIT
                       ,TO_CHAR(CNCL.REG_DM, 'YYYYMMDD') AS REG_DM           /* 등록일                                    */
                   FROM LF_DMUSER.TB_MEMBER_REQ_NAUTH_CNCL CNCL INNER JOIN
                       <choose>
                           <when test="search_yy != null and search_yy.equalsIgnoreCase('2')">
                               LF_DMUSER.TB_MEMBER_WDRW_REQ_2021 REQ ON CNCL.ACCNT_NO = REQ.ACCNT_NO AND CNCL.RESULT_KEY = REQ.RESULT_KEY AND CNCL.REQ_PAY_NO = REQ.REQ_PAY_NO
                           </when>
                           <when test="search_yy != null and search_yy.equalsIgnoreCase('3')">
                               LF_DMUSER.VIEW_MEMBER_WDRW_REQ REQ ON CNCL.ACCNT_NO = REQ.ACCNT_NO AND CNCL.RESULT_KEY = REQ.RESULT_KEY AND CNCL.REQ_PAY_NO = REQ.REQ_PAY_NO
                           </when>
                           <otherwise>
                               LF_DMUSER.TB_MEMBER_WDRW_REQ REQ ON CNCL.ACCNT_NO = REQ.ACCNT_NO AND CNCL.RESULT_KEY = REQ.RESULT_KEY AND CNCL.REQ_PAY_NO = REQ.REQ_PAY_NO
                           </otherwise>
                          </choose>
                   WHERE 1=1
                   AND CNCL.DEL_FG != 'Y'
                   <if test="req_day_stt != null and req_day_stt != '' and req_day_end != null and req_day_end != ''">
                      AND CNCL.REQ_DAY BETWEEN #{req_day_stt} AND #{req_day_end}
                   </if>
                   <if test="pay_mthd != null and pay_mthd != ''">
                      AND CNCL.PAY_MTHD = #{pay_mthd}
                   </if>
                   <if test="req_bit != null and req_bit != ''">
                      AND REQ.REQ_BIT = #{req_bit}
                   </if>
                   <if test="result_kind != null and result_kind != ''">
                      AND REQ.RESULT_KIND = #{result_kind}
                   </if>
                   <if test="del_fg != null and del_fg != '' and del_fg.equalsIgnoreCase('NR')">
                      AND CNCL.DEL_FG IN ('N', 'R')
                   </if>
                   <if test="del_fg != null and del_fg != '' and !del_fg.equalsIgnoreCase('NR')">
                      AND CNCL.DEL_FG = #{del_fg}
                   </if>
                   <if test="accnt_no != null and accnt_no != ''">
                      AND CNCL.ACCNT_NO = #{accnt_no}
                   </if>
               ) A
               WHERE 1=1
               <if test="req_cncl_bit != null and req_cncl_bit != ''">
                     AND A.REQ_CNCL_BIT = #{req_cncl_bit}
                </if>
         ) A
         WHERE 1=1
    </select>

    <!-- ================================================================
     * 날짜 : 20181018
     * 이름 : 송준빈
     * 추가내용 : 출금이체의뢰내역(청구) 조회리스트
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_WDRW_REQ
     * ================================================================
     * -->
    <select id="ReqCustMap.getPayWdrwReqList" parameterType="map" resultType="resultMap">
        SELECT
            *
        FROM
        (
            SELECT /* ReqCustMap.getPayWdrwReqList */
               ROW_NUMBER() OVER(ORDER BY ${orderBy} ${orderDirection}) PAGE_INDX, /* PAGE INDX               */
               A.*
            FROM ( SELECT ACCNT_NO          /* 회원번호                                                                 */
                       ,PROD_CD           /* 상품코드                                                                 */
                       ,PAY_MTHD          /* 산출구분(CMS:04, CARD:06)                                                */
                       ,REQ_BIT           /* 산출상세구분(01:정기, 02:미출금, 03:임의 ,04:연체, 05:임시, 06:고객센터) */
                       ,STAT              /* 상태                                                                     */
                       ,KSTBIT            /* 회원상태(01:대기, 02:가입, 03:해약, 04:행사, 09:만기)                    */
                       ,TRUE_CNT          /* 실납입회수                                                               */
                       ,REQ_PAY_NO        /* 산출청구회차                                                             */
                       ,PAY_BIT           /* 산출비트                                                                 */
                       ,ICHAE_NO          /* 이체번호(계좌 혹은 BID)                                                  */
                       ,ICHAE_CD          /* 이체코드(은행, 카드사)                                                   */
                       ,REQ_DAY           /* 청구일                                                                   */
                       ,BANK_FILIN_BRKDN  /* 통장기재내역                                                             */
                       ,PAY_AMT           /* 청구금액                                                                 */
                       ,REG_MAN           /* 등록자                                                                   */
                       ,ICHAE_DT          /* 정기건 및 연체건 이체일                                                  */
                       ,REQ_PAY_GUNSU     /* 산출청구건수                                                             */
                       ,UPD_DM            /* 수정일                                                                   */
                       ,UPD_MAN           /* 수정자                                                                   */
                       ,DEL_FG            /* 청구여부(N:청구전 Y:삭제 R:청구 C:완료(변환/입금) F:완료(실패))          */
                       ,BIRTH             /* 생년월일(CMS용)                                                          */
                       ,BILL_GUBUN        /* 36회 카드사 전달 구분값                                                  */
                       ,RESULT_KEY        /* 카드/CMS결과KEY(실시간포함)                                              */
                       ,RESULT_KIND       /* 01:파일, 02:실시간, 03:자유,04:기타                                      */
                       ,MONTH_CNT         /* 당월회차                                                                 */
                       ,'REQ' AS REQ_CNCL_BIT
                   <choose>
                        <when test="search_yy != null and search_yy.equalsIgnoreCase('2')">
                            ,TO_CHAR(REG_DM, 'YYYYMMDD') AS REG_DM           /* 등록일                                     */
                            FROM LF_DMUSER.TB_MEMBER_WDRW_REQ_2021
                        </when>
                        <when test="search_yy != null and search_yy.equalsIgnoreCase('3')">
                            ,TO_CHAR(REQ_REG_DM, 'YYYYMMDD') AS REG_DM           /* 등록일                                     */
                            FROM LF_DMUSER.VIEW_MEMBER_WDRW_REQ
                        </when>
                        <otherwise>
                            ,TO_CHAR(REG_DM, 'YYYYMMDD') AS REG_DM           /* 등록일                                     */
                            FROM LF_DMUSER.TB_MEMBER_WDRW_REQ
                        </otherwise>
                       </choose>
                  WHERE 1=1
                    AND DEL_FG != 'Y'
                  <if test="req_day_stt != null and req_day_stt != '' and req_day_end != null and req_day_end != ''">
                      AND REQ_DAY BETWEEN #{req_day_stt} AND #{req_day_end}
                  </if>
                  <if test="pay_mthd != null and pay_mthd != ''">
                      AND PAY_MTHD = #{pay_mthd}
                  </if>
                  <if test="auth_yn != null and auth_yn != ''">
                      AND AUTH_YN = #{auth_yn}
                  </if>
                  <if test="req_bit != null and req_bit != ''">
                      AND REQ_BIT = #{req_bit}
                  </if>
                  <if test="result_kind != null and result_kind != ''">
                      AND RESULT_KIND = #{result_kind}
                  </if>
                  <if test="del_fg != null and del_fg != '' and del_fg.equalsIgnoreCase('NR')">
                      AND DEL_FG IN ('N', 'R')
                  </if>
                  <if test="del_fg != null and del_fg != '' and !del_fg.equalsIgnoreCase('NR')">
                      AND DEL_FG = #{del_fg}
                  </if>
                  <if test="accnt_no != null and accnt_no != ''">
                      AND ACCNT_NO = #{accnt_no}
                  </if>

                  UNION ALL

                  SELECT
                        CNCL.ACCNT_NO          /* 회원번호                                                                */
                       ,REQ.PROD_CD           /* 상품코드                                                                 */
                       ,CNCL.PAY_MTHD          /* 산출구분(CMS:04, CARD:06)                                               */
                       ,REQ.REQ_BIT           /* 산출상세구분(01:정기, 02:미출금, 03:임의 ,04:연체, 05:임시, 06:고객센터) */
                       ,REQ.STAT              /* 상태                                                                     */
                       ,REQ.KSTBIT            /* 회원상태(01:대기, 02:가입, 03:해약, 04:행사, 09:만기)                    */
                       ,REQ.TRUE_CNT          /* 실납입회수                                                               */
                       ,CNCL.REQ_PAY_NO        /* 산출청구회차                                                            */
                       ,REQ.PAY_BIT           /* 산출비트                                                                 */
                       ,REQ.ICHAE_NO          /* 이체번호(계좌 혹은 BID)                                                  */
                       ,REQ.ICHAE_CD          /* 이체코드(은행, 카드사)                                                   */
                       ,CNCL.REQ_DAY           /* 청구일                                                                  */
                       ,REQ.BANK_FILIN_BRKDN  /* 통장기재내역                                                             */
                       ,CNCL.PAY_AMT           /* 청구금액                                                                */
                       ,CNCL.REG_MAN           /* 등록자                                                                  */
                       ,REQ.ICHAE_DT          /* 정기건 및 연체건 이체일                                                  */
                       ,REQ.REQ_PAY_GUNSU     /* 산출청구건수                                                             */
                       ,REQ.UPD_DM            /* 수정일                                                                   */
                       ,REQ.UPD_MAN           /* 수정자                                                                   */
                       ,CNCL.DEL_FG            /* 청구여부(N:청구전 Y:삭제 R:청구 C:완료(변환/입금) F:완료(실패))         */
                       ,REQ.BIRTH             /* 생년월일(CMS용)                                                          */
                       ,REQ.BILL_GUBUN        /* 36회 카드사 전달 구분값                                                  */
                       ,CNCL.RESULT_KEY        /* 카드/CMS결과KEY(실시간포함)                                             */
                       ,REQ.RESULT_KIND       /* 01:파일, 02:실시간, 03:자유,04:기타                                      */
                       ,REQ.MONTH_CNT         /* 당월회차                                                                 */
                       ,'CNCL' AS REQ_CNCL_BIT
                       ,TO_CHAR(CNCL.REG_DM, 'YYYYMMDD') AS REG_DM           /* 등록일                                    */
                   FROM LF_DMUSER.TB_MEMBER_REQ_NAUTH_CNCL CNCL INNER JOIN
                       <choose>
                            <when test="search_yy != null and search_yy.equalsIgnoreCase('2')">
                                LF_DMUSER.TB_MEMBER_WDRW_REQ_2021 REQ ON CNCL.ACCNT_NO = REQ.ACCNT_NO AND CNCL.RESULT_KEY = REQ.RESULT_KEY AND CNCL.REQ_PAY_NO = REQ.REQ_PAY_NO
                            </when>
                            <when test="search_yy != null and search_yy.equalsIgnoreCase('3')">
                                LF_DMUSER.VIEW_MEMBER_WDRW_REQ REQ ON CNCL.ACCNT_NO = REQ.ACCNT_NO AND CNCL.RESULT_KEY = REQ.RESULT_KEY AND CNCL.REQ_PAY_NO = REQ.REQ_PAY_NO
                            </when>
                            <otherwise>
                                LF_DMUSER.TB_MEMBER_WDRW_REQ REQ ON CNCL.ACCNT_NO = REQ.ACCNT_NO AND CNCL.RESULT_KEY = REQ.RESULT_KEY AND CNCL.REQ_PAY_NO = REQ.REQ_PAY_NO
                            </otherwise>
                          </choose>
                   WHERE 1=1
                   AND CNCL.DEL_FG != 'Y'
                   <if test="req_day_stt != null and req_day_stt != '' and req_day_end != null and req_day_end != ''">
                      AND CNCL.REQ_DAY BETWEEN #{req_day_stt} AND #{req_day_end}
                   </if>
                   <if test="pay_mthd != null and pay_mthd != ''">
                      AND CNCL.PAY_MTHD = #{pay_mthd}
                   </if>
                   <if test="req_bit != null and req_bit != ''">
                      AND REQ.REQ_BIT = #{req_bit}
                   </if>
                   <if test="result_kind != null and result_kind != ''">
                      AND REQ.RESULT_KIND = #{result_kind}
                   </if>
                   <if test="del_fg != null and del_fg != '' and del_fg.equalsIgnoreCase('NR')">
                      AND CNCL.DEL_FG IN ('N', 'R')
                   </if>
                   <if test="del_fg != null and del_fg != '' and !del_fg.equalsIgnoreCase('NR')">
                      AND CNCL.DEL_FG = #{del_fg}
                   </if>
                   <if test="accnt_no != null and accnt_no != ''">
                      AND CNCL.ACCNT_NO = #{accnt_no}
                   </if>
               ) A
               WHERE 1=1
               <if test="req_cncl_bit != null and req_cncl_bit != ''">
                     AND A.REQ_CNCL_BIT = #{req_cncl_bit}
                </if>
         ) A
         WHERE 1=1
         <if test="startLine != null and startLine != '' and endLine != null and endLine != ''">
             AND PAGE_INDX <![CDATA[>=]]> #{startLine}
             AND PAGE_INDX <![CDATA[<]]> #{endLine}
         </if>
    </select>

    <!-- ================================================================
     * 날짜 : 20181026
     * 이름 : 송준빈
     * 추가내용 : 출금이체의뢰내역(청구) Card 총 합계
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_WDRW_REQ
     * ================================================================
     * -->
    <select id="ReqCustMap.getCalcAndChargeCardSummary" parameterType="map" resultType="resultMap">
         SELECT /* ReqCustMap.getCalcAndChargeCardSummary */
                PAY_MTHD                                                                                                                              /* 납입방법                  */
               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG IN ('N','R') AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) AS NR_JUNGI_CNT        /* 정기건 총건수 (청구전/후) */
               ,SUM(CASE WHEN REQ_BIT = '04'     AND DEL_FG IN ('N','R') AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) AS NR_YENCHE_CNT       /* 연체건 총건수 (청구전/후) */
               ,SUM(CASE WHEN REQ_BIT = '05'     AND DEL_FG IN ('N','R') AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) AS NR_IMSI_CNT         /* 임시건 총건수 (청구전/후) */
               ,SUM(CASE WHEN REQ_BIT = '03'     AND DEL_FG IN ('N','R') AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) AS NR_IM_CNT           /* 임의건 총건수 (청구전/후) */
               ,SUM(CASE WHEN RESULT_KIND = '02' AND DEL_FG IN ('N','R') THEN 1 ELSE 0 END) AS NR_REAL_CNT                                            /* 실시간 총건수 (청구전/후) */
               ,SUM(CASE WHEN RESULT_KIND = '03' AND DEL_FG IN ('N','R') THEN 1 ELSE 0 END) AS NR_FREE_CNT                                            /*  자유  총건수 (청구전/후) */
               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG IN ('N','R') AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '04'     AND DEL_FG IN ('N','R') AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '05'     AND DEL_FG IN ('N','R') AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '03'     AND DEL_FG IN ('N','R') AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) +
                SUM(CASE WHEN RESULT_KIND = '02' AND DEL_FG IN ('N','R') THEN 1 ELSE 0 END) +
                SUM(CASE WHEN RESULT_KIND = '03' AND DEL_FG IN ('N','R') THEN 1 ELSE 0 END) AS NR_CNT_SUMM                                            /* 청구전/후 총건수          */

               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG IN ('N','R') AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) AS NR_JUNGI_AMT  /* 정기건 총액 (청구전/후)   */
               ,SUM(CASE WHEN REQ_BIT = '04'     AND DEL_FG IN ('N','R') AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) AS NR_YENCHE_AMT /* 연체건 총액 (청구전/후)   */
               ,SUM(CASE WHEN REQ_BIT = '05'     AND DEL_FG IN ('N','R') AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) AS NR_IMSI_AMT   /* 임시건 총액 (청구전/후)   */
               ,SUM(CASE WHEN REQ_BIT = '03'     AND DEL_FG IN ('N','R') AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) AS NR_IM_AMT     /* 임의건 총액 (청구전/후)   */
               ,SUM(CASE WHEN RESULT_KIND = '02' AND DEL_FG IN ('N','R') THEN PAY_AMT ELSE 0 END) AS NR_REAL_AMT                                      /* 실시간 총액 (청구전/후)   */
               ,SUM(CASE WHEN RESULT_KIND = '03' AND DEL_FG IN ('N','R') THEN PAY_AMT ELSE 0 END) AS NR_FREE_AMT                                      /*  자유  총액 (청구전/후)   */
               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG IN ('N','R') AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '04'     AND DEL_FG IN ('N','R') AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '05'     AND DEL_FG IN ('N','R') AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '03'     AND DEL_FG IN ('N','R') AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) +
                SUM(CASE WHEN RESULT_KIND = '02' AND DEL_FG IN ('N','R') THEN PAY_AMT ELSE 0 END) +
                SUM(CASE WHEN RESULT_KIND = '03' AND DEL_FG IN ('N','R') THEN PAY_AMT ELSE 0 END) AS NR_AMT_SUMM                                      /* 청구전/후 금액 총합       */

               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG = 'C' AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) AS C_JUNGI_CNT                /* 정기건 총건수 (입금완료)  */
               ,SUM(CASE WHEN REQ_BIT = '04'     AND DEL_FG = 'C' AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) AS C_YENCHE_CNT               /* 연체건 총건수 (입금완료)  */
               ,SUM(CASE WHEN REQ_BIT = '05'     AND DEL_FG = 'C' AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) AS C_IMSI_CNT                 /* 임시건 총건수 (입금완료)  */
               ,SUM(CASE WHEN REQ_BIT = '03'     AND DEL_FG = 'C' AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) AS C_IM_CNT                   /* 임의건 총건수 (입금완료)  */
               ,SUM(CASE WHEN RESULT_KIND = '02' AND DEL_FG = 'C' THEN 1 ELSE 0 END) AS C_REAL_CNT                                                    /* 실시간 총건수 (입금완료)  */
               ,SUM(CASE WHEN RESULT_KIND = '03' AND DEL_FG = 'C' THEN 1 ELSE 0 END) AS C_FREE_CNT                                                    /*  자유  총건수 (입금완료)  */
               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG = 'C' AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '04'     AND DEL_FG = 'C' AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '05'     AND DEL_FG = 'C' AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '03'     AND DEL_FG = 'C' AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) +
                SUM(CASE WHEN RESULT_KIND = '02' AND DEL_FG = 'C' THEN 1 ELSE 0 END) +
                SUM(CASE WHEN RESULT_KIND = '03' AND DEL_FG = 'C' THEN 1 ELSE 0 END) AS C_CNT_SUMM                                                    /* 성공 총건수               */

               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG = 'C' AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) AS C_JUNGI_AMT          /* 정기건 총액 (입금완료)    */
               ,SUM(CASE WHEN REQ_BIT = '04'     AND DEL_FG = 'C' AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) AS C_YENCHE_AMT         /* 연체건 총액 (입금완료)    */
               ,SUM(CASE WHEN REQ_BIT = '05'     AND DEL_FG = 'C' AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) AS C_IMSI_AMT           /* 임시건 총액 (입금완료)    */
               ,SUM(CASE WHEN REQ_BIT = '03'     AND DEL_FG = 'C' AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) AS C_IM_AMT             /* 임의건 총액 (입금완료)    */
               ,SUM(CASE WHEN RESULT_KIND = '02' AND DEL_FG = 'C' THEN PAY_AMT ELSE 0 END) AS C_REAL_AMT                                              /* 실시간 총액 (입금완료)    */
               ,SUM(CASE WHEN RESULT_KIND = '03' AND DEL_FG = 'C' THEN PAY_AMT ELSE 0 END) AS C_FREE_AMT                                              /*  자유  총액 (입금완료)    */
               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG = 'C' AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '04'     AND DEL_FG = 'C' AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '05'     AND DEL_FG = 'C' AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '03'     AND DEL_FG = 'C' AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) +
                SUM(CASE WHEN RESULT_KIND = '02' AND DEL_FG = 'C' THEN PAY_AMT ELSE 0 END) +
                SUM(CASE WHEN RESULT_KIND = '03' AND DEL_FG = 'C' THEN PAY_AMT ELSE 0 END) AS C_AMT_SUMM                                              /* 성공 금액 총합            */

               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG = 'F' AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) AS F_JUNGI_CNT                /* 정기건 총건수 (실패)      */
               ,SUM(CASE WHEN REQ_BIT = '04'     AND DEL_FG = 'F' AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) AS F_YENCHE_CNT               /* 연체건 총건수 (실패)      */
               ,SUM(CASE WHEN REQ_BIT = '05'     AND DEL_FG = 'F' AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) AS F_IMSI_CNT                 /* 임시건 총건수 (실패)      */
               ,SUM(CASE WHEN REQ_BIT = '03'     AND DEL_FG = 'F' AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) AS F_IM_CNT                   /* 임의건 총건수 (실패)      */
               ,SUM(CASE WHEN RESULT_KIND = '02' AND DEL_FG = 'F' THEN 1 ELSE 0 END) AS F_REAL_CNT                                                    /* 실시간 총건수 (실패)      */
               ,SUM(CASE WHEN RESULT_KIND = '03' AND DEL_FG = 'F' THEN 1 ELSE 0 END) AS F_FREE_CNT                                                    /*  자유  총건수 (실패)      */
               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG = 'F' AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '04'     AND DEL_FG = 'F' AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '05'     AND DEL_FG = 'F' AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '03'     AND DEL_FG = 'F' AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) +
                SUM(CASE WHEN RESULT_KIND = '02' AND DEL_FG = 'F' THEN 1 ELSE 0 END) +
                SUM(CASE WHEN RESULT_KIND = '03' AND DEL_FG = 'F' THEN 1 ELSE 0 END) AS F_CNT_SUMM                                                    /* 실패 총건수               */

               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG = 'F' AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) AS F_JUNGI_AMT          /* 정기건 총액 (실패)        */
               ,SUM(CASE WHEN REQ_BIT = '04'     AND DEL_FG = 'F' AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) AS F_YENCHE_AMT         /* 연체건 총액 (실패)        */
               ,SUM(CASE WHEN REQ_BIT = '05'     AND DEL_FG = 'F' AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) AS F_IMSI_AMT           /* 임시건 총액 (실패)        */
               ,SUM(CASE WHEN REQ_BIT = '03'     AND DEL_FG = 'F' AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) AS F_IM_AMT             /* 임의건 총액 (실패)        */
               ,SUM(CASE WHEN RESULT_KIND = '02' AND DEL_FG = 'F' THEN PAY_AMT ELSE 0 END) AS F_REAL_AMT                                              /* 실시간 총액 (실패)        */
               ,SUM(CASE WHEN RESULT_KIND = '03' AND DEL_FG = 'F' THEN PAY_AMT ELSE 0 END) AS F_FREE_AMT                                              /*  자유  총액 (실패)        */
               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG = 'F' AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '04'     AND DEL_FG = 'F' AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '05'     AND DEL_FG = 'F' AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '03'     AND DEL_FG = 'F' AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) +
                SUM(CASE WHEN RESULT_KIND = '02' AND DEL_FG = 'F' THEN PAY_AMT ELSE 0 END) +
                SUM(CASE WHEN RESULT_KIND = '03' AND DEL_FG = 'F' THEN PAY_AMT ELSE 0 END) AS F_AMT_SUMM                                              /* 실패 금액 총합            */

               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG = 'X' AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) AS X_JUNGI_CNT                /* 정기건 총건수 (취소)      */
               ,SUM(CASE WHEN REQ_BIT = '04'     AND DEL_FG = 'X' AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) AS X_YENCHE_CNT               /* 연체건 총건수 (취소)      */
               ,SUM(CASE WHEN REQ_BIT = '05'     AND DEL_FG = 'X' AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) AS X_IMSI_CNT                 /* 임시건 총건수 (취소)      */
               ,SUM(CASE WHEN REQ_BIT = '03'     AND DEL_FG = 'X' AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) AS X_IM_CNT                   /* 임의건 총건수 (취소)      */
               ,SUM(CASE WHEN RESULT_KIND = '02' AND DEL_FG = 'X' THEN 1 ELSE 0 END) AS X_REAL_CNT                                                    /* 실시간 총건수 (취소)      */
               ,SUM(CASE WHEN RESULT_KIND = '03' AND DEL_FG = 'X' THEN 1 ELSE 0 END) AS X_FREE_CNT                                                    /*  자유  총건수 (취소)      */
               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG = 'X' AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '04'     AND DEL_FG = 'X' AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '05'     AND DEL_FG = 'X' AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '03'     AND DEL_FG = 'X' AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) +
                SUM(CASE WHEN RESULT_KIND = '02' AND DEL_FG = 'X' THEN 1 ELSE 0 END) +
                SUM(CASE WHEN RESULT_KIND = '03' AND DEL_FG = 'X' THEN 1 ELSE 0 END) AS X_CNT_SUMM                                                    /* 취소 총건수               */

               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG = 'X' AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) AS X_JUNGI_AMT          /* 정기건 총액 (취소)        */
               ,SUM(CASE WHEN REQ_BIT = '04'     AND DEL_FG = 'X' AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) AS X_YENCHE_AMT         /* 연체건 총액 (취소)        */
               ,SUM(CASE WHEN REQ_BIT = '05'     AND DEL_FG = 'X' AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) AS X_IMSI_AMT           /* 임시건 총액 (취소)        */
               ,SUM(CASE WHEN REQ_BIT = '03'     AND DEL_FG = 'X' AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) AS X_IM_AMT             /* 임의건 총액 (취소)        */
               ,SUM(CASE WHEN RESULT_KIND = '02' AND DEL_FG = 'X' THEN PAY_AMT ELSE 0 END) AS X_REAL_AMT                                              /* 실시간 총액 (취소)        */
               ,SUM(CASE WHEN RESULT_KIND = '03' AND DEL_FG = 'X' THEN PAY_AMT ELSE 0 END) AS X_FREE_AMT                                              /*  자유  총액 (취소)        */
               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG = 'X' AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '04'     AND DEL_FG = 'X' AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '05'     AND DEL_FG = 'X' AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '03'     AND DEL_FG = 'X' AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) +
                SUM(CASE WHEN RESULT_KIND = '02' AND DEL_FG = 'X' THEN PAY_AMT ELSE 0 END) +
                SUM(CASE WHEN RESULT_KIND = '03' AND DEL_FG = 'X' THEN PAY_AMT ELSE 0 END) AS X_AMT_SUMM                                              /* 취소 금액 총합            */
           <choose>
               <when test="search_yy != null and search_yy.equalsIgnoreCase('2')">
                   FROM TB_MEMBER_WDRW_REQ_2021
               </when>
               <when test="search_yy != null and search_yy.equalsIgnoreCase('3')">
                   FROM VIEW_MEMBER_WDRW_REQ
               </when>
               <otherwise>
                   FROM TB_MEMBER_WDRW_REQ
               </otherwise>
           </choose>
          WHERE 1=1
            <!-- AND DEL_FG IN ('N', 'R', 'C', 'F')                                         /* N:청구전 Y:삭제 R:청구 C:완료(변환/입금) F:완료(실패) */ -->
            AND DEL_FG != 'Y'                                                               /* N:청구전 Y:삭제 R:청구 C:완료(변환/입금) F:완료(실패) X:입금취소 */
            AND REQ_DAY BETWEEN #{req_day_stt} AND #{req_day_end}
            AND PAY_MTHD = '06'                                                        /* 04:CMS 06:Card                                        */
            AND AUTH_YN = 'Y'
          GROUP BY PAY_MTHD
    </select>

    <!-- ================================================================
     * 날짜 : 20191223
     * 이름 : 송준빈
     * 추가내용 : 출금이체의뢰내역(청구) Card무승인 총 합계
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_WDRW_REQ
     * ================================================================
     * -->
    <select id="ReqCustMap.getCalcAndChargeCardNauthSummary" parameterType="map" resultType="resultMap">
         SELECT /* ReqCustMap.getCalcAndChargeCardSummary */
                PAY_MTHD                                                                                                                              /* 납입방법 */
               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG IN ('N','R') AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) AS NR_JUNGI_CNT        /* 정기건 총건수 (청구전/후) */
               ,NVL((SELECT COUNT(*) AS ICNT FROM LF_DMUSER.TB_MEMBER_REQ_NAUTH_CNCL MRNC WHERE 1=1
                    AND TO_CHAR(MRNC.REG_DM, 'YYYYMMDD') BETWEEN #{req_day_stt} AND #{req_day_end} AND MRNC.DEL_FG IN ('N', 'R')), 0) AS NR_CNCL_CNT  /* 취소건 총건수 (청구전/후) */
               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG IN ('N','R') AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) +
                NVL((SELECT COUNT(*) AS ICNT FROM LF_DMUSER.TB_MEMBER_REQ_NAUTH_CNCL MRNC WHERE 1=1
                    AND TO_CHAR(MRNC.REG_DM, 'YYYYMMDD') BETWEEN #{req_day_stt} AND #{req_day_end} AND MRNC.DEL_FG IN ('N', 'R')), 0) AS NR_CNT_SUMM  /* 청구전/후 총건수 */

               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG IN ('N','R') AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) AS NR_JUNGI_AMT  /* 정기건 총액 (청구전/후) */
               ,NVL((SELECT SUM(PAY_AMT) AS ICNT FROM LF_DMUSER.TB_MEMBER_REQ_NAUTH_CNCL MRNC WHERE 1=1
                    AND TO_CHAR(MRNC.REG_DM, 'YYYYMMDD') BETWEEN #{req_day_stt} AND #{req_day_end} AND MRNC.DEL_FG IN ('N', 'R')), 0) AS NR_CNCL_AMT  /* 취소건 총액 (청구전/후) */
               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG IN ('N','R') AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) +
                NVL((SELECT SUM(PAY_AMT) AS ICNT FROM LF_DMUSER.TB_MEMBER_REQ_NAUTH_CNCL MRNC WHERE 1=1
                    AND TO_CHAR(MRNC.REG_DM, 'YYYYMMDD') BETWEEN #{req_day_stt} AND #{req_day_end} AND MRNC.DEL_FG IN ('N', 'R')), 0) AS NR_AMT_SUMM  /* 청구전/후 금액 총합 */

               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG = 'C' AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) AS C_JUNGI_CNT                /* 정기건 총건수 (입금완료) */
               ,NVL((SELECT COUNT(*) AS ICNT FROM LF_DMUSER.TB_MEMBER_REQ_NAUTH_CNCL MRNC WHERE 1=1
                    AND MRNC.REQ_DAY BETWEEN #{req_day_stt} AND #{req_day_end} AND MRNC.DEL_FG = 'C'), 0) AS C_CNCL_CNT                               /* 취소건 총건수 (입금완료) */
               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG = 'C' AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) +
                NVL((SELECT COUNT(*) AS ICNT FROM LF_DMUSER.TB_MEMBER_REQ_NAUTH_CNCL MRNC WHERE 1=1
                    AND MRNC.REQ_DAY BETWEEN #{req_day_stt} AND #{req_day_end} AND MRNC.DEL_FG = 'C'), 0) AS C_CNT_SUMM                               /* 성공 총건수 (입금완료) */

               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG = 'C' AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) AS C_JUNGI_AMT          /* 정기건 총액 (입금완료) */
               ,NVL((SELECT SUM(PAY_AMT) AS ICNT FROM LF_DMUSER.TB_MEMBER_REQ_NAUTH_CNCL MRNC WHERE 1=1
                    AND MRNC.REQ_DAY BETWEEN #{req_day_stt} AND #{req_day_end} AND MRNC.DEL_FG = 'C'), 0) AS C_CNCL_AMT                               /* 취소건 총액 (입금완료) */
               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG = 'C' AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) +
                NVL((SELECT SUM(PAY_AMT) AS ICNT FROM LF_DMUSER.TB_MEMBER_REQ_NAUTH_CNCL MRNC WHERE 1=1
                    AND MRNC.REQ_DAY BETWEEN #{req_day_stt} AND #{req_day_end} AND MRNC.DEL_FG = 'C'), 0) AS C_AMT_SUMM                               /* 성공 금액 총합 */

               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG = 'F' AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) AS F_JUNGI_CNT                /* 정기건 총건수 (실패) */
               ,NVL((SELECT COUNT(*) AS ICNT FROM LF_DMUSER.TB_MEMBER_REQ_NAUTH_CNCL MRNC WHERE 1=1
                    AND MRNC.REQ_DAY BETWEEN #{req_day_stt} AND #{req_day_end} AND MRNC.DEL_FG = 'F'), 0) AS F_CNCL_CNT                               /* 취소건 총건수 (실패) */
               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG = 'F' AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) +
                NVL((SELECT COUNT(*) AS ICNT FROM LF_DMUSER.TB_MEMBER_REQ_NAUTH_CNCL MRNC WHERE 1=1
                    AND MRNC.REQ_DAY BETWEEN #{req_day_stt} AND #{req_day_end} AND MRNC.DEL_FG = 'F'), 0) AS F_CNT_SUMM                               /* 실패 총건수 */

               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG = 'F' AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) AS F_JUNGI_AMT          /* 정기건 총액 (실패) */
               ,NVL((SELECT SUM(PAY_AMT) AS ICNT FROM LF_DMUSER.TB_MEMBER_REQ_NAUTH_CNCL MRNC WHERE 1=1
                    AND MRNC.REQ_DAY BETWEEN #{req_day_stt} AND #{req_day_end} AND MRNC.DEL_FG = 'F'), 0) AS F_CNCL_AMT                               /* 취소건 총액 (실패) */
               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG = 'F' AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) +
                NVL((SELECT SUM(PAY_AMT) AS ICNT FROM LF_DMUSER.TB_MEMBER_REQ_NAUTH_CNCL MRNC WHERE 1=1
                    AND MRNC.REQ_DAY BETWEEN #{req_day_stt} AND #{req_day_end} AND MRNC.DEL_FG = 'F'), 0) AS F_AMT_SUMM                               /* 실패 금액 총합 */

               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG = 'X' AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) AS X_JUNGI_CNT                /* 정기건 총건수 (취소) */
               ,NVL((SELECT COUNT(*) AS ICNT FROM LF_DMUSER.TB_MEMBER_REQ_NAUTH_CNCL MRNC WHERE 1=1
                    AND MRNC.REQ_DAY BETWEEN #{req_day_stt} AND #{req_day_end} AND MRNC.DEL_FG = 'X'), 0) AS X_CNCL_CNT                               /* 취소건 총건수 (취소) */
               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG = 'X' AND RESULT_KIND NOT IN ('02','03') THEN 1 ELSE 0 END) +
                NVL((SELECT COUNT(*) AS ICNT FROM LF_DMUSER.TB_MEMBER_REQ_NAUTH_CNCL MRNC WHERE 1=1
                    AND MRNC.REQ_DAY BETWEEN #{req_day_stt} AND #{req_day_end} AND MRNC.DEL_FG = 'X'), 0) AS X_CNT_SUMM                               /* 취소 총건수 */

               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG = 'X' AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) AS X_JUNGI_AMT          /* 정기건 총액 (취소) */
               ,NVL((SELECT SUM(PAY_AMT) AS ICNT FROM LF_DMUSER.TB_MEMBER_REQ_NAUTH_CNCL MRNC WHERE 1=1
                    AND MRNC.REQ_DAY BETWEEN #{req_day_stt} AND #{req_day_end} AND MRNC.DEL_FG = 'X'), 0) AS X_CNCL_AMT                               /* 취소건 총건수 (취소) */
               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG = 'X' AND RESULT_KIND NOT IN ('02','03') THEN PAY_AMT ELSE 0 END) +
                NVL((SELECT SUM(PAY_AMT) AS ICNT FROM LF_DMUSER.TB_MEMBER_REQ_NAUTH_CNCL MRNC WHERE 1=1
                    AND MRNC.REQ_DAY BETWEEN #{req_day_stt} AND #{req_day_end} AND MRNC.DEL_FG = 'X'), 0) AS X_AMT_SUMM                               /* 취소 금액 총합 */
           <choose>
                <when test="search_yy != null and search_yy.equalsIgnoreCase('2')">
                    FROM TB_MEMBER_WDRW_REQ_2021
                </when>
                <when test="search_yy != null and search_yy.equalsIgnoreCase('3')">
                    FROM VIEW_MEMBER_WDRW_REQ
                </when>
                <otherwise>
                    FROM TB_MEMBER_WDRW_REQ
                </otherwise>
           </choose>
          WHERE 1=1
            AND DEL_FG != 'Y'
            AND REQ_DAY BETWEEN #{req_day_stt} AND #{req_day_end}
            AND PAY_MTHD = '06'
            AND AUTH_YN = 'N'
          GROUP BY PAY_MTHD
    </select>

    <!-- ================================================================
     * 날짜 : 20181026
     * 이름 : 송준빈
     * 추가내용 : 출금이체의뢰내역(청구) CMS 총 합계
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_WDRW_REQ
     * ================================================================
     * -->
    <select id="ReqCustMap.getCalcAndChargeCMSSummary" parameterType="map" resultType="resultMap">
         SELECT /* ReqCustMap.getCalcAndChargeCMSSummary */
                PAY_MTHD                                                                                           /* 납입방법                  */
               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG IN ('N','R') THEN 1 ELSE 0 END) AS NR_JUNGI_CNT        /* 정기건 총건수 (청구전/후) */
               ,SUM(CASE WHEN REQ_BIT = '04'     AND DEL_FG IN ('N','R') THEN 1 ELSE 0 END) AS NR_YENCHE_CNT       /* 연체건 총건수 (청구전/후) */
               ,SUM(CASE WHEN REQ_BIT = '05'     AND DEL_FG IN ('N','R') THEN 1 ELSE 0 END) AS NR_IMSI_CNT         /* 임시건 총건수 (청구전/후) */
               ,SUM(CASE WHEN REQ_BIT = '03'     AND DEL_FG IN ('N','R') THEN 1 ELSE 0 END) AS NR_IM_CNT           /* 임의건 총건수 (청구전/후) */
               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG IN ('N','R') THEN 1 ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '04'     AND DEL_FG IN ('N','R') THEN 1 ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '05'     AND DEL_FG IN ('N','R') THEN 1 ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '03'     AND DEL_FG IN ('N','R') THEN 1 ELSE 0 END) AS NR_CNT_SUMM         /* 청구전/후 총건수          */

               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG IN ('N','R') THEN PAY_AMT ELSE 0 END) AS NR_JUNGI_AMT  /* 정기건 총액 (청구전/후)   */
               ,SUM(CASE WHEN REQ_BIT = '04'     AND DEL_FG IN ('N','R') THEN PAY_AMT ELSE 0 END) AS NR_YENCHE_AMT /* 연체건 총액 (청구전/후)   */
               ,SUM(CASE WHEN REQ_BIT = '05'     AND DEL_FG IN ('N','R') THEN PAY_AMT ELSE 0 END) AS NR_IMSI_AMT   /* 임시건 총액 (청구전/후)   */
               ,SUM(CASE WHEN REQ_BIT = '03'     AND DEL_FG IN ('N','R') THEN PAY_AMT ELSE 0 END) AS NR_IM_AMT     /* 임의건 총액 (청구전/후)   */
               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG IN ('N','R') THEN PAY_AMT ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '04'     AND DEL_FG IN ('N','R') THEN PAY_AMT ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '05'     AND DEL_FG IN ('N','R') THEN PAY_AMT ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '03'     AND DEL_FG IN ('N','R') THEN PAY_AMT ELSE 0 END) AS NR_AMT_SUMM   /* 청구전/후 금액 총합       */

               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG = 'C' THEN 1 ELSE 0 END) AS C_JUNGI_CNT                /* 정기건 총건수 (입금완료)  */
               ,SUM(CASE WHEN REQ_BIT = '04'     AND DEL_FG = 'C' THEN 1 ELSE 0 END) AS C_YENCHE_CNT               /* 연체건 총건수 (입금완료)  */
               ,SUM(CASE WHEN REQ_BIT = '05'     AND DEL_FG = 'C' THEN 1 ELSE 0 END) AS C_IMSI_CNT                 /* 임시건 총건수 (입금완료)  */
               ,SUM(CASE WHEN REQ_BIT = '03'     AND DEL_FG = 'C' THEN 1 ELSE 0 END) AS C_IM_CNT                   /* 임의건 총건수 (입금완료)  */
               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG = 'C' THEN 1 ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '04'     AND DEL_FG = 'C' THEN 1 ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '05'     AND DEL_FG = 'C' THEN 1 ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '03'     AND DEL_FG = 'C' THEN 1 ELSE 0 END) AS C_CNT_SUMM                 /* 성공 총건수               */

               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG = 'C' THEN PAY_AMT ELSE 0 END) AS C_JUNGI_AMT          /* 정기건 총액 (입금완료)    */
               ,SUM(CASE WHEN REQ_BIT = '04'     AND DEL_FG = 'C' THEN PAY_AMT ELSE 0 END) AS C_YENCHE_AMT         /* 연체건 총액 (입금완료)    */
               ,SUM(CASE WHEN REQ_BIT = '05'     AND DEL_FG = 'C' THEN PAY_AMT ELSE 0 END) AS C_IMSI_AMT           /* 임시건 총액 (입금완료)    */
               ,SUM(CASE WHEN REQ_BIT = '03'     AND DEL_FG = 'C' THEN PAY_AMT ELSE 0 END) AS C_IM_AMT             /* 임의건 총액 (입금완료)    */
               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG = 'C' THEN PAY_AMT ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '04'     AND DEL_FG = 'C' THEN PAY_AMT ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '05'     AND DEL_FG = 'C' THEN PAY_AMT ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '03'     AND DEL_FG = 'C' THEN PAY_AMT ELSE 0 END) AS C_AMT_SUMM           /* 성공 금액 총합            */

               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG = 'F' THEN 1 ELSE 0 END) AS F_JUNGI_CNT                /* 정기건 총건수 (실패)      */
               ,SUM(CASE WHEN REQ_BIT = '04'     AND DEL_FG = 'F' THEN 1 ELSE 0 END) AS F_YENCHE_CNT               /* 연체건 총건수 (실패)      */
               ,SUM(CASE WHEN REQ_BIT = '05'     AND DEL_FG = 'F' THEN 1 ELSE 0 END) AS F_IMSI_CNT                 /* 임시건 총건수 (실패)      */
               ,SUM(CASE WHEN REQ_BIT = '03'     AND DEL_FG = 'F' THEN 1 ELSE 0 END) AS F_IM_CNT                   /* 임의건 총건수 (실패)      */
               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG = 'F' THEN 1 ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '04'     AND DEL_FG = 'F' THEN 1 ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '05'     AND DEL_FG = 'F' THEN 1 ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '03'     AND DEL_FG = 'F' THEN 1 ELSE 0 END) AS F_CNT_SUMM                 /* 실패 총건수               */

               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG = 'F' THEN PAY_AMT ELSE 0 END) AS F_JUNGI_AMT          /* 정기건 총액 (실패)        */
               ,SUM(CASE WHEN REQ_BIT = '04'     AND DEL_FG = 'F' THEN PAY_AMT ELSE 0 END) AS F_YENCHE_AMT         /* 연체건 총액 (실패)        */
               ,SUM(CASE WHEN REQ_BIT = '05'     AND DEL_FG = 'F' THEN PAY_AMT ELSE 0 END) AS F_IMSI_AMT           /* 임시건 총액 (실패)        */
               ,SUM(CASE WHEN REQ_BIT = '03'     AND DEL_FG = 'F' THEN PAY_AMT ELSE 0 END) AS F_IM_AMT             /* 임의건 총액 (실패)        */
               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG = 'F' THEN PAY_AMT ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '04'     AND DEL_FG = 'F' THEN PAY_AMT ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '05'     AND DEL_FG = 'F' THEN PAY_AMT ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '03'     AND DEL_FG = 'F' THEN PAY_AMT ELSE 0 END) AS F_AMT_SUMM           /* 실패 금액 총합            */

               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG = 'X' THEN 1 ELSE 0 END) AS X_JUNGI_CNT                /* 정기건 총건수 (취소)      */
               ,SUM(CASE WHEN REQ_BIT = '04'     AND DEL_FG = 'X' THEN 1 ELSE 0 END) AS X_YENCHE_CNT               /* 연체건 총건수 (취소)      */
               ,SUM(CASE WHEN REQ_BIT = '05'     AND DEL_FG = 'X' THEN 1 ELSE 0 END) AS X_IMSI_CNT                 /* 임시건 총건수 (취소)      */
               ,SUM(CASE WHEN REQ_BIT = '03'     AND DEL_FG = 'X' THEN 1 ELSE 0 END) AS X_IM_CNT                   /* 임의건 총건수 (취소)      */
               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG = 'X' THEN 1 ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '04'     AND DEL_FG = 'X' THEN 1 ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '05'     AND DEL_FG = 'X' THEN 1 ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '03'     AND DEL_FG = 'X' THEN 1 ELSE 0 END) AS X_CNT_SUMM                 /* 취소 총건수               */

               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG = 'X' THEN PAY_AMT ELSE 0 END) AS X_JUNGI_AMT          /* 정기건 총액 (취소)        */
               ,SUM(CASE WHEN REQ_BIT = '04'     AND DEL_FG = 'X' THEN PAY_AMT ELSE 0 END) AS X_YENCHE_AMT         /* 연체건 총액 (취소)        */
               ,SUM(CASE WHEN REQ_BIT = '05'     AND DEL_FG = 'X' THEN PAY_AMT ELSE 0 END) AS X_IMSI_AMT           /* 임시건 총액 (취소)        */
               ,SUM(CASE WHEN REQ_BIT = '03'     AND DEL_FG = 'X' THEN PAY_AMT ELSE 0 END) AS X_IM_AMT             /* 임의건 총액 (취소)        */
               ,SUM(CASE WHEN REQ_BIT = '01'     AND DEL_FG = 'X' THEN PAY_AMT ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '04'     AND DEL_FG = 'X' THEN PAY_AMT ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '05'     AND DEL_FG = 'X' THEN PAY_AMT ELSE 0 END) +
                SUM(CASE WHEN REQ_BIT = '03'     AND DEL_FG = 'X' THEN PAY_AMT ELSE 0 END) AS X_AMT_SUMM           /* 취소 금액 총합            */
           <choose>
                <when test="search_yy != null and search_yy.equalsIgnoreCase('2')">
                    FROM TB_MEMBER_WDRW_REQ_2021
                </when>
                <when test="search_yy != null and search_yy.equalsIgnoreCase('3')">
                    FROM VIEW_MEMBER_WDRW_REQ
                </when>
                <otherwise>
                    FROM TB_MEMBER_WDRW_REQ
                </otherwise>
           </choose>
          WHERE 1=1
            <!-- AND DEL_FG IN ('N', 'R', 'C', 'F')                                         /* N:청구전 Y:삭제 R:청구 C:완료(변환/입금) F:완료(실패) */ -->
            AND DEL_FG != 'Y'                                                               /* N:청구전 Y:삭제 R:청구 C:완료(변환/입금) F:완료(실패) X:입금취소 */
            AND REQ_DAY BETWEEN #{req_day_stt} AND #{req_day_end}
            AND PAY_MTHD = '04'                                                        /* 04:CMS 06:Card                                        */
          GROUP BY PAY_MTHD
    </select>

    <!-- ================================================================
     * 날짜 : 20190412
     * 이름 : 송준빈
     * 추가내용 : 일일청구 카드 회신 데이터 (무승인) 저장 여부
     * 대상 테이블 : LF_DMUSER.TB_CARDNAUTH_RECV_FILE_LIST
     * ================================================================
     * -->
    <select id="ReqCustMap.getCardNauthRecvFileExist" parameterType="map" resultType="int">
        SELECT /* ReqCustMap.getCardNauthRecvFileExist */
               COUNT(*) AS ICNT
          FROM LF_DMUSER.TB_CARDNAUTH_RECV_FILE_LIST
         WHERE 1=1
           AND REQ_MONTH = #{req_month}
           AND FILE_NAME = #{file_name}
    </select>

    <!-- 특수회원 카운트조회 -->
    <select id="ReqCustMap.getCntSpecialAcntList" parameterType="map" resultType="int">

        SELECT /* ReqCustMap.getCntSpecialAcntList */
               COUNT(*)
          FROM TB_MEMBER_EXT_SPECIAL MES
          INNER JOIN MEM_PROD_ACCNT MPA
                  ON MES.ACCNT_NO = MPA.ACCNT_NO AND MPA.DEL_FG = 'N'
          INNER JOIN MEMBER MBR
                  ON MPA.MEM_NO = MBR.MEM_NO AND MBR.DEL_FG = 'N'
         WHERE 1=1
           <if test="del_fg != null and del_fg != ''">
           AND MES.DEL_FG = #{del_fg}
           </if>
           <if test="accnt_no != null and accnt_no != ''">
           AND MES.ACCNT_NO = #{accnt_no}
           </if>
           <if test="special_bit != null and special_bit != ''">
           AND MES.SPECIAL_BIT = #{special_bit}
           </if>

    </select>

    <!-- 특수회원 조회 -->
    <select id="ReqCustMap.getSpecialAcntList" parameterType="map" resultType="resultMap">

        SELECT /* ReqCustMap.getSpecialAcntList */
               Z.*
          FROM (SELECT X.*,
                    <choose>
                        <when test="orderBy != null and orderBy != ''">
                            ROW_NUMBER() OVER(ORDER BY ${orderBy} ${orderDirection}) PAGE_INDX
                        </when>
                    </choose>
                  FROM ( SELECT MES.ACCNT_NO
                               ,REPLACE(MBR.MEM_NM,CHR(0),'') AS MEM_NM
                               ,REPLACE(MBR.CELL,CHR(0),'') AS CELL
                               ,MPA.KSTBIT
                               ,MES.REQ_PAY_GUNSU
                               ,MES.SPECIAL_BIT
                               ,MBID.PROD_CD
                               ,MBID.TRUE_CNT
                               ,MBID.REL_CNT
                               ,MBID.ADD_CNT
                               ,CM.ICHAE_DT
                               ,REPLACE(TO_CHAR(MES.REG_DM, 'YYYY-MM-DD HH24:MI:SS'),CHR(0),'') AS REG_DM
                               ,REPLACE(( SELECT EMPLE_NM FROM EMPLOYEE WHERE EMPLE_NO = MES.REG_MAN ),CHR(0),'') AS REG_MAN
                               ,MBID.MONTH_COUNT - MBID.TRUE_CNT AS NOR_YEON_CHE
                               ,CASE WHEN MBID.MONTH_COUNT >  MBID.TOT_REL_CNT THEN MBID.TOT_REL_CNT - MBID.REL_CNT
                                     WHEN MBID.MONTH_COUNT <![CDATA[<=]]> MBID.TOT_REL_CNT THEN MBID.MONTH_COUNT - MBID.REL_CNT
                                     ELSE -999
                                 END AS REL_YEON_CHE
                               ,CASE WHEN MBID.MONTH_COUNT >  MBID.TOT_ADD_CNT THEN MBID.TOT_ADD_CNT - MBID.ADD_CNT
                                     WHEN MBID.MONTH_COUNT <![CDATA[<=]]> MBID.TOT_ADD_CNT THEN MBID.MONTH_COUNT - MBID.ADD_CNT
                                     ELSE -999
                                 END AS ADD_YEON_CHE
                               ,MBID.TRUE_DAY
                               ,MBID.REL_DAY
                               ,MBID.ADD_DAY
                               ,REPLACE(MES.SPECIAL_ETC,CHR(0),'') AS SPECIAL_ETC
                               ,FN_COM_NM('01', MPA.PAY_MTHD) AS PAY_MTHD
                               ,REPLACE(TO_CHAR(MES.UPD_DM, 'YYYY-MM-DD HH24:MI:SS'),CHR(0),'') AS UPD_DM
                               ,REPLACE(( SELECT EMPLE_NM FROM EMPLOYEE WHERE EMPLE_NO = MES.UPD_MAN ),CHR(0),'') AS UPD_MAN
                           FROM TB_MEMBER_EXT_SPECIAL MES
                           INNER JOIN MEM_PROD_ACCNT MPA
                                   ON MES.ACCNT_NO = MPA.ACCNT_NO AND MPA.DEL_FG = 'N'
                           INNER JOIN MEMBER MBR
                                   ON MPA.MEM_NO = MBR.MEM_NO AND MBR.DEL_FG = 'N'
                           LEFT OUTER JOIN TB_MEMBER_BASIC_INFO_DAY MBID
                                   ON MES.ACCNT_NO = MBID.ACCNT_NO
                           LEFT OUTER JOIN ( SELECT ACCNT_NO,
                                                    '06' AS PAY_MTHD,
                                                    PAY_DT AS ICHAE_DT
                                               FROM CARD_MEM CARD
                                              WHERE CARD.DEL_FG = 'N'

                                             UNION

                                             SELECT ACCNT_NO,
                                                    '04' AS PAY_MTHD,
                                                    ICHAE_DT
                                               FROM CMS_MEM CMS
                                              WHERE CMS.DEL_FG = 'N'
                                           ) CM
                                   ON MBID.ACCNT_NO = CM.ACCNT_NO
                                  AND MBID.PAY_MTHD = CM.PAY_MTHD
                          WHERE 1=1
                            <if test="del_fg != null and del_fg != ''">
                            AND MES.DEL_FG = #{del_fg}
                            </if>
                            <if test="accnt_no != null and accnt_no != ''">
                            AND MES.ACCNT_NO = #{accnt_no}
                            </if>
                            <if test="special_bit != null and special_bit != ''">
                            AND MES.SPECIAL_BIT = #{special_bit}
                            </if>
                       ) X
               ) Z

        <if test="startLine != null and startLine != '' and endLine != null and endLine != ''">
            <![CDATA[
            WHERE PAGE_INDX >= #{startLine}
              AND PAGE_INDX < #{endLine}
            ]]>
        </if>

    </select>

    <!-- 특수회원 입력체크 -->
    <select id="ReqCustMap.getChkSpecialAcntList" parameterType="map" resultType="int">

        SELECT /* ReqCustMap.getChkSpecialAcntList */
               COUNT(*)
          FROM TB_MEMBER_EXT_SPECIAL
         WHERE 1=1
           AND ACCNT_NO = #{accnt_no}
           AND DEL_FG = 'N'

    </select>

    <!-- 특수회원 입력 -->
    <insert id="ReqCustMap.insertExtSpecial" parameterType="map">

        INSERT INTO TB_MEMBER_EXT_SPECIAL
          (ACCNT_NO, REQ_PAY_GUNSU, SPECIAL_BIT, DEL_FG, REG_DM, REG_MAN, SPECIAL_ETC)
        VALUES
          (#{accnt_no}, #{req_pay_gunsu}, #{special_bit}, 'N', SYSDATE, #{reg_man}, #{special_etc})

    </insert>

    <!-- 특수회원 수정 -->
    <update id="ReqCustMap.updateExtSpecial" parameterType="map">

        UPDATE TB_MEMBER_EXT_SPECIAL
           SET REQ_PAY_GUNSU = #{req_pay_gunsu}
             , SPECIAL_BIT = #{special_bit}
             , UPD_DM = SYSDATE
             , UPD_MAN = #{upd_man}
             , SPECIAL_ETC = #{special_etc}
         WHERE 1=1
           AND ACCNT_NO = #{accnt_no}
           AND DEL_FG = 'N'

    </update>


    <!-- 특수회원 삭제 -->
    <update id="ReqCustMap.deleteExtSpecial" parameterType="map">

        UPDATE TB_MEMBER_EXT_SPECIAL
           SET DEL_FG = 'Y'
             , UPD_DM = SYSDATE
             , UPD_MAN = #{upd_man}
         WHERE 1=1
           AND ACCNT_NO = #{accnt_no}
           AND SPECIAL_BIT = #{special_bit}
           AND DEL_FG = 'N'

    </update>

    <!-- ================================================================
     * 날짜 : 20181029
     * 이름 : 정승철
     * 추가내용 : 카드,CMS 결과데이터 건수조회
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_WDRW_REQ
                     LF_DMUSER.TB_MEMBER_WDRW_RESULT
                     LF_DMUSER.TB_MEMBER_REQ_REFUND
     * ================================================================
     * -->
    <select id="ReqCustMap.getReqRltmCardLogCount" parameterType="map" resultType="int">
        /* ReqCustMap.getReqRltmCardLogCount */
        SELECT
            COUNT(*) AS ICNT
        FROM LF_DMUSER.TB_MEMBER_WDRW_REQ REQ INNER JOIN
            PRODUCT PD ON REQ.PROD_CD = PD.PROD_CD
            LEFT OUTER JOIN LF_DMUSER.TB_MEMBER_WDRW_RESULT RST
                         ON REQ.ACCNT_NO = RST.ACCNT_NO
                        AND REQ.PAY_MTHD = RST.PAY_MTHD
                        AND REQ.REQ_DAY = RST.REQ_DAY
                        AND REQ.RESULT_KEY = RST.RESULT_KEY
            LEFT OUTER JOIN LF_DMUSER.TB_MEMBER_REQ_REFUND MRR
                         ON MRR.ACCNT_NO = REQ.ACCNT_NO
                        AND MRR.PAY_MTHD = REQ.PAY_MTHD
                        AND MRR.DEL_FG = 'N'
                        AND MRR.REQ_DAY = REQ.REQ_DAY
                      --AND MRR.RESULT_KEY = REQ.RESULT_KEY
                        AND NVL(MRR.RESULT_KEY,'JL32') = NVL(REQ.RESULT_KEY,'JL32') /* JL32 : PGWEB 서버 통신 중 에러 */
        WHERE 1=1
        <if test="accnt_no != null and accnt_no != ''">
            AND REQ.ACCNT_NO = #{accnt_no}
        </if>
        AND REQ.PAY_MTHD = #{pay_mthd}
        AND REQ.DEL_FG IN ('C', 'F', 'X')
        <if test="del_fg != null and del_fg != ''">
            AND REQ.DEL_FG = #{del_fg}
        </if>
        <if test="stt_req_dt != null and stt_req_dt != '' and end_req_dt != null and end_req_dt != ''">
            AND REQ.REQ_DAY BETWEEN #{stt_req_dt} AND #{end_req_dt}
        </if>
        <if test="result_kind != null and result_kind != ''">
            AND REQ.RESULT_KIND = #{result_kind}
        </if>
        <if test="req_bit != null and req_bit != ''">
            AND REQ.REQ_BIT = #{req_bit}
        </if>
         <if test="auth_yn != null and auth_yn != ''">
             AND REQ.AUTH_YN = #{auth_yn}
         </if>
    </select>

    <!-- ================================================================
     * 날짜 : 20181029
     * 이름 : 정승철
     * 추가내용 : 카드,CMS 결과데이터 조회
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_WDRW_REQ
                     LF_DMUSER.TB_MEMBER_WDRW_RESULT
                     LF_DMUSER.TB_MEMBER_REQ_REFUND
     * ================================================================
     * -->
    <select id="ReqCustMap.getReqRltmCardLogList" parameterType="map" resultType="resultMap">


        SELECT /* ReqCustMap.getReqRltmCardLogList */
               *
          FROM (SELECT <if test="orderBy != null and orderBy != ''">
                           ROW_NUMBER() OVER(ORDER BY REQ_DAY DESC, REG_DM DESC, REQ_PAY_NO DESC, ACCNT_NO) PAGE_INDX,
                       </if>
                       X.*
                  FROM (
                            SELECT REQ.ACCNT_NO,
                                   REQ.MEM_NO,
                                   PD.PROD_NM,
                                   REQ_BIT,
                                   REQ.TRUE_CNT,                                            /* 실납입횟수 */
                                   REQ.REQ_PAY_NO,                                          /* 청구회차 */
                                   '조회' AS MAX_REQ_PAY_NO,
                                   TO_CHAR(RST.REG_DM, 'YYYYMMDDHH24MISS') AS REG_DM,   /* 결과입력시간*/
                                   '' AS MAX_REG_DM,                                    /* (TEMP) 회원번호 기준 MAX 결과입력시간 */
                                   REQ.PAY_BIT,
                                   REQ.ICHAE_NO,
                                   REQ.REQ_DAY,
                                   PAY_AMT,
                                   REQ.RESULT_KEY,
                                   RST.TID,
                                   RST.PAY_KIND AS RESULT_KIND,
                                   <!-- NVL(RST.PAY_KIND, '01') AS RESULT_KIND, -->
                                   RST.RESULT_CD,
                                   CASE WHEN REQ.PAY_MTHD = '04'  THEN FN_COM_NM('15', RESULT_CD)
                                        WHEN REQ.PAY_MTHD = '06' AND NVL(REQ.AUTH_YN,'Y') = 'N'  THEN FN_COM_NM('0222', RESULT_CD)
                                   ELSE RST.RESULT_MSG END AS RESULT_MSG,
                                   AUTH_DT,
                                   AUTH_CD,
                                   (SELECT COUNT(*) FROM TB_MEMBER_REQ_NAUTH_CNCL WHERE ACCNT_NO = REQ.ACCNT_NO AND REQ_PAY_NO = REQ.REQ_PAY_NO AND DEL_FG IN ('P','N','R')) AS CNCL_CNT,
                                  CASE WHEN REQ.PAY_MTHD = '04'  THEN  FN_COM_NM('63', NVL(RST.ICHAE_CD,REQ.ICHAE_CD))
                                       WHEN REQ.PAY_MTHD = '06' AND RST.PAY_KIND = '01'  AND NVL(REQ.INI_YN, 'N') != 'Y' THEN  RST.ICHAE_CD
                                       WHEN REQ.PAY_MTHD = '06' AND RST.PAY_KIND != '01' AND NVL(REQ.INI_YN, 'N') != 'Y' THEN  FN_COM_NM('0120', NVL(RST.ICHAE_CD,REQ.ICHAE_CD))
                                       WHEN REQ.PAY_MTHD = '06' AND RST.PAY_KIND = '01'  AND NVL(REQ.INI_YN, 'N') = 'Y' THEN FN_COM_NM('0196', NVL(RST.ICHAE_CD,REQ.ICHAE_CD))
                                       WHEN REQ.PAY_MTHD = '06' AND RST.PAY_KIND != '01' AND NVL(REQ.INI_YN, 'N') = 'Y' THEN FN_COM_NM('0196', NVL(RST.ICHAE_CD,REQ.ICHAE_CD))
                                   ELSE '' END AS ICHAE_CD,
                                   <!--
                                   ( SELECT REG_DM
                                       FROM TB_MEMBER_REQ_REFUND
                                      WHERE ACCNT_NO = REQ.ACCNT_NO
                                        AND PAY_MTHD = REQ.PAY_MTHD
                                        AND DEL_FG = 'N'
                                        AND REQ_DAY = REQ.REQ_DAY
                                        AND RESULT_KEY = REQ.RESULT_KEY
                                   ) AS REFUND_REG_DT, /* 환불등록일 */
                                   -->
                                   MRR.REG_DM AS REFUND_REG_DT, /* 환불등록일 */
                                   <!--
                                   ( SELECT REFUND_DT
                                       FROM TB_MEMBER_REQ_REFUND MRR
                                       INNER JOIN TB_MEMBER_WDRW_REQ MWR
                                               ON MWR.ACCNT_NO = MRR.ACCNT_NO
                                              AND MWR.PAY_MTHD = MRR.PAY_MTHD
                                              AND MWR.DEL_FG = 'X'
                                              AND MWR.REQ_DAY = MRR.REQ_DAY
                                              AND MWR.RESULT_KEY = MRR.RESULT_KEY
                                      WHERE MRR.ACCNT_NO = REQ.ACCNT_NO
                                        AND MRR.PAY_MTHD = REQ.PAY_MTHD
                                        AND MRR.DEL_FG = 'N'
                                        AND MRR.REQ_DAY = REQ.REQ_DAY
                                        AND MRR.RESULT_KEY = REQ.RESULT_KEY
                                   ) AS REAL_CANCEL_DT,   /* 실제취소일 */
                                   -->
                                   <!--
                                   ( SELECT TO_CHAR(CANCEL_DT, 'YYYYMMDDHH24MISS')
                                       FROM TB_MEMBER_REQ_REFUND MRR
                                      WHERE MRR.ACCNT_NO = REQ.ACCNT_NO
                                        AND MRR.PAY_MTHD = REQ.PAY_MTHD
                                        AND MRR.DEL_FG = 'N'
                                        AND MRR.REQ_DAY = REQ.REQ_DAY
                                        AND MRR.RESULT_KEY = REQ.RESULT_KEY
                                   ) AS CANCEL_DT,   /* 실제취소일 */
                                   -->
                                   TO_CHAR(MRR.CANCEL_DT, 'YYYYMMDDHH24MISS') AS CANCEL_DT, /* 실제취소일*/
                                   RST.ETC,
                                   REQ.PAY_MTHD,  /* 납입방법 (04:CMS, 06:카드) */
                                   REQ.DEL_FG,
                                   CASE WHEN LENGTH(RST.REG_MAN) = 10
                                        THEN ( SELECT EMPLE_NM FROM EMPLOYEE WHERE EMPLE_NO = RST.REG_MAN )
                                        ELSE RST.REG_MAN
                                    END AS REG_MAN,  /* 결과등록자 사원명으로 표시 */
                                   REQ.AUTH_YN,
                                   REQ.FRANCHISEE_NO,
                                   REQ.INI_YN
                              FROM LF_DMUSER.TB_MEMBER_WDRW_REQ REQ INNER JOIN
                                  PRODUCT PD ON REQ.PROD_CD = PD.PROD_CD
                        LEFT OUTER JOIN LF_DMUSER.TB_MEMBER_WDRW_RESULT RST
                                     ON REQ.ACCNT_NO = RST.ACCNT_NO
                                    AND REQ.PAY_MTHD = RST.PAY_MTHD
                                    AND REQ.REQ_DAY = RST.REQ_DAY
                                    AND REQ.RESULT_KEY = RST.RESULT_KEY
                        LEFT OUTER JOIN LF_DMUSER.TB_MEMBER_REQ_REFUND MRR
                                     ON MRR.ACCNT_NO = REQ.ACCNT_NO
                                    AND MRR.PAY_MTHD = REQ.PAY_MTHD
                                    AND MRR.DEL_FG = 'N'
                                    AND MRR.REQ_DAY = REQ.REQ_DAY
                                    --AND MRR.RESULT_KEY = REQ.RESULT_KEY
                                    AND NVL(MRR.RESULT_KEY,'JL32') = NVL(REQ.RESULT_KEY,'JL32') /* JL32 : PGWEB 서버 통신 중 에러 */
                             WHERE 1=1
                               <if test="accnt_no != null and accnt_no != ''">
                               AND REQ.ACCNT_NO = #{accnt_no}
                               </if>
                               AND REQ.PAY_MTHD = #{pay_mthd}
                               AND REQ.DEL_FG IN ('C', 'F', 'X')
                               <if test="auth_yn != null and auth_yn != ''">
                               AND REQ.AUTH_YN = #{auth_yn}
                               </if>
                               <if test="del_fg != null and del_fg != ''">
                               AND REQ.DEL_FG = #{del_fg}
                               </if>
                               <if test="stt_req_dt != null and stt_req_dt != '' and end_req_dt != null and end_req_dt != ''">
                               AND REQ.REQ_DAY BETWEEN #{stt_req_dt} AND #{end_req_dt}
                               </if>
                               <if test="result_kind != null and result_kind != ''">
                               AND REQ.RESULT_KIND = #{result_kind}
                               </if>
                               <if test="req_bit != null and req_bit != ''">
                               AND REQ.REQ_BIT = #{req_bit}
                               </if>
                    ) X
                    WHERE 1=1
                ) Z

     <if test="excel_fg == null or excel_fg == '' or !excel_fg.equalsIgnoreCase('Y')">
         <if test="startLine != null and startLine != '' and endLine != null and endLine != ''">
             <![CDATA[
             WHERE PAGE_INDX >= #{startLine}
               AND PAGE_INDX < #{endLine}
             ]]>
         </if>
     </if>

    </select>

    <select id="ReqCustMap.getDlwCustAcntCount" parameterType="map" resultType="int">

        SELECT /* ReqCustMap.getDlwCustAcntCount */
               COUNT(*)
          FROM MEM_PROD_ACCNT A JOIN MEMBER B
                                  ON A.MEM_NO = B.MEM_NO
                                 AND B.DEL_FG = 'N'
                                JOIN PRODUCT C
                                  ON A.PROD_CD = C.PROD_CD
                                JOIN EMPLOYEE EMP
                                  ON EMP.EMPLE_NO = A.EMPLE_NO
                     LEFT OUTER JOIN CMS_MEM D
                                  ON A.ACCNT_NO = D.ACCNT_NO
                                 AND D.DEL_FG = 'N'
                     LEFT OUTER JOIN CARD_MEM E
                                  ON A.ACCNT_NO = E.ACCNT_NO
                                 AND E.DEL_FG = 'N'
         WHERE A.DEL_FG = 'N'
        <if test="dataAthrQury != null and dataAthrQury != '' and user_athrCd != 'TM40'">	 <!-- 2018.03.20 TM40이면 제외  -->
             ${dataAthrQury}
         </if>
         <if test="ns_yn != null and ns_yn.equalsIgnoreCase('Y')">
             AND EMP.DEPT_CD = '1602'
         </if>
         <if test="srch_vl != null and srch_vl != ''">
             <if test="srch_typ == 'all'">
                 AND (A.ACCNT_NO = #{srch_vl}
                      OR  A.MEM_NO = #{srch_vl}
                      OR  B.MEM_NM LIKE '%' || #{srch_vl} || '%'
                      OR  B.IDN_NO LIKE '%' || #{srch_vl} || '%'
                      OR  D.BANK_ACCNT_NO = #{srch_vl}
                      )
             </if>
             <if test="srch_typ == 'mem_nm'">
                 AND B.MEM_NM LIKE #{srch_vl} || '%'
             </if>
             <if test="srch_typ == 'accnt_no'">
                 AND A.ACCNT_NO = #{srch_vl}
             </if>
             <if test="srch_typ == 'mem_no'">
                 AND A.MEM_NO = #{srch_vl}
             </if>
             <if test="srch_typ == 'birth'">
                 AND B.IDN_NO LIKE '%' || #{srch_vl} || '%'
             </if>
             <if test="srch_typ == 'bank_accnt_no'">
                 AND  D.BANK_ACCNT_NO LIKE '%' || #{srch_vl} || '%'
             </if>
             <if test="srch_typ == 'pre_accnt_no'">
                 AND A.OLD_MID LIKE '%' || #{srch_vl} || '%'
             </if>
         </if>
         <if test="srch_typ == 'ichae_dt'">
             <if test="ichae_stt_dt != null and ichae_stt_dt != '' and ichae_end_dt != null and ichae_end_dt != ''">
                 AND  TO_NUMBER(A.ICHAE_DT) <![CDATA[>=]]> #{ichae_stt_dt}
                 AND  TO_NUMBER(A.ICHAE_DT) <![CDATA[<=]]> #{ichae_end_dt}
             </if>
         </if>

         <if test="option == 'cms_non'">
             AND a.accnt_no NOT IN (SELECT accnt_no
                                      FROM CMS_MEM
                                     WHERE del_fg = 'N')
             AND a.accnt_no NOT IN (SELECT accnt_no
                                      FROM NEW_CANCL_APP
                                     WHERE stat IN ('01', '02'))
         </if>
         <if test="option == 'cms'">
             AND a.accnt_no IN (SELECT accnt_no
                                  FROM CMS_MEM
                                 WHERE del_fg = 'N')
             AND a.accnt_no NOT IN (SELECT accnt_no
                                      FROM wdrw_req
                                     WHERE stat IN ('01', '02'))
             AND a.accnt_no NOT IN (SELECT accnt_no
                                      FROM card_wdrw_req
                                     WHERE stat IN ('01', '02'))
         </if>

         <if test="option == 'card_non'">
             AND a.accnt_no NOT IN (SELECT accnt_no
                                      FROM CARD_MEM
                                     WHERE del_fg = 'N')
         </if>
         <if test="option == 'card'">
             AND a.accnt_no IN (SELECT accnt_no
                                  FROM CARD_MEM
                                 WHERE del_fg = 'N')
             AND a.accnt_no NOT IN (SELECT accnt_no
                                      FROM card_wdrw_req
                                     WHERE stat IN ('01', '02'))
             AND a.accnt_no NOT IN (SELECT accnt_no
                                      FROM card_wdrw_req
                                     WHERE stat IN ('01', '02'))
         </if>
         <if test="option == 'call'">
             <!-- 수정 : 고객만족센터 파일 산출에 카드산출 포함 by lbk_2013_06_19  -->
             AND
             (
                 (
                 a.PAY_MTHD = '04'
                 AND a.accnt_no IN (SELECT accnt_no
                                      FROM CMS_MEM
                                     WHERE del_fg = 'N')
                 AND a.accnt_no NOT IN (SELECT accnt_no
                                          FROM wdrw_req
                                         WHERE stat IN ('01', '02'))
                 and a.accnt_no NOT IN (SELECT accnt_no
                                          FROM wdrw_req_call_center
                                         WHERE WDRW_REQ_YN = 'N'
                                           AND DEL_FG IS NULL)
                 )
                 OR
                 (
                 a.PAY_MTHD = '06'
                 AND a.accnt_no IN (SELECT accnt_no
                                      FROM CARD_MEM
                                     WHERE del_fg = 'N')
                 AND a.accnt_no NOT IN (SELECT accnt_no
                                          FROM card_wdrw_req
                                         WHERE stat IN ('01', '02'))
                 and a.accnt_no NOT IN (SELECT accnt_no
                                          FROM wdrw_req_call_center
                                         WHERE WDRW_REQ_YN = 'N'
                                           AND DEL_FG IS NULL)
                 )
             )

         </if>
         <if test="option == 'pay_able'">
             <!-- AND FN_ACCNT_STAT(a.accnt_no) in ('Y','E') //청약철회가 아니면 조회되도록 수정 by lbk_2012_07_31 -->
             AND FN_EVENT(a.accnt_no) != '청약철회'
         </if>
         <if test="option == 'cms_card_non'">
             AND a.accnt_no NOT IN (SELECT accnt_no
                                      FROM CMS_MEM
                                     WHERE del_fg = 'N')
             AND a.accnt_no NOT IN (SELECT accnt_no
                                      FROM NEW_CANCL_APP
                                     WHERE stat IN ('01', '02'))
             AND a.accnt_no NOT IN (SELECT accnt_no
                                      FROM CARD_MEM
                                     WHERE del_fg = 'N')
         </if>
         <if test="option == 'event'">
             AND a.accnt_no IN (SELECT accnt_no
                                      FROM EVENT
                                     WHERE del_fg = 'N')
         </if>
         <if test="option == 'prod_trans'">
             <!-- 상품변경은 정상 구좌이면서 출금이체 신청전,중이 아니면서 양도양수 공제 신고된건만 조회  -->
             AND FN_ACCNT_STAT(a.accnt_no) = 'Y'
             AND a.accnt_no NOT IN (SELECT accnt_no
                                      FROM CMS_MEM
                                     WHERE del_fg = 'N')
             AND a.accnt_no NOT IN (SELECT accnt_no
                                      FROM NEW_CANCL_APP
                                     WHERE stat IN ('01', '02'))
             AND a.accnt_no NOT IN (SELECT ACCNT_NO FROM TRANSFER_BRKDN WHERE NEW_YN IN ('Y', 'S', 'E'))
         </if>
         <!-- ORDER BY b.mem_nm -->
    </select>

    <select id="ReqCustMap.getDlwCustAcntList" parameterType="map" resultType="resultMap">
            SELECT
                /* ReqCustMap.getDlwCustAcntList */
                MPA.ACCNT_NO,
                MB.MEM_NO,
                MB.MEM_NM,
                FN_ACCNT_STAT(MPA.ACCNT_NO) AS ACCNT_STAT,
                NVL(PD.PROD_LONGTERM_YN,'N') AS PROD_LONGTERM_YN,
                NVL(TLM.LTI_PROD_PAY,'N') AS LTI_PROD_PAY,
                NVL(LTI_USE_YN,NVL(PD.PROD_LONGTERM_YN,'N')) AS LTI_USE_YN
            FROM MEM_PROD_ACCNT MPA INNER JOIN
                MEMBER MB ON MPA.MEM_NO = MB.MEM_NO AND MB.DEL_FG = 'N' INNER JOIN
                PRODUCT PD ON MPA.PROD_CD = PD.PROD_CD LEFT OUTER JOIN
                TB_LTINSTALL_MNG TLM ON MPA.ACCNT_NO = TLM.ACCNT_NO AND TLM.DEL_FG = 'N'
            WHERE 1=1
                AND MPA.DEL_FG = 'N'
                 <if test="srch_typ == 'mem_nm'">
                     AND MB.MEM_NM LIKE #{srch_vl} || '%'
                 </if>
                 <if test="srch_typ == 'accnt_no'">
                     AND MPA.ACCNT_NO = #{srch_vl}
                 </if>
                 <if test="srch_typ == 'mem_no'">
                     AND MB.MEM_NO = #{srch_vl}
                 </if>
    </select>

    <select id="ReqCustMap.getDlwCustAcntList_backup" parameterType="map" resultType="resultMap">
        <!-- sql-common.xml selectAccntInfo -->

        SELECT /* ReqCustMap.getDlwCustAcntList_backup */
               B.*
          FROM (SELECT A.*,
                    <choose>
                        <when test="orderBy != null and orderBy != ''">
                            ROW_NUMBER() OVER(ORDER BY ${orderBy} ${orderDirection}) AS PAGE_INDX
                        </when>
                        <otherwise>
                            ROW_NUMBER() OVER(ORDER BY UPD_DM DESC) AS PAGE_INDX
                        </otherwise>
                    </choose>
                 FROM (SELECT A.ACCNT_NO
                            , A.MEM_NO
                            , A.RESORT_NO
                            , B.MEM_NM
                            , B.HOME_TEL
                            , B.CELL AS CELL
                            , B.WRPL_TEL
                            , CASE WHEN LENGTH(NVL(TO_CHAR(B.IDN_NO), '')) = 10
                                   THEN B.IDN_NO
                                   ELSE SUBSTR(B.BRTH_MON_DAY, -6)
                               END IDN_NO
                            , A.PROD_CD
                            , C.PROD_NM
                            , C.PROD_AMT
                            , C.MON_PAY_AMT
                            , C.EXPR_NO
                            , A.EMPLE_NO
                            , EMP.EMPLE_NM
                            , A.APPFM_NO
                            , JOIN_DT
                            , COMPT_DT
                            , A.BEF_EMPLE_CD
                            , A.PAY_PERD
                            , A.PAY_MTHD
                            , A.JOIN_PROD
                            , A.NEW_CHAN_GUNSU
                            , A.CERTF_RCV_CHK
                            , A.PAY_STAT_1NO
                            , D.ICHAE_DT
                            , A.BANK_ACCNT_NO AS BANK_ACCNT_NO
                            , A.OLD_MID
                            , A.REG_DM
                            , A.REG_MAN
                            , A.UPD_DM
                            , A.UPD_MAN
                              , FN_ACCNT_STAT(A.ACCNT_NO) AS ACCNT_STAT
                            , (SELECT NVL(MAX (NO),1)
                                 FROM PAY_MNG
                                WHERE ACCNT_NO = A.ACCNT_NO
                                  AND DEL_FG = 'N') * C.MON_PAY_AMT AS TOTAL_PAY
                            , (SELECT NVL(MAX (NO),1)
                                 FROM PAY_MNG
                                WHERE ACCNT_NO = A.ACCNT_NO
                                  AND DEL_FG = 'N') LAST_NO
                            , (SELECT NVL(MAX (NO),0)
                                 FROM PAY_MNG
                                WHERE ACCNT_NO = A.ACCNT_NO
                                  AND DEL_FG = 'N') REAL_PAY_NO
                            , A.DED_NO
                            , NVL(A.JOIN_CL,'01') AS JOIN_CL
                            , CASE WHEN (SELECT COUNT(ACCNT_NO) FROM TRANSFER_BRKDN WHERE ACCNT_NO = A.ACCNT_NO) > 0
                                   THEN 'Y'
                                   ELSE 'N'
                               END AS TRANS_GUBUN
                            , B.BRTH_MON_DAY
                            , NVL((SELECT CELL
                                        FROM EMPLOYEE
                                       WHERE EMPLE_NO = A.EMPLE_NO), '') AS EMP_CELL
                            , FN_EVENT(A.ACCNT_NO) AS JOIN_STAT
                            , FN_EVENT(A.ACCNT_NO) AS STAT
                            , FN_YEN_CHE(A.ACCNT_NO) AS PAY_STAT
                            , (SELECT NVL(MAX (NO),0)
                                 FROM PAY_MNG
                                WHERE ACCNT_NO = A.ACCNT_NO
                                  AND DEL_FG = 'N') AS PAY_NO
                            , (SELECT NVL(MAX (NO),0)
                                 FROM PAY_MNG_DTL
                                WHERE ACCNT_NO = A.ACCNT_NO
                                  AND DEL_FG = 'N') AS PAY_ALLT_NO
                            , (SELECT NVL(MAX (NO),0)
                                 FROM PAY_MNG_DTL1
                                WHERE ACCNT_NO = A.ACCNT_NO
                                  AND DEL_FG = 'N') AS PAY_ADD_NO
                            , (SELECT NVL(SUM (PAY_AMT),0)
                                 FROM PAY_MNG
                                WHERE ACCNT_NO = A.ACCNT_NO
                                  AND DEL_FG = 'N') AS PAY_AMT
                            , (SELECT NVL(SUM (PAY_AMT),0)
                                 FROM PAY_MNG_DTL
                                WHERE ACCNT_NO = A.ACCNT_NO
                                  AND DEL_FG = 'N') AS PAY_ALLT_AMT
                            , (SELECT NVL(SUM (PAY_AMT),0)
                                 FROM PAY_MNG_DTL1
                                WHERE ACCNT_NO = A.ACCNT_NO
                                  AND DEL_FG = 'N') AS PAY_ADD_AMT
                            , NVL((SELECT MODEL_CL_NM
                                        FROM PRODUCT_MODEL_CL_CD
                                       WHERE MODEL_CL_CD = A.PROD_MODEL_KIND), '') AS MODEL_CL_NM
                             , CASE WHEN A.KSTBIT = '01' THEN '대기'
                                    WHEN A.KSTBIT = '02' THEN '가입'
                                    WHEN A.KSTBIT = '03' THEN '해약'
                                    WHEN A.KSTBIT = '04' THEN '행사'
                                    WHEN A.KSTBIT = '09' THEN '만기' ELSE A.KSTBIT END KSTBIT
                              , FN_CMS_CARD_MEM(A.ACCNT_NO) YN
                         FROM MEM_PROD_ACCNT A
                         JOIN MEMBER B
                              ON A.MEM_NO = B.MEM_NO
                             AND B.DEL_FG = 'N'
                         JOIN PRODUCT C
                              ON A.PROD_CD = C.PROD_CD
                         JOIN EMPLOYEE EMP
                              ON EMP.EMPLE_NO = A.EMPLE_NO
              LEFT OUTER JOIN CMS_MEM D
                              ON A.ACCNT_NO = D.ACCNT_NO
                              AND D.DEL_FG = 'N'
              LEFT OUTER JOIN CARD_MEM E
                              ON A.ACCNT_NO = E.ACCNT_NO
                              AND E.DEL_FG = 'N'
                         <!-- 2018.02.08 임의 등록시 고객 선택 할 때 해피콜 상태가 01,011 인것만 조회 -->
                         <!-- 2018.02.13 임의 등록시 고객 선택 할 때만 해피콜 조인 / hp_join_gb 구분자 추가 -->
                        <if test="hp_join_gb != null and hp_join_gb != ''">
                         INNER JOIN HP_CALL HP
                              ON A.ACCNT_NO = HP.ACCNT_NO AND HP.STAT IN ('01', '011')
                        </if>

                         <!-- 2018.03.20 TM40:MG권한 일 경우 -->
                         <if test="user_athrCd != null and user_athrCd == 'TM40'">
                                  INNER JOIN LF_DMUSER.RESN_CREDIT_LIST K
                                  ON K.ACCNT_NO = A.ACCNT_NO
                                  AND K.DEL_FG = 'N'
                                  AND K.TARGET_YM = TO_CHAR(SYSDATE, 'YYYYMM')
                         </if>

                        WHERE A.DEL_FG = 'N'
                        <if test="dataAthrQury != null and dataAthrQury != '' and user_athrCd != 'TM40'">	 <!-- 2018.03.20 TM40이면 제외  -->

                            ${dataAthrQury}
                        </if>
                        <if test="ns_yn != null and ns_yn.equalsIgnoreCase('Y')">
                            AND EMP.DEPT_CD = '1602'
                        </if>
                        <if test="srch_vl != null and srch_vl != ''">
                            <if test="srch_typ == 'all'">
                                AND (A.ACCNT_NO = #{srch_vl}
                                     OR  A.MEM_NO = #{srch_vl}
                                     OR  B.MEM_NM LIKE '%' || #{srch_vl} || '%'
                                     OR  B.IDN_NO LIKE '%' || #{srch_vl} || '%'
                                     OR  D.BANK_ACCNT_NO = #{srch_vl}
                                     )
                            </if>
                            <if test="srch_typ == 'mem_nm'">
                                AND B.MEM_NM LIKE #{srch_vl} || '%'
                            </if>
                            <if test="srch_typ == 'accnt_no'">
                                AND A.ACCNT_NO = #{srch_vl}
                            </if>
                            <if test="srch_typ == 'mem_no'">
                                AND A.MEM_NO = #{srch_vl}
                            </if>
                            <if test="srch_typ == 'birth'">
                                AND B.IDN_NO LIKE '%' || #{srch_vl} || '%'
                            </if>
                            <if test="srch_typ == 'bank_accnt_no'">
                                AND D.BANK_ACCNT_NO LIKE '%' || #{srch_vl} || '%'
                            </if>
                            <if test="srch_typ == 'pre_accnt_no'">
                                AND A.OLD_MID LIKE '%' || #{srch_vl} || '%'
                            </if>
                        </if>
                        <if test="srch_typ == 'ichae_dt'">
                            <if test="ichae_stt_dt != null and ichae_stt_dt != '' and ichae_end_dt != null and ichae_end_dt != ''">
                                AND TO_NUMBER(A.ICHAE_DT) <![CDATA[>=]]> #{ichae_stt_dt}
                                AND TO_NUMBER(A.ICHAE_DT) <![CDATA[<=]]> #{ichae_end_dt}
                            </if>
                        </if>


                        <if test="option == 'cms_non'">
                            AND a.accnt_no NOT IN (SELECT accnt_no
                                                     FROM CMS_MEM
                                                    WHERE del_fg = 'N')
                            AND a.accnt_no NOT IN (SELECT accnt_no
                                                     FROM NEW_CANCL_APP
                                                    WHERE stat IN ('01', '02'))
                        </if>
                        <if test="option == 'cms'">
                            AND a.accnt_no IN (SELECT accnt_no
                                                 FROM CMS_MEM
                                                WHERE del_fg = 'N')
                            AND a.accnt_no NOT IN (SELECT accnt_no
                                                     FROM wdrw_req
                                                    WHERE stat IN ('01', '02'))
                            AND a.accnt_no NOT IN (SELECT accnt_no
                                                     FROM card_wdrw_req
                                                    WHERE stat IN ('01', '02'))
                        </if>

                        <if test="option == 'card_non'">
                            AND a.accnt_no NOT IN (SELECT accnt_no
                                                     FROM CARD_MEM
                                                    WHERE del_fg = 'N')
                        </if>
                        <if test="option == 'card'">
                            AND a.accnt_no IN (SELECT accnt_no
                                                 FROM CARD_MEM
                                                WHERE del_fg = 'N')
                            AND a.accnt_no NOT IN (SELECT accnt_no
                                                     FROM card_wdrw_req
                                                    WHERE stat IN ('01', '02'))
                            AND a.accnt_no NOT IN (SELECT accnt_no
                                                     FROM card_wdrw_req
                                                    WHERE stat IN ('01', '02'))
                        </if>
                        <if test="option == 'call'">
                            <!-- 수정 : 고객만족센터 파일 산출에 카드산출 포함 by lbk_2013_06_19  -->
                            AND
                            (
                                (
                                a.PAY_MTHD = '04'
                                AND a.accnt_no IN (SELECT accnt_no
                                                     FROM CMS_MEM
                                                    WHERE del_fg = 'N')
                                AND a.accnt_no NOT IN (SELECT accnt_no
                                                         FROM wdrw_req
                                                        WHERE stat IN ('01', '02'))
                                and a.accnt_no NOT IN (SELECT accnt_no
                                                         FROM wdrw_req_call_center
                                                        WHERE WDRW_REQ_YN = 'N'
                                                          AND DEL_FG IS NULL)
                                )
                                OR
                                (
                                a.PAY_MTHD = '06'
                                AND a.accnt_no IN (SELECT accnt_no
                                                     FROM CARD_MEM
                                                    WHERE del_fg = 'N')
                                AND a.accnt_no NOT IN (SELECT accnt_no
                                                         FROM card_wdrw_req
                                                        WHERE stat IN ('01', '02'))
                                and a.accnt_no NOT IN (SELECT accnt_no
                                                         FROM wdrw_req_call_center
                                                        WHERE WDRW_REQ_YN = 'N'
                                                          AND DEL_FG IS NULL)
                                )
                            )

                        </if>
                        <if test="option == 'pay_able'">
                            <!-- AND FN_ACCNT_STAT(a.accnt_no) in ('Y','E') //청약철회가 아니면 조회되도록 수정 by lbk_2012_07_31 -->
                            AND FN_EVENT(a.accnt_no) != '청약철회'
                        </if>
                        <if test="option == 'cms_card_non'">
                            AND a.accnt_no NOT IN (SELECT accnt_no
                                                     FROM CMS_MEM
                                                    WHERE del_fg = 'N')
                            AND a.accnt_no NOT IN (SELECT accnt_no
                                                     FROM NEW_CANCL_APP
                                                    WHERE stat IN ('01', '02'))
                            AND a.accnt_no NOT IN (SELECT accnt_no
                                                     FROM CARD_MEM
                                                    WHERE del_fg = 'N')
                        </if>
                        <if test="option == 'event'">
                            AND a.accnt_no IN (SELECT accnt_no
                                                     FROM EVENT
                                                    WHERE del_fg = 'N')
                        </if>
                        <if test="option == 'prod_trans'">
                            <!-- 상품변경은 정상 구좌이면서 출금이체 신청전,중이 아니면서 양도양수 공제 신고된건만 조회  -->
                            AND FN_ACCNT_STAT(a.accnt_no) = 'Y'
                            AND a.accnt_no NOT IN (SELECT accnt_no
                                                     FROM CMS_MEM
                                                    WHERE del_fg = 'N')
                            AND a.accnt_no NOT IN (SELECT accnt_no
                                                     FROM NEW_CANCL_APP
                                                    WHERE stat IN ('01', '02'))
                            AND a.accnt_no NOT IN (SELECT ACCNT_NO FROM TRANSFER_BRKDN WHERE NEW_YN IN ('Y', 'S', 'E'))
                        </if>
                        <!-- ORDER BY b.mem_nm -->
                       ) A
                ) B
        <if test="startLine != null and startLine != '' and endLine != null and endLine != ''">
            <![CDATA[
            WHERE PAGE_INDX >= #{startLine}
              AND PAGE_INDX < #{endLine}
            ]]>
        </if>
    </select>

    <!-- 카드 결제취소시 -->
    <update id="ReqCustMap.updateCardResult" parameterType="map" >
        BEGIN
                /* ReqCustMap.updateCardResult */
            UPDATE TB_MEMBER_REQ_REFUND
               SET CANCEL_DT = SYSDATE
                 , REFUND_DT = SYSDATE
             WHERE 1=1
             AND PAY_MTHD = '06'
             AND ACCNT_NO = #{accnt_no}
             AND REQ_DAY = #{req_day}
             AND RESULT_KEY = #{result_key};

            <choose>
                <when test="search_yy != null and search_yy.equalsIgnoreCase('2')">
                    UPDATE TB_MEMBER_WDRW_REQ_2021
                    SET DEL_FG = 'X',
                        UPD_MAN =  #{emple_no},
                        UPD_DM = SYSDATE
                    WHERE 1=1
                    AND PAY_MTHD = '06'
                    AND DEL_FG = 'C'
                    AND ACCNT_NO = #{accnt_no}
                    AND REQ_DAY = #{req_day}
                    AND RESULT_KEY = #{result_key};
                </when>
                <otherwise>
                    UPDATE TB_MEMBER_WDRW_REQ
                    SET DEL_FG = 'X',
                        UPD_MAN =  #{emple_no},
                        UPD_DM = SYSDATE
                    WHERE 1=1
                    AND PAY_MTHD = '06'
                    AND DEL_FG = 'C'
                    AND ACCNT_NO = #{accnt_no}
                    AND REQ_DAY = #{req_day}
                    AND RESULT_KEY = #{result_key};
                </otherwise>
               </choose>

            <if test="result_kind != null and result_kind == '10'">

                UPDATE LF_DMUSER.HP_CALL
                SET STAT = '15',
                    UPD_MAN =  #{emple_no},
                    UPD_DM = SYSDATE
                WHERE 1=1
                AND ACCNT_NO = #{accnt_no} ;

                UPDATE LF_DMUSER.TB_LTINSTALL_MNG
                SET LTI_PROD_PAY = 'N',
                    DEL_FG = 'Y',
                    UPD_MAN =  #{emple_no},
                    UPD_DM = SYSDATE
                WHERE 1=1
                AND ACCNT_NO = #{accnt_no}
                AND DEL_FG = 'N'
                ;

            </if>

            COMMIT;

        END ;

    </update>

    <!-- ================================================================
     * 날짜 : 20181122
     * 이름 : 정승철
     * 추가내용 : 결제 취소 완료 시 결과 반영 (카드)
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_WDRW_RESULT
     * ================================================================
     * -->
    <insert id="ReqCustMap.sendCancelNicePayment" parameterType="map" >
        BEGIN /* ReqCustMap.sendCancelNicePayment */
            INSERT
                INTO TB_MEMBER_REQ_REFUND
                  ( ACCNT_NO
                  , PAY_MTHD
                  , REQ_DAY
                  , RESULT_KEY
                  , REFUND_LOC     /* 환불 경로(01:결과파일환불,02:해약등록,03:청약철회등록,04:행사등록) */
                  , ICHAE_NO       /* 은행이체번호(CMS) */
                  , ICHAE_CD       /* 은행이체코드(CMS) */
                  , DEPR           /* 예금주(CMS) */
                  , REFUND_DT      /* 환불일자 */
                  , REFUND_ETC     /* 비고 */
                  , DEL_FG
                  , REG_DM
                  , REG_MAN
                  , REFUND_REASON  /* 환불사유(0001:환불,0002:입력오류,0003:기타,0004:매입취소) */
                  , CANCEL_DT
                  , REQ_PAY_NO     /* 청구회차 */
                  )
             VALUES
                  (
                    #{accnt_no}
                  , #{pay_mthd}
                  , #{req_day}
                  , #{result_key}
                  , '01'
                  , ''                    /* ICHAE_NO */
                  , ''                    /* ICHAE_CD */
                  , ''                    /* DEPR */
                  , #{pay_cancel_day}     /* REFUND_DT */
                  , #{pay_cancel_note}
                  , 'N'
                  , SYSDATE
                  , #{emple_no}
                  , #{pay_cancel_cd}
                  , SYSDATE
                  , #{req_pay_no}
                  );

            UPDATE TB_MEMBER_WDRW_REQ
            SET DEL_FG = 'X',
                UPD_MAN =  #{emple_no},
                UPD_DM = SYSDATE
            WHERE 1=1
            AND PAY_MTHD = '06'
            AND DEL_FG = 'C'
            AND REQ_DAY = #{req_day}
            AND RESULT_KEY = #{result_key};
        END;
    </insert>

    <!-- ================================================================
     * 날짜 : 20181031
     * 이름 : 정승철
     * 추가내용 : 빌키 MID 와 KEY 조회
     * ================================================================
     * -->
    <select id="ReqCustMap.getAccntMid" parameterType="map" resultType="String">
        <!-- DM sql-id : selectAccntStat -->

            SELECT MAX(MID_KEY)
            FROM
            (
                SELECT
                    'dmlife001m'||'Zq7E5qjYbqPMZWHvlZtt1HbC8jJIPfAkVkkGOvf7gRoKfweOMCiHu/VPob5uGrIDyYQyplxnknTXxX2D8F+emA==' AS MID_KEY
                FROM DUAL

                UNION ALL

                SELECT CML.MID || CML.KEY AS MID_KEY

                FROM CARD_MID_LIST CML INNER JOIN
                    PRODUCT PD ON CML.MID = PD.MID
                WHERE 1=1

            <if test="menu_gbn == null or menu_gbn == ''">
                <if test="pay_no lt 36">
                    AND PD.PROD_CD = #{prod_cd}
                </if>
                 <if test="pay_no gte 36">
                    AND PD.PROD_CD = 'MID'
                </if>
            </if>

            <if test="menu_gbn != ''">
                AND CML.MID = SUBSTR(#{bid},5,10)
            </if>
            ) TBL

        <!--
            <if test="gbn_batch == null or gbn_batch == ''">
                AND nvl(WDRW1.STAT,'00') NOT IN ('01','02')
            </if>
            <if test="gbn_batch != null and gbn_batch != ''">
                AND nvl(WDRW1.STAT,'00')='01'
                AND NOT EXISTS ( SELECT  ACCNT_NO FROM RT_CARD_PAY_LOG WHERE ACCNT_NO =#{accnt_no} AND RESULT_CODE ='99' )
            </if>
        -->

    </select>

    <update id="ReqCustMap.updateDlwCardAckdCancLog" parameterType="map" >
        <!-- DM sql-id : updateRTCardPayCancle -->
        UPDATE /* ReqCustMap.updateDlwCardAckdCancLog */
               RT_CARD_PAY_LOG
           SET RESULT_CODE = #{result_code}
             , RESULT_MSG = #{result_msg}
             , CNCL_UIP = #{uip}
             , CNCL_DAY = #{cncl_day}
             , CNCL_TM = #{cncl_tm}
             , UPD_DM = SYSDATE
             , UPD_MAN = #{emple_no}
             , TYPE = #{type}
         WHERE TID = #{tid}
    </update>

    <update id="ReqCustMap.updateDlwCardWdrwReqCanc" parameterType="map" >
        <!-- DM sql-id : updateCardWdrwReqByCancel -->
        UPDATE /* ReqCustMap.updateDlwCardWdrwReqCanc */
               CARD_WDRW_REQ
           SET STAT = '05'
             , UPD_DM = SYSDATE
             , UPD_MAN = #{emple_no}
         WHERE STAT = '04'
            AND ACCNT_NO = #{accnt_no}
            AND INV_NO = #{pay_no}
            AND SEQ = (SELECT MAX(SEQ)
                         FROM CARD_WDRW_REQ
                        WHERE STAT = '04'
                          AND ACCNT_NO = #{accnt_no}
                          AND INV_NO = #{pay_no}
                      )
    </update>

    <!-- ================================================================
     * 날짜 : 20181022
     * 이름 : 송준빈
     * 추가내용 : 출금이체의뢰내역(산출, 청구(행사, 해약)) 조회
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_WDRW_REQ
     * ================================================================
     * -->
    <select id="ReqCustMap.getWdrwReqAccntEventConfirm" parameterType="String" resultType="resultMap">
        SELECT /* ReqCustMap.getWdrwReqAccntEventConfirm */
               *
          FROM ( SELECT ACCNT_NO          /* 회원번호                                                                 */
                       ,PROD_CD           /* 상품코드                                                                 */
                       ,PAY_MTHD          /* 산출구분(CMS:04, CARD:06)                                                */
                       ,REQ_BIT           /* 산출상세구분(01:정기, 02:미출금, 03:임의 ,04:연체, 05:임시, 06:고객센터) */
                       ,STAT              /* 상태                                                                     */
                       ,KSTBIT            /* 회원상태(01:대기, 02:가입, 03:해약, 04:행사, 09:만기)                    */
                       ,TRUE_CNT          /* 실납입회수                                                               */
                       ,REQ_PAY_NO        /* 산출청구회차                                                             */
                       ,PAY_BIT           /* 산출비트                                                                 */
                       ,ICHAE_NO          /* 이체번호(계좌 혹은 BID)                                                  */
                       ,ICHAE_CD          /* 이체코드(은행, 카드사)                                                   */
                       ,REQ_DAY           /* 청구일                                                                   */
                       ,BANK_FILIN_BRKDN  /* 통장기재내역                                                             */
                       ,PAY_AMT           /* 청구금액                                                                 */
                       ,REG_DM            /* 등록일                                                                   */
                       ,REG_MAN           /* 등록자                                                                   */
                       ,ICHAE_DT          /* 정기건 및 연체건 이체일                                                  */
                       ,REQ_PAY_GUNSU     /* 산출청구건수                                                             */
                       ,UPD_DM            /* 수정일                                                                   */
                       ,UPD_MAN           /* 수정자                                                                   */
                       ,DEL_FG            /* 청구여부(N:청구전 Y:삭제 R:청구 C:완료(변환/입금) F:완료(실패))          */
                       ,BIRTH             /* 생년월일(CMS용)                                                          */
                       ,BILL_GUBUN        /* 36회 카드사 전달 구분값                                                  */
                       ,RESULT_KEY        /* 카드/CMS결과KEY(실시간포함)                                              */
                       ,RESULT_KIND       /* 01:파일, 02:실시간, 03:자유,04:기타                                      */
                       ,MONTH_CNT         /* 당월회차                                                                 */
                   FROM LF_DMUSER.TB_MEMBER_WDRW_REQ
                  WHERE 1=1
                    AND DEL_FG IN ('N', 'R')
                    AND ACCNT_NO = #{accnt_no}
               ) A
         WHERE 1=1
    </select>

    <!-- ================================================================
     * 날짜 : 20181122
     * 이름 : 정승철
     * 추가내용 : 결제 취소 완료 시 결과 반영 (카드)
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_WDRW_RESULT
     * ================================================================
     * -->
    <insert id="ReqCustMap.saveTransInicisCardCancel" parameterType="map" >
        BEGIN /* ReqCustMap.saveTransInicisCardCancel */
            INSERT
                INTO TB_MEMBER_REQ_REFUND
                  ( ACCNT_NO
                  , PAY_MTHD
                  , REQ_DAY
                  , RESULT_KEY
                  , REFUND_LOC     /* 환불 경로(01:결과파일환불,02:해약등록,03:청약철회등록,04:행사등록) */
                  , ICHAE_NO       /* 은행이체번호(CMS) */
                  , ICHAE_CD       /* 은행이체코드(CMS) */
                  , DEPR           /* 예금주(CMS) */
                  , REFUND_DT      /* 환불일자 */
                  , REFUND_ETC     /* 비고 */
                  , DEL_FG
                  , REG_DM
                  , REG_MAN
                  , REFUND_REASON  /* 환불사유(0001:환불,0002:입력오류,0003:기타,0004:매입취소) */
                  , CANCEL_DT
                  , REQ_PAY_NO     /* 청구회차 */
                  )
             VALUES
                  (
                    #{accnt_no}
                  , #{pay_mthd}
                  , #{req_day}
                  , #{result_key}
                  , '01'
                  , ''                    /* ICHAE_NO */
                  , ''                    /* ICHAE_CD */
                  , ''                    /* DEPR */
                  , #{pay_cancel_day}     /* REFUND_DT */
                  , #{pay_cancel_note}
                  , 'N'
                  , SYSDATE
                  , #{emple_no}
                  , #{pay_cancel_cd}
                  , SYSDATE
                  , #{req_pay_no}
                  );

            <choose>
                <when test="search_yy != null and search_yy.equalsIgnoreCase('1')">
                    UPDATE TB_MEMBER_WDRW_REQ_2022
                    SET DEL_FG = 'X',
                        UPD_MAN =  #{emple_no},
                        UPD_DM = SYSDATE
                    WHERE 1=1
                    AND PAY_MTHD = '06'
                    AND DEL_FG = 'C'
                    AND REQ_DAY = #{req_day}
                    AND RESULT_KEY = #{result_key};
                </when>
                <when test="search_yy != null and search_yy.equalsIgnoreCase('2')">
                    UPDATE TB_MEMBER_WDRW_REQ_2021
                    SET DEL_FG = 'X',
                        UPD_MAN =  #{emple_no},
                        UPD_DM = SYSDATE
                    WHERE 1=1
                    AND PAY_MTHD = '06'
                    AND DEL_FG = 'C'
                    AND REQ_DAY = #{req_day}
                    AND RESULT_KEY = #{result_key};
                </when>
                <otherwise>
                    UPDATE TB_MEMBER_WDRW_REQ
                    SET DEL_FG = 'X',
                        UPD_MAN =  #{emple_no},
                        UPD_DM = SYSDATE
                    WHERE 1=1
                    AND PAY_MTHD = '06'
                    AND DEL_FG = 'C'
                    AND REQ_DAY = #{req_day}
                    AND RESULT_KEY = #{result_key};
                </otherwise>
               </choose>
        END;
    </insert>

    <!-- ================================================================
     * 날짜 : 20191209
     * 이름 : 송준빈
     * 추가내용 : 카드 무승인 결제 취소건 조회
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_REQ_NAUTH_CNCL
     * ================================================================
     * -->
    <select id="ReqCustMap.getNauthPayCancel" parameterType="map" resultType="resultMap">
        SELECT /* ReqCustMap.getNauthPayCancel */
            MAIN_TBL.*
        FROM
        (
            SELECT
                ACCNT_NO,
                PAY_MTHD,
                PRE_REQ_DAY,
                REQ_DAY,
                RESULT_KEY,
                REFUND_LOC,
                REFUND_DT,
                REFUND_CD,
                REFUND_ETC,
                DEL_FG,
                REG_DM,
                REG_MAN,
                CANCEL_DT,
                REQ_PAY_NO,
                PAY_AMT
            FROM LF_DMUSER.TB_MEMBER_REQ_NAUTH_CNCL
            WHERE 1=1
            <if test="del_fg == null or del_fg == ''">
                AND DEL_FG != 'Y'
            </if>
            <if test="del_fg != null and del_fg != ''">
                AND DEL_FG = #{del_fg}
            </if>


            <if test="data_type == '01'">
                AND REG_DM BETWEEN TO_DATE(#{refund_dt_from} || '000000', 'YYYYMMDDHH24MISS') AND TO_DATE(#{refund_dt_to} || '235959', 'YYYYMMDDHH24MISS')
            </if>
            <if test="data_type == '02'">
                AND REQ_DAY BETWEEN #{refund_dt_from} AND #{refund_dt_to}
            </if>
        ) MAIN_TBL
        WHERE 1=1
    </select>

    <!-- ================================================================
     * 날짜 : 20191216
     * 이름 : 김주용
     * 추가내용 : 무승인등록 취소
     * 대상 테이블 :
     * ================================================================
     * -->
    <update id="ReqCustMap.cancelNauthpayDelete" parameterType="map">
        UPDATE LF_DMUSER.TB_MEMBER_REQ_NAUTH_CNCL
           SET DEL_FG = 'Y'
         WHERE 1=1
           AND DEL_FG IN ('N', 'P')
           AND ACCNT_NO   = #{accnt_no}
           AND REQ_PAY_NO  = #{req_pay_no}
    </update>

    <!-- ================================================================
     * 날짜 : 20191216
     * 이름 : 김주용
     * 추가내용 : 무승인 환불
     * 대상 테이블 :
     * ================================================================
     * -->
    <update id="ReqCustMap.cancelNauthpayRefund" parameterType="map">
        BEGIN /* ReqCustMap.updateMemberMangiDataList */
           UPDATE TB_MEMBER_REQ_REFUND
               SET CANCEL_DT = SYSDATE
                 , REFUND_DT = SYSDATE
             WHERE 1=1
             AND PAY_MTHD = '06'
             AND (ACCNT_NO, RESULT_KEY, REQ_PAY_NO) IN (SELECT ACCNT_NO, RESULT_KEY, REQ_PAY_NO FROM TB_MEMBER_REQ_NAUTH_CNCL WHERE 1=1 AND DEL_FG = 'C');

            MERGE INTO  TB_MEMBER_WDRW_REQ_DAMO AAA
            USING (
                SELECT
                    ACCNT_NO,
                    PRE_REQ_DAY,
                    RESULT_KEY
                FROM TB_MEMBER_REQ_NAUTH_CNCL
                WHERE 1=1
                AND DEL_FG = 'C'
            ) BBB
            ON (AAA.ACCNT_NO = BBB.ACCNT_NO AND AAA.REQ_DAY = BBB.PRE_REQ_DAY AND AAA.RESULT_KEY = BBB.RESULT_KEY)
            WHEN MATCHED THEN UPDATE SET
            AAA.DEL_FG = 'X',
            AAA.UPD_MAN =  #{emple_no},
            AAA.UPD_DM = SYSDATE ;

           UPDATE LF_DMUSER.TB_MEMBER_REQ_NAUTH_CNCL
              SET DEL_FG = 'X'
            WHERE 1=1
              AND DEL_FG = 'C';

           UPDATE LF_DMUSER.TB_MEMBER_REQ_NAUTH_CNCL
              SET DEL_FG = 'P'
            WHERE 1=1
              AND DEL_FG = 'F';
        END;
    </update>

    <!-- ================================================================
     * 날짜 : 20200227
     * 이름 : 송준빈
     * 추가내용 : 회원별 카드,CMS 결과데이터 조회
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_WDRW_REQ, LF_DMUSER.TB_MEMBER_WDRW_RESULT, LF_DMUSER.TB_MEMBER_REQ_REFUND
     * ================================================================
     * -->
    <select id="ReqCustMap.getWdrwAccntLogList" parameterType="map" resultType="resultMap">
        SELECT /* ReqCustMap.getWdrwAccntLogList */
            ROW_NUMBER() OVER(ORDER BY REQ.REQ_DAY DESC, REQ.REG_DM DESC, REQ.REQ_PAY_NO DESC, REQ.ACCNT_NO) PAGE_INDX,
            REQ.ACCNT_NO,
            REQ.MEM_NO,
            PD.PROD_NM,
            REQ_BIT,
            REQ.TRUE_CNT,
            REQ.REQ_PAY_NO,
            (
                SELECT
                    MAX(REQ_PAY_NO)
                FROM VIEW_MEMBER_WDRW_REQ
                WHERE ACCNT_NO = REQ.ACCNT_NO
                AND DEL_FG = 'C'
                AND (ACCNT_NO, RESULT_KEY, REQ_DAY, PAY_MTHD) NOT IN (SELECT ACCNT_NO, RESULT_KEY, REQ_DAY, PAY_MTHD FROM TB_MEMBER_REQ_REFUND WHERE DEL_FG = 'N')
                AND REQ_PAY_NO != 999
            ) AS MAX_REQ_PAY_NO,
            REQ.REG_DM AS REG_DM,
            REQ.PAY_BIT,
            REQ.ICHAE_NO,
            REQ.REQ_DAY,
            PAY_AMT,
            REQ.RESULT_KEY,
            REQ.TID,
            REQ.RESULT_KIND,
            REQ.RESULT_CD,
            CASE WHEN REQ.PAY_MTHD = '04' THEN FN_COM_NM('15', REQ.RESULT_CD)
                 WHEN REQ.PAY_MTHD = '06' THEN REQ.RESULT_MSG
                 ELSE ''
            END AS RESULT_MSG,
            REQ.AUTH_DT,
            REQ.AUTH_CD,
            (
                SELECT
                    COUNT(*)
                FROM TB_MEMBER_REQ_NAUTH_CNCL
                WHERE ACCNT_NO = REQ.ACCNT_NO
                AND REQ_PAY_NO = REQ.REQ_PAY_NO
                AND DEL_FG IN ('P', 'N', 'R')
            ) AS CNCL_CNT,
            CASE WHEN REQ.PAY_MTHD = '04'  THEN  FN_COM_NM('63', NVL(REQ.ICHAE_CD,REQ.ICHAE_CD))
                 WHEN REQ.PAY_MTHD = '06' AND REQ.RESULT_KIND = '01'  AND NVL(REQ.INI_YN, 'N') != 'Y' THEN  REQ.ICHAE_CD
                 WHEN REQ.PAY_MTHD = '06' AND REQ.RESULT_KIND != '01' AND NVL(REQ.INI_YN, 'N') != 'Y' THEN  FN_COM_NM('0120', NVL(REQ.ICHAE_CD,REQ.ICHAE_CD))
                 WHEN REQ.PAY_MTHD = '06' AND REQ.RESULT_KIND = '01'  AND NVL(REQ.INI_YN, 'N') = 'Y' THEN FN_COM_NM('0196', NVL(REQ.ICHAE_CD,REQ.ICHAE_CD))
                 WHEN REQ.PAY_MTHD = '06' AND REQ.RESULT_KIND != '01' AND NVL(REQ.INI_YN, 'N') = 'Y' THEN FN_COM_NM('0196', NVL(REQ.ICHAE_CD,REQ.ICHAE_CD))
            ELSE '' END AS ICHAE_CD,
            MRR.REG_DM AS REFUND_REG_DT,
            TO_CHAR(MRR.CANCEL_DT, 'YYYYMMDDHH24MISS') AS CANCEL_DT,
            REQ.ETC,
            REQ.PAY_MTHD,
            REQ.DEL_FG,
            CASE WHEN LENGTH(REQ.REG_MAN) = 10 THEN (SELECT EMPLE_NM FROM EMPLOYEE WHERE EMPLE_NO = REQ.REG_MAN)
                 ELSE REQ.REG_MAN
            END AS REG_MAN,
            REQ.AUTH_YN,
            REQ.FRANCHISEE_NO
        FROM LF_DMUSER.VIEW_MEMBER_WDRW_REQ REQ INNER JOIN
            LF_DMUSER.PRODUCT PD ON REQ.PROD_CD = PD.PROD_CD LEFT OUTER JOIN
            LF_DMUSER.TB_MEMBER_REQ_REFUND MRR ON MRR.ACCNT_NO = REQ.ACCNT_NO AND MRR.PAY_MTHD = REQ.PAY_MTHD AND MRR.DEL_FG = 'N' AND MRR.REQ_DAY = REQ.REQ_DAY AND NVL(MRR.RESULT_KEY,'JL32') = NVL(REQ.RESULT_KEY,'JL32')
        WHERE 1=1
        AND REQ.DEL_FG IN ('C', 'F', 'X')
        AND REQ.ACCNT_NO = #{accnt_no}
    </select>

    <!-- ===============================================================
     * 날짜 : 메인
     * 이름 : /dlw/cust/cust-acnt/list
     * 추가내용 :
     * 대상 테이블 :
     * ================================================================
     * -->
    <select id="ReqCustMap.getMemberRefundListCount" parameterType="map" resultType="int">
        SELECT /* ReqCustMap.getMemberRefundListCount */
               COUNT(*) AS ICNT
          FROM (

            SELECT *

              FROM ( SELECT MRR.ACCNT_NO      /* 회원번호                                                                   */
                           ,MBR.MEM_NO        /* 고유번호                                                                   */
                           ,MBR.MEM_NM        /* 회원명                                                                     */
                           ,MRR.PAY_MTHD      /* 납입방법(04:CMS, 06:Card)                                                  */
                           ,CASE WHEN MRR.CANCEL_DT IS NOT NULL
                                THEN CASE WHEN MWR.RESULT_KIND = '01' AND TO_CHAR(MRR.CANCEL_DT, 'YYMMDD') > TO_CHAR(TO_DATE(AUTH_DT), 'YYMMDD')
                                           THEN '후취소'
                                           WHEN MWR.RESULT_KIND != '01' AND NVL(MWR.INI_YN,'N') = 'N' AND TO_CHAR(MRR.CANCEL_DT, 'YYMMDD') > SUBSTR(AUTH_DT, 1, 6)
                                           THEN '후취소'
                                           WHEN MWR.RESULT_KIND != '01' AND NVL(MWR.INI_YN,'N') = 'Y' AND TO_CHAR(MRR.CANCEL_DT, 'YYMMDD') > SUBSTR(AUTH_DT, 3, 8)
                                           THEN '후취소'
                                           WHEN MWR.RESULT_KIND = '01' AND TO_CHAR(MRR.CANCEL_DT, 'YYMMDD') = TO_CHAR(TO_DATE(AUTH_DT), 'YYMMDD')
                                           THEN '취소'
                                           WHEN MWR.RESULT_KIND != '01' AND NVL(MWR.INI_YN,'N') = 'N'  AND TO_CHAR(MRR.CANCEL_DT, 'YYMMDD') = SUBSTR(AUTH_DT, 1, 6)
                                           THEN '취소'
                                           WHEN MWR.RESULT_KIND != '01' AND NVL(MWR.INI_YN,'N') = 'Y' AND TO_CHAR(MRR.CANCEL_DT, 'YYMMDD') = SUBSTR(AUTH_DT, 3, 8)
                                           THEN '취소'
                                           ELSE ''
                                       END
                                 ELSE ''
                            END AS CANCEL_GB
                           ,MWR.PAY_BIT       /* PAYBIT                                                                    		 */
                           ,MRR.REQ_DAY       /* 청구일자                                                                   */
                           ,MWR.PAY_AMT       /* 청구금액                                                                   */
                           ,MWR.KSTBIT        /* 회원상태(01:대기, 02:가입, 03:해약, 04:행사, 09:만기)                      */
                           ,MRR.RESULT_KEY    /* 결과키                                                                     */
                           ,MRR.REFUND_LOC    /* 환불 경로(01:결과파일환불,02:해약등록,03:청약철회등록,04:행사등록)         */
                           ,MRR.ICHAE_NO      /* 은행이체번호(CMS)                                                          */
                           ,MRR.ICHAE_CD      /* 은행이체코드(CMS)                                                          */
                           ,MRR.DEPR          /* 예금주(CMS)                                                                */
                           ,MRR.REFUND_DT     /* 환불일자                                                                   */
                           ,MRR.REG_DM        /* 등록일자                                                                   */
                           ,MRR.REG_MAN       /* 등록자ID                                                                   */
                           ,MWR.DEL_FG        /* 청구여부(N:청구전 Y:삭제 R:청구 C:완료(변환/입금) F:완료(실패) X:입금취소) */
                           ,MWR.REQ_PAY_NO    /* 산출청구회차                                                               */
                           ,MWS.RESULT_CD     /* 결과코드                                                                   */
                           ,MWS.RESULT_MSG    /* 결과메세지                                                                 */
                           <!-- ,TO_CHAR(MWS.CANCEL_DT, 'YYYYMMDD') AS CANCEL_DT /* 실시간 취소 일자                             */ -->
                           ,TO_CHAR(MRR.CANCEL_DT, 'YYYYMMDDHH24MISS') AS CANCEL_DT                    /* 실시간 취소 일자  */
                           ,MWS.TID           /* 결과키(TID, CMS결과키)                                                     */
                           ,AUTH_DT     /* 승인일자          */
                           ,MWS.AUTH_CD       /* 승인번호                                                                   */
                           ,MRR.REFUND_REASON /* 환불사유(환불사유코드)                                                     */
                           ,MRR.REFUND_ETC    /* 비고                                                                       */
                           ,MRR.AUTH_YN
                           ,(SELECT DEL_FG FROM TB_MEMBER_REQ_NAUTH_CNCL CNCL WHERE 1=1 AND CNCL.ACCNT_NO = MRR.ACCNT_NO  AND CNCL.REQ_PAY_NO = MRR.REQ_PAY_NO AND CNCL.DEL_FG != 'Y') AS CNCL_DEL_FG
                       FROM TB_MEMBER_REQ_REFUND MRR              /* 고객환불정보                                           */
                       LEFT OUTER JOIN TB_MEMBER_WDRW_REQ MWR     /* 고객청구요청정보                                       */
                               ON MRR.ACCNT_NO = MWR.ACCNT_NO
                              AND MRR.PAY_MTHD = MWR.PAY_MTHD
                              AND MRR.REQ_DAY = MWR.REQ_DAY
                              AND MRR.REQ_PAY_NO = MWR.REQ_PAY_NO
                              AND MRR.RESULT_KEY = MWR.RESULT_KEY
                       LEFT OUTER JOIN TB_MEMBER_WDRW_RESULT MWS  /* 고객청구결과정보                                       */
                               ON MWR.ACCNT_NO = MWS.ACCNT_NO
                              AND MWR.RESULT_KEY = MWS.RESULT_KEY
                              AND MWR.REQ_DAY = MWS.REQ_DAY
                       INNER JOIN MEM_PROD_ACCNT MPA              /* 고객가입상품정보                                       */
                               ON MPA.ACCNT_NO = MRR.ACCNT_NO
                              AND MPA.DEL_FG = 'N'
                       INNER JOIN MEMBER MBR                      /* 고객기본정보                                           */
                               ON MBR.MEM_NO = MPA.MEM_NO
                              AND MBR.DEL_FG = 'N'
                       LEFT OUTER JOIN PRODUCT_NO_DATA PND        /* 상품회차별정보                                         */
                               ON MWR.PROD_CD = PND.PROD_CD
                              AND MWR.REQ_PAY_NO = PND.NO
                      WHERE 1=1
                      <if test="data_type == '01' and new_refund.equalsIgnoreCase('N')">
                          <if test="reg_dm_stt != null and reg_dm_stt != '' and reg_dm_end != null and reg_dm_end != '' and (accnt_no == null or accnt_no == '')">
                              AND TO_CHAR(MRR.REG_DM,'YYYYMMDD') BETWEEN #{reg_dm_stt} AND #{reg_dm_end}
                          </if>
                      </if>
                      <if test="data_type == '02' and new_refund.equalsIgnoreCase('N')">
                          <if test="reg_dm_stt != null and reg_dm_stt != '' and reg_dm_end != null and reg_dm_end != '' and (accnt_no == null or accnt_no == '')">
                              AND TO_CHAR(MRR.CANCEL_DT,'YYYYMMDD') BETWEEN #{reg_dm_stt} AND #{reg_dm_end}
                          </if>
                      </if>
                      <if test="accnt_no != null and accnt_no != ''">
                          AND MRR.ACCNT_NO = #{accnt_no}
                      </if>
                      <if test="mem_nm != null and mem_nm != ''">
                          AND MBR.MEM_NM = #{mem_nm}
                      </if>
                      <if test="refund_loc != null and refund_loc != ''">
                          AND MRR.REFUND_LOC = #{refund_loc}
                      </if>
                      <if test="req_stat != null and req_stat != '' and new_refund.equalsIgnoreCase('N')">
                          AND MWR.DEL_FG = #{req_stat}                  /* 청구여부(N:청구전 Y:삭제 R:청구 C:완료(변환/입금) F:완료(실패) X:입금취소) */
                      </if>
                      <!--
                      <if test="del_fg != null and del_fg != ''">
                          AND MRR.DEL_FG = #{del_fg}
                      </if>
                       -->
                      <if test="req_day != null and req_day != ''">
                          AND MRR.REQ_DAY = #{req_day}                  /* 청구일자 */
                      </if>
                      <if test="pay_mthd != null and pay_mthd != ''">
                          AND MRR.PAY_MTHD = #{pay_mthd}                /* 납입방법(04:CMS, 06:Card) */
                      </if>
                      <if test="auth_yn != null and auth_yn != ''">
                          AND MRR.AUTH_YN = #{auth_yn}
                      </if>
                      <if test="new_refund != null and new_refund != '' and new_refund.equalsIgnoreCase('Y')">
                          AND MWR.REQ_DAY >= '20210101'
                          AND NVL(TO_CHAR(MRR.CANCEL_DT,'YYYYMMDD'),'99999999') = '99999999'
                      </if>
                      AND MRR.DEL_FG = 'N'
                   ) MAIN_TBL
             )
             WHERE 1=1
               <if test="cancel_gb != null and cancel_gb != ''">
               AND CANCEL_GB = #{cancel_gb}
               </if>
    </select>

    <select id="ReqCustMap.getMemberRefundList" parameterType="map" resultType="resultMap">
        SELECT /* ReqCustMap.getMemberRefundList */
               *
          FROM

          ( SELECT ROW_NUMBER() OVER(ORDER BY ${orderBy} ${orderDirection}) PAGE_INDX /* PAGE INDX                 */
                 , MAIN_TBL.*
              FROM
               ( SELECT MRR.ACCNT_NO      /* 회원번호                                                                   */
                       ,MWR.PROD_CD
                       ,(SELECT MAX(PD.PROD_NM) FROM PRODUCT PD WHERE 1=1 AND PD.PROD_CD = MWR.PROD_CD) AS PROD_NM
                       ,MWR.ICHAE_NO AS BID
                       ,MBR.MEM_NO        /* 고유번호                                                                   */
                       ,MBR.MEM_NM        /* 회원명                                                                     */
                       ,MRR.PAY_MTHD      /* 납입방법(04:CMS, 06:Card)                                                  */
                       ,CASE WHEN MRR.CANCEL_DT IS NOT NULL
                                 THEN CASE WHEN MWR.RESULT_KIND = '01' AND TO_CHAR(MRR.CANCEL_DT, 'YYMMDD') > TO_CHAR(TO_DATE(AUTH_DT), 'YYMMDD')
                                           THEN '후취소'
                                           WHEN MWR.RESULT_KIND != '01' AND NVL(MWR.INI_YN,'N') = 'N' AND TO_CHAR(MRR.CANCEL_DT, 'YYMMDD') > SUBSTR(AUTH_DT, 1, 6)
                                           THEN '후취소'
                                           WHEN MWR.RESULT_KIND != '01' AND NVL(MWR.INI_YN,'N') = 'Y' AND TO_CHAR(MRR.CANCEL_DT, 'YYMMDD') > SUBSTR(AUTH_DT, 3, 8)
                                           THEN '후취소'
                                           WHEN MWR.RESULT_KIND = '01' AND TO_CHAR(MRR.CANCEL_DT, 'YYMMDD') = TO_CHAR(TO_DATE(AUTH_DT), 'YYMMDD')
                                           THEN '취소'
                                           WHEN MWR.RESULT_KIND != '01' AND NVL(MWR.INI_YN,'N') = 'N'  AND TO_CHAR(MRR.CANCEL_DT, 'YYMMDD') = SUBSTR(AUTH_DT, 1, 6)
                                           THEN '취소'
                                           WHEN MWR.RESULT_KIND != '01' AND NVL(MWR.INI_YN,'N') = 'Y' AND TO_CHAR(MRR.CANCEL_DT, 'YYMMDD') = SUBSTR(AUTH_DT, 3, 8)
                                           THEN '취소'
                                           ELSE ''
                                       END
                                 ELSE ''
                             END AS CANCEL_GB
                       ,MWR.PAY_BIT       /* PAYBIT                                                                       */
                       ,MRR.REQ_DAY       /* 청구일자                                                                   */
                       ,MWR.PAY_AMT       /* 청구금액                                                                   */
                       ,(CASE WHEN SUBSTR(MWR.PAY_BIT,1,1) != 'X' THEN PND.AMT     ELSE 0 END) AS TRUE_AMT    /* 상조금 */
                       ,(CASE WHEN SUBSTR(MWR.PAY_BIT,2,1) != 'X' THEN PND.REL_AMT ELSE 0 END) AS REL_AMT     /* 결합금 */
                       ,(CASE WHEN SUBSTR(MWR.PAY_BIT,3,1) != 'X' THEN PND.ADD_AMT ELSE 0 END) AS ADD_AMT     /* 추가금 */
                       ,MWR.KSTBIT        /* 회원상태(01:대기, 02:가입, 03:해약, 04:행사, 09:만기)                      */
                       ,MRR.RESULT_KEY    /* 결과키                                                                     */
                       ,MWR.RESULT_KIND   /* 결과유형 (01:파일, 02:실시간, 03:자유,04:기타)                             */
                       ,MRR.REFUND_LOC    /* 환불 경로(01:결과파일환불,02:해약등록,03:청약철회등록,04:행사등록)         */
                       <!--
                       ,MRR.ICHAE_NO      /* 은행이체번호(CMS)                                                          */
                       ,MRR.ICHAE_CD      /* 은행이체코드(CMS)                                                          */
                        -->
                       ,CASE WHEN MWR.PAY_MTHD = '04'
                             THEN CASE WHEN NVL(MRR.ICHAE_NO, 'N') = 'N'
                                       THEN MWR.ICHAE_NO
                                       ELSE MRR.ICHAE_NO
                                   END
                             ELSE ''
                         END AS ICHAE_NO
                       ,CASE WHEN MWR.PAY_MTHD = '04'
                             THEN CASE WHEN NVL(MRR.ICHAE_CD, 'N') = 'N'
                                       THEN MWR.ICHAE_CD
                                       ELSE MRR.ICHAE_CD
                                  END
                             ELSE ''
                         END AS ICHAE_CD
                       ,CASE WHEN MWR.PAY_MTHD = '06' AND NVL(MWR.INI_YN, 'N') != 'Y' THEN LF_DMUSER.FN_COM_NM('0120', MWR.ICHAE_CD)
                             WHEN MWR.PAY_MTHD = '06' AND NVL(MWR.INI_YN, 'N') = 'Y' THEN LF_DMUSER.FN_COM_NM('0196', MWR.ICHAE_CD)
                             ELSE ''
                             END AS CARD_CD
                       ,MRR.DEPR          /* 예금주(CMS)                                                                */
                       ,MRR.REFUND_DT     /* 환불일자                                                                   */
                       ,MRR.REG_DM        /* 등록일자                                                                   */
                       ,MRR.REG_MAN       /* 등록자ID                                                                   */
                       ,MWR.DEL_FG        /* 청구여부(N:청구전 Y:삭제 R:청구 C:완료(변환/입금) F:완료(실패) X:입금취소) */
                       ,MWR.REQ_PAY_NO    /* 산출청구회차                                                               */
                       ,MWS.RESULT_CD     /* 결과코드                                                                   */
                       ,MWS.RESULT_MSG    /* 결과메세지                                                                 */
                       <!-- ,TO_CHAR(MWS.CANCEL_DT, 'YYYYMMDD') AS CANCEL_DT /* 실시간 취소 일자                             */ -->
                       ,TO_CHAR(MRR.CANCEL_DT, 'YYYYMMDDHH24MISS') AS CANCEL_DT                    /* 실시간 취소 일자  */
                       ,MWS.TID           /* 결과키(TID, CMS결과키)                                                     */
                       ,AUTH_DT     /* 승인일자          */
                       ,MWS.AUTH_CD       /* 승인번호                                                                   */
                       ,MRR.REFUND_REASON /* 환불사유(환불사유코드)                                                     */
                       ,MRR.REFUND_ETC    /* 비고                                                                       */
                       ,MRR.AUTH_YN
                       ,MWR.FRANCHISEE_NO
                       ,MWR.INI_YN
                       ,(SELECT DEL_FG FROM TB_MEMBER_REQ_NAUTH_CNCL CNCL WHERE 1=1 AND CNCL.ACCNT_NO = MRR.ACCNT_NO  AND CNCL.REQ_PAY_NO = MRR.REQ_PAY_NO AND CNCL.DEL_FG != 'Y') AS CNCL_DEL_FG
                   FROM TB_MEMBER_REQ_REFUND MRR              /* 고객환불정보                                           */
                   LEFT OUTER JOIN TB_MEMBER_WDRW_REQ MWR     /* 고객청구요청정보                                       */
                           ON MRR.ACCNT_NO = MWR.ACCNT_NO
                          AND MRR.PAY_MTHD = MWR.PAY_MTHD
                          AND MRR.REQ_DAY = MWR.REQ_DAY
                          AND MRR.REQ_PAY_NO = MWR.REQ_PAY_NO
                          AND MRR.RESULT_KEY = MWR.RESULT_KEY
                   LEFT OUTER JOIN TB_MEMBER_WDRW_RESULT MWS  /* 고객청구결과정보                                       */
                           ON MWR.ACCNT_NO = MWS.ACCNT_NO
                          AND MWR.RESULT_KEY = MWS.RESULT_KEY
                          AND MWR.REQ_DAY = MWS.REQ_DAY
                   INNER JOIN MEM_PROD_ACCNT MPA              /* 고객가입상품정보                                       */
                           ON MPA.ACCNT_NO = MRR.ACCNT_NO
                          AND MPA.DEL_FG = 'N'
                   INNER JOIN MEMBER MBR                      /*  고객기본정보                                           */
                           ON MBR.MEM_NO = MPA.MEM_NO
                          AND MBR.DEL_FG = 'N'
                   LEFT OUTER JOIN PRODUCT_NO_DATA PND        /* 상품회차별정보                                         */
                           ON MWR.PROD_CD = PND.PROD_CD
                          AND MWR.REQ_PAY_NO = PND.NO
                  WHERE 1=1
                  <if test="data_type == '01' and new_refund.equalsIgnoreCase('N')">
                      <if test="reg_dm_stt != null and reg_dm_stt != '' and reg_dm_end != null and reg_dm_end != '' and (accnt_no == null or accnt_no == '')">
                      AND TO_CHAR(MRR.REG_DM,'YYYYMMDD') BETWEEN #{reg_dm_stt} AND #{reg_dm_end}
                      </if>
                  </if>
                  <if test="data_type == '02' and new_refund.equalsIgnoreCase('N')">
                      <if test="reg_dm_stt != null and reg_dm_stt != '' and reg_dm_end != null and reg_dm_end != '' and (accnt_no == null or accnt_no == '')">
                      AND TO_CHAR(MRR.CANCEL_DT,'YYYYMMDD') BETWEEN #{reg_dm_stt} AND #{reg_dm_end}
                      </if>
                  </if>
                  <if test="accnt_no != null and accnt_no != ''">
                      AND MRR.ACCNT_NO = #{accnt_no}
                  </if>
                  <if test="mem_nm != null and mem_nm != ''">
                      AND MBR.MEM_NM = #{mem_nm}
                  </if>
                  <if test="refund_loc != null and refund_loc != ''">
                      AND MRR.REFUND_LOC = #{refund_loc}
                  </if>
                  <if test="req_stat != null and req_stat != '' and new_refund.equalsIgnoreCase('N')">
                      AND MWR.DEL_FG = #{req_stat}                  /* 청구여부(N:청구전 Y:삭제 R:청구 C:완료(변환/입금) F:완료(실패) X:입금취소) */
                  </if>
                  <!--
                  <if test="del_fg != null and del_fg != ''">
                      AND MRR.DEL_FG = #{del_fg}
                  </if>
                  -->
                  <if test="req_day != null and req_day != ''">
                      AND MRR.REQ_DAY = #{req_day}
                  </if>
                  <if test="pay_mthd != null and pay_mthd != ''">
                      AND MRR.PAY_MTHD = #{pay_mthd}
                  </if>
                  <if test="auth_yn != null and auth_yn != ''">
                      AND MRR.AUTH_YN = #{auth_yn}
                  </if>
                  <if test="new_refund != null and new_refund != '' and new_refund.equalsIgnoreCase('Y')">
                      AND MWR.REQ_DAY >= '20210101'
                      AND NVL(TO_CHAR(MRR.CANCEL_DT,'YYYYMMDD'),'99999999') = '99999999'
                  </if>
                  AND MRR.DEL_FG = 'N'
               ) MAIN_TBL

            WHERE 1=1
              <if test="cancel_gb != null and cancel_gb != ''">
              AND CANCEL_GB = #{cancel_gb}
              </if>
         )

         WHERE 1=1
    </select>

    <!-- ================================================================
     * 날짜 : 메인
     * 이름 : /dlw/cms/gasu-dtl/list
     * 추가내용 :
     * 대상 테이블 :
     * ================================================================
     * -->
    <select id="ReqCustMap.getEmplDtptList" parameterType="map" resultType="resultMap">


        SELECT /* DlwEmplMap.getEmplDtptList */
               B.*
          FROM (SELECT 	<choose>
                            <when test="orderBy != null and orderBy != ''">
                                ROW_NUMBER() OVER(ORDER BY ${orderBy} ${orderDirection}) PAGE_INDX
                            </when>
                            <otherwise>
                                ROW_NUMBER() OVER(ORDER BY UPD_DM DESC) PAGE_INDX
                            </otherwise>
                        </choose>
                     , A.*
                  FROM (SELECT EMPLE_NO, DEPT_CD, EMPLE_NM
                             , FN_DEPT_NM(DEPT_CD) AS DEPT_NM
                             , CELL
                             , UPD_DM
                             , APPFORM_DAY
                          FROM EMPLOYEE EMP
                        WHERE 1=1
            <if test="emple_no != null and emple_no != ''">
                AND (EMPLE_NO LIKE '%' || #{emple_no} || '%' OR GRP_EMPLE_NO = #{emple_no})
            </if>
            <if test="not_in_emple_no != null and not_in_emple_no != ''">
                AND EMPLE_NO <![CDATA[<>]]> #{not_in_emple_no}
            </if>
            <if test="dept_cd != null and dept_cd != ''">
                AND DEPT_CD = #{dept_cd}
            </if>
            <if test="emple_nm != null and emple_nm != ''">
                AND EMPLE_NM LIKE '%'||#{emple_nm}||'%'
            </if>
            <if test="dataAthrQury != null and dataAthrQury != ''">
                ${dataAthrQury}
            </if>
            <if test='grpEmpYn == "N"'>
             <![CDATA[   AND (EMP.GRP_EMPLE_NO IS NOT NULL
                     AND REPLACE(EMP.GRP_EMPLE_NO, ' ', '') <> ' ')  ]]>
            </if>
                        ) A
                ) B
        <if test="startLine != null and startLine != '' and endLine != null and endLine != ''">
            <![CDATA[
             WHERE PAGE_INDX >= #{startLine}
               AND PAGE_INDX < #{endLine}
            ]]>
        </if>
    </select>

    <select id="ReqCustMap.getDataAthrFunc" parameterType="map" resultType="String">
        SELECT /* ReqCustMap.getDataAthrFunc */
               NVL(FN_DATA_AUTH_COND_GEN(#{paramEmpleNo}, #{paramAs}), ' ') dataAuthQry
          FROM DUAL
    </select>

    <select id="ReqCustMap.getDlwCustAccntListCount" parameterType="map" resultType="int">

        SELECT /* ReqCustMap.getDlwCustAccntListCount */
               COUNT(*)
          FROM MEM_PROD_ACCNT A JOIN MEMBER B
                                  ON A.MEM_NO = B.MEM_NO
                                 AND B.DEL_FG = 'N'
                                JOIN PRODUCT C
                                  ON A.PROD_CD = C.PROD_CD
                                JOIN EMPLOYEE EMP
                                  ON EMP.EMPLE_NO = A.EMPLE_NO
                     LEFT OUTER JOIN CMS_MEM D
                                  ON A.ACCNT_NO = D.ACCNT_NO
                                 AND D.DEL_FG = 'N'
                     LEFT OUTER JOIN CARD_MEM E
                                  ON A.ACCNT_NO = E.ACCNT_NO
                                 AND E.DEL_FG = 'N'
         WHERE A.DEL_FG = 'N'
        <if test="dataAthrQury != null and dataAthrQury != '' and user_athrCd != 'TM40'">	 <!-- 2018.03.20 TM40이면 제외  -->
             ${dataAthrQury}
         </if>
         <if test="ns_yn != null and ns_yn.equalsIgnoreCase('Y')">
             AND EMP.DEPT_CD = '1602'
         </if>
         <if test="srch_vl != null and srch_vl != ''">
             <if test="srch_typ == 'all'">
                 AND (A.ACCNT_NO = #{srch_vl}
                      OR  A.MEM_NO = #{srch_vl}
                      OR  B.MEM_NM LIKE '%' || #{srch_vl} || '%'
                      OR  B.IDN_NO LIKE '%' || #{srch_vl} || '%'
                      OR  D.BANK_ACCNT_NO = #{srch_vl}
                      )
             </if>
             <if test="srch_typ == 'mem_nm'">
                 AND B.MEM_NM LIKE #{srch_vl} || '%'
             </if>
             <if test="srch_typ == 'accnt_no'">
                 AND A.ACCNT_NO = #{srch_vl}
             </if>
             <if test="srch_typ == 'mem_no'">
                 AND A.MEM_NO = #{srch_vl}
             </if>
             <if test="srch_typ == 'birth'">
                 AND B.IDN_NO LIKE '%' || #{srch_vl} || '%'
             </if>
             <if test="srch_typ == 'bank_accnt_no'">
                 AND  D.BANK_ACCNT_NO LIKE '%' || #{srch_vl} || '%'
             </if>
             <if test="srch_typ == 'pre_accnt_no'">
                 AND A.OLD_MID LIKE '%' || #{srch_vl} || '%'
             </if>
         </if>
         <if test="srch_typ == 'ichae_dt'">
             <if test="ichae_stt_dt != null and ichae_stt_dt != '' and ichae_end_dt != null and ichae_end_dt != ''">
                 AND  TO_NUMBER(A.ICHAE_DT) <![CDATA[>=]]> #{ichae_stt_dt}
                 AND  TO_NUMBER(A.ICHAE_DT) <![CDATA[<=]]> #{ichae_end_dt}
             </if>
         </if>

         <if test="option == 'cms_non'">
             AND a.accnt_no NOT IN (SELECT accnt_no
                                      FROM CMS_MEM
                                     WHERE del_fg = 'N')
             AND a.accnt_no NOT IN (SELECT accnt_no
                                      FROM NEW_CANCL_APP
                                     WHERE stat IN ('01', '02'))
         </if>
         <if test="option == 'cms'">
             AND a.accnt_no IN (SELECT accnt_no
                                  FROM CMS_MEM
                                 WHERE del_fg = 'N')
             AND a.accnt_no NOT IN (SELECT accnt_no
                                      FROM wdrw_req
                                     WHERE stat IN ('01', '02'))
             AND a.accnt_no NOT IN (SELECT accnt_no
                                      FROM card_wdrw_req
                                     WHERE stat IN ('01', '02'))
         </if>

         <if test="option == 'card_non'">
             AND a.accnt_no NOT IN (SELECT accnt_no
                                      FROM CARD_MEM
                                     WHERE del_fg = 'N')
         </if>
         <if test="option == 'card'">
             AND a.accnt_no IN (SELECT accnt_no
                                  FROM CARD_MEM
                                 WHERE del_fg = 'N')
             AND a.accnt_no NOT IN (SELECT accnt_no
                                      FROM card_wdrw_req
                                     WHERE stat IN ('01', '02'))
             AND a.accnt_no NOT IN (SELECT accnt_no
                                      FROM card_wdrw_req
                                     WHERE stat IN ('01', '02'))
         </if>
         <if test="option == 'call'">
             <!-- 수정 : 고객만족센터 파일 산출에 카드산출 포함 by lbk_2013_06_19  -->
             AND
             (
                 (
                 a.PAY_MTHD = '04'
                 AND a.accnt_no IN (SELECT accnt_no
                                      FROM CMS_MEM
                                     WHERE del_fg = 'N')
                 AND a.accnt_no NOT IN (SELECT accnt_no
                                          FROM wdrw_req
                                         WHERE stat IN ('01', '02'))
                 and a.accnt_no NOT IN (SELECT accnt_no
                                          FROM wdrw_req_call_center
                                         WHERE WDRW_REQ_YN = 'N'
                                           AND DEL_FG IS NULL)
                 )
                 OR
                 (
                 a.PAY_MTHD = '06'
                 AND a.accnt_no IN (SELECT accnt_no
                                      FROM CARD_MEM
                                     WHERE del_fg = 'N')
                 AND a.accnt_no NOT IN (SELECT accnt_no
                                          FROM card_wdrw_req
                                         WHERE stat IN ('01', '02'))
                 and a.accnt_no NOT IN (SELECT accnt_no
                                          FROM wdrw_req_call_center
                                         WHERE WDRW_REQ_YN = 'N'
                                           AND DEL_FG IS NULL)
                 )
             )

         </if>
         <if test="option == 'pay_able'">
             <!-- AND FN_ACCNT_STAT(a.accnt_no) in ('Y','E') //청약철회가 아니면 조회되도록 수정 by lbk_2012_07_31 -->
             AND FN_EVENT(a.accnt_no) != '청약철회'
         </if>
         <if test="option == 'cms_card_non'">
             AND a.accnt_no NOT IN (SELECT accnt_no
                                      FROM CMS_MEM
                                     WHERE del_fg = 'N')
             AND a.accnt_no NOT IN (SELECT accnt_no
                                      FROM NEW_CANCL_APP
                                     WHERE stat IN ('01', '02'))
             AND a.accnt_no NOT IN (SELECT accnt_no
                                      FROM CARD_MEM
                                     WHERE del_fg = 'N')
         </if>
         <if test="option == 'event'">
             AND a.accnt_no IN (SELECT accnt_no
                                      FROM EVENT
                                     WHERE del_fg = 'N')
         </if>
         <if test="option == 'prod_trans'">
             <!-- 상품변경은 정상 구좌이면서 출금이체 신청전,중이 아니면서 양도양수 공제 신고된건만 조회  -->
             AND FN_ACCNT_STAT(a.accnt_no) = 'Y'
             AND a.accnt_no NOT IN (SELECT accnt_no
                                      FROM CMS_MEM
                                     WHERE del_fg = 'N')
             AND a.accnt_no NOT IN (SELECT accnt_no
                                      FROM NEW_CANCL_APP
                                     WHERE stat IN ('01', '02'))
             AND a.accnt_no NOT IN (SELECT ACCNT_NO FROM TRANSFER_BRKDN WHERE NEW_YN IN ('Y', 'S', 'E'))
         </if>
         <!-- ORDER BY b.mem_nm -->
    </select>

    <select id="ReqCustMap.getDlwCustAccntList" parameterType="map" resultType="resultMap">
        <!-- sql-common.xml selectAccntInfo -->

        SELECT /* ReqCustMap.getDlwCustAccntList */
               B.*
          FROM (SELECT A.*,
                    <choose>
                        <when test="orderBy != null and orderBy != ''">
                            ROW_NUMBER() OVER(ORDER BY ${orderBy} ${orderDirection}) AS PAGE_INDX
                        </when>
                        <otherwise>
                            ROW_NUMBER() OVER(ORDER BY UPD_DM DESC) AS PAGE_INDX
                        </otherwise>
                    </choose>
                 FROM (SELECT A.ACCNT_NO
                            , A.MEM_NO
                            , A.RESORT_NO
                            , B.MEM_NM
                            , B.HOME_TEL
                            , B.CELL AS CELL
                            , B.WRPL_TEL
                            , CASE WHEN LENGTH(NVL(TO_CHAR(B.IDN_NO), '')) = 10
                                   THEN B.IDN_NO
                                   ELSE SUBSTR(B.BRTH_MON_DAY, -6)
                               END IDN_NO
                            , A.PROD_CD
                            , C.PROD_NM
                            , C.PROD_AMT
                            , C.MON_PAY_AMT
                            , C.EXPR_NO
                            , A.EMPLE_NO
                            , EMP.EMPLE_NM
                            , A.APPFM_NO
                            , JOIN_DT
                            , COMPT_DT
                            , A.BEF_EMPLE_CD
                            , A.PAY_PERD
                            , A.PAY_MTHD
                            , A.JOIN_PROD
                            , A.NEW_CHAN_GUNSU
                            , A.CERTF_RCV_CHK
                            , A.PAY_STAT_1NO
                            , D.ICHAE_DT
                            , A.BANK_ACCNT_NO AS BANK_ACCNT_NO
                            , A.OLD_MID
                            , A.REG_DM
                            , A.REG_MAN
                            , A.UPD_DM
                            , A.UPD_MAN
                              , FN_ACCNT_STAT(A.ACCNT_NO) AS ACCNT_STAT
                            , (SELECT NVL(MAX (NO),1)
                                 FROM PAY_MNG
                                WHERE ACCNT_NO = A.ACCNT_NO
                                  AND DEL_FG = 'N') * C.MON_PAY_AMT AS TOTAL_PAY
                            , (SELECT NVL(MAX (NO),1)
                                 FROM PAY_MNG
                                WHERE ACCNT_NO = A.ACCNT_NO
                                  AND DEL_FG = 'N') LAST_NO
                            , (SELECT NVL(MAX (NO),0)
                                 FROM PAY_MNG
                                WHERE ACCNT_NO = A.ACCNT_NO
                                  AND DEL_FG = 'N') REAL_PAY_NO
                            , A.DED_NO
                            , NVL(A.JOIN_CL,'01') AS JOIN_CL
                            , CASE WHEN (SELECT COUNT(ACCNT_NO) FROM TRANSFER_BRKDN WHERE ACCNT_NO = A.ACCNT_NO) > 0
                                   THEN 'Y'
                                   ELSE 'N'
                               END AS TRANS_GUBUN
                            , B.BRTH_MON_DAY
                            , NVL((SELECT CELL
                                        FROM EMPLOYEE
                                       WHERE EMPLE_NO = A.EMPLE_NO), '') AS EMP_CELL
                            , FN_EVENT(A.ACCNT_NO) AS JOIN_STAT
                            , FN_EVENT(A.ACCNT_NO) AS STAT
                            , FN_YEN_CHE(A.ACCNT_NO) AS PAY_STAT
                            , (SELECT NVL(MAX (NO),0)
                                 FROM PAY_MNG
                                WHERE ACCNT_NO = A.ACCNT_NO
                                  AND DEL_FG = 'N') AS PAY_NO
                            , (SELECT NVL(MAX (NO),0)
                                 FROM PAY_MNG_DTL
                                WHERE ACCNT_NO = A.ACCNT_NO
                                  AND DEL_FG = 'N') AS PAY_ALLT_NO
                            , (SELECT NVL(MAX (NO),0)
                                 FROM PAY_MNG_DTL1
                                WHERE ACCNT_NO = A.ACCNT_NO
                                  AND DEL_FG = 'N') AS PAY_ADD_NO
                            , (SELECT NVL(SUM (PAY_AMT),0)
                                 FROM PAY_MNG
                                WHERE ACCNT_NO = A.ACCNT_NO
                                  AND DEL_FG = 'N') AS PAY_AMT
                            , (SELECT NVL(SUM (PAY_AMT),0)
                                 FROM PAY_MNG_DTL
                                WHERE ACCNT_NO = A.ACCNT_NO
                                  AND DEL_FG = 'N') AS PAY_ALLT_AMT
                            , (SELECT NVL(SUM (PAY_AMT),0)
                                 FROM PAY_MNG_DTL1
                                WHERE ACCNT_NO = A.ACCNT_NO
                                  AND DEL_FG = 'N') AS PAY_ADD_AMT
                            , NVL((SELECT MODEL_CL_NM
                                        FROM PRODUCT_MODEL_CL_CD
                                       WHERE MODEL_CL_CD = A.PROD_MODEL_KIND), '') AS MODEL_CL_NM
                             , CASE WHEN A.KSTBIT = '01' THEN '대기'
                                    WHEN A.KSTBIT = '02' THEN '가입'
                                    WHEN A.KSTBIT = '03' THEN '해약'
                                    WHEN A.KSTBIT = '04' THEN '행사'
                                    WHEN A.KSTBIT = '09' THEN '만기' ELSE A.KSTBIT END KSTBIT
                              , FN_CMS_CARD_MEM(A.ACCNT_NO) YN
                         FROM MEM_PROD_ACCNT A
                         JOIN MEMBER B
                              ON A.MEM_NO = B.MEM_NO
                             AND B.DEL_FG = 'N'
                         JOIN PRODUCT C
                              ON A.PROD_CD = C.PROD_CD
                         JOIN EMPLOYEE EMP
                              ON EMP.EMPLE_NO = A.EMPLE_NO
              LEFT OUTER JOIN CMS_MEM D
                              ON A.ACCNT_NO = D.ACCNT_NO
                              AND D.DEL_FG = 'N'
              LEFT OUTER JOIN CARD_MEM E
                              ON A.ACCNT_NO = E.ACCNT_NO
                              AND E.DEL_FG = 'N'
                         <!-- 2018.02.08 임의 등록시 고객 선택 할 때 해피콜 상태가 01,011 인것만 조회 -->
                         <!-- 2018.02.13 임의 등록시 고객 선택 할 때만 해피콜 조인 / hp_join_gb 구분자 추가 -->
                        <if test="hp_join_gb != null and hp_join_gb != ''">
                         INNER JOIN HP_CALL HP
                              ON A.ACCNT_NO = HP.ACCNT_NO AND HP.STAT IN ('01', '011')
                        </if>

                         <!-- 2018.03.20 TM40:MG권한 일 경우 -->
                         <if test="user_athrCd != null and user_athrCd == 'TM40'">
                                  INNER JOIN LF_DMUSER.RESN_CREDIT_LIST K
                                  ON K.ACCNT_NO = A.ACCNT_NO
                                  AND K.DEL_FG = 'N'
                                  AND K.TARGET_YM = TO_CHAR(SYSDATE, 'YYYYMM')
                         </if>

                        WHERE A.DEL_FG = 'N'
                        <if test="dataAthrQury != null and dataAthrQury != '' and user_athrCd != 'TM40'">	 <!-- 2018.03.20 TM40이면 제외  -->

                            ${dataAthrQury}
                        </if>
                        <if test="ns_yn != null and ns_yn.equalsIgnoreCase('Y')">
                            AND EMP.DEPT_CD = '1602'
                        </if>
                        <if test="srch_vl != null and srch_vl != ''">
                            <if test="srch_typ == 'all'">
                                AND (A.ACCNT_NO = #{srch_vl}
                                     OR  A.MEM_NO = #{srch_vl}
                                     OR  B.MEM_NM LIKE '%' || #{srch_vl} || '%'
                                     OR  B.IDN_NO LIKE '%' || #{srch_vl} || '%'
                                     OR  D.BANK_ACCNT_NO = #{srch_vl}
                                     )
                            </if>
                            <if test="srch_typ == 'mem_nm'">
                                AND B.MEM_NM LIKE #{srch_vl} || '%'
                            </if>
                            <if test="srch_typ == 'accnt_no'">
                                AND A.ACCNT_NO = #{srch_vl}
                            </if>
                            <if test="srch_typ == 'mem_no'">
                                AND A.MEM_NO = #{srch_vl}
                            </if>
                            <if test="srch_typ == 'birth'">
                                AND B.IDN_NO LIKE '%' || #{srch_vl} || '%'
                            </if>
                            <if test="srch_typ == 'bank_accnt_no'">
                                AND D.BANK_ACCNT_NO LIKE '%' || #{srch_vl} || '%'
                            </if>
                            <if test="srch_typ == 'pre_accnt_no'">
                                AND A.OLD_MID LIKE '%' || #{srch_vl} || '%'
                            </if>
                        </if>
                        <if test="srch_typ == 'ichae_dt'">
                            <if test="ichae_stt_dt != null and ichae_stt_dt != '' and ichae_end_dt != null and ichae_end_dt != ''">
                                AND TO_NUMBER(A.ICHAE_DT) <![CDATA[>=]]> #{ichae_stt_dt}
                                AND TO_NUMBER(A.ICHAE_DT) <![CDATA[<=]]> #{ichae_end_dt}
                            </if>
                        </if>


                        <if test="option == 'cms_non'">
                            AND a.accnt_no NOT IN (SELECT accnt_no
                                                     FROM CMS_MEM
                                                    WHERE del_fg = 'N')
                            AND a.accnt_no NOT IN (SELECT accnt_no
                                                     FROM NEW_CANCL_APP
                                                    WHERE stat IN ('01', '02'))
                        </if>
                        <if test="option == 'cms'">
                            AND a.accnt_no IN (SELECT accnt_no
                                                 FROM CMS_MEM
                                                WHERE del_fg = 'N')
                            AND a.accnt_no NOT IN (SELECT accnt_no
                                                     FROM wdrw_req
                                                    WHERE stat IN ('01', '02'))
                            AND a.accnt_no NOT IN (SELECT accnt_no
                                                     FROM card_wdrw_req
                                                    WHERE stat IN ('01', '02'))
                        </if>

                        <if test="option == 'card_non'">
                            AND a.accnt_no NOT IN (SELECT accnt_no
                                                     FROM CARD_MEM
                                                    WHERE del_fg = 'N')
                        </if>
                        <if test="option == 'card'">
                            AND a.accnt_no IN (SELECT accnt_no
                                                 FROM CARD_MEM
                                                WHERE del_fg = 'N')
                            AND a.accnt_no NOT IN (SELECT accnt_no
                                                     FROM card_wdrw_req
                                                    WHERE stat IN ('01', '02'))
                            AND a.accnt_no NOT IN (SELECT accnt_no
                                                     FROM card_wdrw_req
                                                    WHERE stat IN ('01', '02'))
                        </if>
                        <if test="option == 'call'">
                            <!-- 수정 : 고객만족센터 파일 산출에 카드산출 포함 by lbk_2013_06_19  -->
                            AND
                            (
                                (
                                a.PAY_MTHD = '04'
                                AND a.accnt_no IN (SELECT accnt_no
                                                     FROM CMS_MEM
                                                    WHERE del_fg = 'N')
                                AND a.accnt_no NOT IN (SELECT accnt_no
                                                         FROM wdrw_req
                                                        WHERE stat IN ('01', '02'))
                                and a.accnt_no NOT IN (SELECT accnt_no
                                                         FROM wdrw_req_call_center
                                                        WHERE WDRW_REQ_YN = 'N'
                                                          AND DEL_FG IS NULL)
                                )
                                OR
                                (
                                a.PAY_MTHD = '06'
                                AND a.accnt_no IN (SELECT accnt_no
                                                     FROM CARD_MEM
                                                    WHERE del_fg = 'N')
                                AND a.accnt_no NOT IN (SELECT accnt_no
                                                         FROM card_wdrw_req
                                                        WHERE stat IN ('01', '02'))
                                and a.accnt_no NOT IN (SELECT accnt_no
                                                         FROM wdrw_req_call_center
                                                        WHERE WDRW_REQ_YN = 'N'
                                                          AND DEL_FG IS NULL)
                                )
                            )

                        </if>
                        <if test="option == 'pay_able'">
                            <!-- AND FN_ACCNT_STAT(a.accnt_no) in ('Y','E') //청약철회가 아니면 조회되도록 수정 by lbk_2012_07_31 -->
                            AND FN_EVENT(a.accnt_no) != '청약철회'
                        </if>
                        <if test="option == 'cms_card_non'">
                            AND a.accnt_no NOT IN (SELECT accnt_no
                                                     FROM CMS_MEM
                                                    WHERE del_fg = 'N')
                            AND a.accnt_no NOT IN (SELECT accnt_no
                                                     FROM NEW_CANCL_APP
                                                    WHERE stat IN ('01', '02'))
                            AND a.accnt_no NOT IN (SELECT accnt_no
                                                     FROM CARD_MEM
                                                    WHERE del_fg = 'N')
                        </if>
                        <if test="option == 'event'">
                            AND a.accnt_no IN (SELECT accnt_no
                                                     FROM EVENT
                                                    WHERE del_fg = 'N')
                        </if>
                        <if test="option == 'prod_trans'">
                            <!-- 상품변경은 정상 구좌이면서 출금이체 신청전,중이 아니면서 양도양수 공제 신고된건만 조회  -->
                            AND FN_ACCNT_STAT(a.accnt_no) = 'Y'
                            AND a.accnt_no NOT IN (SELECT accnt_no
                                                     FROM CMS_MEM
                                                    WHERE del_fg = 'N')
                            AND a.accnt_no NOT IN (SELECT accnt_no
                                                     FROM NEW_CANCL_APP
                                                    WHERE stat IN ('01', '02'))
                            AND a.accnt_no NOT IN (SELECT ACCNT_NO FROM TRANSFER_BRKDN WHERE NEW_YN IN ('Y', 'S', 'E'))
                        </if>
                        <!-- ORDER BY b.mem_nm -->
                       ) A
                ) B
        <if test="startLine != null and startLine != '' and endLine != null and endLine != ''">
            <![CDATA[
            WHERE PAGE_INDX >= #{startLine}
              AND PAGE_INDX < #{endLine}
            ]]>
        </if>
    </select>

    <!-- ================================================================
     * 날짜 : 20181127
     * 이름 : 정승철
     * 추가내용 : 회원의 환불회차정보를 검색
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_REQ_REFUND
     * ================================================================
     * -->
    <select id="ReqCustMap.getRefundReqNoOfAccnt" parameterType="map" resultType="resultMap">
        /* ReqCustMap.getRefundReqNoOfAccnt */
        SELECT
               MRR.ACCNT_NO      /* 회원번호          */
             , MIN(MWR.REQ_PAY_NO) AS MIN_REQ_PAY_NO   /* 산출청구회차(MIN) */
             , MAX(MWR.REQ_PAY_NO) -
               (SELECT COUNT(*) FROM TB_MEMBER_REQ_NAUTH_CNCL WHERE ACCNT_NO = MRR.ACCNT_NO AND DEL_FG  IN ('P', 'N', 'R')) AS MAX_REQ_PAY_NO
             <!-- , MWS.CANCEL_DT     /* 실시간 취소 일자  */ -->
             <!-- , MWR.RESULT_KIND   /* 파일구분          */ -->
          FROM TB_MEMBER_REQ_REFUND MRR              /* 고객환불정보     */
          LEFT OUTER JOIN VIEW_MEMBER_WDRW_REQ MWR     /* 고객청구요청정보 */
                       ON MRR.ACCNT_NO = MWR.ACCNT_NO
                      AND MRR.REQ_DAY = MWR.REQ_DAY
                      AND MRR.RESULT_KEY = MWR.RESULT_KEY
                      AND MWR.DEL_FG = 'C'
                      AND MWR.REQ_PAY_NO != '999'    /* 2018.12.05 자유결제는 제외 */
          INNER JOIN MEM_PROD_ACCNT MPA              /* 고객가입상품정보 */
                  ON MPA.ACCNT_NO = MRR.ACCNT_NO
                 AND MPA.DEL_FG = 'N'
          INNER JOIN MEMBER MBR                      /* 고객기본정보     */
                  ON MBR.MEM_NO = MPA.MEM_NO
                 AND MBR.DEL_FG = 'N'
         WHERE MRR.ACCNT_NO = #{accnt_no}
           AND MRR.DEL_FG = 'N'
         GROUP BY MRR.ACCNT_NO

    </select>

    <!-- ==============================================================
     * 날짜 : 팝업
     * 이름 : /dlw/cms/gasu-mng/delete
     * 추가내용 :
     * 대상 테이블 :
     * ================================================================
     * -->
    <!-- 가수 삭제 -->
    <update id="ReqCustMap.deleteMemberRefundMng" parameterType="map">
        <!-- DM sql-id : deleteGasuMng -->
        UPDATE /* ReqCustMap.deleteMemberRefundMng */
               TB_MEMBER_REQ_REFUND
           SET DEL_FG  = 'Y'
         WHERE ACCNT_NO = #{accnt_no}
           AND PAY_MTHD = #{pay_mthd}
           AND DEL_FG = 'N'
           AND REQ_DAY = #{req_day}
           AND RESULT_KEY = #{result_key}
    </update>

    <!-- ================================================================
     * 날짜 : 팝업
     * 이름 : /dlw/cms/gasu-dtl/merge
     * 추가내용 :
     * 대상 테이블 :
     * ================================================================
     * -->
    <!-- 가수 환불 상세 내역 수정 -->
    <update id="ReqCustMap.updateMemberRefundDtl" parameterType="map">
        <!-- DM sql-id : updateGasuDtl -->
        UPDATE /* ReqCustMap.updateMemberRefundDtl */
               TB_MEMBER_REQ_REFUND
           SET ICHAE_CD   = #{ichae_cd}
              ,ICHAE_NO   = #{ichae_no}
              ,DEPR       = #{depr}
              ,REFUND_DT  = #{refund_dt}   /* 환불일자 */
              ,REFUND_ETC = #{refund_etc}  /* 비고     */
         WHERE ACCNT_NO = #{accnt_no}
           AND PAY_MTHD = #{pay_mthd}
           AND DEL_FG = 'N'
           AND REQ_DAY = #{req_day}
           AND RESULT_KEY = #{result_key}
    </update>

    <!-- 가수 환불 상세 내역 입금 -->
    <insert id="ReqCustMap.insertMemberRefundDtl" parameterType="map">
        <!-- DM sql-id : insertGasuDtl -->
        INSERT /* ReqCustMap.insertMemberRefundDtl */
          INTO REFUND
             ( MST_SEQ
             , SEQ
             , REFUND_DAY
             , REFUND_AMT
             , BANK_CD
             , BANK_ACCNT_NO
             , DEPR
             , REG_DM
             , REG_MAN
             , UPD_DM
             , UPD_MAN
             , DEL_FG
             , NOTE
             )
        SELECT #{gasu_seq}
             , A.SEQ
             , REPLACE(#{refund_day},'/','')
             , CAST(#{refund_amt} AS NUMERIC)
             , #{bank_cd}
             , #{bank_accnt_no}
             , #{depr}
             , SYSDATE
             , #{reg_man}
             , SYSDATE
             , #{upd_man}
             , 'N'
             , #{note}
          FROM (SELECT NVL(MAX(SEQ) + 1, '1') AS SEQ
                  FROM REFUND WHERE MST_SEQ = #{gasu_seq}
               ) A
    </insert>

    <!-- ================================================================
     * 날짜 : 팝업
     * 이름 : /dlw/cms/gasu-dtl/delete
     * 추가내용 :
     * 대상 테이블 :
     * ================================================================
     * -->
    <!-- 가수 환불 상세 내역 삭제(논리) -->
    <update id="ReqCustMap.deleteMemberRefundDtl" parameterType="map">
        <!-- DM sql-id : deleteGasuDtl -->
        UPDATE /* ReqCustMap.deleteMemberRefundDtl */
               REFUND
           SET DEL_Fg = 'Y'
             , UPD_DM  = SYSDATE
             , UPD_MAN = #{upd_man}
        WHERE MST_SEQ = #{gasu_seq}
        <if test="seq != null and seq != ''">
           AND SEQ = #{seq}
        </if>
    </update>

    <!-- ================================================================
     * 날짜 : 20181116
     * 이름 : 정승철
     * 추가내용 : CMS 환불완료시 처리
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_WDRW_REQ
     *               LF_DMUSER.PAY_MNG
     *               LF_DMUSER.PAY_MNG_DTL
     *               LF_DMUSER.PAY_MNG_DTL1
     * ================================================================
     * -->
    <update id="ReqCustMap.updateCmsPayCancel" parameterType="map" >

        /* ReqCustMap.updateCmsPayCancel */
        BEGIN

            /* 2018.11.30 정승철 - (환불테이블) 실시간 취소일자 UPDATE */
            UPDATE TB_MEMBER_REQ_REFUND
               SET CANCEL_DT = SYSDATE
             WHERE ACCNT_NO = #{accnt_no}
               AND PAY_MTHD = #{pay_mthd}
               AND REQ_DAY = #{req_day}
               AND RESULT_KEY = #{result_key}
               AND DEL_FG = 'N';

            <choose>
                <when test="search_yy != null and search_yy.equalsIgnoreCase('2')">
                    UPDATE TB_MEMBER_WDRW_REQ_2021
                       SET DEL_FG = 'X',            /* X:입금취소 */
                           UPD_MAN =  #{emple_no},
                           UPD_DM = SYSDATE
                     WHERE ACCNT_NO = #{accnt_no}
                       AND PAY_MTHD = #{pay_mthd}
                       AND DEL_FG = 'C'
                       AND REQ_DAY = #{req_day}
                       AND RESULT_KEY = #{result_key};
                </when>
                <otherwise>
                    UPDATE TB_MEMBER_WDRW_REQ
                       SET DEL_FG = 'X',            /* X:입금취소 */
                           UPD_MAN =  #{emple_no},
                           UPD_DM = SYSDATE
                     WHERE ACCNT_NO = #{accnt_no}
                       AND PAY_MTHD = #{pay_mthd}
                       AND DEL_FG = 'C'
                       AND REQ_DAY = #{req_day}
                       AND RESULT_KEY = #{result_key};
                </otherwise>
               </choose>

            <if test="req_pay_no != '1'">
                    UPDATE PAY_MNG
                    SET DEL_FG = 'Y',
                        UPD_MAN =  #{emple_no},
                        UPD_DM = SYSDATE,
                        PAY_CANCEL_DAY = TO_CHAR(SYSDATE, 'YYYYMMDD')
                    WHERE ACCNT_NO = #{accnt_no}
                      AND DEL_FG = 'N'
                      AND PAY_MTHD = '04'
                      AND NO = #{req_pay_no}
                      AND REG_MAN = 'FILE_AUTO';

                    UPDATE PAY_MNG_DTL
                    SET DEL_FG = 'Y',
                        UPD_MAN =  #{emple_no},
                        UPD_DM = SYSDATE,
                        PAY_CANCEL_DAY = TO_CHAR(SYSDATE, 'YYYYMMDD')
                    WHERE ACCNT_NO = #{accnt_no}
                      AND DEL_FG = 'N'
                      AND PAY_MTHD = '04'
                      AND NO = #{req_pay_no}
                      AND REG_MAN = 'FILE_AUTO';

                   UPDATE PAY_MNG_DTL1
                    SET DEL_FG = 'Y',
                        UPD_MAN =  #{emple_no},
                        UPD_DM = SYSDATE,
                        PAY_CANCEL_DAY = TO_CHAR(SYSDATE, 'YYYYMMDD')
                    WHERE ACCNT_NO = #{accnt_no}
                      AND DEL_FG = 'N'
                      AND PAY_MTHD = '04'
                      AND NO = #{req_pay_no}
                      AND REG_MAN = 'FILE_AUTO';
            </if>

            <!-- 2018.11.30 CMS 환불처리시 (입금반영시) 입금쪽 테이블은 일단 처리되지 않도록
            UPDATE PAY_MNG
            SET DEL_FG = 'Y',
                UPD_MAN =  #{emple_no},
                UPD_DM = SYSDATE,
                PAY_CANCEL_DAY = TO_CHAR(SYSDATE, 'YYYYMMDD'),
                PAY_CANCEL_CD = ( SELECT REFUND_REASON FROM TB_MEMBER_REQ_REFUND WHERE ACCNT_NO = #{accnt_no} AND PAY_MTHD = #{pay_mthd} AND DEL_FG = 'N' AND REQ_DAY = #{req_day} AND RESULT_KEY = #{result_key} ),
                PAY_CANCEL_NOTE = ( SELECT REFUND_ETC FROM TB_MEMBER_REQ_REFUND WHERE ACCNT_NO = #{accnt_no} AND PAY_MTHD = #{pay_mthd} AND DEL_FG = 'N' AND REQ_DAY = #{req_day} AND RESULT_KEY = #{result_key} )
            WHERE ACCNT_NO = #{accnt_no}
              AND DEL_FG = 'N'
              AND PAY_MTHD = '04'
              AND NO = #{req_pay_no}
              AND REG_MAN = 'FILE_AUTO';

            UPDATE PAY_MNG_DTL
            SET DEL_FG = 'Y',
                UPD_MAN =  #{emple_no},
                UPD_DM = SYSDATE,
                PAY_CANCEL_DAY = TO_CHAR(SYSDATE, 'YYYYMMDD'),
                PAY_CANCEL_CD = ( SELECT REFUND_REASON FROM TB_MEMBER_REQ_REFUND WHERE ACCNT_NO = #{accnt_no} AND PAY_MTHD = #{pay_mthd} AND DEL_FG = 'N' AND REQ_DAY = #{req_day} AND RESULT_KEY = #{result_key} ),
                PAY_CANCEL_NOTE = ( SELECT REFUND_ETC FROM TB_MEMBER_REQ_REFUND WHERE ACCNT_NO = #{accnt_no} AND PAY_MTHD = #{pay_mthd} AND DEL_FG = 'N' AND REQ_DAY = #{req_day} AND RESULT_KEY = #{result_key} )
            WHERE ACCNT_NO = #{accnt_no}
              AND DEL_FG = 'N'
              AND PAY_MTHD = '04'
              AND NO = #{req_pay_no}
              AND REG_MAN = 'FILE_AUTO';

           UPDATE PAY_MNG_DTL1
            SET DEL_FG = 'Y',
                UPD_MAN =  #{emple_no},
                UPD_DM = SYSDATE,
                PAY_CANCEL_DAY = TO_CHAR(SYSDATE, 'YYYYMMDD'),
                PAY_CANCEL_CD = ( SELECT REFUND_REASON FROM TB_MEMBER_REQ_REFUND WHERE ACCNT_NO = #{accnt_no} AND PAY_MTHD = #{pay_mthd} AND DEL_FG = 'N' AND REQ_DAY = #{req_day} AND RESULT_KEY = #{result_key} ),
                PAY_CANCEL_NOTE = ( SELECT REFUND_ETC FROM TB_MEMBER_REQ_REFUND WHERE ACCNT_NO = #{accnt_no} AND PAY_MTHD = #{pay_mthd} AND DEL_FG = 'N' AND REQ_DAY = #{req_day} AND RESULT_KEY = #{result_key} )
            WHERE ACCNT_NO = #{accnt_no}
              AND DEL_FG = 'N'
              AND PAY_MTHD = '04'
              AND NO = #{req_pay_no}
              AND REG_MAN = 'FILE_AUTO';
           -->

        END;

    </update>

    <!-- ================================================================
     * 날짜 : 20181113
     * 이름 : 정승철
     * 추가내용 : 임의등록시 고객정보 카운트조회
     * ================================================================ -->
    <select id="ReqCustMap.getCntDlwAccntBaseInfo" parameterType="map" resultType="int">
    <![CDATA[
        SELECT /*ReqCustMap.getCntDlwAccntBaseInfo*/
               COUNT(*)
          FROM ( SELECT
                        TBL2.MEM_NO,
                        TBL2.ACCNT_NO,
                        TBL2.PROD_CD,
                        PAY_MTHD,
                        STAT,
                        KSTBIT
                   FROM ( SELECT
                                 MBID.MEM_NO,
                                 MBID.ACCNT_NO,
                                 MBID.PROD_CD,
                                 MBID.PAY_MTHD,
                                 MBID.KSTBIT,
                                 (SELECT STAT FROM HP_CALL WHERE ACCNT_NO = MBID.ACCNT_NO) AS STAT
                            FROM ( SELECT
                                          MPA.MEM_NO,
                                          MPA.ACCNT_NO,
                                          MPA.PROD_CD,
                                          MPA.PAY_MTHD,
                                          MPA.KSTBIT
                                     FROM MEM_PROD_ACCNT MPA
                                    WHERE 1=1
                                      AND MPA.KSTBIT NOT IN ('03','04')
                                      AND MPA.DEL_FG = 'N'

                                    UNION

                                   SELECT
                                          MPA.MEM_NO,
                                          MPA.ACCNT_NO,
                                          MPA.PROD_CD,
                                          MPA.PAY_MTHD,
                                          MPA.KSTBIT
                                     FROM MEM_PROD_ACCNT MPA LEFT OUTER JOIN
                                          RESCISSION RS ON MPA.ACCNT_NO = RS.ACCNT_NO AND RS.DEL_FG = 'N' LEFT OUTER JOIN
                                          EVENT EV ON MPA.ACCNT_NO = EV.ACCNT_NO AND EV.DEL_FG = 'N' INNER JOIN
                                          PRODUCT PD ON MPA.PROD_CD = PD.PROD_CD
                                    WHERE 1=1
                                      AND MPA.DEL_FG = 'N'
                                      --AND PD.SECTION_T = '0002'
                                      AND MPA.KSTBIT IN ('03','04')
                                  ) MBID INNER JOIN
                                    PRODUCT PD ON MBID.PROD_CD = PD.PROD_CD LEFT OUTER JOIN
                                    ( SELECT
                                             ACCNT_NO,
                                             '06' AS PAY_MTHD
                                        FROM CARD_MEM CARD
                                       WHERE CARD.DEL_FG = 'N'

                                       UNION

                                      SELECT
                                             ACCNT_NO,
                                             '04' AS PAY_MTHD
                                        FROM CMS_MEM CMS
                                       WHERE CMS.DEL_FG = 'N'
                                     ) CM ON MBID.ACCNT_NO = CM.ACCNT_NO AND MBID.PAY_MTHD = CM.PAY_MTHD
                         ) TBL2
                ) TBL3 INNER JOIN
                  MEMBER MB ON TBL3.MEM_NO = MB.MEM_NO AND MB.DEL_FG = 'N'
          WHERE 1=1
    ]]>
        <if test="srch_typ == 'mem_nm'">
            AND MB.MEM_NM LIKE #{srch_vl} || '%'
        </if>
        <if test="srch_typ == 'accnt_no'">
            AND TBL3.ACCNT_NO = #{srch_vl}
        </if>
        <if test="srch_typ == 'mem_no'">
            AND MB.MEM_NO = #{srch_vl}
        </if>

    </select>



    <!-- 임의등록시 산출정보 조회 -->
    <select id="ReqCustMap.getDlwAccntBaseInfo" parameterType="map" resultType="resultMap">
    <![CDATA[
        SELECT
            /*ReqCustMap.getDlwAccntBaseInfo*/
            TBL3.ACCNT_NO,
            TBL3.MEM_NO,
            MB.MEM_NM,
            MB.CELL,
            MB.BRTH_MON_DAY,
            TBL3.PROD_CD,
            PAY_MTHD,
            STAT,
            KSTBIT,
            REQ_PAY_BIT,
            ICHAE_NO,
            ICHAE_CD,
            CASE WHEN REQ_PAY_BIT = 'NXX' THEN PND.AMT
                 WHEN REQ_PAY_BIT = 'NRX' THEN PND.AMT + PND.REL_AMT
                 WHEN REQ_PAY_BIT = 'XRX' THEN PND.REL_AMT
                 WHEN REQ_PAY_BIT = 'XRA' THEN PND.REL_AMT + PND.ADD_AMT
                 WHEN REQ_PAY_BIT = 'XXA' THEN PND.ADD_AMT
                 WHEN REQ_PAY_BIT = 'FUL' THEN 0
                 WHEN REQ_PAY_BIT = 'FUX' THEN 0
            ELSE PND.AMT + PND.REL_AMT + PND.ADD_AMT
            END AS PAY_AMT,

            CASE WHEN REQ_PAY_BIT = 'NXX' THEN (TRUE_CNT + REQ_GUNSU)
                 WHEN REQ_PAY_BIT = 'NRX' THEN (TRUE_CNT + REQ_GUNSU)
                 WHEN REQ_PAY_BIT = 'NRA' THEN (TRUE_CNT + REQ_GUNSU)
                 WHEN REQ_PAY_BIT = 'XRA' THEN (REL_CNT + REQ_GUNSU)
                 WHEN REQ_PAY_BIT = 'XRX' THEN (REL_CNT + REQ_GUNSU)
                 WHEN REQ_PAY_BIT = 'XXA' THEN (ADD_CNT + REQ_GUNSU)
            ELSE (TRUE_CNT + REQ_GUNSU)
            END AS REQ_PAY_NO,

            CASE WHEN REQ_PAY_BIT = 'NXX' THEN (TOT_TRUE_CNT - NEW_CHAN_GUNSU)
                 WHEN REQ_PAY_BIT = 'NRX' THEN (TOT_TRUE_CNT - NEW_CHAN_GUNSU)
                 WHEN REQ_PAY_BIT = 'NRA' THEN (TOT_TRUE_CNT - NEW_CHAN_GUNSU)
                 WHEN REQ_PAY_BIT = 'XRA' THEN TOT_REL_CNT
                 WHEN REQ_PAY_BIT = 'XRX' THEN TOT_REL_CNT
                 WHEN REQ_PAY_BIT = 'XXA' THEN TOT_ADD_CNT
                 WHEN REQ_PAY_BIT = 'FUL' THEN (TOT_TRUE_CNT - NEW_CHAN_GUNSU)
                 WHEN REQ_PAY_BIT = 'FUX' THEN TOT_REL_CNT
            ELSE (TOT_TRUE_CNT - NEW_CHAN_GUNSU)
            END AS TOT_PAY_CNT,
            EVENT_REQ_YN,
            CASE WHEN REF.ACCNT_NO IS NULL THEN 'Y'
                 ELSE 'N'
                 END AS REFUND_PROC_YN
        FROM
        (
            SELECT
                TBL2.MEM_NO,
                TBL2.ACCNT_NO,
                TBL2.PROD_CD,
                PAY_MTHD,
                STAT,
                KSTBIT,
                TRUE_CNT,
                REQ_GUNSU,
                (TRUE_CNT + REQ_GUNSU) AS REQ_PAY_NO,  -- 청구 회차
                CASE WHEN  PROD_PAY_BIT = 'NXX' THEN
                      CASE WHEN  TRUE_CNT + REQ_GUNSU <= (TOT_TRUE_CNT - NEW_CHAN_GUNSU) THEN 'NXX' ELSE 'FUL' END
                         WHEN PROD_PAY_BIT = 'NRX' THEN
                              CASE WHEN  KSTBIT IN ('03','04') AND REL_CNT + REQ_GUNSU <= TOT_REL_CNT THEN 'XRX'
                                   WHEN  KSTBIT IN ('03','04') AND REL_CNT + REQ_GUNSU > TOT_REL_CNT THEN 'FUX'
                                   WHEN  TRUE_CNT + REQ_GUNSU <= (TOT_TRUE_CNT - NEW_CHAN_GUNSU) AND REL_CNT + REQ_GUNSU <= TOT_REL_CNT THEN 'NRX'
                                   WHEN  TRUE_CNT + REQ_GUNSU <= (TOT_TRUE_CNT - NEW_CHAN_GUNSU) AND REL_CNT + REQ_GUNSU > TOT_REL_CNT THEN 'NXX'
                                   WHEN  TRUE_CNT + REQ_GUNSU > (TOT_TRUE_CNT - NEW_CHAN_GUNSU) AND REL_CNT + REQ_GUNSU <= TOT_REL_CNT THEN 'XRX'
                                   WHEN  TRUE_CNT + REQ_GUNSU > (TOT_TRUE_CNT - NEW_CHAN_GUNSU) AND REL_CNT + REQ_GUNSU > TOT_REL_CNT THEN 'FUL'
                              ELSE 'ERR' END
                         WHEN PROD_PAY_BIT = 'NRA' THEN
                              CASE WHEN  KSTBIT IN ('03','04') AND REL_CNT + REQ_GUNSU <= TOT_REL_CNT AND ADD_CNT + REQ_GUNSU <= TOT_REL_CNT THEN 'XRA'
                                   WHEN  KSTBIT IN ('03','04') AND REL_CNT + REQ_GUNSU > TOT_REL_CNT AND ADD_CNT + REQ_GUNSU <= TOT_REL_CNT THEN 'XXA'
                                   WHEN  KSTBIT IN ('03','04') AND REL_CNT + REQ_GUNSU > TOT_REL_CNT AND ADD_CNT + REQ_GUNSU > TOT_REL_CNT  THEN 'FUX'
                                   WHEN  TRUE_CNT + REQ_GUNSU <= (TOT_TRUE_CNT - NEW_CHAN_GUNSU) AND REL_CNT + REQ_GUNSU <= TOT_REL_CNT AND ADD_CNT + REQ_GUNSU <= TOT_REL_CNT THEN 'NRA'
                                   WHEN  TRUE_CNT + REQ_GUNSU <= (TOT_TRUE_CNT - NEW_CHAN_GUNSU) AND REL_CNT + REQ_GUNSU > TOT_REL_CNT AND ADD_CNT + REQ_GUNSU > TOT_REL_CNT THEN 'NXX'
                                   WHEN  TRUE_CNT + REQ_GUNSU > (TOT_TRUE_CNT - NEW_CHAN_GUNSU) AND REL_CNT + REQ_GUNSU <= TOT_REL_CNT AND ADD_CNT + REQ_GUNSU <= TOT_REL_CNT THEN 'XRA'
                                   WHEN  TRUE_CNT + REQ_GUNSU > (TOT_TRUE_CNT - NEW_CHAN_GUNSU) AND REL_CNT + REQ_GUNSU > TOT_REL_CNT AND ADD_CNT + REQ_GUNSU <= TOT_REL_CNT THEN 'XXA'
                                   WHEN  TRUE_CNT + REQ_GUNSU > (TOT_TRUE_CNT - NEW_CHAN_GUNSU) AND REL_CNT + REQ_GUNSU > TOT_REL_CNT AND ADD_CNT + REQ_GUNSU > TOT_REL_CNT THEN 'FUL'
                              ELSE 'ERR' END
                        ELSE 'ERR'
                END AS REQ_PAY_BIT,
                ICHAE_NO,
                ICHAE_CD,
                TOT_TRUE_CNT,
                TOT_REL_CNT,
                TOT_ADD_CNT,
                REL_CNT,
                ADD_CNT,
                NEW_CHAN_GUNSU,
                EVENT_REQ_YN
            FROM
            (
                SELECT
                    MBID.MEM_NO,
                    MBID.ACCNT_NO,
                    MBID.PROD_CD,
                    MBID.PAY_MTHD,
                    MBID.KSTBIT,
                    MBID.NEW_CHAN_GUNSU,
                    CM.ICHAE_NO,
                    NVL(CM.ICHAE_CD,'X') AS ICHAE_CD,
                    ICHAE_DT,
                    #{req_gunsu} AS REQ_GUNSU,
                    /******************************************필수항목*************************************************/
                    (TRUNC(MONTHS_BETWEEN(LAST_DAY(SYSDATE),MBID.JOIN_DT)+1)) AS MONTH_COUNT,
                    (SELECT COUNT(NO) FROM PAY_MNG WHERE ACCNT_NO = MBID.ACCNT_NO AND DEL_FG = 'N') AS TRUE_CNT,
                    (SELECT COUNT(NO) FROM PAY_MNG_DTL WHERE ACCNT_NO = MBID.ACCNT_NO AND DEL_FG = 'N') AS REL_CNT,
                    (SELECT COUNT(NO) FROM PAY_MNG_DTL1 WHERE ACCNT_NO = MBID.ACCNT_NO AND DEL_FG = 'N') AS ADD_CNT,
                    (SELECT COUNT(NO) FROM PRODUCT_NO_DATA WHERE PROD_CD = MBID.PROD_CD AND AMT > 0) AS TOT_TRUE_CNT,
                    (SELECT COUNT(NO) FROM PRODUCT_NO_DATA WHERE PROD_CD = MBID.PROD_CD AND REL_AMT > 0) AS TOT_REL_CNT,
                    (SELECT COUNT(NO) FROM PRODUCT_NO_DATA WHERE PROD_CD = MBID.PROD_CD AND ADD_AMT > 0) AS TOT_ADD_CNT,

                    (SELECT
                        CASE WHEN SUM(REL_AMT) > 0 AND SUM(ADD_AMT) > 0 THEN 'NRA'
                             WHEN SUM(REL_AMT) > 0 AND SUM(ADD_AMT) = 0 THEN 'NRX'
                        ELSE 'NXX'
                        END
                    FROM PRODUCT_NO_DATA WHERE PROD_CD = MBID.PROD_CD
                    ) AS PROD_PAY_BIT,

                    (SELECT STAT FROM HP_CALL WHERE ACCNT_NO = MBID.ACCNT_NO) AS STAT,

                    EVENT_REQ_YN
                FROM
                (
                    SELECT
                        MPA.MEM_NO,
                        MPA.ACCNT_NO,
                        MPA.PROD_CD,
                        MPA.JOIN_DT,
                        MPA.PAY_MTHD,
                        MPA.KSTBIT,
                        MPA.NEW_CHAN_GUNSU,
                        'N' AS EVENT_REQ_YN
                    FROM MEM_PROD_ACCNT MPA
                    WHERE 1=1
                    AND MPA.KSTBIT NOT IN ('03','04')
                    AND MPA.DEL_FG = 'N'

                    UNION

                    SELECT
                        MPA.MEM_NO,
                        MPA.ACCNT_NO,
                        MPA.PROD_CD,
                        MPA.JOIN_DT,
                        MPA.PAY_MTHD,
                        MPA.KSTBIT,
                        MPA.NEW_CHAN_GUNSU,
                        CASE WHEN NVL(RS.CMS_WDRW_REQ_YN,'F') = 'Y' THEN 'R'
                             WHEN NVL(EV.CMS_WDRW_REQ_YN,'F') = 'Y' THEN 'E'
                        ELSE 'F' END
                        AS EVENT_REQ_YN
                    FROM MEM_PROD_ACCNT MPA LEFT OUTER JOIN
                        RESCISSION RS ON MPA.ACCNT_NO = RS.ACCNT_NO AND RS.DEL_FG = 'N' LEFT OUTER JOIN
                        EVENT EV ON MPA.ACCNT_NO = EV.ACCNT_NO AND EV.DEL_FG = 'N' INNER JOIN
                        PRODUCT PD ON MPA.PROD_CD = PD.PROD_CD
                    WHERE 1=1
                    AND MPA.DEL_FG = 'N'
                    --AND PD.SECTION_T = '0002'
                    AND MPA.KSTBIT IN ('03','04')
                    --AND (NVL(RS.CMS_WDRW_REQ_YN,'N') = 'Y' OR NVL(EV.CMS_WDRW_REQ_YN,'N') = 'Y')

                ) MBID INNER JOIN
                    PRODUCT PD ON MBID.PROD_CD = PD.PROD_CD LEFT OUTER JOIN
                    (
                        SELECT
                            ACCNT_NO,
                            '06' AS PAY_MTHD,
                            CARD_CD AS ICHAE_CD,
                            --BID AS ICHAE_NO,
                            (CASE WHEN NVL(INI_YN,'N') = 'Y' THEN INI_BID ELSE BID END) AS ICHAE_NO,
                            PAY_DT AS ICHAE_DT
                        FROM CARD_MEM CARD
                        WHERE CARD.DEL_FG = 'N'

                        UNION

                        SELECT
                            ACCNT_NO,
                            '04' AS PAY_MTHD,
                            BANK_CD  AS ICHAE_CD,
                            BANK_ACCNT_NO AS ICHAE_NO,
                            ICHAE_DT
                        FROM CMS_MEM CMS
                        WHERE CMS.DEL_FG = 'N'
                    ) CM ON MBID.ACCNT_NO = CM.ACCNT_NO AND MBID.PAY_MTHD = CM.PAY_MTHD
            ) TBL2
        ) TBL3 INNER JOIN
            MEMBER MB ON TBL3.MEM_NO = MB.MEM_NO AND MB.DEL_FG = 'N'
            --INNER JOIN
            LEFT OUTER JOIN
            PRODUCT_NO_DATA PND ON PND.PROD_CD = TBL3.PROD_CD AND PND.NO =   CASE WHEN REQ_PAY_BIT = 'NXX' THEN (TRUE_CNT + REQ_GUNSU)
                                                                                 WHEN REQ_PAY_BIT = 'NRX' THEN (TRUE_CNT + REQ_GUNSU)
                                                                                 WHEN REQ_PAY_BIT = 'NRA' THEN (TRUE_CNT + REQ_GUNSU)
                                                                                 WHEN REQ_PAY_BIT = 'XRA' THEN (REL_CNT + REQ_GUNSU)
                                                                                 WHEN REQ_PAY_BIT = 'XRX' THEN (REL_CNT + REQ_GUNSU)
                                                                                 WHEN REQ_PAY_BIT = 'XXA' THEN (ADD_CNT + REQ_GUNSU)
                                                                             ELSE (TRUE_CNT + REQ_GUNSU)
                                                                             END
            LEFT OUTER JOIN
            ( SELECT MRR.ACCNT_NO
                    FROM TB_MEMBER_REQ_REFUND MRR INNER JOIN
                        TB_MEMBER_WDRW_REQ MWR ON
                                (
                                    NVL(MRR.RESULT_KEY,'N') = 'N'
                                    AND
                                        (
                                            MRR.ACCNT_NO = MWR.ACCNT_NO
                                            AND MRR.PAY_MTHD = MWR.PAY_MTHD
                                            AND MRR.REQ_DAY = MWR.REQ_DAY
                                            AND MRR.REQ_PAY_NO = MWR.REQ_PAY_NO
                                            AND MWR.DEL_FG = 'C'
                                         )
                                )
                                OR
                                (
                                    NVL(MRR.RESULT_KEY,'N') != 'N'
                                    AND MRR.ACCNT_NO = MWR.ACCNT_NO
                                    AND MRR.REQ_DAY = MWR.REQ_DAY
                                    AND MRR.RESULT_KEY = MWR.RESULT_KEY
                                    AND MWR.DEL_FG = 'C'
                                 )
                    WHERE MRR.DEL_FG = 'N'
            ) REF ON REF.ACCNT_NO = TBL3.ACCNT_NO
            WHERE 1=1
     ]]>
           <if test="srch_typ == 'mem_nm'">
               AND MB.MEM_NM LIKE #{srch_vl} || '%'
           </if>
           <if test="srch_typ == 'accnt_no'">
               AND TBL3.ACCNT_NO = #{srch_vl}
           </if>
           <if test="srch_typ == 'mem_no'">
               AND MB.MEM_NO = #{srch_vl}
           </if>

        <!--
        SELECT /* ReqCustMap.getDlwAccntBaseInfo */
               B.*
          FROM (SELECT A.*,
                    <choose>
                        <when test="orderBy != null and orderBy != ''">
                            ROW_NUMBER() OVER(ORDER BY ${orderBy} ${orderDirection}) AS PAGE_INDX
                        </when>
                    </choose>
                 FROM (SELECT A.ACCNT_NO
                            , B.MEM_NM
                            , C.PROD_NM
                            , EMP.EMPLE_NM
                            , A.PAY_MTHD
                            , B.BRTH_MON_DAY
                            , DECODE(A.PAY_MTHD, '06', E.CARD_CD, D.BANK_CD)       AS ICHAE_CD
                            , DECODE(A.PAY_MTHD, '06', E.CARD_NO, D.BANK_ACCNT_NO) AS ICHAE_NO
                            , DECODE(A.PAY_MTHD, '06', FN_COM_NM('0120', E.CARD_CD)
                                                     , FN_COM_NM('63',   D.BANK_CD) ) AS ICHAE_NM
                         FROM MEM_PROD_ACCNT A
                         JOIN MEMBER B
                              ON A.MEM_NO = B.MEM_NO
                             AND B.DEL_FG = 'N'
                         JOIN PRODUCT C
                              ON A.PROD_CD = C.PROD_CD
                         JOIN EMPLOYEE EMP
                              ON EMP.EMPLE_NO = A.EMPLE_NO
              LEFT OUTER JOIN CMS_MEM D
                              ON A.ACCNT_NO = D.ACCNT_NO
                              AND D.DEL_FG = 'N'
              LEFT OUTER JOIN CARD_MEM E
                              ON A.ACCNT_NO = E.ACCNT_NO
                              AND E.DEL_FG = 'N'

                        WHERE A.DEL_FG = 'N'

                        <if test="srch_vl != null and srch_vl != ''">
                            <if test="srch_typ == 'all'">
                                AND (A.ACCNT_NO = #{srch_vl}
                                     OR  A.MEM_NO = #{srch_vl}
                                     OR  B.MEM_NM LIKE '%' || #{srch_vl} || '%'
                                     OR  B.IDN_NO LIKE '%' || #{srch_vl} || '%'
                                     OR  D.BANK_ACCNT_NO = #{srch_vl}
                                     )
                            </if>
                            <if test="srch_typ == 'mem_nm'">
                                AND B.MEM_NM LIKE #{srch_vl} || '%'
                            </if>
                            <if test="srch_typ == 'accnt_no'">
                                AND A.ACCNT_NO = #{srch_vl}
                            </if>
                            <if test="srch_typ == 'mem_no'">
                                AND A.MEM_NO = #{srch_vl}
                            </if>
                            <if test="srch_typ == 'birth'">
                                AND B.IDN_NO LIKE '%' || #{srch_vl} || '%'
                            </if>
                            <if test="srch_typ == 'bank_accnt_no'">
                                AND D.BANK_ACCNT_NO LIKE '%' || #{srch_vl} || '%'
                            </if>
                            <if test="srch_typ == 'pre_accnt_no'">
                                AND A.OLD_MID LIKE '%' || #{srch_vl} || '%'
                            </if>
                        </if>

                        AND A.ACCNT_NO IN (
                                           SELECT ACCNT_NO
                                             FROM CMS_MEM
                                            WHERE DEL_FG = 'N'

                                            UNION ALL

                                           SELECT ACCNT_NO
                                             FROM CARD_MEM
                                            WHERE DEL_FG = 'N'
                                          )

                       ) A
                ) B
        <if test="startLine != null and startLine != '' and endLine != null and endLine != ''">
            <![CDATA[
            WHERE PAGE_INDX >= #{startLine}
              AND PAGE_INDX < #{endLine}
            ]]>
        </if>
         -->
    </select>

    <!-- ================================================================
     * 날짜 : 20181113
     * 이름 : 정승철
     * 추가내용 : 임의등록시 고객정보 조회(팝업용)
     * ================================================================ -->
    <select id="ReqCustMap.getDlwAccntBaseInfo_popup" parameterType="map" resultType="resultMap">
    <![CDATA[

    SELECT /*ReqCustMap.getDlwAccntBaseInfo_popup*/
           Z.*
      FROM (
             SELECT A.*,
                    ROW_NUMBER() OVER(ORDER BY ${orderBy} ${orderDirection}) AS PAGE_INDX
               FROM (
                      SELECT
                             ACCNT_NO,
                             TBL3.MEM_NO,
                             MB.MEM_NM,
                             TBL3.PROD_CD,
                             PAY_MTHD,
                             STAT,
                             KSTBIT
                       FROM ( SELECT
                                     TBL2.MEM_NO,
                                     TBL2.ACCNT_NO,
                                     TBL2.PROD_CD,
                                     PAY_MTHD,
                                     STAT,
                                     KSTBIT
                               FROM ( SELECT
                                             MBID.MEM_NO,
                                             MBID.ACCNT_NO,
                                             MBID.PROD_CD,
                                             MBID.PAY_MTHD,
                                             MBID.KSTBIT,
                                             (SELECT STAT FROM HP_CALL WHERE ACCNT_NO = MBID.ACCNT_NO) AS STAT
                                        FROM ( SELECT
                                                      MPA.MEM_NO,
                                                      MPA.ACCNT_NO,
                                                      MPA.PROD_CD,
                                                      MPA.PAY_MTHD,
                                                      MPA.KSTBIT
                                                 FROM MEM_PROD_ACCNT MPA
                                                WHERE 1=1
                                                  AND MPA.KSTBIT NOT IN ('03','04')
                                                  AND MPA.DEL_FG = 'N'

                                                UNION

                                               SELECT
                                                      MPA.MEM_NO,
                                                      MPA.ACCNT_NO,
                                                      MPA.PROD_CD,
                                                      MPA.PAY_MTHD,
                                                      MPA.KSTBIT
                                                 FROM MEM_PROD_ACCNT MPA LEFT OUTER JOIN
                                                      RESCISSION RS ON MPA.ACCNT_NO = RS.ACCNT_NO AND RS.DEL_FG = 'N' LEFT OUTER JOIN
                                                      EVENT EV ON MPA.ACCNT_NO = EV.ACCNT_NO AND EV.DEL_FG = 'N' INNER JOIN
                                                      PRODUCT PD ON MPA.PROD_CD = PD.PROD_CD
                                                WHERE 1=1
                                                  AND MPA.DEL_FG = 'N'
                                                  --AND PD.SECTION_T = '0002'
                                                  AND MPA.KSTBIT IN ('03','04')

                                              ) MBID INNER JOIN
                                                PRODUCT PD ON MBID.PROD_CD = PD.PROD_CD LEFT OUTER JOIN
                                                (
                                                  SELECT
                                                         ACCNT_NO,
                                                         '06' AS PAY_MTHD
                                                    FROM CARD_MEM CARD
                                                   WHERE CARD.DEL_FG = 'N'

                                                   UNION

                                                 SELECT
                                                        ACCNT_NO,
                                                        '04' AS PAY_MTHD
                                                   FROM CMS_MEM CMS
                                                  WHERE CMS.DEL_FG = 'N'


                                                ) CM ON MBID.ACCNT_NO = CM.ACCNT_NO AND MBID.PAY_MTHD = CM.PAY_MTHD
                                     ) TBL2
                             ) TBL3 INNER JOIN
                               MEMBER MB ON TBL3.MEM_NO = MB.MEM_NO AND MB.DEL_FG = 'N'
                       WHERE 1=1
    ]]>
                     <if test="srch_typ == 'mem_nm'">
                         AND MB.MEM_NM LIKE #{srch_vl} || '%'
                     </if>
                     <if test="srch_typ == 'accnt_no'">
                         AND TBL3.ACCNT_NO = #{srch_vl}
                     </if>
                     <if test="srch_typ == 'mem_no'">
                         AND MB.MEM_NO = #{srch_vl}
                     </if>

                     ) A

            ) Z

    <if test="startLine != null and startLine != '' and endLine != null and endLine != ''">
      <![CDATA[
      WHERE PAGE_INDX >= #{startLine}
        AND PAGE_INDX < #{endLine}
      ]]>
    </if>

    </select>

    <!-- 산출 회원정보 조회 -->
    <select id="ReqCustMap.getDlwWdrwAcntInfo" parameterType="map" resultType="resultMap">
        SELECT
            /*ReqCustMap.getDlwWdrwAcntInfo*/
            *
        FROM
        (
        SELECT TWR.ACCNT_NO
            , TWR.REQ_PAY_NO
            , TWR.REQ_DAY
            , TWR.ICHAE_CD
            , TWR.PAY_AMT
            , TWR.DEL_FG
            , CASE WHEN PAY_MTHD = '07' THEN '01' --가상계좌
                   WHEN DEL_FG = 'N' THEN '02'  --산출중
                   WHEN DEL_FG = 'R' THEN '03'  -- 청구중
              ELSE '03'
              END AS REQ_TEMP
        FROM TB_MEMBER_WDRW_REQ TWR
        WHERE 1=1
        <if test="accnt_no != null and accnt_no != ''">
            AND TWR.ACCNT_NO = #{accnt_no}
        </if>
            AND TWR.DEL_FG IN ('N', 'R')
        )
        ORDER BY REQ_PAY_NO ASC
    </select>

    <!-- 휴일여부 체크 ('H':휴일) -->
    <select id="ReqCustMap.getHolidayChk" parameterType="map" resultType="string">
         SELECT /* ReqCustMap.getHolidayChk */
             NVL( ( SELECT CASE WHEN EXT_CHK = 'H' THEN 'H'
                           WHEN NVL(EXT_WRITE_CMS,'N') != 'N' AND #{pay_mthd} = '04' THEN 'S'
                           WHEN NVL(EXT_WRITE_CARD,'N') != 'N' AND #{pay_mthd} = '06' THEN 'C'
                       ELSE 'N'
                       END
                 FROM LF_DMUSER.TB_MEMBER_EXT_CHECK
                WHERE EXT_REQ_DT  = #{req_day}
             ) , 'N') AS CHK_HOL
        FROM DUAL
        <!--
        SELECT /* ReqCustMap.getHolidayChk */
               NVL( ( SELECT CASE WHEN EXT_CHK = 'H'
                                  THEN 'H'
                                  ELSE 'N'
                              END
                        FROM LF_DMUSER.TB_MEMBER_EXT_CHECK
                       WHERE EXT_REQ_DT  = #{req_day}
                    ) , 'N') AS CHK_HOL
          FROM DUAL
         -->

    </select>

    <parameterMap id="selectWdrwTempInfoMap" type="resultMap"><!-- /*java.util.HashMap*/ -->
        <parameter property="accnt_no" mode="IN" jdbcType="VARCHAR"  javaType="java.lang.String" />
        <parameter property="req_day" mode="IN" jdbcType="VARCHAR"  javaType="java.lang.String" />
        <parameter property="inv_gunsu" mode="IN" jdbcType="INTEGER"  javaType="java.lang.String" />
        <parameter property="emple_no" mode="IN" jdbcType="VARCHAR"  javaType="java.lang.String" />
    </parameterMap>

    <!-- 임의등록 (청구납입횟수만큼 INSERT) -->
    <insert id="ReqCustMap.addWdrwTemp" statementType="CALLABLE" parameterMap="selectWdrwTempInfoMap">
        {CALL SP_MEMBER_CUSTOM_REQ(?,?,?,?)}
    </insert>


    <!-- 자유결제 용 임의등록 (청구납입횟수만큼 INSERT) -->
    <parameterMap id="selectWdrwFreeTempInfoMap" type="resultMap"><!-- /*java.util.HashMap*/ -->
        <parameter property="accnt_no" mode="IN" jdbcType="VARCHAR"  javaType="java.lang.String" />
        <parameter property="inv_gunsu" mode="IN" jdbcType="INTEGER"  javaType="java.lang.String" />
        <parameter property="ichae_cd" mode="IN" jdbcType="VARCHAR"  javaType="java.lang.String" />
        <parameter property="ichae_no" mode="IN" jdbcType="VARCHAR"  javaType="java.lang.String" />
        <parameter property="emple_no" mode="IN" jdbcType="VARCHAR"  javaType="java.lang.String" />
    </parameterMap>

    <!-- 임의등록 (청구납입횟수만큼 INSERT) -->
    <insert id="ReqCustMap.addWdrwFreeTemp" statementType="CALLABLE" parameterMap="selectWdrwFreeTempInfoMap">
        {CALL SP_MEMBER_CUSTOM_REQ_FREE(?,?,?,?,?)}
    </insert>

    <!-- 임의등록삭제 (승인 이슈 발생 이후 청구 걸려있는 데이터 삭제) -->
    <update id="ReqCustMap.delWdrwFreeTemp" parameterType="map">
        UPDATE LF_DMUSER.TB_MEMBER_WDRW_REQ_DAMO REQ
        SET DEL_FG = 'Y', UPD_MAN = 'FREE_DEL', UPD_DM=SYSDATE
        WHERE 1=1
        AND REQ.ACCNT_NO = #{accnt_no}
        AND REQ_DAY = TO_CHAR(SYSDATE,'YYYYMMDD')
        AND REQ.DEL_FG = 'N'
        AND REQ.RESULT_KIND = '03'
    </update>

    <!-- 가상계좌 산출 된 리스트 조회 -->
    <select id="ReqCustMap.getVirtualExtList" parameterType="map" resultType="resultMap">
        <![CDATA[
        SELECT /*ReqCustMap.getVirtualExtList*/
            TBL.ACCNT_NO,
            TBL.MEM_NO,
            TBL.PROD_CD,
            PAY_MTHD,
            STAT,
            TBL.KSTBIT,
            TRUE_CNT,
            (TRUE_CNT + REQ_PAY_GUNSU) AS REQ_PAY_NO,  -- 청구 회차
            1 AS REQ_GUNSU,
            REQ_PAY_BIT,
            CASE WHEN REQ_PAY_BIT = 'NXX' THEN PND.AMT
                 WHEN REQ_PAY_BIT = 'NRX' THEN PND.AMT + PND.REL_AMT
                 WHEN REQ_PAY_BIT = 'XRX' THEN PND.REL_AMT
                 WHEN REQ_PAY_BIT = 'XRA' THEN PND.REL_AMT + PND.ADD_AMT
                 WHEN REQ_PAY_BIT = 'XXA' THEN PND.ADD_AMT
            ELSE PND.AMT + PND.REL_AMT + PND.ADD_AMT
            END AS PAY_AMT,
            CASE WHEN SUBSTR(REQ_PAY_BIT,0,1) = 'N' THEN MONTH_CNT
                 WHEN SUBSTR(REQ_PAY_BIT,0,1) = 'X' AND TOT_REL_CNT <= MONTH_CNT THEN TOT_REL_CNT
                 WHEN SUBSTR(REQ_PAY_BIT,0,1) = 'X' AND TOT_REL_CNT > MONTH_CNT THEN MONTH_CNT
            ELSE MONTH_CNT
            END AS MONTH_CNT
        FROM
        (
        SELECT
            MBID.MEM_NO,
            MBID.ACCNT_NO,
            MBID.PROD_CD,
            MBID.PAY_MTHD,
            STAT,
            KSTBIT,
            CASE WHEN  KSTBIT IN ('03','04') THEN REL_CNT
            ELSE TRUE_CNT
            END AS TRUE_CNT,
            CASE WHEN KSTBIT = '01' THEN 1 ELSE MONTH_CNT END AS MONTH_CNT,
            B.NUM  AS REQ_PAY_GUNSU,
            (TRUE_CNT + B.NUM) AS REQ_PAY_NO,  -- 청구 회차
            CASE WHEN  PROD_PAY_BIT = 'NXX' THEN
                  CASE WHEN  TRUE_CNT + B.NUM <= (TOT_TRUE_CNT - NEW_CHAN_GUNSU) THEN 'NXX' ELSE 'FUL' END
                     WHEN PROD_PAY_BIT = 'NRX' THEN
                          CASE WHEN  KSTBIT IN ('03','04') AND REL_CNT + B.NUM <= TOT_REL_CNT THEN 'XRX'
                               WHEN  KSTBIT IN ('03','04') AND REL_CNT + B.NUM > TOT_REL_CNT THEN 'FUX'
                               WHEN  TRUE_CNT + B.NUM <= (TOT_TRUE_CNT - NEW_CHAN_GUNSU) AND REL_CNT + B.NUM <= TOT_REL_CNT THEN 'NRX'
                               WHEN  TRUE_CNT + B.NUM <= (TOT_TRUE_CNT - NEW_CHAN_GUNSU) AND REL_CNT + B.NUM > TOT_REL_CNT THEN 'NXX'
                               WHEN  TRUE_CNT + B.NUM > (TOT_TRUE_CNT - NEW_CHAN_GUNSU) AND REL_CNT + B.NUM <= TOT_REL_CNT THEN 'XRX'
                               WHEN  TRUE_CNT + B.NUM > (TOT_TRUE_CNT - NEW_CHAN_GUNSU) AND REL_CNT + B.NUM > TOT_REL_CNT THEN 'FUL'
                          ELSE 'ERR' END
                     WHEN PROD_PAY_BIT = 'NRA' THEN
                          CASE WHEN  KSTBIT IN ('03','04') AND REL_CNT + B.NUM <= TOT_REL_CNT AND ADD_CNT + B.NUM <= TOT_REL_CNT THEN 'XRA'
                               WHEN  KSTBIT IN ('03','04') AND REL_CNT + B.NUM > TOT_REL_CNT AND ADD_CNT + B.NUM <= TOT_REL_CNT THEN 'XXA'
                               WHEN  KSTBIT IN ('03','04') AND REL_CNT + B.NUM > TOT_REL_CNT AND ADD_CNT + B.NUM > TOT_REL_CNT  THEN 'FUX'
                               WHEN  TRUE_CNT + B.NUM <= (TOT_TRUE_CNT - NEW_CHAN_GUNSU) AND REL_CNT + B.NUM <= TOT_REL_CNT AND ADD_CNT + B.NUM <= TOT_REL_CNT THEN 'NRA'
                               WHEN  TRUE_CNT + B.NUM <= (TOT_TRUE_CNT - NEW_CHAN_GUNSU) AND REL_CNT + B.NUM > TOT_REL_CNT AND ADD_CNT + B.NUM > TOT_REL_CNT THEN 'NXX'
                               WHEN  TRUE_CNT + B.NUM > (TOT_TRUE_CNT - NEW_CHAN_GUNSU) AND REL_CNT + B.NUM <= TOT_REL_CNT AND ADD_CNT + B.NUM <= TOT_REL_CNT THEN 'XRA'
                               WHEN  TRUE_CNT + B.NUM > (TOT_TRUE_CNT - NEW_CHAN_GUNSU) AND REL_CNT + B.NUM > TOT_REL_CNT AND ADD_CNT + B.NUM <= TOT_REL_CNT THEN 'XXA'
                               WHEN  TRUE_CNT + B.NUM > (TOT_TRUE_CNT - NEW_CHAN_GUNSU) AND REL_CNT + B.NUM > TOT_REL_CNT AND ADD_CNT + B.NUM > TOT_REL_CNT THEN 'FUL'
                          ELSE 'ERR' END
                    ELSE 'ERR'
            END AS REQ_PAY_BIT,
            TOT_TRUE_CNT,
            TOT_REL_CNT,
            TOT_ADD_CNT,
            REL_CNT,
            ADD_CNT,
            NEW_CHAN_GUNSU
        FROM
        (
            SELECT
                MPA.ACCNT_NO,
                MB.MEM_NO,
                MPA.JOIN_DT,
                MPA.PROD_CD,
                KSTBIT,
                (SELECT STAT FROM HP_CALL WHERE ACCNT_NO = MPA.ACCNT_NO) AS STAT,
                PAY_MTHD,
                NEW_CHAN_GUNSU,
                (
                     SELECT CASE WHEN SUM(REL_AMT) > 0 AND SUM(ADD_AMT) > 0 THEN 'NRA'
                                 WHEN SUM(REL_AMT) > 0 AND SUM(ADD_AMT) = 0 THEN 'NRX'
                            ELSE 'NXX'
                            END
                     FROM PRODUCT_NO_DATA
                     WHERE PROD_CD = MPA.PROD_CD
                ) AS PROD_PAY_BIT,

                /******************************************필수항목*************************************************/
                (TRUNC(MONTHS_BETWEEN(LAST_DAY(SYSDATE),MPA.JOIN_DT)+1)) AS MONTH_CNT,
                NVL((SELECT COUNT(NO) FROM PAY_MNG WHERE ACCNT_NO = MPA.ACCNT_NO AND DEL_FG = 'N'),0) AS TRUE_CNT,
                NVL((SELECT COUNT(NO) FROM PAY_MNG_DTL WHERE ACCNT_NO = MPA.ACCNT_NO AND DEL_FG = 'N'),0) AS REL_CNT,
                NVL((SELECT COUNT(NO) FROM PAY_MNG_DTL1 WHERE ACCNT_NO = MPA.ACCNT_NO AND DEL_FG = 'N'),0) AS ADD_CNT,
                (SELECT COUNT(NO) FROM PRODUCT_NO_DATA WHERE PROD_CD = MPA.PROD_CD AND AMT > 0) AS TOT_TRUE_CNT,
                (SELECT COUNT(NO) FROM PRODUCT_NO_DATA WHERE PROD_CD = MPA.PROD_CD AND REL_AMT > 0) AS TOT_REL_CNT,
                (SELECT COUNT(NO) FROM PRODUCT_NO_DATA WHERE PROD_CD = MPA.PROD_CD AND ADD_AMT > 0) AS TOT_ADD_CNT

            FROM MEM_PROD_ACCNT_DAMO MPA INNER JOIN
                MEMBER_DAMO MB ON MB.MEM_NO = MPA.MEM_NO AND MB.DEL_FG = 'N' INNER JOIN
                PRODUCT PD ON MPA.PROD_CD = PD.PROD_CD
            WHERE MPA.DEL_FG = 'N'
            AND MPA.ACCNT_NO = #{accnt_no}
        ) MBID INNER JOIN
                (
                    SELECT LEVEL NUM
                    FROM DUAL
                    CONNECT BY LEVEL <= 1000
                ) B ON B.NUM BETWEEN 1 AND #{inv_gunsu}
        ) TBL INNER JOIN
              PRODUCT_NO_DATA PND ON PND.PROD_CD = TBL.PROD_CD AND PND.NO = (TRUE_CNT + REQ_PAY_GUNSU)
        ]]>
    </select>

    <!-- 가상계좌 산출 INSERT 20181030 -->
    <insert id="ReqCustMap.insertVirtualMemData"  parameterType="map">
        INSERT INTO TB_MEMBER_WDRW_REQ(
            ACCNT_NO,
            PROD_CD,
            PAY_MTHD,
            REQ_BIT,
            STAT,
            KSTBIT,
            TRUE_CNT,
            REQ_PAY_NO,
            PAY_BIT,
            ICHAE_NO,
            ICHAE_CD,
            REQ_DAY,
            PAY_AMT,
            REG_DM,
            REG_MAN,
            REQ_PAY_GUNSU,
            DEL_FG,
            RESULT_KEY,
            RESULT_KIND,
            MONTH_CNT,
            MEM_NO,
            INI_YN
        ) VALUES (
            #{accnt_no},
            #{prod_cd},
            '07',
            '03',
            #{stat},
            #{kstbit},
            #{true_cnt},
            #{req_pay_no},
            #{pay_bit},
            '',
            #{ichae_cd},
            #{req_day},
            #{pay_amt},
            SYSDATE,
            #{emple_no},
            '1',
            'N',
            '',
            '04',
            #{month_cnt},
            #{mem_no},
            'Y'
        )

        <!--
        /*ReqCustMap.insertVirtualMemData*/
        INSERT INTO TB_MEMBER_VIRTUAL_REQ
        (
            ACCNT_NO,
            MEM_NO,
              PAY_BIT,
              REQ_NO,
              REQ_GUNSU,
              REQ_AMT,
              DEL_FG,
              REG_DM,
              REG_MAN
         )
         VALUES (
             #{accnt_no},
             #{mem_no},
             #{pay_bit},
             #{req_no},
             #{req_gunsu},
             #{req_amt},
             'N',
             SYSDATE,
             #{emple_no}
         )

          -->
    </insert>

    <parameterMap id="VirtualReqInfoMap" type="resultMap"><!-- /*java.util.HashMap*/ -->
        <parameter property="emple_no" mode="IN" jdbcType="VARCHAR"  javaType="java.lang.String" />
        <parameter property="mem_no" mode="IN" jdbcType="VARCHAR"  javaType="java.lang.String" />
    </parameterMap>

    <!-- 가상계좌 산출 데이터 청구 등록 -->
    <insert id="ReqCustMap.insertVirtualReq" statementType="CALLABLE" parameterMap="VirtualReqInfoMap">
        {CALL SP_MEMBER_VIRTUAL_REQ(?,?)}
    </insert>

    <!-- 임의삭제 -->
    <update id="ReqCustMap.delWdrwTemp" parameterType="map">

        UPDATE TB_MEMBER_WDRW_REQ
           SET DEL_FG = 'Y'
             , UPD_DM = SYSDATE
             , UPD_MAN = #{upd_man}
         WHERE 1=1
           AND ACCNT_NO = #{accnt_no}
           <!-- AND REQ_DAY = #{req_day} -->
           AND DEL_FG = 'N' <!-- 산출(청구전) -->

    </update>

    <!-- 실시간 결제 대상 회원 정보 -->
    <select id="ReqCustMap.getRealTimeReqList" parameterType="map" resultType="resultMap">
                    SELECT  /* ReqCustMap.getRealTimeReqList */
                        REQ.ACCNT_NO,
                        REQ.PAY_AMT,
                        REQ.PROD_CD,
                        MB.MEM_NO,
                        MB.MEM_NM,
                        MB.EMAIL,
                        MB.CELL,
                        PD.PROD_NM,
                        REQ.ICHAE_NO AS BID,
                        REQ.REQ_PAY_NO,
                        REQ.MONTH_CNT,
                        REQ.REQ_DAY,
                        REQ.INI_YN,
                        0 AS CARD_QUOTA,

                        CASE WHEN NVL(INI_YN,'N') = 'Y' AND TLM.LTI_USE_YN  = 'Y' AND NVL(TCB.GUBUN,'00') = '99' THEN SUBSTR('0'||REQ.REQ_PAY_NO,-2)
                        ELSE NVL(TCB.GUBUN,'00')
                        END AS BILL_GUBUN,

                        CASE WHEN NVL(INI_YN,'N') = 'N' THEN (SELECT MID||KEY FROM CARD_MID_LIST WHERE MID = SUBSTR(ICHAE_NO,5,10))
                             WHEN NVL(INI_YN,'N') = 'Y' AND TLM.LTI_USE_YN  = 'Y' THEN PD.MID_INFO_2
                        ELSE NVL((SELECT INI_MID FROM CARD_MID_LIST WHERE MID = PD.MID),'daemyungT1')
                        END  AS BILL_KEY,

                        CASE WHEN MONTH_CNT - REQ_PAY_NO > 0 THEN '2'
                             WHEN MONTH_CNT - REQ_PAY_NO = 0 THEN '0'
                        ELSE '1'
                        END AS STAT
                    FROM LF_DMUSER.TB_MEMBER_WDRW_REQ REQ LEFT OUTER JOIN
                        MEM_PROD_ACCNT MPA ON REQ.ACCNT_NO = MPA.ACCNT_NO AND MPA.DEL_FG = 'N' INNER JOIN
                        MEMBER MB ON MPA.MEM_NO = MB.MEM_NO AND MB.DEL_FG = 'N' INNER JOIN
                        PRODUCT PD ON MPA.PROD_CD = PD.PROD_CD LEFT OUTER JOIN
                        TB_LTINSTALL_MNG TLM ON REQ.ACCNT_NO = TLM.ACCNT_NO AND TLM.DEL_FG = 'N' LEFT OUTER JOIN
                        TB_CARD_BILL_GUBUN TCB ON TCB.PROD_CD = REQ.PROD_CD AND REQ.REQ_PAY_NO BETWEEN STT_PAY_NO AND END_PAY_NO
                    WHERE 1=1
                AND REQ.DEL_FG = 'N'
                AND REQ.PAY_MTHD = '06'
                AND REQ.ACCNT_NO = #{accnt_no}
                AND REQ_DAY = #{req_day}
                AND REQ_PAY_NO  = #{req_pay_no}
        <!--
            SELECT  /* ReqCustMap.getRealTimeReqList */
                REQ.ACCNT_NO,
                REQ.PAY_AMT,
                REQ.PROD_CD,
                MB.MEM_NO,
                MB.MEM_NM,
                MB.EMAIL,
                MB.CELL,
                PD.PROD_NM,
                REQ.ICHAE_NO AS BID,
                REQ.REQ_PAY_NO,
                REQ.MONTH_CNT,
                REQ.REQ_DAY,
                REQ.INI_YN,
                0 AS CARD_QUOTA,
                NVL((SELECT GUBUN FROM LF_DMUSER.TB_CARD_BILL_GUBUN WHERE PROD_CD = REQ.PROD_CD AND REQ.REQ_PAY_NO BETWEEN STT_PAY_NO AND END_PAY_NO),'00') AS BILL_GUBUN,
                (SELECT MID||KEY FROM CARD_MID_LIST WHERE MID = SUBSTR(ICHAE_NO,5,10)) AS BILL_KEY,
                CASE WHEN MONTH_CNT - REQ_PAY_NO > 0 THEN '2'
                     WHEN MONTH_CNT - REQ_PAY_NO = 0 THEN '0'
                ELSE '1'
                END AS STAT
            FROM LF_DMUSER.TB_MEMBER_WDRW_REQ REQ LEFT OUTER JOIN
                MEM_PROD_ACCNT MPA ON REQ.ACCNT_NO = MPA.ACCNT_NO AND MPA.DEL_FG = 'N' INNER JOIN
                MEMBER MB ON MPA.MEM_NO = MB.MEM_NO AND MB.DEL_FG = 'N' INNER JOIN
                PRODUCT PD ON MPA.PROD_CD = PD.PROD_CD
            WHERE 1=1
            AND REQ.DEL_FG = 'N'
            AND REQ.PAY_MTHD = '06'
            AND REQ.ACCNT_NO = #{accnt_no}
            AND REQ_DAY = #{req_day}
            AND REQ_PAY_NO  = #{req_pay_no}
             -->
    </select>

    <!--실시간 결제 대상 회원 정보 (자유결제 다수 회차) -->
    <select id="ReqCustMap.getRealTimeReqFreeList" parameterType="map" resultType="resultMap">
                SELECT
                    /* ReqCustMap.getRealTimeReqFreeList */
                    REQ.ACCNT_NO,
                    REQ.PAY_AMT,
                    REQ.PROD_CD,
                    MB.MEM_NO,
                    MB.MEM_NM,
                    MB.EMAIL,
                    MB.CELL,
                    PD.PROD_NM,
                    REQ.ICHAE_NO AS BID,
                    REQ.REQ_PAY_NO,
                    REQ.MONTH_CNT,
                    REQ.REQ_DAY,
                    REQ.INI_YN,
                     #{card_quota} AS CARD_QUOTA,
                    NVL((SELECT GUBUN FROM LF_DMUSER.TB_CARD_BILL_GUBUN WHERE PROD_CD = REQ.PROD_CD AND REQ.REQ_PAY_NO BETWEEN STT_PAY_NO AND END_PAY_NO),'00') AS BILL_GUBUN,
                    CASE WHEN NVL(INI_YN,'N') = 'N' THEN (SELECT MID||KEY FROM CARD_MID_LIST WHERE MID = SUBSTR(ICHAE_NO,5,10))
                    ELSE NVL((SELECT INI_MID FROM CARD_MID_LIST WHERE MID = PD.MID),'daemyungT1')
                    END  AS BILL_KEY,
                    CASE WHEN MONTH_CNT - REQ_PAY_NO > 0 THEN '2'
                         WHEN MONTH_CNT - REQ_PAY_NO = 0 THEN '0'
                    ELSE '1'
                    END AS STAT -- 입금 등록 시 납입상태 (0:정상, 1:선납, 2:연체)
                FROM LF_DMUSER.TB_MEMBER_WDRW_REQ REQ LEFT OUTER JOIN
                    MEM_PROD_ACCNT MPA ON REQ.ACCNT_NO = MPA.ACCNT_NO AND MPA.DEL_FG = 'N' INNER JOIN
                    MEMBER MB ON MPA.MEM_NO = MB.MEM_NO AND MB.DEL_FG = 'N' INNER JOIN
                    PRODUCT PD ON MPA.PROD_CD = PD.PROD_CD
                WHERE 1=1
                AND REQ.ACCNT_NO = #{accnt_no}
                AND REQ_DAY = TO_CHAR(SYSDATE,'YYYYMMDD')
                AND REQ.PAY_MTHD = '06'
                AND REQ.DEL_FG = 'N'
                AND REQ.RESULT_KIND = '03'

    </select>

    <!-- ================================================================
     * 날짜 : 20181031
     * 이름 : 정승철
     * 추가내용 : 빌키 생성정보 조회
     * ================================================================
     * -->
    <select id="ReqCustMap.getBillKeyCrtnInfo"  parameterType="map" resultType="resultMap">

        SELECT /* ReqCustMap.getBillKeyCrtnInfo */
               MB.EMAIL
             , MB.CELL
             , IDN_NO AS IDN_NO
             , FN_PROD_NM(MPA.PROD_CD) PROD_NM
             , MPA.PROD_CD PROD_CD
             , MB.MEM_NM MEM_NM
          FROM MEM_PROD_ACCNT MPA
          JOIN MEMBER MB ON MPA.MEM_NO= MB.MEM_NO
         WHERE MPA.ACCNT_NO = #{accnt_no}

    </select>

    <!-- ================================================================
     * 날짜 : 20181031
     * 이름 : 정승철
     * 추가내용 : 카드 결과데이터 INSERT (** 자유결제)
     * ================================================================
     * -->
    <insert id="ReqCustMap.insertFreeCardResult"  parameterType="map">
        BEGIN
            <!-- 청구관리 테이블 등록 -->
            INSERT INTO TB_MEMBER_WDRW_REQ	(
                ACCNT_NO,
                MEM_NO,
                PROD_CD,
                PAY_MTHD,
                REQ_BIT,
                STAT,
                KSTBIT,
                REQ_PAY_NO,
                ICHAE_NO,
                ICHAE_CD,
                REQ_DAY,
                PAY_AMT,
                REG_DM,
                REG_MAN,
                DEL_FG,
                RESULT_KEY,
                RESULT_KIND,
                INI_YN
            ) VALUES (
                   #{accnt_no},
                   #{mem_no},
                   #{prod_cd},
                '06',
                '03',
                #{stat},
                #{kstbit},
                999,
                SUBSTR(#{card_no},0,4) || '-****-****[' || #{exp_year} || #{exp_mon} ,
                #{card_cd},
                TO_CHAR(SYSDATE,'YYYYMMDD'),
                #{pay_amt},
                SYSDATE,
                #{emple_no},
                #{del_fg},
                #{result_key},
                #{pay_kind},
                'Y'
            );

            <!-- 결제 결과 테이블 등록 -->
              INSERT
                /* ReqCustMap.insertFreeCardResult */
              INTO TB_MEMBER_WDRW_RESULT
                 (
                   ACCNT_NO,
                   REQ_DAY,
                   REQ_NO,
                   PAY_KIND,
                   RESULT_KEY,
                   RESULT_CD,
                   RESULT_MSG,
                   PAY_MTHD,
                   AUTH_DT,
                   AUTH_CD,
                   ICHAE_CD,
                   ICHAE_NO,
                   ETC,
                   REG_DM,
                   REG_MAN,
                   TID
                 )
            VALUES
                 (
                   #{accnt_no},
                   TO_CHAR(SYSDATE,'YYYYMMDD'),
                   #{pay_no},
                   #{pay_kind},
                   #{result_key},
                   #{result_cd},
                   #{result_msg},
                   #{pay_mthd},
                   #{auth_dt},
                   #{auth_cd},
                   #{card_cd},
                   SUBSTR(#{card_no},0,4) || '-****-****[' || #{exp_year} || #{exp_mon} ,
                   #{etc},
                   SYSDATE,
                   #{emple_no},
                   #{result_key}
                 );
        END ;
    </insert>

    <!-- ================================================================
     * 날짜 : 20210825
     * 이름 : 임동진
     * 추가내용 : 장기할부 정보 등록
     * 대상 테이블 : LF_DMUSER.TB_LTINSTALL_MNG
     * ================================================================
     * -->
    <insert id="ReqCustMap.insertLongTermData"  parameterType="map">
            <!-- 결제 결과 테이블 등록 -->
            BEGIN
              INSERT /* ReqCustMap.insertLongTermData */
              INTO TB_LTINSTALL_MNG (
                    ACCNT_NO,
                    LTI_PROD_PAY,
                    LTI_USE_YN,
                    REG_DM,
                    REG_MAN,
                    PAY_AMT,
                    CARD_QUOTA,
                    DEL_FG
                 )
             VALUES
                 (
                   #{accnt_no},
                   'Y',
                   'Y',
                   SYSDATE,
                   #{emple_no},
                   #{pay_amt},
                   #{card_quota},
                   'N'
                  );

              UPDATE LF_DMUSER.HP_CALL
              SET STAT = '01'
              WHERE ACCNT_NO =  #{accnt_no} ;
             END;
    </insert>

    <!-- ================================================================
     * 날짜 : 20200511
     * 이름 : 임동진
     * 추가내용 : 이니시스 결과 카운트
     * ================================================================
     * -->
    <select id="ReqCustMap.getInicisResultCount"  parameterType="map" resultType="int">
        SELECT
            /*ReqCustMap.getInicisResultCount*/
            COUNT(*)
        FROM LF_DMUSER.TB_ACQU_INICIS_LIST
        WHERE 1=1
            AND AUTH_DT =  #{acqu_dt}
    </select>

    <select id="ReqCustMap.getDlwVrtlAcntClctCount" parameterType="map" resultType="int">
         <if test="dt_typ == '0001'">
            SELECT
                /*ReqCustMap.getDlwVrtlAcntClctCount*/
                COUNT(*)
            FROM
            (
                SELECT
                    DISTINCT
                    REQ.MEM_NO,
                    REQ.ACCNT_NO,
                    REQ.ICHAE_NO,
                    REQ.RESULT_KEY,
                    REQ.REQ_DAY,
                    REQ.ICHAE_CD,
                    (
                      SELECT
                        COUNT(*)
                      FROM VIEW_MEMBER_WDRW_REQ
                      WHERE ACCNT_NO = RST.ACCNT_NO AND RST.TID = RESULT_KEY
                      AND NVL(INI_YN,'N') = 'Y'
                      AND PAY_MTHD = '07'
                    ) AS REQ_PAY_NO,
                    RST.DEPOSIT_AMT AS PAY_AMT,
                    REQ.KSTBIT,
                    REQ.DEL_FG,
                    RST.DEPOSIT_DT, --입금일
                    RST.DEPOSIT_TIME, --입금시간
                    RST.DEPOSIT_NAME, --입금자
                    RST.RESULT_MSG, --결과메세지
                    CASE WHEN REQ.DEL_FG = 'F' THEN '0004'
                            WHEN REQ.DEL_FG = 'C' AND NVL(DEPOSIT_DT,'N') != 'N' THEN '0001'
                            WHEN REQ.DEL_FG = 'R' AND NVL(DEPOSIT_DT,'N') = 'N' AND REQ_DAY >= TO_CHAR(SYSDATE,'YYYYMMDD') THEN '0003'
                    ELSE '0002'
                    END AS DPST_STAT,
                    REQ.REG_MAN,
                    TO_CHAR(REQ.REG_DM,'YYYYMMDD') AS REG_DM
                FROM TB_MEMBER_VIRTUAL_RESULT RST INNER JOIN
                    VIEW_MEMBER_WDRW_REQ REQ  ON RST.ACCNT_NO = REQ.ACCNT_NO AND RST.TID = REQ.RESULT_KEY INNER JOIN
                    MEMBER MB ON REQ.MEM_NO = MB.MEM_NO  LEFT OUTER JOIN
                    PS_WILLVI.TB_USER TU ON TU.USER_ID = REQ.REG_MAN AND TU.USE_YN = 'Y'

                    <if test="user_athrCd != null and user_athrCd == 'TM40'">
                                INNER JOIN LF_DMUSER.RESN_CREDIT_LIST K  ON K.ACCNT_NO = REQ.ACCNT_NO AND K.DEL_FG = 'N' AND K.TARGET_YM = TO_CHAR(SYSDATE, 'YYYYMM')
                    </if>
                    WHERE 1=1
                        AND RST.DEPOSIT_DT  BETWEEN REPLACE(#{stt_dt}, '/', '') AND REPLACE(#{end_dt}, '/', '')
                        AND NVL(INI_YN,'N') = 'Y'
                        AND PAY_MTHD = '07'

                    <if test="accnt_no != null and accnt_no != ''">
                        AND REQ.ACCNT_NO = #{accnt_no}
                    </if>

                    <if test="non_pay_yn != null and non_pay_yn != '' and non_pay_yn.equalsIgnoreCase('Y')">
                        AND TEAM_CD = 'T10300'
                    </if>

                    <if test="non_pay_yn != null and non_pay_yn != '' and non_pay_yn.equalsIgnoreCase('N')">
                        AND (TEAM_CD != 'T10300' OR TEAM_CD IS NULL)
                    </if>
            ) TBL
            WHERE 1=1
            <if test="dpst_stat != null and dpst_stat != ''">
                 AND TBL.DPST_STAT = #{dpst_stat}
             </if>
        </if>

        <if test="dt_typ == '0002'">
            SELECT
                /* ReqCustMap.getDlwVrtlAcntClctList */
                COUNT(*)
            FROM
            (
                SELECT
                        MEM_NO,
                        ACCNT_NO,
                        MEM_NM,
                        CELL,
                        ICHAE_NO,
                        RESULT_KEY,
                        REQ_DAY,
                        ICHAE_CD,
                        REQ_PAY_NO,
                        PAY_AMT,
                        KSTBIT,
                        DEL_FG,
                        DEPOSIT_DT, --입금일
                        DEPOSIT_TIME, --입금시간
                        DEPOSIT_NAME, --입금자
                        RESULT_MSG, --결과메세지
                        DPST_STAT,
                        REG_MAN,
                        REG_DM
                FROM
                (
                    SELECT
                        MPA.MEM_NO,
                        REQ.ACCNT_NO,
                        MB.MEM_NM,
                        MB.CELL,
                        REQ.ICHAE_NO,
                        REQ.RESULT_KEY,
                        REQ.REQ_DAY,
                        REQ.ICHAE_CD,
                        REQ.REQ_PAY_NO,
                        REQ.PAY_AMT,
                        MPA.KSTBIT,
                        REQ.DEL_FG,
                        RST.DEPOSIT_DT, --입금일
                        RST.DEPOSIT_TIME, --입금시간
                        RST.DEPOSIT_NAME, --입금자
                        RST.RESULT_MSG, --결과메세지
                        CASE WHEN REQ.DEL_FG = 'F' THEN '0004'
                                WHEN REQ.DEL_FG = 'C' AND NVL(DEPOSIT_DT,'N') != 'N' THEN '0001'
                                WHEN REQ.DEL_FG = 'R' AND NVL(DEPOSIT_DT,'N') = 'N' AND REQ_DAY >= TO_CHAR(SYSDATE,'YYYYMMDD') THEN '0003'
                        ELSE '0002'
                        END AS DPST_STAT,
                        REQ.REG_DM,
                        REQ.REG_MAN
                    FROM
                    (
                            SELECT
                               ACCNT_NO,
                               ICHAE_NO,
                               RESULT_KEY,
                               REQ_DAY,
                               ICHAE_CD,
                               DEL_FG,
                               TO_CHAR(REG_DM,'YYYYMMDD') AS REG_DM,
                               REG_MAN,
                               COUNT(ACCNT_NO) AS REQ_PAY_NO,
                               SUM(PAY_AMT) AS PAY_AMT
                           FROM LF_DMUSER.VIEW_MEMBER_WDRW_REQ
                           WHERE 1=1
                                AND REQ_DAY  BETWEEN REPLACE(#{stt_dt}, '/', '') AND REPLACE(#{end_dt}, '/', '')
                             AND PAY_MTHD = '07'
                             AND NVL(INI_YN,'N') = 'Y'
                           GROUP BY ACCNT_NO,ICHAE_NO,RESULT_KEY,REQ_DAY,ICHAE_CD,DEL_FG,TO_CHAR(REG_DM,'YYYYMMDD'),REG_MAN
                    )  REQ INNER JOIN
                    MEM_PROD_ACCNT MPA ON REQ.ACCNT_NO = MPA.ACCNT_NO AND MPA.DEL_FG = 'N' INNER JOIN
                    MEMBER MB ON MPA.MEM_NO = MB.MEM_NO  LEFT OUTER JOIN
                    TB_MEMBER_VIRTUAL_RESULT RST ON REQ.ICHAE_NO = RST.VTR_ACC_NO LEFT OUTER JOIN
                    PS_WILLVI.TB_USER TU ON TU.USER_ID = REQ.REG_MAN AND TU.USE_YN = 'Y'

                        <if test="user_athrCd != null and user_athrCd == 'TM40'">
                                INNER JOIN LF_DMUSER.RESN_CREDIT_LIST K  ON K.ACCNT_NO = REQ.ACCNT_NO AND K.DEL_FG = 'N' AND K.TARGET_YM = TO_CHAR(SYSDATE, 'YYYYMM')
                        </if>
                    WHERE 1=1
                    <if test="accnt_no != null and accnt_no != ''">
                        AND REQ.ACCNT_NO = #{accnt_no}
                    </if>

                    <if test="non_pay_yn != null and non_pay_yn != '' and non_pay_yn.equalsIgnoreCase('Y')">
                        AND TEAM_CD = 'T10300'
                    </if>

                    <if test="non_pay_yn != null and non_pay_yn != '' and non_pay_yn.equalsIgnoreCase('N')">
                        AND (TEAM_CD != 'T10300' OR TEAM_CD IS NULL)
                    </if>
                ) TBL
                WHERE 1=1
                    <if test="dpst_stat != null and dpst_stat != ''">
                        AND TBL.DPST_STAT = #{dpst_stat}
                     </if>
            ) TBL2
        </if>

        <!--
        SELECT /* ReqCustMap.getDlwVrtlAcntClctList */
               COUNT(*) AS ICNT
          FROM (SELECT <if test="orderBy != null and orderBy != ''">
                           ROW_NUMBER() OVER(ORDER BY ${orderBy} ${orderDirection}) PAGE_INDX,
                       </if>
                       <if test="orderBy == null or orderBy == ''">
                           '' AS PAGE_INDX,
                       </if>
                       X.*
                  FROM (SELECT TBL.*
                             , CASE WHEN TBL.EVT_NM = ''
                                    THEN '정상'
                                    ELSE TBL.EVT_NM
                               END AS JOIN_STAT
                             , '' CHK
                             , 'RR' CRUD
                             , '[대명아임레디]' || CHR(13) ||
                               '가상계좌 입금 안내' || CHR(13) ||
                               '가상계좌번호 : ' || TBL.VRTL_ACCNT_NO || CHR(13) ||
                               '은행 : ' || TBL.BANK_NM || CHR(13) ||
                               '예금주 : ' || TBL.MEM_NM || CHR(13) ||
                               '입금금액 : ' || TO_CHAR(TBL.TOTAL_AMT, 'FM999,999,999,999,999.9999') || CHR(13) ||
                               '입금마감일자 : ' || TBL.EXPIRY_DT || CHR(13) ||
                               '* 입금마감일자 경과 후 입금 시' || CHR(13) ||
                               '타인에게 입금반영이 될수 있으니' || CHR(13) ||
                               '마감일자 꼭 지켜주시기바랍니다.' || CHR(13) ||
                               '감사합니다.' AS CONTENT
                             , REPLACE(TBL.CELL, '-', '') AS CLPH_NO
                          FROM (SELECT MEM.MEM_NM
                                     , VAM.SEQ
                                     , MEM.CELL
                                     , MEM.MEM_NO
                                     , VAD.ACCNT_NO
                                     , VAM.VRTL_ACCNT_NO
                                     , VAM.EXPIRY_YYYYMMDD || ' '
                                                || SUBSTR(VAM.EXPIRY_HHMMSS, 1, 2) || ':'
                                                || SUBSTR(SUBSTR(VAM.EXPIRY_HHMMSS, 1, 4), -2) || ':'
                                                || SUBSTR(VAM.EXPIRY_HHMMSS, -2) AS EXPIRY_DT
                                     , FN_COM_NM('63', VAM.BANK_CD) AS BANK_NM
                                     , VAM.BANK_CD AS BANK_CD
                                     , CASE WHEN VAM.STAT = '01'
                                            THEN '전송전'
                                            WHEN VAM.STAT IN ('02', '04')
                                            THEN '전송완료'
                                            WHEN VAM.STAT = '03'
                                            THEN '전송오류'
                                            ELSE ''
                                        END AS NICE_RESULT
                                     , CASE WHEN VAM.STAT = '04'
                                            THEN '입금완료'
                                            WHEN VAM.STAT = '02' AND VAM.EXPIRY_YYYYMMDD || VAM.EXPIRY_HHMMSS <![CDATA[<]]> TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')
                                            THEN '입금안됨'
                                            WHEN VAM.STAT = '01'
                                            THEN ''
                                            WHEN VAM.STAT = '03'
                                            THEN ''
                                            ELSE '대기중'
                                        END AS PAY_COMP_FG
                                     , CASE WHEN VAM.STAT = '01' THEN '0001'
                                            WHEN VAM.STAT IN ('02', '04') THEN '0002'
                                            WHEN VAM.STAT = '03' THEN '0003'
                                            ELSE ''
                                        END AS NICE_RESULT_CD
                                     , CASE WHEN VAM.STAT = '04' THEN '0001'
                                            WHEN VAM.STAT = '02' AND VAM.EXPIRY_YYYYMMDD || VAM.EXPIRY_HHMMSS <![CDATA[<]]> TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')
                                            THEN '0002'
                                            ELSE ''
                                        END AS PAY_COMP_FG_CD
                                     , CASE WHEN NVL(VAM.AUTH_DATE, '') = '' THEN
                                                ''
                                            ELSE
                                              VAM.AUTH_DATE
                                        END AS AUTH_DT
                                     , VAD.INV_GUNSU
                                     , VAD.WDRW_REQ_AMT
                                     , FN_COM_NM('85', PROD.PROD_CL) AS PROD_CL
                                     , FN_EVENT(ACCNT.ACCNT_NO) AS EVT_NM
                                     , FN_YEN_CHE(ACCNT.ACCNT_NO) AS PAY_STAT
                                     , (SELECT SUM(A.WDRW_REQ_AMT)
                                          FROM NICE_VRTL_ACCNT_WDRW_REQ_DTL A
                                         WHERE A.SEQ = VAM.SEQ) AS TOTAL_AMT
                                     , VAM.TID
                                     , TO_CHAR(VAM.REG_DM, 'YYYY/MM/DD') AS REG_DM
                                     , FN_EMPLE_NM(VAM.REG_MAN) AS REG_MAN
                                     , TU.TEAM_CD AS REG_TEAM
                                  FROM NICE_VRTL_ACCNT_WDRW_REQ_MST VAM
                                 INNER JOIN NICE_VRTL_ACCNT_WDRW_REQ_DTL VAD
                                    ON VAM.SEQ = VAD.SEQ
                                 INNER JOIN MEM_PROD_ACCNT ACCNT
                                    ON VAD.ACCNT_NO = ACCNT.ACCNT_NO
                                 INNER JOIN MEMBER MEM
                                    ON MEM.MEM_NO = ACCNT.MEM_NO
                                 INNER JOIN PRODUCT PROD
                                    ON PROD.PROD_CD = ACCNT.PROD_CD
                                 LEFT OUTER JOIN PS_WILLVI.TB_USER TU
                                    ON TU.USER_ID = VAM.REG_MAN AND USE_YN = 'Y'
                     -->

                                  <!-- 2018.03.20 TM40:MG권한 일 경우 -->
                        <!--
                                 <if test="user_athrCd != null and user_athrCd == 'TM40'">
                                      INNER JOIN LF_DMUSER.RESN_CREDIT_LIST K
                                      ON K.ACCNT_NO = ACCNT.ACCNT_NO
                                      AND K.DEL_FG = 'N'
                                      AND K.TARGET_YM = TO_CHAR(SYSDATE, 'YYYYMM')
                                 </if>
                                 WHERE 1=1
                                 <if test="accnt_no != null and accnt_no != ''">
                                     AND ACCNT.ACCNT_NO = #{accnt_no}
                                 </if>
                                 <if test="tid != null and tid != ''">
                                     AND VAM.TID = #{tid}
                                 </if>
                                 <if test="dt_typ == '0001'">
                                     <if test="(stt_dt != null and stt_dt != '') and (end_dt != null and end_dt != '') and (accnt_no == null or accnt_no == '')">
                                         AND VAM.AUTH_DATE IS NOT NULL
                                        AND SUBSTR('20' || VAM.AUTH_DATE, 1, 8) BETWEEN REPLACE(#{stt_dt}, '/', '') AND REPLACE(#{end_dt}, '/', '')
                                     </if>
                                 </if>
                                 <if test="dt_typ == '0002'">
                                     <if test="(stt_dt != null and stt_dt != '') and (end_dt != null and end_dt != '') and (accnt_no == null or accnt_no == '')">
                                        AND VAM.EXPIRY_YYYYMMDD BETWEEN REPLACE(#{stt_dt}, '/', '') AND REPLACE(#{end_dt}, '/', '')
                                     </if>
                                 </if>
                                ) TBL
                         WHERE 1=1
                         <if test="non_pay_yn != null and non_pay_yn != '' and non_pay_yn.equalsIgnoreCase('Y')">
                             AND REG_TEAM = 'T10300'
                         </if>
                         <if test="non_pay_yn != null and non_pay_yn != '' and non_pay_yn.equalsIgnoreCase('N')">
                             AND (REG_TEAM != 'T10300' OR REG_TEAM IS NULL)
                         </if>
                         <if test="trnm_stat != null and trnm_stat != ''">
                             AND TBL.NICE_RESULT_CD = #{trnm_stat}
                         </if>
                         <if test="dpst_stat != null and dpst_stat != ''">
                             <if test="dpst_stat == '0003'">
                                 AND TBL.PAY_COMP_FG_CD NOT IN ('0001', '0002')
                                 AND TBL.NICE_RESULT_CD != '0003'
                             </if>
                             <if test="dpst_stat != '0003'">
                                 AND TBL.PAY_COMP_FG_CD = #{dpst_stat}
                             </if>
                         </if>
                    ) X
                ) Z
                -->
    </select>

    <select id="ReqCustMap.getDlwVrtlAcntClctList" parameterType="map" resultType="resultMap">

        <!-- DM sql-id : selectVrtlAccntWdrwReqHist -->

         <if test="dt_typ == '0001'">
            SELECT
                /*ReqCustMap.getDlwVrtlAcntClctList*/
                TBL.*
            FROM
            (
                SELECT
                    DISTINCT
                    REQ.MEM_NO,
                    MB.MEM_NM,
                    MB.CELL,
                    REQ.ACCNT_NO,
                    REQ.ICHAE_NO,
                    REQ.RESULT_KEY,
                    REQ.REQ_DAY,
                    REQ.ICHAE_CD,
                    (
                      SELECT
                        COUNT(*)
                      FROM VIEW_MEMBER_WDRW_REQ
                      WHERE ACCNT_NO = RST.ACCNT_NO AND RST.TID = RESULT_KEY
                      AND NVL(INI_YN,'N') = 'Y'
                      AND PAY_MTHD = '07'
                    ) AS REQ_PAY_NO,
                    RST.DEPOSIT_AMT AS PAY_AMT,
                    REQ.KSTBIT,
                    REQ.DEL_FG,
                    RST.DEPOSIT_DT, --입금일
                    RST.DEPOSIT_TIME, --입금시간
                    RST.DEPOSIT_NAME, --입금자
                    RST.RESULT_MSG, --결과메세지
                    CASE WHEN REQ.DEL_FG = 'F' THEN '0004'
                            WHEN REQ.DEL_FG = 'C' AND NVL(DEPOSIT_DT,'N') != 'N' THEN '0001'
                            WHEN REQ.DEL_FG = 'R' AND NVL(DEPOSIT_DT,'N') = 'N' AND REQ_DAY >= TO_CHAR(SYSDATE,'YYYYMMDD') THEN '0003'
                    ELSE '0002'
                    END AS DPST_STAT,
                    REQ.REG_MAN,
                    TO_CHAR(REQ.REG_DM,'YYYYMMDD') AS REG_DM
                FROM TB_MEMBER_VIRTUAL_RESULT RST INNER JOIN
                    VIEW_MEMBER_WDRW_REQ REQ  ON RST.ACCNT_NO = REQ.ACCNT_NO AND RST.TID = REQ.RESULT_KEY INNER JOIN
                    MEMBER MB ON REQ.MEM_NO = MB.MEM_NO LEFT OUTER JOIN
                    PS_WILLVI.TB_USER TU ON TU.USER_ID = REQ.REG_MAN AND TU.USE_YN = 'Y'

                    <if test="user_athrCd != null and user_athrCd == 'TM40'">
                                INNER JOIN LF_DMUSER.RESN_CREDIT_LIST K  ON K.ACCNT_NO = REQ.ACCNT_NO AND K.DEL_FG = 'N' AND K.TARGET_YM = TO_CHAR(SYSDATE, 'YYYYMM')
                    </if>
                    WHERE 1=1
                        AND RST.DEPOSIT_DT  BETWEEN REPLACE(#{stt_dt}, '/', '') AND REPLACE(#{end_dt}, '/', '')
                        AND NVL(INI_YN,'N') = 'Y'
                        AND PAY_MTHD = '07'

                    <if test="accnt_no != null and accnt_no != ''">
                        AND REQ.ACCNT_NO = #{accnt_no}
                    </if>

                    <if test="non_pay_yn != null and non_pay_yn != '' and non_pay_yn.equalsIgnoreCase('Y')">
                        AND TEAM_CD = 'T10300'
                    </if>

                    <if test="non_pay_yn != null and non_pay_yn != '' and non_pay_yn.equalsIgnoreCase('N')">
                        AND (TEAM_CD != 'T10300' OR TEAM_CD IS NULL)
                    </if>
            ) TBL
            WHERE 1=1
            <if test="dpst_stat != null and dpst_stat != ''">
                 AND TBL.DPST_STAT = #{dpst_stat}
             </if>
            ORDER BY DEPOSIT_DT DESC
        </if>

        <if test="dt_typ == '0002'">
            SELECT
                /* ReqCustMap.getDlwVrtlAcntClctList */
                *
            FROM
            (
                SELECT
                        MEM_NO,
                        ACCNT_NO,
                        MEM_NM,
                        CELL,
                        ICHAE_NO,
                        RESULT_KEY,
                        REQ_DAY,
                        ICHAE_CD,
                        REQ_PAY_NO,
                        PAY_AMT,
                        KSTBIT,
                        DEL_FG,
                        DEPOSIT_DT, --입금일
                        DEPOSIT_TIME, --입금시간
                        DEPOSIT_NAME, --입금자
                        RESULT_MSG, --결과메세지
                        DPST_STAT,
                        REG_MAN,
                        REG_DM
                FROM
                (
                    SELECT
                        MPA.MEM_NO,
                        REQ.ACCNT_NO,
                        MB.MEM_NM,
                        MB.CELL,
                        REQ.ICHAE_NO,
                        REQ.RESULT_KEY,
                        REQ.REQ_DAY,
                        REQ.ICHAE_CD,
                        REQ.REQ_PAY_NO,
                        REQ.PAY_AMT,
                        MPA.KSTBIT,
                        REQ.DEL_FG,
                        RST.DEPOSIT_DT, --입금일
                        RST.DEPOSIT_TIME, --입금시간
                        RST.DEPOSIT_NAME, --입금자
                        RST.RESULT_MSG, --결과메세지
                        CASE WHEN REQ.DEL_FG = 'F' THEN '0004'
                                WHEN REQ.DEL_FG = 'C' AND NVL(DEPOSIT_DT,'N') != 'N' THEN '0001'
                                WHEN REQ.DEL_FG = 'R' AND NVL(DEPOSIT_DT,'N') = 'N' AND REQ_DAY >= TO_CHAR(SYSDATE,'YYYYMMDD') THEN '0003'
                        ELSE '0002'
                        END AS DPST_STAT,
                        REQ.REG_DM,
                        REQ.REG_MAN
                    FROM
                    (
                            SELECT
                               ACCNT_NO,
                               ICHAE_NO,
                               RESULT_KEY,
                               REQ_DAY,
                               ICHAE_CD,
                               DEL_FG,
                               TO_CHAR(REG_DM,'YYYYMMDD') AS REG_DM,
                               REG_MAN,
                               COUNT(ACCNT_NO) AS REQ_PAY_NO,
                               SUM(PAY_AMT) AS PAY_AMT
                           FROM LF_DMUSER.VIEW_MEMBER_WDRW_REQ
                           WHERE 1=1
                                AND REQ_DAY  BETWEEN REPLACE(#{stt_dt}, '/', '') AND REPLACE(#{end_dt}, '/', '')
                             AND PAY_MTHD = '07'
                             AND NVL(INI_YN,'N') = 'Y'
                           GROUP BY ACCNT_NO,ICHAE_NO,RESULT_KEY,REQ_DAY,ICHAE_CD,DEL_FG,TO_CHAR(REG_DM,'YYYYMMDD'),REG_MAN
                    )  REQ INNER JOIN
                    MEM_PROD_ACCNT MPA ON REQ.ACCNT_NO = MPA.ACCNT_NO AND MPA.DEL_FG = 'N' INNER JOIN
                    MEMBER MB ON MPA.MEM_NO = MB.MEM_NO  LEFT OUTER JOIN
                    TB_MEMBER_VIRTUAL_RESULT RST ON REQ.ICHAE_NO = RST.VTR_ACC_NO LEFT OUTER JOIN
                    PS_WILLVI.TB_USER TU ON TU.USER_ID = REQ.REG_MAN AND TU.USE_YN = 'Y'

                        <if test="user_athrCd != null and user_athrCd == 'TM40'">
                                INNER JOIN LF_DMUSER.RESN_CREDIT_LIST K  ON K.ACCNT_NO = REQ.ACCNT_NO AND K.DEL_FG = 'N' AND K.TARGET_YM = TO_CHAR(SYSDATE, 'YYYYMM')
                        </if>
                    WHERE 1=1
                    <if test="accnt_no != null and accnt_no != ''">
                        AND REQ.ACCNT_NO = #{accnt_no}
                    </if>

                    <if test="non_pay_yn != null and non_pay_yn != '' and non_pay_yn.equalsIgnoreCase('Y')">
                        AND TEAM_CD = 'T10300'
                    </if>

                    <if test="non_pay_yn != null and non_pay_yn != '' and non_pay_yn.equalsIgnoreCase('N')">
                        AND (TEAM_CD != 'T10300' OR TEAM_CD IS NULL)
                    </if>
                ) TBL
                WHERE 1=1
                    <if test="dpst_stat != null and dpst_stat != ''">
                        AND TBL.DPST_STAT = #{dpst_stat}
                     </if>
            ) TBL2
            ORDER BY REQ_DAY DESC
        </if>
        <!--
        SELECT /* ReqCustMap.getDlwVrtlAcntClctList */
               *
          FROM (SELECT <if test="orderBy != null and orderBy != ''">
                           ROW_NUMBER() OVER(ORDER BY ${orderBy} ${orderDirection}) PAGE_INDX,
                       </if>
                       <if test="orderBy == null or orderBy == ''">
                           '' AS PAGE_INDX,
                       </if>
                       X.*
                  FROM (SELECT TBL.*
                             , CASE WHEN TBL.EVT_NM = ''
                                    THEN '정상'
                                    ELSE TBL.EVT_NM
                               END AS JOIN_STAT
                             , '' CHK
                             , 'RR' CRUD
                             , '[대명아임레디]' || CHR(13) ||
                               '가상계좌 입금 안내' || CHR(13) ||
                               '가상계좌번호 : ' || TBL.VRTL_ACCNT_NO || CHR(13) ||
                               '은행 : ' || TBL.BANK_NM || CHR(13) ||
                               '예금주 : ' || TBL.MEM_NM || CHR(13) ||
                               '입금금액 : ' || TO_CHAR(TBL.TOTAL_AMT, 'FM999,999,999,999,999.9999') || CHR(13) ||
                               '입금마감일자 : ' || TBL.EXPIRY_DT || CHR(13) ||
                               '* 입금마감일자 경과 후 입금 시' || CHR(13) ||
                               '타인에게 입금반영이 될수 있으니' || CHR(13) ||
                               '마감일자 꼭 지켜주시기바랍니다.' || CHR(13) ||
                               '감사합니다.' AS CONTENT
                             , REPLACE(TBL.CELL, '-', '') AS CLPH_NO
                          FROM (SELECT MEM.MEM_NM
                                     , VAM.SEQ
                                     , MEM.CELL
                                     , MEM.MEM_NO
                                     , VAD.ACCNT_NO
                                     , VAM.VRTL_ACCNT_NO
                                     , VAM.EXPIRY_YYYYMMDD || ' '
                                                || SUBSTR(VAM.EXPIRY_HHMMSS, 1, 2) || ':'
                                                || SUBSTR(SUBSTR(VAM.EXPIRY_HHMMSS, 1, 4), -2) || ':'
                                                || SUBSTR(VAM.EXPIRY_HHMMSS, -2) AS EXPIRY_DT
                                     , FN_COM_NM('63', VAM.BANK_CD) AS BANK_NM
                                     , VAM.BANK_CD AS BANK_CD
                                     , CASE WHEN VAM.STAT = '01'
                                            THEN '전송전'
                                            WHEN VAM.STAT IN ('02', '04')
                                            THEN '전송완료'
                                            WHEN VAM.STAT = '03'
                                            THEN '전송오류'
                                            ELSE ''
                                        END AS NICE_RESULT
                                     , CASE WHEN VAM.STAT = '04'
                                            THEN '입금완료'
                                            WHEN VAM.STAT = '02' AND VAM.EXPIRY_YYYYMMDD || VAM.EXPIRY_HHMMSS <![CDATA[<]]> TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')
                                            THEN '입금안됨'
                                            WHEN VAM.STAT = '01'
                                            THEN ''
                                            WHEN VAM.STAT = '03'
                                            THEN ''
                                            ELSE '대기중'
                                        END AS PAY_COMP_FG
                                     , CASE WHEN VAM.STAT = '01' THEN '0001'
                                            WHEN VAM.STAT IN ('02', '04') THEN '0002'
                                            WHEN VAM.STAT = '03' THEN '0003'
                                            ELSE ''
                                        END AS NICE_RESULT_CD
                                     , CASE WHEN VAM.STAT = '04' THEN '0001'
                                            WHEN VAM.STAT = '02' AND VAM.EXPIRY_YYYYMMDD || VAM.EXPIRY_HHMMSS <![CDATA[<]]> TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')
                                            THEN '0002'
                                            ELSE ''
                                        END AS PAY_COMP_FG_CD
                                     , CASE WHEN NVL(VAM.AUTH_DATE, '') = '' THEN
                                                ''
                                            ELSE
                                              VAM.AUTH_DATE
                                        END AS AUTH_DT
                                     , VAD.INV_GUNSU
                                     , VAD.WDRW_REQ_AMT
                                     , FN_COM_NM('85', PROD.PROD_CL) AS PROD_CL
                                     , FN_EVENT(ACCNT.ACCNT_NO) AS EVT_NM
                                     , FN_YEN_CHE(ACCNT.ACCNT_NO) AS PAY_STAT
                                     , (SELECT SUM(A.WDRW_REQ_AMT)
                                          FROM NICE_VRTL_ACCNT_WDRW_REQ_DTL A
                                         WHERE A.SEQ = VAM.SEQ) AS TOTAL_AMT
                                     , VAM.TID
                                     , TO_CHAR(VAM.REG_DM, 'YYYY/MM/DD') AS REG_DM
                                     , FN_EMPLE_NM(VAM.REG_MAN) AS REG_MAN
                                     , TU.TEAM_CD AS REG_TEAM
                                  FROM NICE_VRTL_ACCNT_WDRW_REQ_MST VAM
                                 INNER JOIN NICE_VRTL_ACCNT_WDRW_REQ_DTL VAD
                                    ON VAM.SEQ = VAD.SEQ
                                 INNER JOIN MEM_PROD_ACCNT ACCNT
                                    ON VAD.ACCNT_NO = ACCNT.ACCNT_NO
                                 INNER JOIN MEMBER MEM
                                    ON MEM.MEM_NO = ACCNT.MEM_NO
                                 INNER JOIN PRODUCT PROD
                                    ON PROD.PROD_CD = ACCNT.PROD_CD
                                 LEFT OUTER JOIN PS_WILLVI.TB_USER TU
                                    ON TU.USER_ID = VAM.REG_MAN AND USE_YN = 'Y'
                                     -->

                                  <!-- 2018.03.20 TM40:MG권한 일 경우 -->
                                  <!--
                                 <if test="user_athrCd != null and user_athrCd == 'TM40'">
                                      INNER JOIN LF_DMUSER.RESN_CREDIT_LIST K
                                      ON K.ACCNT_NO = ACCNT.ACCNT_NO
                                      AND K.DEL_FG = 'N'
                                      AND K.TARGET_YM = TO_CHAR(SYSDATE, 'YYYYMM')
                                 </if>
                                 WHERE 1=1
                                 <if test="accnt_no != null and accnt_no != ''">
                                     AND ACCNT.ACCNT_NO = #{accnt_no}
                                 </if>
                                 <if test="tid != null and tid != ''">
                                     AND VAM.TID = #{tid}
                                 </if>
                                 <if test="dt_typ == '0001'">
                                     <if test="(stt_dt != null and stt_dt != '') and (end_dt != null and end_dt != '') and (accnt_no == null or accnt_no == '')">
                                         AND VAM.AUTH_DATE IS NOT NULL
                                        AND SUBSTR('20' || VAM.AUTH_DATE, 1, 8) BETWEEN REPLACE(#{stt_dt}, '/', '') AND REPLACE(#{end_dt}, '/', '')
                                     </if>
                                 </if>
                                 <if test="dt_typ == '0002'">
                                     <if test="(stt_dt != null and stt_dt != '') and (end_dt != null and end_dt != '') and (accnt_no == null or accnt_no == '')">
                                        AND VAM.EXPIRY_YYYYMMDD BETWEEN REPLACE(#{stt_dt}, '/', '') AND REPLACE(#{end_dt}, '/', '')
                                     </if>
                                 </if>
                                ) TBL
                         WHERE 1=1
                         <if test="non_pay_yn != null and non_pay_yn != '' and non_pay_yn.equalsIgnoreCase('Y')">
                             AND REG_TEAM = 'T10300'
                         </if>
                         <if test="non_pay_yn != null and non_pay_yn != '' and non_pay_yn.equalsIgnoreCase('N')">
                             AND (REG_TEAM != 'T10300' OR REG_TEAM IS NULL)
                         </if>
                         <if test="trnm_stat != null and trnm_stat != ''">
                             AND TBL.NICE_RESULT_CD = #{trnm_stat}
                         </if>
                         <if test="dpst_stat != null and dpst_stat != ''">
                             <if test="dpst_stat == '0003'">
                                 AND TBL.PAY_COMP_FG_CD NOT IN ('0001', '0002')
                                 AND TBL.NICE_RESULT_CD != '0003'
                             </if>
                             <if test="dpst_stat != '0003'">
                                 AND TBL.PAY_COMP_FG_CD = #{dpst_stat}
                             </if>
                         </if>
                    ) X
                ) Z
     <if test="startLine != null and startLine != '' and endLine != null and endLine != ''">
         <![CDATA[
         WHERE PAGE_INDX >= #{startLine}
           AND PAGE_INDX < #{endLine}
         ]]>
     </if>
     -->
    </select>

    <!-- 가상계좌 NICE전송 결과 반영 -->
    <update id="ReqCustMap.updateNiceVrtlAccntWdrwReq" parameterType="map">
    <!-- DM sql-id : sql-cms.updateNiceVrtlAccntWdrwReq -->
        UPDATE /* ReqCustMap.updateNiceVrtlAccntWdrwReq */
               NICE_VRTL_ACCNT_WDRW_REQ_MST
           SET EXPIRY_YYYYMMDD = #{inv_dt}
             , EXPIRY_HHMMSS = #{inv_time}
             , RESULT_CODE = #{result_cd}
             , RESULT_MSG = #{result_msg}
         <if test="result_cd == '4120'">
             , STAT = '02'
             , TID = #{tid}
         </if>
         <if test="result_cd != '4120'">
             , STAT = '03'
         </if>
         WHERE SEQ = #{seq}
    </update>

    <update id="ReqCustMap.deleteDlwVrtlAcntClct" parameterType="map">
        <!-- DM sql-id : deleteVrtlAccntWdrwReqHist -->
        /* ReqCustMap.deleteDlwVrtlAcntClct */
        BEGIN
            UPDATE NICE_VRTL_ACCNT_WDRW_REQ_MST
               SET EXPIRY_HHMMSS = #{hhmmss}
                 , EXPIRY_YYYYMMDD = #{yyyymmdd}
             WHERE SEQ = #{seq} ;

            UPDATE NICE_VRTL_ACCNT_INFO
               SET DEL_FG = 'Y'
                 , PREV_CLOSE_DT =  TO_CHAR(TO_DATE(#{expiry_dt}, 'YYYYMMDD HH24:MI:SS'),'YYYYMMDDHH24MISS')
             WHERE VRTL_ACCNT_NO = #{vrtl_accnt_no}
               AND BANK_CD = #{bank_cd}
               ;
         END;
    </update>

    <!-- 현재시간조회 -->
    <select id="ReqCustMap.getCurrDthms" parameterType="map" resultType="resultMap">
        SELECT /* ReqCustMap.getCurrDthms */
               SUBSTR(DTHMS, 1, 8) 	AS YYYYMMDD
             , SUBSTR(DTHMS, 9) 	AS HHMMSS
          FROM (SELECT TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') DTHMS
                  FROM DUAL)
    </select>

    <!-- 가상계좌 청구 된 리스트 조회 -->
    <select id="ReqCustMap.getVirtualReqList" parameterType="map" resultType="resultMap">
        <!-- DM sql-id : sql-cms.selectVrtlAccntWdrwReqList -->
       SELECT
              /*ReqCustMap.getVirtualReqList*/
           MEM_NO,
           ACCNT_NO,
           MEM_NM,
           REG_MAN,
           ICHAE_CD,
           REQ_DAY,
           RESULT_KEY AS TID,
           SUM(PAY_AMT) AS VTR_PAY_AMT
       FROM
       (
           SELECT
            MPA.MEM_NO,
            MPA.ACCNT_NO,
            MB.MEM_NM,
            FN_EMPLE_NM(REQ.REG_MAN) AS REG_MAN,
            REQ.PAY_AMT,
            REQ.ICHAE_CD,
            REQ.REQ_DAY,
            REQ.RESULT_KEY
           FROM LF_DMUSER.TB_MEMBER_WDRW_REQ REQ INNER JOIN
                MEM_PROD_ACCNT_DAMO MPA ON REQ.ACCNT_NO = MPA.ACCNT_NO AND MPA.DEL_FG = 'N' INNER JOIN
                MEMBER MB ON MPA.MEM_NO = MB.MEM_NO AND MB.DEL_FG = 'N' LEFT OUTER JOIN
                LF_DMUSER.TB_MEMBER_VIRTUAL_RESULT MVR ON REQ.RESULT_KEY = MVR.TID
           WHERE 1=1
                AND REQ.PAY_MTHD = '07'
                AND REQ.DEL_FG IN ('N','R')
       )
       GROUP BY MEM_NO,ACCNT_NO,MEM_NM,REG_MAN,ICHAE_CD,REQ_DAY,RESULT_KEY

    <!--
        SELECT /* ReqCustMap.getVirtualReqList*/
               VAM.SEQ
             , VAM.MEM_NO
             , MEM.MEM_NM
             , VAM.VRTL_ACCNT_NO
             , VAM.BANK_CD
             , FN_COM_NM('63', VAM.BANK_CD) AS BANK_NM
             , (SELECT SUM(VAD.WDRW_REQ_AMT)
                  FROM NICE_VRTL_ACCNT_WDRW_REQ_DTL VAD
                 WHERE VAD.SEQ = VAM.SEQ) AS WDRW_REQ_AMT

             , CASE WHEN VAM.STAT = '01' THEN 'NICE등록전'
                    WHEN VAM.STAT = '02' THEN 'NICE등록완료'
                    WHEN VAM.STAT = '03' THEN '등록오류'
                    WHEN VAM.STAT = '04' THEN '입금완료'
               END AS STAT

             , (
                    SELECT
                        LISTAGG(VADD.ACCNT_NO, ',') WITHIN GROUP (ORDER BY VADD.SEQ)
                    FROM
                    (
                         SELECT DISTINCT SEQ, ACCNT_NO
                         FROM NICE_VRTL_ACCNT_WDRW_REQ_DTL VAD
                    ) VADD
                    WHERE VADD.SEQ = VAM.SEQ
                ) AS ACCNT_NO

             , (SELECT COUNT(ACCNT_NO)
                  FROM NICE_VRTL_ACCNT_WDRW_REQ_DTL VAD
                 WHERE VAD.SEQ = VAM.SEQ) AS ACCNT_CNT

             , FN_EMPLE_NM(VAM.REG_MAN) AS REG_MAN
             , TO_CHAR(VAM.REG_DM, 'YYYY/MM/DD') AS REG_DM
          FROM NICE_VRTL_ACCNT_WDRW_REQ_MST VAM
               INNER JOIN MEMBER MEM ON VAM.MEM_NO = MEM.MEM_NO
         WHERE VAM.STAT = '01'
         <if test="reg_man != '2010120001'">
            AND VAM.REG_MAN = #{reg_man}
         </if>
         ORDER BY VAM.MEM_NO

     -->
    </select>

    <!-- 가상계좌 NICE 전송 후 TID업데이트 혹은 실패 처리-->
    <update id="ReqCustMap.updateVirtualReqSendtoNice" parameterType="map">
        BEGIN

            UPDATE /* ReqCustMap.updateVirtualReqSendtoNice */
                   NICE_VRTL_ACCNT_WDRW_REQ_MST
               SET EXPIRY_YYYYMMDD = #{inv_dt}
                 , EXPIRY_HHMMSS = #{inv_time}
                 , RESULT_CODE = #{result_cd}
                 , RESULT_MSG = #{result_msg}
                 , UPD_DM = SYSDATE
                 , UPD_MAN = #{emple_no}
             <if test="result_cd == '4120' and flag == 'add'">
                 , STAT = '02'
                 , TID = #{tid}
             </if>
             <if test="result_cd == '4120' and flag == 'del'">
                 , STAT = '05'
                 , TID = #{tid}
             </if>
             <if test="result_cd != '4120'">
                 , STAT = '03'
             </if>
             WHERE SEQ = #{seq} ;

             <if test="result_cd == '4120' and flag == 'del'">
                    UPDATE TB_MEMBER_WDRW_REQ
                    SET DEL_FG = 'Y',
                        UPD_MAN = #{emple_no},
                        UPD_DM = SYSDATE
                    WHERE RESULT_KEY = #{seq};
             </if>
        END;
    </update>

    <update id="ReqCustMap.updateVirtualExtDelete" parameterType="map">
        <!-- DM sql-id : updateVirtualExtDelete -->
        BEGIN
            UPDATE /* ReqCustMap.updateVirtualExtDelete */
                   NICE_VRTL_ACCNT_WDRW_REQ_MST
               SET STAT = '05'
                 , UPD_DM = SYSDATE
                 , UPD_MAN = #{emple_no}
            WHERE SEQ = #{seq};

            UPDATE TB_MEMBER_WDRW_REQ
                SET DEL_FG = 'Y',
                    UPD_MAN = #{emple_no},
                    UPD_DM = SYSDATE
            WHERE RESULT_KEY = #{seq};

            COMMIT;
        END;
    </update>

    <!--
     * 날짜 : 20181211
     * 이름 : 송준빈
     * 추가내용 : 청구강제마감 업데이트
     * 대상 테이블 : TB_MEMBER_WDRW_REQ
     -->
    <update id="ReqCustMap.updateCompulsionWdrdList" parameterType="map">
        UPDATE TB_MEMBER_WDRW_REQ REQ
           SET DEL_FG = 'F',
               UPD_MAN = 'D_AUTO',
               UPD_DM =  SYSDATE
         WHERE 1=1
           AND PAY_MTHD = '07'
           AND DEL_FG = 'R'
           AND EXISTS ( SELECT SEQ
                          FROM NICE_VRTL_ACCNT_WDRW_REQ_MST MST
                         WHERE 1=1
                           AND STAT IN ('02','03')
                           <!-- AND EXPIRY_YYYYMMDD <![CDATA[<=]]> TO_CHAR(SYSDATE,'YYYYMMDD')
                           AND EXPIRY_HHMMSS <![CDATA[<]]> TO_CHAR(SYSDATE,'HH24MISS') -->
                           AND EXPIRY_YYYYMMDD || EXPIRY_HHMMSS <![CDATA[<]]> TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
                           AND REQ.RESULT_KEY = MST.SEQ
                      )
    </update>

    <insert id="ReqCustMap.insertVirtualMain"  parameterType="map">
        BEGIN
            UPDATE TB_MEMBER_WDRW_REQ
            SET ICHAE_NO =#{vtr_acc_no}, DEL_FG = 'R', RESULT_KEY = #{tid}, REQ_DAY=#{end_day}, UPD_DM =SYSDATE, UPD_MAN = #{reg_man}, ICHAE_CD = #{ichae_cd}
            WHERE 1=1
                AND PAY_MTHD = '07'
                AND DEL_FG = 'N'
                AND ACCNT_NO = #{accnt_no};
        END;
    </insert>

    <update id="ReqCustMap.updateVirtualMain" parameterType="map">
        BEGIN
            UPDATE TB_MEMBER_WDRW_REQ_DAMO
            SET DEL_FG = 'F', UPD_DM =SYSDATE, UPD_MAN = #{reg_man}
            WHERE 1=1
            AND PAY_MTHD = '07'
            AND DEL_FG = 'R'
            AND RESULT_KEY = #{result_key};
        END;
    </update>

    <!-- ================================================================
     * 날짜 : 20200604
     * 이름 : 김주용
     * 추가내용 : 정기청구일 엑셀 업로드
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_EXT_CHECK
     * ================================================================
     * -->
    <insert id="ReqCustMap.uploadEctChk" parameterType="map">
        BEGIN /* ReqCustMap.uploadEctChk */
            INSERT
            INTO TB_MEMBER_EXT_CHECK
            (
                EXT_DT,
                EXT_REQ_DT,
                EXT_CHK,
                EXT_REQ_BIT,
                ICHAE_DT,
                REG_DM,
                REG_MAN
            )
            VALUES
            (
                #{ext_dt},
                #{ext_req_dt},
                #{ext_chk},
                #{ext_req_bit},
                #{ichae_dt},
                SYSDATE,
                'upload'
            );
        END;
    </insert>

        <!-- ================================================================
     * 날짜 : 20191209
     * 이름 : 송준빈
     * 추가내용 : 카드 무승인 결제 취소 처리
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_REQ_NAUTH_CNCL
     * ================================================================
     * -->
    <insert id="ReqCustMap.insertNauthPayCancel" parameterType="map" >
         /* ReqCustMap.insertNauthPayCancel */
        INSERT INTO LF_DMUSER.TB_MEMBER_REQ_NAUTH_CNCL(ACCNT_NO, PAY_MTHD, PRE_REQ_DAY, REQ_DAY, RESULT_KEY, REFUND_LOC, REFUND_DT, REFUND_CD, REFUND_ETC, DEL_FG, REG_DM, REG_MAN, CANCEL_DT, REQ_PAY_NO, PAY_AMT, FRANCHISEE_NO)
        VALUES (#{accnt_no}, #{pay_mthd}, #{req_day}, '', #{result_key}, '01', '', #{pay_cancel_cd}, #{pay_cancel_note}, 'P', SYSDATE, #{emple_no}, '', #{req_pay_no}, #{pay_amt} , #{franchisee_no})
    </insert>

    <!-- ================================================================
     * 날짜 : 20201014
     * 이름 : 송준빈
     * 추가내용 : BillKey 자동생성 리스트 조회수
     * 대상 테이블 : LF_DMUSER.MEM_PROD_ACCNT, LF_DMUSER.CARD_MEM
     * ================================================================
     * -->
    <select id="ReqCustMap.getCreateBillKeyCount" parameterType="map" resultType="int">
        SELECT /* ReqCustMap.getCreateBillKeyCount */
            COUNT(*) AS ICNT
        FROM
        (
            SELECT /* 제휴카드 X */
                ACCNT_NO,
                CARD_NO,
                EXPIRE_DATE,
                CARD_BIRTH,
                'NOR'
            FROM
            (
                SELECT
                    MPA.ACCNT_NO,
                    CM.CARD_NO,
                    CM.EXPIRE_DATE,
                    NVL(CM.CARD_BIRTH,SUBSTR(MB.BRTH_MON_DAY,3,6)) AS CARD_BIRTH,
                    (SELECT STAT FROM HP_CALL WHERE ACCNT_NO = MPA.ACCNT_NO) AS STAT
                FROM MEM_PROD_ACCNT MPA INNER JOIN
                    CARD_MEM CM ON MPA.ACCNT_NO = CM.ACCNT_NO AND CM.DEL_FG = 'N' INNER JOIN
                    MEMBER MB ON MPA.MEM_NO = MB.MEM_NO AND MB.DEL_FG = 'N'
                WHERE MPA.DEL_FG = 'N'
                    AND MPA.PAY_MTHD = '06'
                    AND KSTBIT = '02'
                    AND SUBSTR(BID,0,13) = 'BIKYdmlife001'
                    AND CM.EXPIRE_DATE > '2103'
                    AND NVL(CM.INI_YN,'N') = 'N'
                    AND NVL(CM.INI_BID,'N') = 'N'
            )
            WHERE STAT IN ('01','011')

            UNION ALL

            SELECT /* 제휴카드 O */
                ACCNT_NO,
                CARD_NO,
                EXPIRE_DATE,
                CARD_BIRTH,
                'SIN'
            FROM
            (
                SELECT
                    MPA.ACCNT_NO,
                    PD.PROD_NM,
                    MPA.REL_CNT,
                    CM.CARD_CD,
                    CM.CARD_NO,
                    CM.EXPIRE_DATE,
                    CM.BID,
                    MB.BRTH_MON_DAY,
                    NVL(CM.CARD_BIRTH,SUBSTR(MB.BRTH_MON_DAY,3,6)) AS CARD_BIRTH,
                    --CM.INI_BID,
                    (SELECT COUNT(*) FROM PRODUCT_NO_DATA WHERE PROD_CD = MPA.PROD_CD AND REL_AMT > 0) AS REL_TOT,
                    (SELECT STAT FROM HP_CALL WHERE ACCNT_NO = MPA.ACCNT_NO) AS STAT
                FROM TB_MEMBER_BASIC_INFO_DAY MPA INNER JOIN
                    CARD_MEM CM ON MPA.ACCNT_NO = CM.ACCNT_NO AND CM.DEL_FG = 'N' INNER JOIN
                    MEMBER MB ON MPA.MEM_NO = MB.MEM_NO AND MB.DEL_FG = 'N' INNER JOIN
                    PRODUCT PD ON MPA.PROD_CD = PD.PROD_CD INNER JOIN
                    CARD_MID_LIST CML ON PD.MID = CML.MID
                WHERE 1=1
                AND MPA.PAY_MTHD = '06'
                AND KSTBIT = '02'
                AND SUBSTR(BID,0,13) != 'BIKYdmlife001'
                AND CM.EXPIRE_DATE > '2103'
                AND NVL(CM.INI_YN,'N') = 'N'
                AND NVL(CM.INI_BID,'N') = 'N'
                AND NVL(CML.FRANCHISEE_NO,'N') = 'N' --무승인 제외
                AND MPA.PROD_CD IN (SELECT PROD_CD FROM TB_CARD_BILL_GUBUN)
            )
            WHERE REL_TOT = REL_CNT
        ) SUB_TBL
        WHERE 1=1
        <if test="accnt_no != null and accnt_no != ''">
            AND SUB_TBL.ACCNT_NO = #{accnt_no}
        </if>
    </select>

    <!-- ================================================================
     * 날짜 : 20201014
     * 이름 : 송준빈
     * 추가내용 : BillKey 자동생성 리스트
     * 대상 테이블 : LF_DMUSER.MEM_PROD_ACCNT, LF_DMUSER.CARD_MEM
     * ================================================================
     * -->
    <select id="ReqCustMap.getCreateBillKeyList" parameterType="map" resultType="resultMap">
        SELECT /* ReqCustMap.getCreateBillKeyList */
            MAIN_TBL.*
        FROM
        (
            SELECT
                <choose>
                    <when test="orderBy != null and orderBy != ''">
                        ROW_NUMBER() OVER(ORDER BY ${orderBy} ${orderDirection}) AS PAGE_INDX,
                    </when>
                    <otherwise>
                        ROW_NUMBER() OVER(ORDER BY SUB_TBL.ACCNT_NO ASC) AS PAGE_INDX,
                    </otherwise>
                </choose>
                SUB_TBL.*
            FROM
            (
                SELECT /* 제휴카드 X */
                    ACCNT_NO,
                    CARD_NO,
                    EXPIRE_DATE,
                    CARD_BIRTH,
                    'NOR' AS AFFIL_YN
                FROM
                (
                    SELECT
                        MPA.ACCNT_NO,
                        CM.CARD_NO,
                        CM.EXPIRE_DATE,
                        NVL(CM.CARD_BIRTH,SUBSTR(MB.BRTH_MON_DAY,3,6)) AS CARD_BIRTH,
                        (SELECT STAT FROM HP_CALL WHERE ACCNT_NO = MPA.ACCNT_NO) AS STAT
                    FROM MEM_PROD_ACCNT MPA INNER JOIN
                        CARD_MEM CM ON MPA.ACCNT_NO = CM.ACCNT_NO AND CM.DEL_FG = 'N' INNER JOIN
                        MEMBER MB ON MPA.MEM_NO = MB.MEM_NO AND MB.DEL_FG = 'N'
                    WHERE MPA.DEL_FG = 'N'
                        AND MPA.PAY_MTHD = '06'
                        AND KSTBIT = '02'
                        AND SUBSTR(BID,0,13) = 'BIKYdmlife001'
                        AND CM.EXPIRE_DATE > '2103'
                        AND NVL(CM.INI_YN,'N') = 'N'
                        AND NVL(CM.INI_BID,'N') = 'N'
                )
                WHERE STAT IN ('01','011')

                UNION ALL

                SELECT /* 제휴카드 O */
                    ACCNT_NO,
                    CARD_NO,
                    EXPIRE_DATE,
                    CARD_BIRTH,
                    'SIN' AS AFFIL_YN
                FROM
                (
                    SELECT
                        MPA.ACCNT_NO,
                        PD.PROD_NM,
                        MPA.REL_CNT,
                        CM.CARD_CD,
                        CM.CARD_NO,
                        CM.EXPIRE_DATE,
                        CM.BID,
                        MB.BRTH_MON_DAY,
                        NVL(CM.CARD_BIRTH,SUBSTR(MB.BRTH_MON_DAY,3,6)) AS CARD_BIRTH,
                        --CM.INI_BID,
                        (SELECT COUNT(*) FROM PRODUCT_NO_DATA WHERE PROD_CD = MPA.PROD_CD AND REL_AMT > 0) AS REL_TOT,
                        (SELECT STAT FROM HP_CALL WHERE ACCNT_NO = MPA.ACCNT_NO) AS STAT
                    FROM TB_MEMBER_BASIC_INFO_DAY MPA INNER JOIN
                        CARD_MEM CM ON MPA.ACCNT_NO = CM.ACCNT_NO AND CM.DEL_FG = 'N' INNER JOIN
                        MEMBER MB ON MPA.MEM_NO = MB.MEM_NO AND MB.DEL_FG = 'N' INNER JOIN
                        PRODUCT PD ON MPA.PROD_CD = PD.PROD_CD INNER JOIN
                        CARD_MID_LIST CML ON PD.MID = CML.MID
                    WHERE 1=1
                    AND MPA.PAY_MTHD = '06'
                    AND KSTBIT = '02'
                    AND SUBSTR(BID,0,13) != 'BIKYdmlife001'
                    AND CM.EXPIRE_DATE > '2103'
                    AND NVL(CM.INI_YN,'N') = 'N'
                    AND NVL(CM.INI_BID,'N') = 'N'
                    AND NVL(CML.FRANCHISEE_NO,'N') = 'N' --무승인 제외
                    AND MPA.PROD_CD IN (SELECT PROD_CD FROM TB_CARD_BILL_GUBUN)
                )
                WHERE REL_TOT = REL_CNT
            ) SUB_TBL
            WHERE 1=1
            <if test="accnt_no != null and accnt_no != ''">
                AND SUB_TBL.ACCNT_NO = #{accnt_no}
            </if>
        ) MAIN_TBL
        WHERE 1=1
        <if test="startLine != null and startLine != '' and endLine != null and endLine != ''">
            AND PAGE_INDX <![CDATA[>=]]> #{startLine}
            AND PAGE_INDX <![CDATA[< ]]> #{endLine}
        </if>
    </select>

    <!-- ================================================================
     * 날짜 : 20210910
     * 이름 : 김주용
     * 추가내용 : 환불관리 팝업 조회
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_REQ_REFUND
     * ================================================================
     * -->
    <select id="ReqCustMap.getRefundReqPopList" parameterType="map" resultType="resultMap">
        SELECT /* ReqCustMap.getRefundReqPopList */
               *
          FROM

          ( SELECT ROW_NUMBER() OVER(ORDER BY REG_DM DESC) PAGE_INDX /* PAGE INDX                 */
                 , MAIN_TBL.*
              FROM
               ( SELECT MRR.ACCNT_NO      /* 회원번호                                                                   */
                       ,MWR.PROD_CD
                       ,(SELECT MAX(PD.PROD_NM) FROM PRODUCT PD WHERE 1=1 AND PD.PROD_CD = MWR.PROD_CD) AS PROD_NM
                       ,MWR.ICHAE_NO AS BID
                       ,MBR.MEM_NO        /* 고유번호                                                                   */
                       ,MBR.MEM_NM        /* 회원명                                                                     */
                       ,MRR.PAY_MTHD      /* 납입방법(04:CMS, 06:Card)                                                  */
                       ,CASE WHEN MRR.CANCEL_DT IS NOT NULL
                                 THEN CASE WHEN MWR.RESULT_KIND = '01' AND TO_CHAR(MRR.CANCEL_DT, 'YYMMDD') > TO_CHAR(TO_DATE(AUTH_DT), 'YYMMDD')
                                           THEN '후취소'
                                           WHEN MWR.RESULT_KIND != '01' AND NVL(MWR.INI_YN,'N') = 'N' AND TO_CHAR(MRR.CANCEL_DT, 'YYMMDD') > SUBSTR(AUTH_DT, 1, 6)
                                           THEN '후취소'
                                           WHEN MWR.RESULT_KIND != '01' AND NVL(MWR.INI_YN,'N') = 'Y' AND TO_CHAR(MRR.CANCEL_DT, 'YYMMDD') > SUBSTR(AUTH_DT, 3, 8)
                                           THEN '후취소'
                                           WHEN MWR.RESULT_KIND = '01' AND TO_CHAR(MRR.CANCEL_DT, 'YYMMDD') = TO_CHAR(TO_DATE(AUTH_DT), 'YYMMDD')
                                           THEN '취소'
                                           WHEN MWR.RESULT_KIND != '01' AND NVL(MWR.INI_YN,'N') = 'N'  AND TO_CHAR(MRR.CANCEL_DT, 'YYMMDD') = SUBSTR(AUTH_DT, 1, 6)
                                           THEN '취소'
                                           WHEN MWR.RESULT_KIND != '01' AND NVL(MWR.INI_YN,'N') = 'Y' AND TO_CHAR(MRR.CANCEL_DT, 'YYMMDD') = SUBSTR(AUTH_DT, 3, 8)
                                           THEN '취소'
                                           ELSE ''
                                       END
                                 ELSE ''
                             END AS CANCEL_GB
                       ,MWR.PAY_BIT       /* PAYBIT                                                                       */
                       ,MRR.REQ_DAY       /* 청구일자                                                                   */
                       ,MWR.PAY_AMT       /* 청구금액                                                                   */
                       ,(CASE WHEN SUBSTR(MWR.PAY_BIT,1,1) != 'X' THEN PND.AMT     ELSE 0 END) AS TRUE_AMT    /* 상조금 */
                       ,(CASE WHEN SUBSTR(MWR.PAY_BIT,2,1) != 'X' THEN PND.REL_AMT ELSE 0 END) AS REL_AMT     /* 결합금 */
                       ,(CASE WHEN SUBSTR(MWR.PAY_BIT,3,1) != 'X' THEN PND.ADD_AMT ELSE 0 END) AS ADD_AMT     /* 추가금 */
                       ,MWR.KSTBIT        /* 회원상태(01:대기, 02:가입, 03:해약, 04:행사, 09:만기)                      */
                       ,MRR.RESULT_KEY    /* 결과키                                                                     */
                       ,MWR.RESULT_KIND   /* 결과유형 (01:파일, 02:실시간, 03:자유,04:기타)                             */
                       ,MRR.REFUND_LOC    /* 환불 경로(01:결과파일환불,02:해약등록,03:청약철회등록,04:행사등록)         */

                       ,CASE WHEN MWR.PAY_MTHD = '04'
                             THEN CASE WHEN NVL(MRR.ICHAE_NO, 'N') = 'N'
                                       THEN MWR.ICHAE_NO
                                       ELSE MRR.ICHAE_NO
                                   END
                             ELSE ''
                         END AS ICHAE_NO
                       ,CASE WHEN MWR.PAY_MTHD = '04'
                             THEN CASE WHEN NVL(MRR.ICHAE_CD, 'N') = 'N'
                                       THEN MWR.ICHAE_CD
                                       ELSE MRR.ICHAE_CD
                                  END
                             ELSE ''
                         END AS ICHAE_CD
                       ,CASE WHEN MWR.PAY_MTHD = '06' AND NVL(MWR.INI_YN, 'N') != 'Y' THEN LF_DMUSER.FN_COM_NM('0120', MWR.ICHAE_CD)
                             WHEN MWR.PAY_MTHD = '06' AND NVL(MWR.INI_YN, 'N') = 'Y' THEN LF_DMUSER.FN_COM_NM('0196', MWR.ICHAE_CD)
                             ELSE ''
                             END AS CARD_CD
                       ,MRR.DEPR          /* 예금주(CMS)                                                                */
                       ,MRR.REFUND_DT     /* 환불일자                                                                   */
                       ,MRR.REG_DM        /* 등록일자                                                                   */
                       ,MRR.REG_MAN       /* 등록자ID                                                                   */
                       ,MWR.DEL_FG        /* 청구여부(N:청구전 Y:삭제 R:청구 C:완료(변환/입금) F:완료(실패) X:입금취소) */
                       ,MWR.REQ_PAY_NO    /* 산출청구회차                                                               */
                       ,MWR.RESULT_CD     /* 결과코드                                                                   */
                       ,MWR.RESULT_MSG    /* 결과메세지                                                                 */

                       ,TO_CHAR(MRR.CANCEL_DT, 'YYYYMMDDHH24MISS') AS CANCEL_DT                    /* 실시간 취소 일자  */
                       ,MWR.TID           /* 결과키(TID, CMS결과키)                                                     */
                       ,AUTH_DT     /* 승인일자          */
                       ,MWR.AUTH_CD       /* 승인번호                                                                   */
                       ,MRR.REFUND_REASON /* 환불사유(환불사유코드)                                                     */
                       ,MRR.REFUND_ETC    /* 비고                                                                       */
                       ,MRR.AUTH_YN
                       ,MWR.FRANCHISEE_NO
                       ,MWR.INI_YN
                       ,(SELECT DEL_FG FROM TB_MEMBER_REQ_NAUTH_CNCL CNCL WHERE 1=1 AND CNCL.ACCNT_NO = MRR.ACCNT_NO  AND CNCL.REQ_PAY_NO = MRR.REQ_PAY_NO AND CNCL.DEL_FG != 'Y') AS CNCL_DEL_FG

                       ,CASE WHEN NVL(MWR.INI_YN,'N') = 'N' THEN (SELECT MID||KEY FROM CARD_MID_LIST WHERE MID = SUBSTR(MWR.ICHAE_NO,5,10))
                             WHEN NVL(MWR.INI_YN,'N') = 'Y' AND TLM.LTI_USE_YN  = 'Y' AND RESULT_KIND = '10' THEN PD.MID_INFO_1
                             WHEN NVL(MWR.INI_YN,'N') = 'Y' AND TLM.LTI_USE_YN  = 'Y' AND RESULT_KIND != '10' THEN PD.MID_INFO_2
                        ELSE NVL((SELECT INI_MID FROM CARD_MID_LIST WHERE MID = PD.MID),'daemyungT1')
                        END  AS BILL_KEY

                   FROM TB_MEMBER_REQ_REFUND MRR              /* 고객환불정보                                           */
                   LEFT OUTER JOIN VIEW_MEMBER_WDRW_REQ MWR     /* 고객청구요청정보                                       */
                           ON MRR.ACCNT_NO = MWR.ACCNT_NO
                          AND MRR.PAY_MTHD = MWR.PAY_MTHD
                          AND MRR.REQ_DAY = MWR.REQ_DAY
                          AND MRR.REQ_PAY_NO = MWR.REQ_PAY_NO
                          AND MRR.RESULT_KEY = MWR.RESULT_KEY
                   INNER JOIN MEM_PROD_ACCNT MPA              /* 고객가입상품정보*/
                           ON MPA.ACCNT_NO = MRR.ACCNT_NO
                          AND MPA.DEL_FG = 'N'
                   INNER JOIN MEMBER MBR                      /* 고객기본정보*/
                           ON MBR.MEM_NO = MPA.MEM_NO
                          AND MBR.DEL_FG = 'N'
                   LEFT OUTER JOIN PRODUCT_NO_DATA PND        /* 상품회차별정보*/
                           ON MWR.PROD_CD = PND.PROD_CD
                          AND MWR.REQ_PAY_NO = PND.NO
                   INNER JOIN PRODUCT PD ON MPA.PROD_CD = PD.PROD_CD
                   LEFT OUTER JOIN TB_LTINSTALL_MNG TLM ON MWR.ACCNT_NO = TLM.ACCNT_NO AND TLM.DEL_FG = 'N'
                   LEFT OUTER JOIN TB_CARD_BILL_GUBUN TCB ON TCB.PROD_CD = MWR.PROD_CD AND MWR.REQ_PAY_NO BETWEEN STT_PAY_NO AND END_PAY_NO
                  WHERE 1=1


                      AND TO_CHAR(MRR.REG_DM,'YYYYMMDD') = #{reg_dm}
                      AND MRR.ACCNT_NO = #{accnt_no}
                      AND MRR.REQ_PAY_NO = #{req_pay_no}
                      AND MWR.DEL_FG = #{del_fg}
                  AND MRR.DEL_FG = 'N'
               ) MAIN_TBL

            WHERE 1=1

         )

         WHERE 1=1

    </select>

    <!-- ================================================================
     * 날짜 : 20220217
     * 이름 : 김주용
     * 추가내용 : 카드,CMS 결과데이터 2021년 이전 건수조회
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_WDRW_REQ
                     LF_DMUSER.TB_MEMBER_WDRW_RESULT
                     LF_DMUSER.TB_MEMBER_REQ_REFUND
     * ================================================================
     * -->
    <select id="ReqCustMap.getReqRltmCardLogOldCount" parameterType="map" resultType="int">
        /* ReqCustMap.getReqRltmCardLogOldCount */
        SELECT
            COUNT(*) AS ICNT
        FROM LF_DMUSER.TB_MEMBER_WDRW_REQ_2021 REQ INNER JOIN
                PRODUCT PD ON REQ.PROD_CD = PD.PROD_CD
                LEFT OUTER JOIN LF_DMUSER.TB_MEMBER_WDRW_RESULT_2021 RST
                             ON REQ.ACCNT_NO = RST.ACCNT_NO
                            AND REQ.PAY_MTHD = RST.PAY_MTHD
                            AND REQ.REQ_DAY = RST.REQ_DAY
                            AND REQ.RESULT_KEY = RST.RESULT_KEY
        LEFT OUTER JOIN LF_DMUSER.TB_MEMBER_REQ_REFUND MRR
                     ON MRR.ACCNT_NO = REQ.ACCNT_NO
                    AND MRR.PAY_MTHD = REQ.PAY_MTHD
                    AND MRR.DEL_FG = 'N'
                    AND MRR.REQ_DAY = REQ.REQ_DAY
                  --AND MRR.RESULT_KEY = REQ.RESULT_KEY
                    AND NVL(MRR.RESULT_KEY,'JL32') = NVL(REQ.RESULT_KEY,'JL32') /* JL32 : PGWEB 서버 통신 중 에러 */
        WHERE 1=1
        <if test="accnt_no != null and accnt_no != ''">
            AND REQ.ACCNT_NO = #{accnt_no}
        </if>
        AND REQ.PAY_MTHD = #{pay_mthd}
        AND REQ.DEL_FG IN ('C', 'F', 'X')
        <if test="del_fg != null and del_fg != ''">
            AND REQ.DEL_FG = #{del_fg}
        </if>
        <if test="stt_req_dt != null and stt_req_dt != '' and end_req_dt != null and end_req_dt != ''">
            AND REQ.REQ_DAY BETWEEN #{stt_req_dt} AND #{end_req_dt}
        </if>
        <if test="result_kind != null and result_kind != ''">
            AND REQ.RESULT_KIND = #{result_kind}
        </if>
        <if test="req_bit != null and req_bit != ''">
            AND REQ.REQ_BIT = #{req_bit}
        </if>
         <if test="auth_yn != null and auth_yn != ''">
             AND REQ.AUTH_YN = #{auth_yn}
         </if>
    </select>

    <!-- ================================================================
     * 날짜 : 20220217
     * 이름 : 김주용
     * 추가내용 : 카드,CMS 결과데이터 2021년 이전 건수조회
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_WDRW_REQ
                     LF_DMUSER.TB_MEMBER_WDRW_RESULT
                     LF_DMUSER.TB_MEMBER_REQ_REFUND
     * ================================================================
     * -->
    <select id="ReqCustMap.getReqRltmCardLogOldList" parameterType="map" resultType="resultMap">


        SELECT /* ReqCustMap.getReqRltmCardLogOldList */
               *
          FROM (SELECT <if test="orderBy != null and orderBy != ''">
                           ROW_NUMBER() OVER(ORDER BY REQ_DAY DESC, REG_DM DESC, REQ_PAY_NO DESC, ACCNT_NO) PAGE_INDX,
                       </if>
                       X.*
                  FROM (
                            SELECT /*+ use_hash(RST) */
                                   REQ.ACCNT_NO,
                                   REQ.MEM_NO,
                                   PD.PROD_NM,
                                   REQ_BIT,
                                   REQ.TRUE_CNT,                                            /* 실납입횟수 */
                                   REQ.REQ_PAY_NO,                                          /* 청구회차 */
                                   '조회' AS MAX_REQ_PAY_NO,
                                   TO_CHAR(RST.REG_DM, 'YYYYMMDDHH24MISS') AS REG_DM,   /* 결과입력시간*/
                                   '' AS MAX_REG_DM,                                    /* (TEMP) 회원번호 기준 MAX 결과입력시간 */
                                   REQ.PAY_BIT,
                                   REQ.ICHAE_NO,
                                   REQ.REQ_DAY,
                                   PAY_AMT,
                                   REQ.RESULT_KEY,
                                   RST.TID,
                                   RST.PAY_KIND AS RESULT_KIND,
                                   <!-- NVL(RST.PAY_KIND, '01') AS RESULT_KIND, -->
                                   RST.RESULT_CD,
                                   CASE WHEN REQ.PAY_MTHD = '04'  THEN FN_COM_NM('15', RESULT_CD)
                                        WHEN REQ.PAY_MTHD = '06' AND NVL(REQ.AUTH_YN,'Y') = 'N'  THEN FN_COM_NM('0222', RESULT_CD)
                                   ELSE RST.RESULT_MSG END AS RESULT_MSG,
                                   AUTH_DT,
                                   AUTH_CD,
                                   (SELECT COUNT(*) FROM TB_MEMBER_REQ_NAUTH_CNCL WHERE ACCNT_NO = REQ.ACCNT_NO AND REQ_PAY_NO = REQ.REQ_PAY_NO AND DEL_FG IN ('P','N','R')) AS CNCL_CNT,
                                  CASE WHEN REQ.PAY_MTHD = '04'  THEN  FN_COM_NM('63', NVL(RST.ICHAE_CD,REQ.ICHAE_CD))
                                       WHEN REQ.PAY_MTHD = '06' AND RST.PAY_KIND = '01'  AND NVL(REQ.INI_YN, 'N') != 'Y' THEN  RST.ICHAE_CD
                                       WHEN REQ.PAY_MTHD = '06' AND RST.PAY_KIND != '01' AND NVL(REQ.INI_YN, 'N') != 'Y' THEN  FN_COM_NM('0120', NVL(RST.ICHAE_CD,REQ.ICHAE_CD))
                                       WHEN REQ.PAY_MTHD = '06' AND RST.PAY_KIND = '01'  AND NVL(REQ.INI_YN, 'N') = 'Y' THEN FN_COM_NM('0196', NVL(RST.ICHAE_CD,REQ.ICHAE_CD))
                                       WHEN REQ.PAY_MTHD = '06' AND RST.PAY_KIND != '01' AND NVL(REQ.INI_YN, 'N') = 'Y' THEN FN_COM_NM('0196', NVL(RST.ICHAE_CD,REQ.ICHAE_CD))
                                   ELSE '' END AS ICHAE_CD,
                                   <!--
                                   ( SELECT REG_DM
                                       FROM TB_MEMBER_REQ_REFUND
                                      WHERE ACCNT_NO = REQ.ACCNT_NO
                                        AND PAY_MTHD = REQ.PAY_MTHD
                                        AND DEL_FG = 'N'
                                        AND REQ_DAY = REQ.REQ_DAY
                                        AND RESULT_KEY = REQ.RESULT_KEY
                                   ) AS REFUND_REG_DT, /* 환불등록일 */
                                   -->
                                   MRR.REG_DM AS REFUND_REG_DT, /* 환불등록일 */
                                   <!--
                                   ( SELECT REFUND_DT
                                       FROM TB_MEMBER_REQ_REFUND MRR
                                       INNER JOIN TB_MEMBER_WDRW_REQ MWR
                                               ON MWR.ACCNT_NO = MRR.ACCNT_NO
                                              AND MWR.PAY_MTHD = MRR.PAY_MTHD
                                              AND MWR.DEL_FG = 'X'
                                              AND MWR.REQ_DAY = MRR.REQ_DAY
                                              AND MWR.RESULT_KEY = MRR.RESULT_KEY
                                      WHERE MRR.ACCNT_NO = REQ.ACCNT_NO
                                        AND MRR.PAY_MTHD = REQ.PAY_MTHD
                                        AND MRR.DEL_FG = 'N'
                                        AND MRR.REQ_DAY = REQ.REQ_DAY
                                        AND MRR.RESULT_KEY = REQ.RESULT_KEY
                                   ) AS REAL_CANCEL_DT,   /* 실제취소일 */
                                   -->
                                   <!--
                                   ( SELECT TO_CHAR(CANCEL_DT, 'YYYYMMDDHH24MISS')
                                       FROM TB_MEMBER_REQ_REFUND MRR
                                      WHERE MRR.ACCNT_NO = REQ.ACCNT_NO
                                        AND MRR.PAY_MTHD = REQ.PAY_MTHD
                                        AND MRR.DEL_FG = 'N'
                                        AND MRR.REQ_DAY = REQ.REQ_DAY
                                        AND MRR.RESULT_KEY = REQ.RESULT_KEY
                                   ) AS CANCEL_DT,   /* 실제취소일 */
                                   -->
                                   TO_CHAR(MRR.CANCEL_DT, 'YYYYMMDDHH24MISS') AS CANCEL_DT, /* 실제취소일*/
                                   RST.ETC,
                                   REQ.PAY_MTHD,  /* 납입방법 (04:CMS, 06:카드) */
                                   REQ.DEL_FG,
                                   CASE WHEN LENGTH(RST.REG_MAN) = 10
                                        THEN ( SELECT EMPLE_NM FROM EMPLOYEE WHERE EMPLE_NO = RST.REG_MAN )
                                        ELSE RST.REG_MAN
                                    END AS REG_MAN,  /* 결과등록자 사원명으로 표시 */
                                   REQ.AUTH_YN,
                                   REQ.FRANCHISEE_NO,
                                   REQ.INI_YN
                            FROM LF_DMUSER.TB_MEMBER_WDRW_REQ_2021 REQ INNER JOIN
                            PRODUCT PD ON REQ.PROD_CD = PD.PROD_CD
                            LEFT OUTER JOIN LF_DMUSER.TB_MEMBER_WDRW_RESULT_2021 RST
                                         ON REQ.ACCNT_NO = RST.ACCNT_NO
                                        AND REQ.PAY_MTHD = RST.PAY_MTHD
                                        AND REQ.REQ_DAY = RST.REQ_DAY
                                        AND REQ.RESULT_KEY = RST.RESULT_KEY
                            LEFT OUTER JOIN LF_DMUSER.TB_MEMBER_REQ_REFUND MRR
                                         ON MRR.ACCNT_NO = REQ.ACCNT_NO
                                        AND MRR.PAY_MTHD = REQ.PAY_MTHD
                                        AND MRR.DEL_FG = 'N'
                                        AND MRR.REQ_DAY = REQ.REQ_DAY
                                        --AND MRR.RESULT_KEY = REQ.RESULT_KEY
                                        AND NVL(MRR.RESULT_KEY,'JL32') = NVL(REQ.RESULT_KEY,'JL32') /* JL32 : PGWEB 서버 통신 중 에러 */
                             WHERE 1=1
                               <if test="accnt_no != null and accnt_no != ''">
                               AND REQ.ACCNT_NO = #{accnt_no}
                               </if>
                               AND REQ.PAY_MTHD = #{pay_mthd}
                               AND REQ.DEL_FG IN ('C', 'F', 'X')
                               <if test="auth_yn != null and auth_yn != ''">
                               AND REQ.AUTH_YN = #{auth_yn}
                               </if>
                               <if test="del_fg != null and del_fg != ''">
                               AND REQ.DEL_FG = #{del_fg}
                               </if>
                               <if test="stt_req_dt != null and stt_req_dt != '' and end_req_dt != null and end_req_dt != ''">
                               AND REQ.REQ_DAY BETWEEN #{stt_req_dt} AND #{end_req_dt}
                               </if>
                               <if test="result_kind != null and result_kind != ''">
                               AND REQ.RESULT_KIND = #{result_kind}
                               </if>
                               <if test="req_bit != null and req_bit != ''">
                               AND REQ.REQ_BIT = #{req_bit}
                               </if>
                    ) X
                    WHERE 1=1
                ) Z

     <if test="excel_fg == null or excel_fg == '' or !excel_fg.equalsIgnoreCase('Y')">
         <if test="startLine != null and startLine != '' and endLine != null and endLine != ''">
             <![CDATA[
             WHERE PAGE_INDX >= #{startLine}
               AND PAGE_INDX < #{endLine}
             ]]>
         </if>
     </if>

    </select>

    <!-- ================================================================
     * 날짜 : 20220217
     * 이름 : 김주용
     * 추가내용 : 카드,CMS 결과데이터 회원번호 건수조회
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_WDRW_REQ
                     LF_DMUSER.TB_MEMBER_WDRW_RESULT
                     LF_DMUSER.TB_MEMBER_REQ_REFUND
     * ================================================================
     * -->
    <select id="ReqCustMap.getReqRltmCardLogAccntNoCount" parameterType="map" resultType="int">
        /* ReqCustMap.getReqRltmCardLogAccntNoCount */
        SELECT
            COUNT(*) AS ICNT
        FROM LF_DMUSER.VIEW_MEMBER_WDRW_REQ REQ INNER JOIN
                PRODUCT PD ON REQ.PROD_CD = PD.PROD_CD
        LEFT OUTER JOIN LF_DMUSER.TB_MEMBER_REQ_REFUND MRR
                     ON MRR.ACCNT_NO = REQ.ACCNT_NO
                    AND MRR.PAY_MTHD = REQ.PAY_MTHD
                    AND MRR.DEL_FG = 'N'
                    AND MRR.REQ_DAY = REQ.REQ_DAY
                  --AND MRR.RESULT_KEY = REQ.RESULT_KEY
                    AND NVL(MRR.RESULT_KEY,'JL32') = NVL(REQ.RESULT_KEY,'JL32') /* JL32 : PGWEB 서버 통신 중 에러 */
        WHERE 1=1
        AND REQ.ACCNT_NO = #{accnt_no}
        AND REQ.PAY_MTHD = #{pay_mthd}
        AND REQ.DEL_FG IN ('C', 'F', 'X')
        <if test="del_fg != null and del_fg != ''">
            AND REQ.DEL_FG = #{del_fg}
        </if>
        <if test="stt_req_dt != null and stt_req_dt != '' and end_req_dt != null and end_req_dt != ''">
        </if>
        <if test="result_kind != null and result_kind != ''">
            AND REQ.RESULT_KIND = #{result_kind}
        </if>
        <if test="req_bit != null and req_bit != ''">
            AND REQ.REQ_BIT = #{req_bit}
        </if>
         <if test="auth_yn != null and auth_yn != ''">
             AND REQ.AUTH_YN = #{auth_yn}
         </if>
    </select>

    <!-- ================================================================
     * 날짜 : 20220217
     * 이름 : 김주용
     * 추가내용 : 카드,CMS 결과데이터 회원번호 조회
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_WDRW_REQ
                     LF_DMUSER.TB_MEMBER_WDRW_RESULT
                     LF_DMUSER.TB_MEMBER_REQ_REFUND
     * ================================================================
     * -->
    <select id="ReqCustMap.getReqRltmCardLogAccntNoList" parameterType="map" resultType="resultMap">


        SELECT /* ReqCustMap.getReqRltmCardLogAccntNoList */
               *
          FROM (SELECT <if test="orderBy != null and orderBy != ''">
                           ROW_NUMBER() OVER(ORDER BY REQ_DAY DESC, REG_DM DESC, REQ_PAY_NO DESC, ACCNT_NO) PAGE_INDX,
                       </if>
                       X.*
                  FROM (
                            SELECT
                                   REQ.ACCNT_NO,
                                   REQ.MEM_NO,
                                   PD.PROD_NM,
                                   REQ.REQ_BIT,
                                   REQ.TRUE_CNT,                                            /* 실납입횟수 */
                                   REQ.REQ_PAY_NO,                                          /* 청구회차 */
                                   '조회' AS MAX_REQ_PAY_NO,
                                   REQ.REG_DM,
                                   '' AS MAX_REG_DM,                                    /* (TEMP) 회원번호 기준 MAX 결과입력시간 */
                                   REQ.PAY_BIT,
                                   REQ.ICHAE_NO,
                                   REQ.REQ_DAY,
                                   REQ.PAY_AMT,
                                   REQ.RESULT_KEY,
                                   REQ.TID,
                                   REQ.RESULT_KIND,

                                   REQ.RESULT_CD,
                                   CASE WHEN REQ.PAY_MTHD = '04'  THEN FN_COM_NM('15', REQ.RESULT_CD)
                                        WHEN REQ.PAY_MTHD = '06' AND NVL(REQ.AUTH_YN,'Y') = 'N'  THEN FN_COM_NM('0222', REQ.RESULT_CD)
                                   ELSE REQ.RESULT_MSG END AS RESULT_MSG,
                                   REQ.AUTH_DT,
                                   REQ.AUTH_CD,
                                   (SELECT COUNT(*) FROM TB_MEMBER_REQ_NAUTH_CNCL WHERE ACCNT_NO = REQ.ACCNT_NO AND REQ_PAY_NO = REQ.REQ_PAY_NO AND DEL_FG IN ('P','N','R')) AS CNCL_CNT,
                                  CASE WHEN REQ.PAY_MTHD = '04'  THEN  FN_COM_NM('63', NVL(REQ.ICHAE_CD,REQ.ICHAE_CD))
                                       WHEN REQ.PAY_MTHD = '06' AND REQ.RESULT_KIND = '01'  AND NVL(REQ.INI_YN, 'N') != 'Y' THEN  REQ.ICHAE_CD
                                       WHEN REQ.PAY_MTHD = '06' AND REQ.RESULT_KIND != '01' AND NVL(REQ.INI_YN, 'N') != 'Y' THEN  FN_COM_NM('0120', REQ.ICHAE_CD)
                                       WHEN REQ.PAY_MTHD = '06' AND REQ.RESULT_KIND = '01'  AND NVL(REQ.INI_YN, 'N') = 'Y' THEN FN_COM_NM('0196', REQ.ICHAE_CD)
                                       WHEN REQ.PAY_MTHD = '06' AND REQ.RESULT_KIND != '01' AND NVL(REQ.INI_YN, 'N') = 'Y' THEN FN_COM_NM('0196', REQ.ICHAE_CD)
                                   ELSE '' END AS ICHAE_CD,

                                   MRR.REG_DM AS REFUND_REG_DT, /* 환불등록일 */
                                   TO_CHAR(MRR.CANCEL_DT, 'YYYYMMDDHH24MISS') AS CANCEL_DT, /* 실제취소일*/
                                   REQ.ETC,
                                   REQ.PAY_MTHD,  /* 납입방법 (04:CMS, 06:카드) */
                                   REQ.DEL_FG,
                                   CASE WHEN LENGTH(REQ.REG_MAN) = 10
                                        THEN ( SELECT EMPLE_NM FROM EMPLOYEE WHERE EMPLE_NO = REQ.REG_MAN )
                                        ELSE REQ.REG_MAN
                                    END AS REG_MAN,  /* 결과등록자 사원명으로 표시 */
                                   REQ.AUTH_YN,
                                   REQ.FRANCHISEE_NO,
                                   REQ.INI_YN
                               FROM LF_DMUSER.VIEW_MEMBER_WDRW_REQ REQ INNER JOIN
                                    PRODUCT PD ON REQ.PROD_CD = PD.PROD_CD
                                    LEFT OUTER JOIN LF_DMUSER.TB_MEMBER_REQ_REFUND MRR
                                                 ON MRR.ACCNT_NO = REQ.ACCNT_NO
                                                AND MRR.PAY_MTHD = REQ.PAY_MTHD
                                                AND MRR.DEL_FG = 'N'
                                                AND MRR.REQ_DAY = REQ.REQ_DAY
                                              --AND MRR.RESULT_KEY = REQ.RESULT_KEY
                                                AND NVL(MRR.RESULT_KEY,'JL32') = NVL(REQ.RESULT_KEY,'JL32') /* JL32 : PGWEB 서버 통신 중 에러 */
                               WHERE 1=1
                               AND REQ.ACCNT_NO = #{accnt_no}
                               AND REQ.PAY_MTHD = #{pay_mthd}
                               AND REQ.DEL_FG IN ('C', 'F', 'X')
                               <if test="auth_yn != null and auth_yn != ''">
                               AND REQ.AUTH_YN = #{auth_yn}
                               </if>
                               <if test="del_fg != null and del_fg != ''">
                               AND REQ.DEL_FG = #{del_fg}
                               </if>
                               <if test="result_kind != null and result_kind != ''">
                               AND REQ.RESULT_KIND = #{result_kind}
                               </if>
                               <if test="req_bit != null and req_bit != ''">
                               AND REQ.REQ_BIT = #{req_bit}
                               </if>
                    ) X
                    WHERE 1=1
                ) Z

     <if test="excel_fg == null or excel_fg == '' or !excel_fg.equalsIgnoreCase('Y')">
         <if test="startLine != null and startLine != '' and endLine != null and endLine != ''">
             <![CDATA[
             WHERE PAGE_INDX >= #{startLine}
               AND PAGE_INDX < #{endLine}
             ]]>
         </if>
     </if>

    </select>

    <!-- ===============================================================
     * 날짜 : 메인
     * 이름 : /dlw/cust/cust-acnt/list
     * 추가내용 :
     * 대상 테이블 :
     * ================================================================
     * -->
    <select id="ReqCustMap.getMemberRefundListOldCount" parameterType="map" resultType="int">
        SELECT /* ReqCustMap.getMemberRefundListOldCount */
               COUNT(*) AS ICNT
          FROM (

            SELECT *

              FROM ( SELECT MRR.ACCNT_NO      /* 회원번호                                                                   */
                           ,MBR.MEM_NO        /* 고유번호                                                                   */
                           ,MBR.MEM_NM        /* 회원명                                                                     */
                           ,MRR.PAY_MTHD      /* 납입방법(04:CMS, 06:Card)                                                  */
                           ,CASE WHEN MRR.CANCEL_DT IS NOT NULL
                                THEN CASE WHEN MWR.RESULT_KIND = '01' AND TO_CHAR(MRR.CANCEL_DT, 'YYMMDD') > TO_CHAR(TO_DATE(AUTH_DT), 'YYMMDD')
                                           THEN '후취소'
                                           WHEN MWR.RESULT_KIND != '01' AND NVL(MWR.INI_YN,'N') = 'N' AND TO_CHAR(MRR.CANCEL_DT, 'YYMMDD') > SUBSTR(AUTH_DT, 1, 6)
                                           THEN '후취소'
                                           WHEN MWR.RESULT_KIND != '01' AND NVL(MWR.INI_YN,'N') = 'Y' AND TO_CHAR(MRR.CANCEL_DT, 'YYMMDD') > SUBSTR(AUTH_DT, 3, 8)
                                           THEN '후취소'
                                           WHEN MWR.RESULT_KIND = '01' AND TO_CHAR(MRR.CANCEL_DT, 'YYMMDD') = TO_CHAR(TO_DATE(AUTH_DT), 'YYMMDD')
                                           THEN '취소'
                                           WHEN MWR.RESULT_KIND != '01' AND NVL(MWR.INI_YN,'N') = 'N'  AND TO_CHAR(MRR.CANCEL_DT, 'YYMMDD') = SUBSTR(AUTH_DT, 1, 6)
                                           THEN '취소'
                                           WHEN MWR.RESULT_KIND != '01' AND NVL(MWR.INI_YN,'N') = 'Y' AND TO_CHAR(MRR.CANCEL_DT, 'YYMMDD') = SUBSTR(AUTH_DT, 3, 8)
                                           THEN '취소'
                                           ELSE ''
                                       END
                                 ELSE ''
                            END AS CANCEL_GB
                           ,MWR.PAY_BIT       /* PAYBIT                                                                    		 */
                           ,MRR.REQ_DAY       /* 청구일자                                                                   */
                           ,MWR.PAY_AMT       /* 청구금액                                                                   */
                           ,MWR.KSTBIT        /* 회원상태(01:대기, 02:가입, 03:해약, 04:행사, 09:만기)                      */
                           ,MRR.RESULT_KEY    /* 결과키                                                                     */
                           ,MRR.REFUND_LOC    /* 환불 경로(01:결과파일환불,02:해약등록,03:청약철회등록,04:행사등록)         */
                           ,MRR.ICHAE_NO      /* 은행이체번호(CMS)                                                          */
                           ,MRR.ICHAE_CD      /* 은행이체코드(CMS)                                                          */
                           ,MRR.DEPR          /* 예금주(CMS)                                                                */
                           ,MRR.REFUND_DT     /* 환불일자                                                                   */
                           ,MRR.REG_DM        /* 등록일자                                                                   */
                           ,MRR.REG_MAN       /* 등록자ID                                                                   */
                           ,MWR.DEL_FG        /* 청구여부(N:청구전 Y:삭제 R:청구 C:완료(변환/입금) F:완료(실패) X:입금취소) */
                           ,MWR.REQ_PAY_NO    /* 산출청구회차                                                               */
                           ,MWS.RESULT_CD     /* 결과코드                                                                   */
                           ,MWS.RESULT_MSG    /* 결과메세지                                                                 */
                           <!-- ,TO_CHAR(MWS.CANCEL_DT, 'YYYYMMDD') AS CANCEL_DT /* 실시간 취소 일자                             */ -->
                           ,TO_CHAR(MRR.CANCEL_DT, 'YYYYMMDDHH24MISS') AS CANCEL_DT                    /* 실시간 취소 일자  */
                           ,MWS.TID           /* 결과키(TID, CMS결과키)                                                     */
                           ,AUTH_DT     /* 승인일자          */
                           ,MWS.AUTH_CD       /* 승인번호                                                                   */
                           ,MRR.REFUND_REASON /* 환불사유(환불사유코드)                                                     */
                           ,MRR.REFUND_ETC    /* 비고                                                                       */
                           ,MRR.AUTH_YN
                           ,(SELECT DEL_FG FROM TB_MEMBER_REQ_NAUTH_CNCL CNCL WHERE 1=1 AND CNCL.ACCNT_NO = MRR.ACCNT_NO  AND CNCL.REQ_PAY_NO = MRR.REQ_PAY_NO AND CNCL.DEL_FG != 'Y') AS CNCL_DEL_FG
                       FROM TB_MEMBER_REQ_REFUND MRR              /* 고객환불정보                                           */

                       LEFT OUTER JOIN TB_MEMBER_WDRW_REQ_2021 MWR     /* 고객청구요청정보                                       */
                               ON MRR.ACCNT_NO = MWR.ACCNT_NO
                              AND MRR.PAY_MTHD = MWR.PAY_MTHD
                              AND MRR.REQ_DAY = MWR.REQ_DAY
                              AND MRR.REQ_PAY_NO = MWR.REQ_PAY_NO
                              AND MRR.RESULT_KEY = MWR.RESULT_KEY
                       LEFT OUTER JOIN TB_MEMBER_WDRW_RESULT_2021 MWS  /* 고객청구결과정보                                       */
                               ON MWR.ACCNT_NO = MWS.ACCNT_NO
                              AND MWR.RESULT_KEY = MWS.RESULT_KEY
                              AND MWR.REQ_DAY = MWS.REQ_DAY

                       INNER JOIN MEM_PROD_ACCNT MPA              /* 고객가입상품정보                                       */
                               ON MPA.ACCNT_NO = MRR.ACCNT_NO
                              AND MPA.DEL_FG = 'N'
                       INNER JOIN MEMBER MBR                      /* 고객기본정보                                           */
                               ON MBR.MEM_NO = MPA.MEM_NO
                              AND MBR.DEL_FG = 'N'
                       LEFT OUTER JOIN PRODUCT_NO_DATA PND        /* 상품회차별정보                                         */
                               ON MWR.PROD_CD = PND.PROD_CD
                              AND MWR.REQ_PAY_NO = PND.NO
                      WHERE 1=1
                      <if test="data_type == '01' and new_refund.equalsIgnoreCase('N')">
                          <if test="reg_dm_stt != null and reg_dm_stt != '' and reg_dm_end != null and reg_dm_end != '' and (accnt_no == null or accnt_no == '')">
                              AND TO_CHAR(MRR.REG_DM,'YYYYMMDD') BETWEEN #{reg_dm_stt} AND #{reg_dm_end}
                          </if>
                      </if>
                      <if test="data_type == '02' and new_refund.equalsIgnoreCase('N')">
                          <if test="reg_dm_stt != null and reg_dm_stt != '' and reg_dm_end != null and reg_dm_end != '' and (accnt_no == null or accnt_no == '')">
                              AND TO_CHAR(MRR.CANCEL_DT,'YYYYMMDD') BETWEEN #{reg_dm_stt} AND #{reg_dm_end}
                          </if>
                      </if>
                      <if test="accnt_no != null and accnt_no != ''">
                          AND MRR.ACCNT_NO = #{accnt_no}
                      </if>
                      <if test="mem_nm != null and mem_nm != ''">
                          AND MBR.MEM_NM = #{mem_nm}
                      </if>
                      <if test="refund_loc != null and refund_loc != ''">
                          AND MRR.REFUND_LOC = #{refund_loc}
                      </if>
                      <if test="req_stat != null and req_stat != '' and new_refund.equalsIgnoreCase('N')">
                          AND MWR.DEL_FG = #{req_stat}                  /* 청구여부(N:청구전 Y:삭제 R:청구 C:완료(변환/입금) F:완료(실패) X:입금취소) */
                      </if>
                      <!--
                      <if test="del_fg != null and del_fg != ''">
                          AND MRR.DEL_FG = #{del_fg}
                      </if>
                       -->
                      <if test="req_day != null and req_day != ''">
                          AND MRR.REQ_DAY = #{req_day}                  /* 청구일자 */
                      </if>
                      <if test="pay_mthd != null and pay_mthd != ''">
                          AND MRR.PAY_MTHD = #{pay_mthd}                /* 납입방법(04:CMS, 06:Card) */
                      </if>
                      <if test="auth_yn != null and auth_yn != ''">
                          AND MRR.AUTH_YN = #{auth_yn}
                      </if>
                      <if test="new_refund != null and new_refund != '' and new_refund.equalsIgnoreCase('Y')">
                          AND MWR.REQ_DAY >= '20210101'
                          AND NVL(TO_CHAR(MRR.CANCEL_DT,'YYYYMMDD'),'99999999') = '99999999'
                      </if>
                      AND MRR.DEL_FG = 'N'
                   ) MAIN_TBL
             )
             WHERE 1=1
               <if test="cancel_gb != null and cancel_gb != ''">
               AND CANCEL_GB = #{cancel_gb}
               </if>
    </select>

    <select id="ReqCustMap.getMemberRefundOldList" parameterType="map" resultType="resultMap">
        SELECT /* ReqCustMap.getMemberRefundOldList */
               *
          FROM

          ( SELECT ROW_NUMBER() OVER(ORDER BY ${orderBy} ${orderDirection}) PAGE_INDX /* PAGE INDX                 */
                 , MAIN_TBL.*
              FROM
               ( SELECT MRR.ACCNT_NO      /* 회원번호                                                                   */
                       ,MWR.PROD_CD
                       ,(SELECT MAX(PD.PROD_NM) FROM PRODUCT PD WHERE 1=1 AND PD.PROD_CD = MWR.PROD_CD) AS PROD_NM
                       ,MWR.ICHAE_NO AS BID
                       ,MBR.MEM_NO        /* 고유번호                                                                   */
                       ,MBR.MEM_NM        /* 회원명                                                                     */
                       ,MRR.PAY_MTHD      /* 납입방법(04:CMS, 06:Card)                                                  */
                       ,CASE WHEN MRR.CANCEL_DT IS NOT NULL
                                 THEN CASE WHEN MWR.RESULT_KIND = '01' AND TO_CHAR(MRR.CANCEL_DT, 'YYMMDD') > TO_CHAR(TO_DATE(AUTH_DT), 'YYMMDD')
                                           THEN '후취소'
                                           WHEN MWR.RESULT_KIND != '01' AND NVL(MWR.INI_YN,'N') = 'N' AND TO_CHAR(MRR.CANCEL_DT, 'YYMMDD') > SUBSTR(AUTH_DT, 1, 6)
                                           THEN '후취소'
                                           WHEN MWR.RESULT_KIND != '01' AND NVL(MWR.INI_YN,'N') = 'Y' AND TO_CHAR(MRR.CANCEL_DT, 'YYMMDD') > SUBSTR(AUTH_DT, 3, 8)
                                           THEN '후취소'
                                           WHEN MWR.RESULT_KIND = '01' AND TO_CHAR(MRR.CANCEL_DT, 'YYMMDD') = TO_CHAR(TO_DATE(AUTH_DT), 'YYMMDD')
                                           THEN '취소'
                                           WHEN MWR.RESULT_KIND != '01' AND NVL(MWR.INI_YN,'N') = 'N'  AND TO_CHAR(MRR.CANCEL_DT, 'YYMMDD') = SUBSTR(AUTH_DT, 1, 6)
                                           THEN '취소'
                                           WHEN MWR.RESULT_KIND != '01' AND NVL(MWR.INI_YN,'N') = 'Y' AND TO_CHAR(MRR.CANCEL_DT, 'YYMMDD') = SUBSTR(AUTH_DT, 3, 8)
                                           THEN '취소'
                                           ELSE ''
                                       END
                                 ELSE ''
                             END AS CANCEL_GB
                       ,MWR.PAY_BIT       /* PAYBIT                                                                       */
                       ,MRR.REQ_DAY       /* 청구일자                                                                   */
                       ,MWR.PAY_AMT       /* 청구금액                                                                   */
                       ,(CASE WHEN SUBSTR(MWR.PAY_BIT,1,1) != 'X' THEN PND.AMT     ELSE 0 END) AS TRUE_AMT    /* 상조금 */
                       ,(CASE WHEN SUBSTR(MWR.PAY_BIT,2,1) != 'X' THEN PND.REL_AMT ELSE 0 END) AS REL_AMT     /* 결합금 */
                       ,(CASE WHEN SUBSTR(MWR.PAY_BIT,3,1) != 'X' THEN PND.ADD_AMT ELSE 0 END) AS ADD_AMT     /* 추가금 */
                       ,MWR.KSTBIT        /* 회원상태(01:대기, 02:가입, 03:해약, 04:행사, 09:만기)                      */
                       ,MRR.RESULT_KEY    /* 결과키                                                                     */
                       ,MWR.RESULT_KIND   /* 결과유형 (01:파일, 02:실시간, 03:자유,04:기타)                             */
                       ,MRR.REFUND_LOC    /* 환불 경로(01:결과파일환불,02:해약등록,03:청약철회등록,04:행사등록)         */
                       <!--
                       ,MRR.ICHAE_NO      /* 은행이체번호(CMS)                                                          */
                       ,MRR.ICHAE_CD      /* 은행이체코드(CMS)                                                          */
                        -->
                       ,CASE WHEN MWR.PAY_MTHD = '04'
                             THEN CASE WHEN NVL(MRR.ICHAE_NO, 'N') = 'N'
                                       THEN MWR.ICHAE_NO
                                       ELSE MRR.ICHAE_NO
                                   END
                             ELSE ''
                         END AS ICHAE_NO
                       ,CASE WHEN MWR.PAY_MTHD = '04'
                             THEN CASE WHEN NVL(MRR.ICHAE_CD, 'N') = 'N'
                                       THEN MWR.ICHAE_CD
                                       ELSE MRR.ICHAE_CD
                                  END
                             ELSE ''
                         END AS ICHAE_CD
                       ,CASE WHEN MWR.PAY_MTHD = '06' AND NVL(MWR.INI_YN, 'N') != 'Y' THEN LF_DMUSER.FN_COM_NM('0120', MWR.ICHAE_CD)
                             WHEN MWR.PAY_MTHD = '06' AND NVL(MWR.INI_YN, 'N') = 'Y' THEN LF_DMUSER.FN_COM_NM('0196', MWR.ICHAE_CD)
                             ELSE ''
                             END AS CARD_CD
                       ,MRR.DEPR          /* 예금주(CMS)                                                                */
                       ,MRR.REFUND_DT     /* 환불일자                                                                   */
                       ,MRR.REG_DM        /* 등록일자                                                                   */
                       ,MRR.REG_MAN       /* 등록자ID                                                                   */
                       ,MWR.DEL_FG        /* 청구여부(N:청구전 Y:삭제 R:청구 C:완료(변환/입금) F:완료(실패) X:입금취소) */
                       ,MWR.REQ_PAY_NO    /* 산출청구회차                                                               */
                       ,MWS.RESULT_CD     /* 결과코드                                                                   */
                       ,MWS.RESULT_MSG    /* 결과메세지                                                                 */
                       <!-- ,TO_CHAR(MWS.CANCEL_DT, 'YYYYMMDD') AS CANCEL_DT /* 실시간 취소 일자                             */ -->
                       ,TO_CHAR(MRR.CANCEL_DT, 'YYYYMMDDHH24MISS') AS CANCEL_DT                    /* 실시간 취소 일자  */
                       ,MWS.TID           /* 결과키(TID, CMS결과키)                                                     */
                       ,AUTH_DT     /* 승인일자          */
                       ,MWS.AUTH_CD       /* 승인번호                                                                   */
                       ,MRR.REFUND_REASON /* 환불사유(환불사유코드)                                                     */
                       ,MRR.REFUND_ETC    /* 비고                                                                       */
                       ,MRR.AUTH_YN
                       ,MWR.FRANCHISEE_NO
                       ,MWR.INI_YN
                       ,(SELECT DEL_FG FROM TB_MEMBER_REQ_NAUTH_CNCL CNCL WHERE 1=1 AND CNCL.ACCNT_NO = MRR.ACCNT_NO  AND CNCL.REQ_PAY_NO = MRR.REQ_PAY_NO AND CNCL.DEL_FG != 'Y') AS CNCL_DEL_FG
                   FROM TB_MEMBER_REQ_REFUND MRR              /* 고객환불정보                                           */
                   LEFT OUTER JOIN TB_MEMBER_WDRW_REQ_2021 MWR     /* 고객청구요청정보                                       */
                           ON MRR.ACCNT_NO = MWR.ACCNT_NO
                          AND MRR.PAY_MTHD = MWR.PAY_MTHD
                          AND MRR.REQ_DAY = MWR.REQ_DAY
                          AND MRR.REQ_PAY_NO = MWR.REQ_PAY_NO
                          AND MRR.RESULT_KEY = MWR.RESULT_KEY
                   LEFT OUTER JOIN TB_MEMBER_WDRW_RESULT_2021 MWS  /* 고객청구결과정보                                       */
                           ON MWR.ACCNT_NO = MWS.ACCNT_NO
                          AND MWR.RESULT_KEY = MWS.RESULT_KEY
                          AND MWR.REQ_DAY = MWS.REQ_DAY
                   INNER JOIN MEM_PROD_ACCNT MPA              /* 고객가입상품정보                                       */
                           ON MPA.ACCNT_NO = MRR.ACCNT_NO
                          AND MPA.DEL_FG = 'N'
                   INNER JOIN MEMBER MBR                      /*  고객기본정보                                           */
                           ON MBR.MEM_NO = MPA.MEM_NO
                          AND MBR.DEL_FG = 'N'
                   LEFT OUTER JOIN PRODUCT_NO_DATA PND        /* 상품회차별정보                                         */
                           ON MWR.PROD_CD = PND.PROD_CD
                          AND MWR.REQ_PAY_NO = PND.NO
                  WHERE 1=1
                  <if test="data_type == '01' and new_refund.equalsIgnoreCase('N')">
                      <if test="reg_dm_stt != null and reg_dm_stt != '' and reg_dm_end != null and reg_dm_end != '' and (accnt_no == null or accnt_no == '')">
                      AND TO_CHAR(MRR.REG_DM,'YYYYMMDD') BETWEEN #{reg_dm_stt} AND #{reg_dm_end}
                      </if>
                  </if>
                  <if test="data_type == '02' and new_refund.equalsIgnoreCase('N')">
                      <if test="reg_dm_stt != null and reg_dm_stt != '' and reg_dm_end != null and reg_dm_end != '' and (accnt_no == null or accnt_no == '')">
                      AND TO_CHAR(MRR.CANCEL_DT,'YYYYMMDD') BETWEEN #{reg_dm_stt} AND #{reg_dm_end}
                      </if>
                  </if>
                  <if test="accnt_no != null and accnt_no != ''">
                      AND MRR.ACCNT_NO = #{accnt_no}
                  </if>
                  <if test="mem_nm != null and mem_nm != ''">
                      AND MBR.MEM_NM = #{mem_nm}
                  </if>
                  <if test="refund_loc != null and refund_loc != ''">
                      AND MRR.REFUND_LOC = #{refund_loc}
                  </if>
                  <if test="req_stat != null and req_stat != '' and new_refund.equalsIgnoreCase('N')">
                      AND MWR.DEL_FG = #{req_stat}                  /* 청구여부(N:청구전 Y:삭제 R:청구 C:완료(변환/입금) F:완료(실패) X:입금취소) */
                  </if>
                  <!--
                  <if test="del_fg != null and del_fg != ''">
                      AND MRR.DEL_FG = #{del_fg}
                  </if>
                  -->
                  <if test="req_day != null and req_day != ''">
                      AND MRR.REQ_DAY = #{req_day}
                  </if>
                  <if test="pay_mthd != null and pay_mthd != ''">
                      AND MRR.PAY_MTHD = #{pay_mthd}
                  </if>
                  <if test="auth_yn != null and auth_yn != ''">
                      AND MRR.AUTH_YN = #{auth_yn}
                  </if>
                  <if test="new_refund != null and new_refund != '' and new_refund.equalsIgnoreCase('Y')">
                      AND MWR.REQ_DAY >= '20210101'
                      AND NVL(TO_CHAR(MRR.CANCEL_DT,'YYYYMMDD'),'99999999') = '99999999'
                  </if>
                  AND MRR.DEL_FG = 'N'
               ) MAIN_TBL

            WHERE 1=1
              <if test="cancel_gb != null and cancel_gb != ''">
              AND CANCEL_GB = #{cancel_gb}
              </if>
         )

         WHERE 1=1
    </select>

    <!-- ===============================================================
     * 날짜 : 메인
     * 이름 : /dlw/cust/cust-acnt/list
     * 추가내용 :
     * 대상 테이블 :
     * ================================================================
     * -->
    <select id="ReqCustMap.getMemberRefundListAccntNoCount" parameterType="map" resultType="int">
        SELECT /* ReqCustMap.getMemberRefundListAccntNoCount */
               COUNT(*) AS ICNT
          FROM (

            SELECT *

              FROM ( SELECT MRR.ACCNT_NO      /* 회원번호                                                                   */
                           ,MBR.MEM_NO        /* 고유번호                                                                   */
                           ,MBR.MEM_NM        /* 회원명                                                                     */
                           ,MRR.PAY_MTHD      /* 납입방법(04:CMS, 06:Card)                                                  */
                           ,CASE WHEN MRR.CANCEL_DT IS NOT NULL
                                THEN CASE WHEN MWR.RESULT_KIND = '01' AND TO_CHAR(MRR.CANCEL_DT, 'YYMMDD') > TO_CHAR(TO_DATE(AUTH_DT), 'YYMMDD')
                                           THEN '후취소'
                                           WHEN MWR.RESULT_KIND != '01' AND NVL(MWR.INI_YN,'N') = 'N' AND TO_CHAR(MRR.CANCEL_DT, 'YYMMDD') > SUBSTR(AUTH_DT, 1, 6)
                                           THEN '후취소'
                                           WHEN MWR.RESULT_KIND != '01' AND NVL(MWR.INI_YN,'N') = 'Y' AND TO_CHAR(MRR.CANCEL_DT, 'YYMMDD') > SUBSTR(AUTH_DT, 3, 8)
                                           THEN '후취소'
                                           WHEN MWR.RESULT_KIND = '01' AND TO_CHAR(MRR.CANCEL_DT, 'YYMMDD') = TO_CHAR(TO_DATE(AUTH_DT), 'YYMMDD')
                                           THEN '취소'
                                           WHEN MWR.RESULT_KIND != '01' AND NVL(MWR.INI_YN,'N') = 'N'  AND TO_CHAR(MRR.CANCEL_DT, 'YYMMDD') = SUBSTR(AUTH_DT, 1, 6)
                                           THEN '취소'
                                           WHEN MWR.RESULT_KIND != '01' AND NVL(MWR.INI_YN,'N') = 'Y' AND TO_CHAR(MRR.CANCEL_DT, 'YYMMDD') = SUBSTR(AUTH_DT, 3, 8)
                                           THEN '취소'
                                           ELSE ''
                                       END
                                 ELSE ''
                            END AS CANCEL_GB
                           ,MWR.PAY_BIT       /* PAYBIT                                                                    		 */
                           ,MRR.REQ_DAY       /* 청구일자                                                                   */
                           ,MWR.PAY_AMT       /* 청구금액                                                                   */
                           ,MWR.KSTBIT        /* 회원상태(01:대기, 02:가입, 03:해약, 04:행사, 09:만기)                      */
                           ,MRR.RESULT_KEY    /* 결과키                                                                     */
                           ,MRR.REFUND_LOC    /* 환불 경로(01:결과파일환불,02:해약등록,03:청약철회등록,04:행사등록)         */
                           ,MRR.ICHAE_NO      /* 은행이체번호(CMS)                                                          */
                           ,MRR.ICHAE_CD      /* 은행이체코드(CMS)                                                          */
                           ,MRR.DEPR          /* 예금주(CMS)                                                                */
                           ,MRR.REFUND_DT     /* 환불일자                                                                   */
                           ,MRR.REG_DM        /* 등록일자                                                                   */
                           ,MRR.REG_MAN       /* 등록자ID                                                                   */
                           ,MWR.DEL_FG        /* 청구여부(N:청구전 Y:삭제 R:청구 C:완료(변환/입금) F:완료(실패) X:입금취소) */
                           ,MWR.REQ_PAY_NO    /* 산출청구회차                                                               */
                           ,MWR.RESULT_CD     /* 결과코드                                                                   */
                           ,MWR.RESULT_MSG    /* 결과메세지                                                                 */
                           <!-- ,TO_CHAR(MWS.CANCEL_DT, 'YYYYMMDD') AS CANCEL_DT /* 실시간 취소 일자                             */ -->
                           ,TO_CHAR(MRR.CANCEL_DT, 'YYYYMMDDHH24MISS') AS CANCEL_DT                    /* 실시간 취소 일자  */
                           ,MWR.TID           /* 결과키(TID, CMS결과키)                                                     */
                           ,AUTH_DT     /* 승인일자          */
                           ,MWR.AUTH_CD       /* 승인번호                                                                   */
                           ,MRR.REFUND_REASON /* 환불사유(환불사유코드)                                                     */
                           ,MRR.REFUND_ETC    /* 비고                                                                       */
                           ,MRR.AUTH_YN
                           ,(SELECT DEL_FG FROM TB_MEMBER_REQ_NAUTH_CNCL CNCL WHERE 1=1 AND CNCL.ACCNT_NO = MRR.ACCNT_NO  AND CNCL.REQ_PAY_NO = MRR.REQ_PAY_NO AND CNCL.DEL_FG != 'Y') AS CNCL_DEL_FG
                       FROM TB_MEMBER_REQ_REFUND MRR              /* 고객환불정보                                           */

                       LEFT OUTER JOIN VIEW_MEMBER_WDRW_REQ MWR     /* 고객청구요청정보                                       */
                               ON MRR.ACCNT_NO = MWR.ACCNT_NO
                              AND MRR.PAY_MTHD = MWR.PAY_MTHD
                              AND MRR.REQ_DAY = MWR.REQ_DAY
                              AND MRR.REQ_PAY_NO = MWR.REQ_PAY_NO
                              AND MRR.RESULT_KEY = MWR.RESULT_KEY

                       INNER JOIN MEM_PROD_ACCNT MPA              /* 고객가입상품정보                                       */
                               ON MPA.ACCNT_NO = MRR.ACCNT_NO
                              AND MPA.DEL_FG = 'N'
                       INNER JOIN MEMBER MBR                      /* 고객기본정보                                           */
                               ON MBR.MEM_NO = MPA.MEM_NO
                              AND MBR.DEL_FG = 'N'
                       LEFT OUTER JOIN PRODUCT_NO_DATA PND        /* 상품회차별정보                                         */
                               ON MWR.PROD_CD = PND.PROD_CD
                              AND MWR.REQ_PAY_NO = PND.NO
                      WHERE 1=1
                      AND MRR.ACCNT_NO = #{accnt_no}
                      <if test="mem_nm != null and mem_nm != ''">
                          AND MBR.MEM_NM = #{mem_nm}
                      </if>
                      <if test="refund_loc != null and refund_loc != ''">
                          AND MRR.REFUND_LOC = #{refund_loc}
                      </if>
                      <if test="req_stat != null and req_stat != '' and new_refund.equalsIgnoreCase('N')">
                          AND MWR.DEL_FG = #{req_stat}                  /* 청구여부(N:청구전 Y:삭제 R:청구 C:완료(변환/입금) F:완료(실패) X:입금취소) */
                      </if>
                      <!--
                      <if test="del_fg != null and del_fg != ''">
                          AND MRR.DEL_FG = #{del_fg}
                      </if>
                       -->
                      <if test="req_day != null and req_day != ''">
                          AND MRR.REQ_DAY = #{req_day}                  /* 청구일자 */
                      </if>
                      <if test="pay_mthd != null and pay_mthd != ''">
                          AND MRR.PAY_MTHD = #{pay_mthd}                /* 납입방법(04:CMS, 06:Card) */
                      </if>
                      <if test="auth_yn != null and auth_yn != ''">
                          AND MRR.AUTH_YN = #{auth_yn}
                      </if>
                      <if test="new_refund != null and new_refund != '' and new_refund.equalsIgnoreCase('Y')">
                          AND MWR.REQ_DAY >= '20210101'
                          AND NVL(TO_CHAR(MRR.CANCEL_DT,'YYYYMMDD'),'99999999') = '99999999'
                      </if>
                      AND MRR.DEL_FG = 'N'
                   ) MAIN_TBL
             )
             WHERE 1=1
               <if test="cancel_gb != null and cancel_gb != ''">
               AND CANCEL_GB = #{cancel_gb}
               </if>
    </select>

    <select id="ReqCustMap.getMemberRefundAccntNoList" parameterType="map" resultType="resultMap">
        SELECT /* ReqCustMap.getMemberRefundAccntNoList */
               *
          FROM

          ( SELECT ROW_NUMBER() OVER(ORDER BY ${orderBy} ${orderDirection}) PAGE_INDX /* PAGE INDX                 */
                 , MAIN_TBL.*
              FROM
               ( SELECT MRR.ACCNT_NO      /* 회원번호                                                                   */
                       ,MWR.PROD_CD
                       ,(SELECT MAX(PD.PROD_NM) FROM PRODUCT PD WHERE 1=1 AND PD.PROD_CD = MWR.PROD_CD) AS PROD_NM
                       ,MWR.ICHAE_NO AS BID
                       ,MBR.MEM_NO        /* 고유번호                                                                   */
                       ,MBR.MEM_NM        /* 회원명                                                                     */
                       ,MRR.PAY_MTHD      /* 납입방법(04:CMS, 06:Card)                                                  */
                       ,CASE WHEN MRR.CANCEL_DT IS NOT NULL
                                 THEN CASE WHEN MWR.RESULT_KIND = '01' AND TO_CHAR(MRR.CANCEL_DT, 'YYMMDD') > TO_CHAR(TO_DATE(AUTH_DT), 'YYMMDD')
                                           THEN '후취소'
                                           WHEN MWR.RESULT_KIND != '01' AND NVL(MWR.INI_YN,'N') = 'N' AND TO_CHAR(MRR.CANCEL_DT, 'YYMMDD') > SUBSTR(AUTH_DT, 1, 6)
                                           THEN '후취소'
                                           WHEN MWR.RESULT_KIND != '01' AND NVL(MWR.INI_YN,'N') = 'Y' AND TO_CHAR(MRR.CANCEL_DT, 'YYMMDD') > SUBSTR(AUTH_DT, 3, 8)
                                           THEN '후취소'
                                           WHEN MWR.RESULT_KIND = '01' AND TO_CHAR(MRR.CANCEL_DT, 'YYMMDD') = TO_CHAR(TO_DATE(AUTH_DT), 'YYMMDD')
                                           THEN '취소'
                                           WHEN MWR.RESULT_KIND != '01' AND NVL(MWR.INI_YN,'N') = 'N'  AND TO_CHAR(MRR.CANCEL_DT, 'YYMMDD') = SUBSTR(AUTH_DT, 1, 6)
                                           THEN '취소'
                                           WHEN MWR.RESULT_KIND != '01' AND NVL(MWR.INI_YN,'N') = 'Y' AND TO_CHAR(MRR.CANCEL_DT, 'YYMMDD') = SUBSTR(AUTH_DT, 3, 8)
                                           THEN '취소'
                                           ELSE ''
                                       END
                                 ELSE ''
                             END AS CANCEL_GB
                       ,MWR.PAY_BIT       /* PAYBIT                                                                       */
                       ,MRR.REQ_DAY       /* 청구일자                                                                   */
                       ,MWR.PAY_AMT       /* 청구금액                                                                   */
                       ,(CASE WHEN SUBSTR(MWR.PAY_BIT,1,1) != 'X' THEN PND.AMT     ELSE 0 END) AS TRUE_AMT    /* 상조금 */
                       ,(CASE WHEN SUBSTR(MWR.PAY_BIT,2,1) != 'X' THEN PND.REL_AMT ELSE 0 END) AS REL_AMT     /* 결합금 */
                       ,(CASE WHEN SUBSTR(MWR.PAY_BIT,3,1) != 'X' THEN PND.ADD_AMT ELSE 0 END) AS ADD_AMT     /* 추가금 */
                       ,MWR.KSTBIT        /* 회원상태(01:대기, 02:가입, 03:해약, 04:행사, 09:만기)                      */
                       ,MRR.RESULT_KEY    /* 결과키                                                                     */
                       ,MWR.RESULT_KIND   /* 결과유형 (01:파일, 02:실시간, 03:자유,04:기타)                             */
                       ,MRR.REFUND_LOC    /* 환불 경로(01:결과파일환불,02:해약등록,03:청약철회등록,04:행사등록)         */
                       <!--
                       ,MRR.ICHAE_NO      /* 은행이체번호(CMS)                                                          */
                       ,MRR.ICHAE_CD      /* 은행이체코드(CMS)                                                          */
                        -->
                       ,CASE WHEN MWR.PAY_MTHD = '04'
                             THEN CASE WHEN NVL(MRR.ICHAE_NO, 'N') = 'N'
                                       THEN MWR.ICHAE_NO
                                       ELSE MRR.ICHAE_NO
                                   END
                             ELSE ''
                         END AS ICHAE_NO
                       ,CASE WHEN MWR.PAY_MTHD = '04'
                             THEN CASE WHEN NVL(MRR.ICHAE_CD, 'N') = 'N'
                                       THEN MWR.ICHAE_CD
                                       ELSE MRR.ICHAE_CD
                                  END
                             ELSE ''
                         END AS ICHAE_CD
                       ,CASE WHEN MWR.PAY_MTHD = '06' AND NVL(MWR.INI_YN, 'N') != 'Y' THEN LF_DMUSER.FN_COM_NM('0120', MWR.ICHAE_CD)
                             WHEN MWR.PAY_MTHD = '06' AND NVL(MWR.INI_YN, 'N') = 'Y' THEN LF_DMUSER.FN_COM_NM('0196', MWR.ICHAE_CD)
                             ELSE ''
                             END AS CARD_CD
                       ,MRR.DEPR          /* 예금주(CMS)                                                                */
                       ,MRR.REFUND_DT     /* 환불일자                                                                   */
                       ,MRR.REG_DM        /* 등록일자                                                                   */
                       ,MRR.REG_MAN       /* 등록자ID                                                                   */
                       ,MWR.DEL_FG        /* 청구여부(N:청구전 Y:삭제 R:청구 C:완료(변환/입금) F:완료(실패) X:입금취소) */
                       ,MWR.REQ_PAY_NO    /* 산출청구회차                                                               */
                       ,MWR.RESULT_CD     /* 결과코드                                                                   */
                       ,MWR.RESULT_MSG    /* 결과메세지                                                                 */
                       <!-- ,TO_CHAR(MWR.CANCEL_DT, 'YYYYMMDD') AS CANCEL_DT /* 실시간 취소 일자                             */ -->
                       ,TO_CHAR(MRR.CANCEL_DT, 'YYYYMMDDHH24MISS') AS CANCEL_DT                    /* 실시간 취소 일자  */
                       ,MWR.TID           /* 결과키(TID, CMS결과키)                                                     */
                       ,AUTH_DT     /* 승인일자          */
                       ,MWR.AUTH_CD       /* 승인번호                                                                   */
                       ,MRR.REFUND_REASON /* 환불사유(환불사유코드)                                                     */
                       ,MRR.REFUND_ETC    /* 비고                                                                       */
                       ,MRR.AUTH_YN
                       ,MWR.FRANCHISEE_NO
                       ,MWR.INI_YN
                       ,(SELECT DEL_FG FROM TB_MEMBER_REQ_NAUTH_CNCL CNCL WHERE 1=1 AND CNCL.ACCNT_NO = MRR.ACCNT_NO  AND CNCL.REQ_PAY_NO = MRR.REQ_PAY_NO AND CNCL.DEL_FG != 'Y') AS CNCL_DEL_FG
                   FROM TB_MEMBER_REQ_REFUND MRR              /* 고객환불정보                                           */
                   LEFT OUTER JOIN VIEW_MEMBER_WDRW_REQ MWR     /* 고객청구요청정보                                       */
                           ON MRR.ACCNT_NO = MWR.ACCNT_NO
                          AND MRR.PAY_MTHD = MWR.PAY_MTHD
                          AND MRR.REQ_DAY = MWR.REQ_DAY
                          AND MRR.REQ_PAY_NO = MWR.REQ_PAY_NO
                          AND MRR.RESULT_KEY = MWR.RESULT_KEY
                   INNER JOIN MEM_PROD_ACCNT MPA              /* 고객가입상품정보                                       */
                           ON MPA.ACCNT_NO = MRR.ACCNT_NO
                          AND MPA.DEL_FG = 'N'
                   INNER JOIN MEMBER MBR                      /*  고객기본정보                                           */
                           ON MBR.MEM_NO = MPA.MEM_NO
                          AND MBR.DEL_FG = 'N'
                   LEFT OUTER JOIN PRODUCT_NO_DATA PND        /* 상품회차별정보                                         */
                           ON MWR.PROD_CD = PND.PROD_CD
                          AND MWR.REQ_PAY_NO = PND.NO
                  WHERE 1=1
                  AND MRR.ACCNT_NO = #{accnt_no}

                  <if test="mem_nm != null and mem_nm != ''">
                      AND MBR.MEM_NM = #{mem_nm}
                  </if>
                  <if test="refund_loc != null and refund_loc != ''">
                      AND MRR.REFUND_LOC = #{refund_loc}
                  </if>
                  <if test="req_stat != null and req_stat != '' and new_refund.equalsIgnoreCase('N')">
                      AND MWR.DEL_FG = #{req_stat}                  /* 청구여부(N:청구전 Y:삭제 R:청구 C:완료(변환/입금) F:완료(실패) X:입금취소) */
                  </if>
                  <!--
                  <if test="del_fg != null and del_fg != ''">
                      AND MRR.DEL_FG = #{del_fg}
                  </if>
                  -->
                  <if test="req_day != null and req_day != ''">
                      AND MRR.REQ_DAY = #{req_day}
                  </if>
                  <if test="pay_mthd != null and pay_mthd != ''">
                      AND MRR.PAY_MTHD = #{pay_mthd}
                  </if>
                  <if test="auth_yn != null and auth_yn != ''">
                      AND MRR.AUTH_YN = #{auth_yn}
                  </if>
                  <if test="new_refund != null and new_refund != '' and new_refund.equalsIgnoreCase('Y')">
                      AND MWR.REQ_DAY >= '20210101'
                      AND NVL(TO_CHAR(MRR.CANCEL_DT,'YYYYMMDD'),'99999999') = '99999999'
                  </if>
                  AND MRR.DEL_FG = 'N'
               ) MAIN_TBL

            WHERE 1=1
              <if test="cancel_gb != null and cancel_gb != ''">
              AND CANCEL_GB = #{cancel_gb}
              </if>
         )

         WHERE 1=1
    </select>

    <!-- (상세구분별) 산출 조회 -->
    <select id="ReqCustMap.getDlwWdrwOldListByReqbit" parameterType="map" resultType="resultMap">
        SELECT
            PAY_MTHD,
            SUM(INI_N_JUNGI_CNT) AS INI_N_JUNGI_CNT,   /* 정기건 총건수 (청구전) 이니시스카드 */
            SUM(N_JUNGI_CNT) AS N_JUNGI_CNT,           /* 정기건 총건수 (청구전) 유승인 */
            SUM(NA_JUNGI_CNT) AS NA_JUNGI_CNT,         /* 정기건 총건수 (청구전) 무승인 */
            SUM(N_YENCHE_CNT) AS N_YENCHE_CNT,         /* 연체건 총건수 (청구전) */
            SUM(N_IMSI_CNT) AS N_IMSI_CNT,             /* 임시건 총건수 (청구전) */
            SUM(N_IM_CNT) AS N_IM_CNT,                 /* 임의건 총건수 (청구전) */
            SUM(INI_N_YENCHE_CNT) AS INI_N_YENCHE_CNT, /* 연체건 총건수 (청구전) 이니시스카드 */
            SUM(INI_N_IMSI_CNT) AS INI_N_IMSI_CNT,     /* 임시건 총건수 (청구전) 이니시스카드 */
            SUM(INI_N_IM_CNT) AS INI_N_IM_CNT,         /* 임의건 총건수 (청구전) 이니시스카드 */
            SUM(NA_CANCEL_CNT) AS NA_CANCEL_CNT,       /* 취소건 총건수 (청구전) 무승인 */

            SUM(INI_N_JUNGI_AMT) AS INI_N_JUNGI_AMT,   /* 정기건 총액   (청구전) 이니시스카드 */
            SUM(N_JUNGI_AMT) AS N_JUNGI_AMT,           /* 정기건 총액   (청구전) 유승인 */
            SUM(NA_JUNGI_AMT) AS NA_JUNGI_AMT,         /* 정기건 총액   (청구전) 무승인 */
            SUM(N_YENCHE_AMT) AS N_YENCHE_AMT,         /* 연체건 총액   (청구전) */
            SUM(N_IMSI_AMT) AS N_IMSI_AMT,             /* 임시건 총액   (청구전) */
            SUM(N_IM_AMT) AS N_IM_AMT,                 /* 임의건 총액   (청구전) */
            SUM(INI_N_YENCHE_AMT) AS INI_N_YENCHE_AMT, /* 연체건 총액   (청구전) 이니시스카드 */
            SUM(INI_N_IMSI_AMT) AS INI_N_IMSI_AMT,     /* 임시건 총액   (청구전) 이니시스카드 */
            SUM(INI_N_IM_AMT) AS INI_N_IM_AMT,         /* 임의건 총액   (청구전) 이니시스카드 */
            SUM(NA_CANCEL_AMT) AS NA_CANCEL_AMT,       /* 취소건 총액   (청구전) 무승인 */

            SUM(INI_R_JUNGI_CNT) AS INI_R_JUNGI_CNT,   /* 정기건 총건수 (청구완료) 이니시스카드 */
            SUM(R_JUNGI_CNT) AS R_JUNGI_CNT,           /* 정기건 총건수 (청구완료) 유승인 */
            SUM(RA_JUNGI_CNT) AS RA_JUNGI_CNT,         /* 정기건 총건수 (청구완료) 무승인 */
            SUM(R_YENCHE_CNT) AS R_YENCHE_CNT,         /* 연체건 총건수 (청구완료) */
            SUM(R_IMSI_CNT) AS R_IMSI_CNT,             /* 임시건 총건수 (청구완료) */
            SUM(R_IM_CNT) AS R_IM_CNT,                 /* 임의건 총건수 (청구완료) */
            SUM(INI_R_YENCHE_CNT) AS INI_R_YENCHE_CNT, /* 연체건 총건수 (청구완료) 이니시스카드 */
            SUM(INI_R_IMSI_CNT) AS INI_R_IMSI_CNT,     /* 임시건 총건수 (청구완료) 이니시스카드 */
            SUM(INI_R_IM_CNT) AS INI_R_IM_CNT,         /* 임의건 총건수 (청구완료) 이니시스카드 */
            SUM(RA_CANCEL_CNT) AS RA_CANCEL_CNT,       /* 취소건 총건수 (청구완료) 무승인 */

            SUM(INI_R_JUNGI_AMT) AS INI_R_JUNGI_AMT,   /* 정기건 총액   (청구완료) 이니시스카드 */
            SUM(R_JUNGI_AMT) AS R_JUNGI_AMT,           /* 정기건 총액   (청구완료) 유승인 */
            SUM(RA_JUNGI_AMT) AS RA_JUNGI_AMT,         /* 정기건 총액   (청구완료) 무승인 */
            SUM(R_YENCHE_AMT) AS R_YENCHE_AMT,         /* 연체건 총액   (청구완료) */
            SUM(R_IMSI_AMT) AS R_IMSI_AMT,             /* 임시건 총액   (청구완료) */
            SUM(R_IM_AMT) AS R_IM_AMT,                 /* 임의건 총액   (청구완료) */
            SUM(INI_R_YENCHE_AMT) AS INI_R_YENCHE_AMT, /* 연체건 총액   (청구완료) 이니시스카드 */
            SUM(INI_R_IMSI_AMT) AS INI_R_IMSI_AMT,     /* 임시건 총액   (청구완료) 이니시스카드 */
            SUM(INI_R_IM_AMT) AS INI_R_IM_AMT,         /* 임의건 총액   (청구완료) 이니시스카드 */
            SUM(RA_CANCEL_AMT) AS RA_CANCEL_AMT,       /* 취소건 총액   (청구완료) 무승인 */

            SUM(INI_C_JUNGI_CNT) AS INI_C_JUNGI_CNT,   /* 정기건 총건수 (입금완료) 이니시스카드 */
            SUM(C_JUNGI_CNT) AS C_JUNGI_CNT,           /* 정기건 총건수 (입금완료) 유승인 */
            SUM(CA_JUNGI_CNT) AS CA_JUNGI_CNT,         /* 정기건 총건수 (입금완료) 무승인 */
            SUM(C_YENCHE_CNT) AS C_YENCHE_CNT,         /* 연체건 총건수 (입금완료) */
            SUM(C_IMSI_CNT) AS C_IMSI_CNT,             /* 임시건 총건수 (입금완료) */
            SUM(C_IM_CNT) AS C_IM_CNT,                 /* 임의건 총건수 (입금완료) */
            SUM(INI_C_YENCHE_CNT) AS INI_C_YENCHE_CNT, /* 연체건 총건수 (입금완료) 이니시스카드 */
            SUM(INI_C_IMSI_CNT) AS INI_C_IMSI_CNT,     /* 임시건 총건수 (입금완료) 이니시스카드 */
            SUM(INI_C_IM_CNT) AS INI_C_IM_CNT,         /* 임의건 총건수 (입금완료) 이니시스카드 */
            SUM(XA_JUNGI_CNT) AS XA_JUNGI_CNT,         /* 취소건 총건수 (취소완료) 무승인 */

            SUM(INI_C_JUNGI_AMT) AS INI_C_JUNGI_AMT,   /* 정기건 총액   (입금완료) 이니시스카드 */
            SUM(C_JUNGI_AMT) AS C_JUNGI_AMT,           /* 정기건 총액   (입금완료) 유승인 */
            SUM(CA_JUNGI_AMT) AS CA_JUNGI_AMT,         /* 정기건 총액   (입금완료) 무승인 */
            SUM(C_YENCHE_AMT) AS C_YENCHE_AMT,         /* 연체건 총액   (입금완료) */
            SUM(C_IMSI_AMT) AS C_IMSI_AMT,             /* 임시건 총액   (입금완료) */
            SUM(C_IM_AMT) AS C_IM_AMT,                 /* 임의건 총액   (입금완료) */
            SUM(INI_C_YENCHE_AMT) AS INI_C_YENCHE_AMT, /* 연체건 총액   (입금완료) 이니시스카드 */
            SUM(INI_C_IMSI_AMT) AS INI_C_IMSI_AMT,     /* 임시건 총액   (입금완료) 이니시스카드 */
            SUM(INI_C_IM_AMT) AS INI_C_IM_AMT,         /* 임의건 총액   (입금완료) 이니시스카드 */
            SUM(XA_JUNGI_AMT) AS XA_JUNGI_AMT          /* 취소건 총액   (입금완료) 무승인 */
        FROM
        (
            SELECT
                 PAY_MTHD,
                 SUM(CASE WHEN REQ_BIT = '01' AND DEL_FG = 'N' AND AUTH_YN = 'Y' AND INI_YN = 'Y' THEN 1 ELSE 0 END ) AS INI_N_JUNGI_CNT,        /* 정기건 총건수 (청구전) 이니시스카드 */
                SUM(CASE WHEN REQ_BIT = '01' AND DEL_FG = 'N' AND AUTH_YN = 'Y' AND NVL(INI_YN, 'N') != 'Y' THEN 1 ELSE 0 END ) AS N_JUNGI_CNT,           /* 정기건 총건수 (청구전) 유승인 */
                SUM(CASE WHEN REQ_BIT = '01' AND DEL_FG = 'N' AND AUTH_YN = 'N' THEN 1 ELSE 0 END ) AS NA_JUNGI_CNT,                            /* 정기건 총건수 (청구전) 무승인 */
                SUM(CASE WHEN REQ_BIT = '04' AND DEL_FG = 'N' AND NVL(INI_YN, 'N') != 'Y' THEN 1 ELSE 0 END ) AS N_YENCHE_CNT,                            /* 연체건 총건수 (청구전) */
                SUM(CASE WHEN REQ_BIT = '05' AND DEL_FG = 'N' AND NVL(INI_YN, 'N') != 'Y' THEN 1 ELSE 0 END ) AS N_IMSI_CNT,                              /* 임시건 총건수 (청구전) */
                SUM(CASE WHEN REQ_BIT = '03' AND DEL_FG = 'N' AND NVL(INI_YN, 'N') != 'Y' THEN 1 ELSE 0 END ) AS N_IM_CNT,                                /* 임의건 총건수 (청구전) */
                SUM(CASE WHEN REQ_BIT = '04' AND DEL_FG = 'N' AND INI_YN = 'Y' THEN 1 ELSE 0 END ) AS INI_N_YENCHE_CNT,                         /* 연체건 총건수 (청구전) 이니시스카드 */
                SUM(CASE WHEN REQ_BIT = '05' AND DEL_FG = 'N' AND INI_YN = 'Y' THEN 1 ELSE 0 END ) AS INI_N_IMSI_CNT,                           /* 임시건 총건수 (청구전) 이니시스카드 */
                SUM(CASE WHEN REQ_BIT = '03' AND DEL_FG = 'N' AND INI_YN = 'Y' THEN 1 ELSE 0 END ) AS INI_N_IM_CNT,                             /* 임의건 총건수 (청구전) 이니시스카드 */
                0 AS NA_CANCEL_CNT,                                  /* 취소건 총건수 (청구전) 무승인 */

                SUM(CASE WHEN REQ_BIT = '01' AND DEL_FG = 'N' AND AUTH_YN = 'Y' AND INI_YN = 'Y' THEN PAY_AMT ELSE 0 END ) AS INI_N_JUNGI_AMT,  /* 정기건 총액   (청구전) 이니시스카드 */
                SUM(CASE WHEN REQ_BIT = '01' AND DEL_FG = 'N' AND AUTH_YN = 'Y' AND NVL(INI_YN, 'N') != 'Y' THEN PAY_AMT ELSE 0 END ) AS N_JUNGI_AMT,     /* 정기건 총액   (청구전) 유승인 */
                SUM(CASE WHEN REQ_BIT = '01' AND DEL_FG = 'N' AND AUTH_YN = 'N'  THEN PAY_AMT ELSE 0 END ) AS NA_JUNGI_AMT,                     /* 정기건 총액   (청구전) 무승인 */
                SUM(CASE WHEN REQ_BIT = '04' AND DEL_FG = 'N' AND NVL(INI_YN, 'N') != 'Y' THEN PAY_AMT ELSE 0 END ) AS N_YENCHE_AMT,                      /* 연체건 총액   (청구전) */
                SUM(CASE WHEN REQ_BIT = '05' AND DEL_FG = 'N' AND NVL(INI_YN, 'N') != 'Y' THEN PAY_AMT ELSE 0 END ) AS N_IMSI_AMT,                        /* 임시건 총액   (청구전) */
                SUM(CASE WHEN REQ_BIT = '03' AND DEL_FG = 'N' AND NVL(INI_YN, 'N') != 'Y' THEN PAY_AMT ELSE 0 END ) AS N_IM_AMT,                          /* 임의건 총액   (청구전) */
                SUM(CASE WHEN REQ_BIT = '04' AND DEL_FG = 'N' AND INI_YN = 'Y' THEN PAY_AMT ELSE 0 END ) AS INI_N_YENCHE_AMT,                   /* 연체건 총액   (청구전) 이니시스카드 */
                SUM(CASE WHEN REQ_BIT = '05' AND DEL_FG = 'N' AND INI_YN = 'Y' THEN PAY_AMT ELSE 0 END ) AS INI_N_IMSI_AMT,                     /* 임시건 총액   (청구전) 이니시스카드 */
                SUM(CASE WHEN REQ_BIT = '03' AND DEL_FG = 'N' AND INI_YN = 'Y' THEN PAY_AMT ELSE 0 END ) AS INI_N_IM_AMT,                       /* 임의건 총액   (청구전) 이니시스카드 */
                0 AS NA_CANCEL_AMT,                                  /* 취소건 총액   (청구전) 무승인 */

                SUM(CASE WHEN REQ_BIT = '01' AND DEL_FG = 'R' AND AUTH_YN = 'Y' AND INI_YN = 'Y' THEN 1 ELSE 0 END ) AS INI_R_JUNGI_CNT,        /* 정기건 총건수 (청구완료) 이니시스카드 */
                SUM(CASE WHEN REQ_BIT = '01' AND DEL_FG = 'R' AND AUTH_YN = 'Y' AND NVL(INI_YN, 'N') != 'Y' THEN 1 ELSE 0 END ) AS R_JUNGI_CNT,           /* 정기건 총건수 (청구완료) 유승인 */
                SUM(CASE WHEN REQ_BIT = '01' AND DEL_FG = 'R' AND AUTH_YN = 'N' THEN 1 ELSE 0 END ) AS RA_JUNGI_CNT,                            /* 정기건 총건수 (청구완료) 무승인 */
                SUM(CASE WHEN REQ_BIT = '04' AND DEL_FG = 'R' AND NVL(INI_YN, 'N') != 'Y' THEN 1 ELSE 0 END ) AS R_YENCHE_CNT,                            /* 연체건 총건수 (청구완료) */
                SUM(CASE WHEN REQ_BIT = '05' AND DEL_FG = 'R' AND NVL(INI_YN, 'N') != 'Y' THEN 1 ELSE 0 END ) AS R_IMSI_CNT,                              /* 임시건 총건수 (청구완료) */
                SUM(CASE WHEN REQ_BIT = '03' AND DEL_FG = 'R' AND NVL(INI_YN, 'N') != 'Y' THEN 1 ELSE 0 END ) AS R_IM_CNT,                                /* 임의건 총건수 (청구완료) */
                SUM(CASE WHEN REQ_BIT = '04' AND DEL_FG = 'R' AND INI_YN = 'Y' THEN 1 ELSE 0 END ) AS INI_R_YENCHE_CNT,                         /* 연체건 총건수 (청구완료) 이니시스카드 */
                SUM(CASE WHEN REQ_BIT = '05' AND DEL_FG = 'R' AND INI_YN = 'Y' THEN 1 ELSE 0 END ) AS INI_R_IMSI_CNT,                           /* 임시건 총건수 (청구완료) 이니시스카드 */
                SUM(CASE WHEN REQ_BIT = '03' AND DEL_FG = 'R' AND INI_YN = 'Y' THEN 1 ELSE 0 END ) AS INI_R_IM_CNT,                             /* 임의건 총건수 (청구완료) 이니시스카드 */
                0 AS RA_CANCEL_CNT,                                                    /* 취소건 총건수 (청구완료) 무승인 */

                SUM(CASE WHEN REQ_BIT = '01' AND DEL_FG = 'R' AND AUTH_YN = 'Y' AND INI_YN = 'Y' THEN PAY_AMT ELSE 0 END ) AS INI_R_JUNGI_AMT,  /* 정기건 총액   (청구완료) 이니시스카드 */
                SUM(CASE WHEN REQ_BIT = '01' AND DEL_FG = 'R' AND AUTH_YN = 'Y' AND NVL(INI_YN, 'N') != 'Y' THEN PAY_AMT ELSE 0 END ) AS R_JUNGI_AMT,     /* 정기건 총액   (청구완료) 유승인 */
                SUM(CASE WHEN REQ_BIT = '01' AND DEL_FG = 'R' AND AUTH_YN = 'N' THEN PAY_AMT ELSE 0 END ) AS RA_JUNGI_AMT,                      /* 정기건 총액   (청구완료) 무승인 */
                SUM(CASE WHEN REQ_BIT = '04' AND DEL_FG = 'R' AND NVL(INI_YN, 'N') != 'Y' THEN PAY_AMT ELSE 0 END ) AS R_YENCHE_AMT,                      /* 연체건 총액   (청구완료) */
                SUM(CASE WHEN REQ_BIT = '05' AND DEL_FG = 'R' AND NVL(INI_YN, 'N') != 'Y' THEN PAY_AMT ELSE 0 END ) AS R_IMSI_AMT,                        /* 임시건 총액   (청구완료) */
                SUM(CASE WHEN REQ_BIT = '03' AND DEL_FG = 'R' AND NVL(INI_YN, 'N') != 'Y' THEN PAY_AMT ELSE 0 END ) AS R_IM_AMT,                          /* 임의건 총액   (청구완료) */
                SUM(CASE WHEN REQ_BIT = '04' AND DEL_FG = 'R' AND INI_YN = 'Y' THEN PAY_AMT ELSE 0 END ) AS INI_R_YENCHE_AMT,                   /* 연체건 총액   (청구완료) 이니시스카드 */
                SUM(CASE WHEN REQ_BIT = '05' AND DEL_FG = 'R' AND INI_YN = 'Y' THEN PAY_AMT ELSE 0 END ) AS INI_R_IMSI_AMT,                     /* 임시건 총액   (청구완료) 이니시스카드 */
                SUM(CASE WHEN REQ_BIT = '03' AND DEL_FG = 'R' AND INI_YN = 'Y' THEN PAY_AMT ELSE 0 END ) AS INI_R_IM_AMT,                       /* 임의건 총액   (청구완료) 이니시스카드 */
                0 AS RA_CANCEL_AMT,                                                    /* 취소건 총액   (청구완료) 무승인 */

                SUM(CASE WHEN REQ_BIT = '01' AND DEL_FG IN ('C', 'X') AND AUTH_YN = 'Y' AND INI_YN = 'Y' THEN 1 ELSE 0 END ) AS INI_C_JUNGI_CNT, /* 정기건 총건수 (입금완료) 이니시스카드 */
                SUM(CASE WHEN REQ_BIT = '01' AND DEL_FG IN ('C', 'X') AND AUTH_YN = 'Y' AND NVL(INI_YN, 'N') != 'Y' THEN 1 ELSE 0 END ) AS C_JUNGI_CNT,    /* 정기건 총건수 (입금완료) 유승인 */
                SUM(CASE WHEN REQ_BIT = '01' AND DEL_FG IN ('C') AND AUTH_YN = 'N' THEN 1 ELSE 0 END ) AS CA_JUNGI_CNT,                          /* 정기건 총건수 (입금완료) 무승인 */
                SUM(CASE WHEN REQ_BIT = '04' AND DEL_FG IN ('C', 'X') AND NVL(INI_YN, 'N') != 'Y'  THEN 1 ELSE 0 END ) AS C_YENCHE_CNT,                    /* 연체건 총건수 (입금완료) */
                SUM(CASE WHEN REQ_BIT = '05' AND DEL_FG IN ('C', 'X') AND NVL(INI_YN, 'N') != 'Y' THEN 1 ELSE 0 END ) AS C_IMSI_CNT,                       /* 임시건 총건수 (입금완료) */
                SUM(CASE WHEN REQ_BIT = '03' AND DEL_FG IN ('C', 'X') AND NVL(INI_YN, 'N') != 'Y' THEN 1 ELSE 0 END ) AS C_IM_CNT,                         /* 임의건 총건수 (입금완료) */
                SUM(CASE WHEN REQ_BIT = '04' AND DEL_FG IN ('C', 'X') AND INI_YN = 'Y'  THEN 1 ELSE 0 END ) AS INI_C_YENCHE_CNT,                 /* 연체건 총건수 (입금완료) 이니시스카드 */
                SUM(CASE WHEN REQ_BIT = '05' AND DEL_FG IN ('C', 'X') AND INI_YN = 'Y' THEN 1 ELSE 0 END ) AS INI_C_IMSI_CNT,                    /* 임시건 총건수 (입금완료) 이니시스카드 */
                SUM(CASE WHEN REQ_BIT = '03' AND DEL_FG IN ('C', 'X') AND INI_YN = 'Y' THEN 1 ELSE 0 END ) AS INI_C_IM_CNT,                      /* 임의건 총건수 (입금완료) 이니시스카드 */
                0 AS XA_JUNGI_CNT,                         /* 취소건 총건수 (취소완료) 무승인 */

                SUM(CASE WHEN REQ_BIT = '01' AND DEL_FG IN ('C', 'X') AND AUTH_YN = 'Y' AND INI_YN = 'Y' THEN PAY_AMT ELSE 0 END ) AS INI_C_JUNGI_AMT, /* 정기건 총액   (입금완료) 이니시스카드 */
                SUM(CASE WHEN REQ_BIT = '01' AND DEL_FG IN ('C', 'X') AND AUTH_YN = 'Y' AND NVL(INI_YN, 'N') != 'Y' THEN PAY_AMT ELSE 0 END ) AS C_JUNGI_AMT,    /* 정기건 총액   (입금완료) 유승인 */
                SUM(CASE WHEN REQ_BIT = '01' AND DEL_FG IN ('C') AND AUTH_YN = 'N'  THEN PAY_AMT ELSE 0 END ) AS CA_JUNGI_AMT,                         /* 정기건 총액   (입금완료) 무승인 */
                SUM(CASE WHEN REQ_BIT = '04' AND DEL_FG IN ('C', 'X') AND NVL(INI_YN, 'N') != 'Y' THEN PAY_AMT ELSE 0 END ) AS C_YENCHE_AMT,                     /* 연체건 총액   (입금완료) */
                SUM(CASE WHEN REQ_BIT = '05' AND DEL_FG IN ('C', 'X') AND NVL(INI_YN, 'N') != 'Y' THEN PAY_AMT ELSE 0 END ) AS C_IMSI_AMT,                       /* 임시건 총액   (입금완료) */
                SUM(CASE WHEN REQ_BIT = '03' AND DEL_FG IN ('C', 'X') AND NVL(INI_YN, 'N') != 'Y' THEN PAY_AMT ELSE 0 END ) AS C_IM_AMT,                         /* 임의건 총액   (입금완료) */
                SUM(CASE WHEN REQ_BIT = '04' AND DEL_FG IN ('C', 'X') AND INI_YN = 'Y' THEN PAY_AMT ELSE 0 END ) AS INI_C_YENCHE_AMT,                  /* 연체건 총액   (입금완료) 이니시스카드 */
                SUM(CASE WHEN REQ_BIT = '05' AND DEL_FG IN ('C', 'X') AND INI_YN = 'Y' THEN PAY_AMT ELSE 0 END ) AS INI_C_IMSI_AMT,                    /* 임시건 총액   (입금완료) 이니시스카드 */
                SUM(CASE WHEN REQ_BIT = '03' AND DEL_FG IN ('C', 'X') AND INI_YN = 'Y' THEN PAY_AMT ELSE 0 END ) AS INI_C_IM_AMT,                      /* 임의건 총액   (입금완료) 이니시스카드 */
                0 AS XA_JUNGI_AMT                    /* 취소건 총액   (입금완료) 무승인 */
            FROM TB_MEMBER_WDRW_REQ_2021_DAMO
            WHERE 1=1
            AND DEL_FG IN ('N','R','C','X')
            AND RESULT_KIND = '01'
            AND REQ_DAY = #{wdrw_dt}
            GROUP BY PAY_MTHD

            UNION ALL

            SELECT PAY_MTHD,
                0 AS INI_N_JUNGI_CNT,                                                         /* 정기건 총건수 (청구전) 이니시스카드 */
                0 AS N_JUNGI_CNT,                                                             /* 정기건 총건수 (청구전) 유승인 */
                0 AS NA_JUNGI_CNT,                                                            /* 정기건 총건수 (청구전) 무승인 */
                0 AS N_YENCHE_CNT,                                                            /* 연체건 총건수 (청구전) */
                0 AS N_IMSI_CNT,                                                              /* 임시건 총건수 (청구전) */
                0 AS N_IM_CNT,                                                                /* 임의건 총건수 (청구전) */
                0 AS INI_N_YENCHE_CNT,                                                        /* 연체건 총건수 (청구전) 이니시스카드 */
                0 AS INI_N_IMSI_CNT,                                                          /* 임시건 총건수 (청구전) 이니시스카드 */
                0 AS INI_N_IM_CNT,                                                            /* 임의건 총건수 (청구전) 이니시스카드 */
                SUM(CASE WHEN DEL_FG = 'N' THEN 1 ELSE 0 END ) AS NA_CANCEL_CNT,              /* 취소건 총건수 (청구전) 무승인 */

                0 AS INI_N_JUNGI_AMT,                                                         /* 정기건 총액   (청구전) 이니시스카드 */
                0 AS N_JUNGI_AMT,                                                             /* 정기건 총액   (청구전) 유승인 */
                0 AS NA_JUNGI_AMT,                                                            /* 정기건 총액   (청구전) 무승인 */
                0 AS N_YENCHE_AMT,                                                            /* 연체건 총액   (청구전) */
                0 AS N_IMSI_AMT,                                                              /* 임시건 총액   (청구전) */
                0 AS N_IM_AMT,                                                                /* 임의건 총액   (청구전) */
                0 AS INI_N_YENCHE_AMT,                                                        /* 연체건 총액   (청구전) 이니시스카드 */
                0 AS INI_N_IMSI_AMT,                                                          /* 임시건 총액   (청구전) 이니시스카드 */
                0 AS INI_N_IM_AMT,                                                            /* 임의건 총액   (청구전) 이니시스카드 */
                SUM(CASE WHEN DEL_FG = 'N' THEN PAY_AMT ELSE 0 END) AS NA_CANCEL_AMT,         /* 취소건 총액   (청구전) 무승인 */

                0 AS INI_R_JUNGI_CNT,                                                         /* 정기건 총건수 (청구완료) 이니시스카드 */
                0 AS R_JUNGI_CNT,                                                             /* 정기건 총건수 (청구완료) 유승인 */
                0 AS RA_JUNGI_CNT,                                                            /* 정기건 총건수 (청구완료) 무승인 */
                0 AS R_YENCHE_CNT,                                                            /* 연체건 총건수 (청구완료) */
                0 AS R_IMSI_CNT,                                                              /* 임시건 총건수 (청구완료) */
                0 AS R_IM_CNT,                                                                /* 임의건 총건수 (청구완료) */
                0 AS INI_R_YENCHE_CNT,                                                        /* 연체건 총건수 (청구완료) 이니시스카드 */
                0 AS INI_R_IMSI_CNT,                                                          /* 임시건 총건수 (청구완료) 이니시스카드 */
                0 AS INI_R_IM_CNT,                                                            /* 임의건 총건수 (청구완료) 이니시스카드 */
                SUM(CASE WHEN DEL_FG = 'R' THEN 1 ELSE 0 END ) AS RA_CANCEL_CNT,              /* 취소건 총건수 (청구완료) 무승인 */

                0 AS INI_R_JUNGI_AMT,                                                         /* 정기건 총액   (청구완료) 이니시스카드 */
                0 AS R_JUNGI_AMT,                                                             /* 정기건 총액   (청구완료) 유승인 */
                0 AS RA_JUNGI_AMT,                                                            /* 정기건 총액   (청구완료) 무승인 */
                0 AS R_YENCHE_AMT,                                                            /* 연체건 총액   (청구완료) */
                0 AS R_IMSI_AMT,                                                              /* 임시건 총액   (청구완료) */
                0 AS R_IM_AMT,                                                                /* 임의건 총액   (청구완료) */
                0 AS INI_R_YENCHE_AMT,                                                        /* 연체건 총액   (청구완료) 이니시스카드 */
                0 AS INI_R_IMSI_AMT,                                                          /* 임시건 총액   (청구완료) 이니시스카드 */
                0 AS INI_R_IM_AMT,                                                            /* 임의건 총액   (청구완료) 이니시스카드 */
                SUM(CASE WHEN DEL_FG = 'R' THEN PAY_AMT ELSE 0 END)AS RA_CANCEL_AMT,          /* 취소건 총액   (청구완료) 무승인 */

                0 AS INI_C_JUNGI_CNT,                                                         /* 정기건 총건수 (입금완료) 이니시스카드 */
                0 AS C_JUNGI_CNT,                                                             /* 정기건 총건수 (입금완료) 유승인 */
                0 AS CA_JUNGI_CNT,                                                            /* 정기건 총건수 (입금완료) 무승인 */
                0 AS C_YENCHE_CNT,                                                            /* 연체건 총건수 (입금완료) */
                0 AS C_IMSI_CNT,                                                              /* 임시건 총건수 (입금완료) */
                0 AS C_IM_CNT,                                                                /* 임의건 총건수 (입금완료) */
                0 AS INI_C_YENCHE_CNT,                                                        /* 연체건 총건수 (입금완료) 이니시스카드 */
                0 AS INI_C_IMSI_CNT,                                                          /* 임시건 총건수 (입금완료) 이니시스카드 */
                0 AS INI_C_IM_CNT,                                                            /* 임의건 총건수 (입금완료) 이니시스카드 */
                SUM(CASE WHEN DEL_FG IN ('C','X') THEN 1 ELSE 0 END ) AS XA_JUNGI_CNT,        /* 취소건 총건수 (취소완료) 무승인 */

                0 AS INI_C_JUNGI_AMT,                                                         /* 정기건 총액   (입금완료) 이니시스카드 */
                0 AS C_JUNGI_AMT,                                                             /* 정기건 총액   (입금완료) 유승인 */
                0 AS CA_JUNGI_AMT,                                                            /* 정기건 총액   (입금완료) 무승인 */
                0 AS C_YENCHE_AMT,                                                            /* 연체건 총액   (입금완료) */
                0 AS C_IMSI_AMT,                                                              /* 임시건 총액   (입금완료) */
                0 AS C_IM_AMT,                                                                /* 임의건 총액   (입금완료) */
                0 AS INI_C_YENCHE_AMT,                                                        /* 연체건 총액   (입금완료) 이니시스카드 */
                0 AS INI_C_IMSI_AMT,                                                          /* 임시건 총액   (입금완료) 이니시스카드 */
                0 AS INI_C_IM_AMT,                                                            /* 임의건 총액   (입금완료) 이니시스카드 */
                SUM(CASE WHEN DEL_FG IN ('C','X') THEN PAY_AMT ELSE 0 END ) AS XA_JUNGI_AMT   /* 취소건 총액   (입금완료) 무승인 */
            FROM LF_DMUSER.TB_MEMBER_REQ_NAUTH_CNCL
            WHERE 1=1
            AND DEL_FG IN ('N','R','C','X')
            AND REQ_DAY = #{wdrw_dt}
            GROUP BY PAY_MTHD
        )
        GROUP BY PAY_MTHD
    </select>

    <!-- 결과 데이터 건수조회 -->
    <select id="ReqCustMap.getReqResultOldCount" parameterType="map" resultType="resultMap">

        SELECT
            /* ReqCustMap.getReqResultOldCount */
               TBL.*
             , CARD_SUC_CNT + CARD_FAIL_CNT AS SUM_CARD_CNT /* Card 유승인 총건수 */
             , CARD_NAUTH_SUC_CNT + CARD_NAUTH_FAIL_CNT AS SUM_NAUTH_CARD_CNT /* Card 무승인 총건수 */
             , CMS_SUC_CNT + CMS_FAIL_CNT AS SUM_CMS_CNT    /* CMS  총건수 */
             , CARD_INI_SUC_CNT + CARD_INI_FAIL_CNT AS SUM_INI_CARD_CNT /* 이니시스카드 총건수 */
          FROM (
                 SELECT REQ_DAY
                      , SUM(CASE WHEN PAY_MTHD = '06' AND AUTH_YN = 'Y' AND NVL(INI_YN, 'N') != 'Y' AND RESULT_CD = '3001' THEN 1 ELSE 0 END) AS CARD_SUC_CNT                                                /* Card 유승인 성공건수 */
                      , SUM(CASE WHEN PAY_MTHD = '06' AND AUTH_YN = 'Y' AND NVL(INI_YN, 'N') != 'Y' AND ( RESULT_CD <![CDATA[<>]]> '3001' OR NVL(RESULT_CD, 'N') = 'N' ) THEN 1 ELSE 0 END) AS CARD_FAIL_CNT /* Card 유승인 실패건수 */
                      , SUM(CASE WHEN PAY_MTHD = '06' AND AUTH_YN = 'N' AND RESULT_CD = '00' THEN 1 ELSE 0 END) AS CARD_NAUTH_SUC_CNT                                                /* Card 무승인 성공건수 */
                      , SUM(CASE WHEN PAY_MTHD = '06' AND AUTH_YN = 'N' AND ( RESULT_CD <![CDATA[<>]]> '00' OR NVL(RESULT_CD, 'N') = 'N' ) THEN 1 ELSE 0 END) AS CARD_NAUTH_FAIL_CNT /* Card 무승인 실패건수 */
                      , SUM(CASE WHEN PAY_MTHD = '06' AND AUTH_YN = 'Y' AND INI_YN = 'Y' AND RESULT_CD = '00' THEN 1 ELSE 0 END) AS CARD_INI_SUC_CNT                                                /* 이니시스 Card 유승인 성공건수 */
                      , SUM(CASE WHEN PAY_MTHD = '06' AND AUTH_YN = 'Y' AND INI_YN = 'Y' AND ( RESULT_CD <![CDATA[<>]]> '00' OR NVL(RESULT_CD, 'N') = 'N' ) THEN 1 ELSE 0 END) AS CARD_INI_FAIL_CNT /* 이니시스 Card 유승인 실패건수 */
                      <!-- , ( SELECT COUNT(*) FROM TB_MEMBER_WDRW_REQ WHERE REQ_DAY = #{wdrw_dt} AND PAY_MTHD = '04' AND DEL_FG IN ('R','C','F') ) -->
                      <!-- - SUM(CASE WHEN PAY_MTHD = '04' AND ( RESULT_CD <![CDATA[<>]]> '3001' OR NVL(RESULT_CD, 'N') = 'N' ) THEN 1 ELSE 0 END) AS CMS_SUC_CNT   /* CMS 성공건수 = 청구건수 - 실패건수 */ -->
                      <!-- CMS 불능 데이터가 존재하면  성공/실패건수 조회 -->
                      , CASE WHEN SUM(CASE WHEN PAY_MTHD = '04' THEN 1 ELSE 0 END) > 0
                             THEN ( SELECT COUNT(*)
                                      FROM TB_MEMBER_WDRW_REQ
                                     WHERE REQ_DAY = #{wdrw_dt}
                                       AND PAY_MTHD = '04'
                                       <!-- AND DEL_FG IN ('R','C','F') -->
                                       AND DEL_FG IN ('R','C','F','X')
                                  )
                                 - SUM(CASE WHEN PAY_MTHD = '04' AND RESULT_CD IS NOT NULL THEN 1 ELSE 0 END)
                            ELSE 0
                        END AS CMS_SUC_CNT   /* CMS 성공건수 = 청구건수 - 실패건수 */
                      , SUM(CASE WHEN PAY_MTHD = '04' AND RESULT_CD IS NOT NULL THEN 1 ELSE 0 END) AS CMS_FAIL_CNT     /* CMS 실패건수 */
                   FROM TB_MEMBER_WDRW_RESULT_2021
                  WHERE 1=1
                    AND REQ_DAY = #{wdrw_dt}
                    AND PAY_KIND = '01'  /* 파일 */
                  GROUP BY REQ_DAY
               ) TBL

    </select>

    <select id="ReqCustMap.getExtReqCheck" parameterType="map" resultType="resultMap">
        SELECT /* ReqCustMap.getExtReqCheck */
            CASE WHEN EXT_CHK = 'H' THEN 'H' ELSE 'N'END  AS CHK_HOL,
            CASE WHEN NVL(EXT_WRITE_CMS,'N') != 'N' THEN 'Y' ELSE 'N' END AS CHK_CMS ,
            CASE WHEN NVL(EXT_WRITE_CARD,'N') != 'N' THEN 'Y' ELSE 'N' END AS CHK_CARD,
            CASE WHEN NVL(EXT_WRITE_CARD_NAUTH, 'N') != 'N' THEN 'Y' ELSE 'N' END AS CHK_CARD_NAUTH,
            CASE WHEN NVL(EXT_WRITE_INI_CARD, 'N') != 'N' THEN 'Y' ELSE 'N' END AS CHK_INI_CARD,
            EXT_REQ_CHECK_YN
        FROM LF_DMUSER.TB_MEMBER_EXT_CHECK
        WHERE EXT_DT  = #{ext_dt}
    </select>

    <!-- 특수회원 카운트조회 -->
    <select id="ReqCustMap.getCustExceptionCount" parameterType="map" resultType="int">

        SELECT /* ReqCustMap.getCustExceptionCount */
               COUNT(*)
          FROM LF_DMUSER.TB_BANKRUPTCY_MNG TBM INNER JOIN
          MEM_PROD_ACCNT MPA ON TBM.ACCNT_NO = MPA.ACCNT_NO AND MPA.DEL_FG = 'N' INNER JOIN
          MEMBER MB ON MPA.MEM_NO = MB.MEM_NO AND MB.DEL_FG = 'N' INNER JOIN
          PRODUCT PD ON MPA.PROD_CD = PD.PROD_CD
        WHERE 1=1
        <if test="accnt_no != null and accnt_no != ''">
        AND TBM.ACCNT_NO = #{accnt_no}
        </if>
        <if test="mem_nm != null and mem_nm != ''">
               AND TBM.MEM_NM LIKE '%' || #{mem_nm} || '%'
        </if>
        <if test="bankr_gbn != null and bankr_gbn != ''">
        AND TBM.BANKR_GBN = #{bankr_gbn}
        </if>
        <if test="del_fg != null and del_fg != ''">
        AND TBM.DEL_FG = #{del_fg}
        </if>

        <if test="date_type == '01'">
             <if test="stt_dt != null and stt_dt != '' and end_dt != null and end_dt != ''">
                 AND  TBM.RECORD_DT <![CDATA[>=]]> #{stt_dt}
                 AND  TBM.RECORD_DT <![CDATA[<=]]> #{end_dt}
             </if>
         </if>

        <if test="date_type == '02'">
             <if test="stt_dt != null and stt_dt != '' and end_dt != null and end_dt != ''">
                 AND  TBM.CLOSE_DT <![CDATA[>=]]> #{stt_dt}
                 AND  TBM.CLOSE_DT <![CDATA[<=]]> #{end_dt}
             </if>
         </if>

    </select>

    <!-- 특수회원 조회 -->
    <select id="ReqCustMap.getCustExceptionList" parameterType="map" resultType="resultMap">

        SELECT /* ReqCustMap.getCustExceptionList */
               Z.*
          FROM (SELECT X.*,
                    <choose>
                        <when test="orderBy != null and orderBy != ''">
                            ROW_NUMBER() OVER(ORDER BY ${orderBy} ${orderDirection}) PAGE_INDX
                        </when>
                    </choose>
                  FROM ( SELECT
                                  SEQ,
                                ACCNT_NO,
                                KSTBIT,
                                MEM_NM,
                                PROD_CD,
                                PROD_NM,
                                PAY_TOT_AMT,
                                REL_TOT_AMT,
                                ADD_TOT_AMT,
                                NVL((SELECT SUM(AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = TBL.PROD_CD AND NO <![CDATA[<=]]> TRUE_CNT),0) AS TRUE_AMT,
                                NVL((SELECT SUM(REL_AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = TBL.PROD_CD AND NO <![CDATA[<=]]> REL_CNT),0) AS REL_AMT,
                                NVL((SELECT SUM(ADD_AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = TBL.PROD_CD AND NO <![CDATA[<=]]> ADD_CNT),0) AS ADD_AMT,
                                BANKR_GBN,
                                CASE WHEN BANKR_GBN = 'B' THEN '파산'
                                     WHEN BANKR_GBN = 'R' THEN '회생'
                                     ELSE BANKR_GBN END AS BANKR_GBN_NM,
                                JURISDICTION,
                                CASE_NO_1,
                                CASE_NO_2,
                                RECORD_DT,
                                CASE_CONTENT,
                                CASE_NO_3,
                                CASE_NO_4,
                                CLOSE_DT,
                                RESN_PROC_YN,
                                REPAY_AMT,
                                (
                                    NVL((SELECT SUM(REL_AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = TBL.PROD_CD AND NO  <![CDATA[<=]]>  REL_CNT),0) +
                                    NVL((SELECT SUM(ADD_AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = TBL.PROD_CD AND NO  <![CDATA[<=]]>  ADD_CNT),0) +
                                    NVL((SELECT SUM(AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = TBL.PROD_CD AND NO  <![CDATA[<=]]>  TRUE_CNT),0) +
                                    REPAY_AMT
                                ) - (REL_TOT_AMT + ADD_TOT_AMT) AS DIFF_AMT,
                                REG_DM,
                                REG_MAN
                            FROM
                            (
                                SELECT
                                    TBM.SEQ,
                                    TBM.ACCNT_NO,
                                    CASE WHEN MPA.KSTBIT = '01' THEN '대기'
                                         WHEN MPA.KSTBIT = '02' THEN '가입'
                                         WHEN MPA.KSTBIT = '03' THEN '해약'
                                         WHEN MPA.KSTBIT = '04' THEN '행사'
                                         WHEN MPA.KSTBIT = '09' THEN '만기' ELSE MPA.KSTBIT END KSTBIT,
                                    TBM.BANKR_GBN,
                                    TBM.JURISDICTION,
                                    TBM.CASE_NO_1,
                                    TBM.CASE_NO_2,
                                    TBM.RECORD_DT,
                                    TBM.CLOSE_DT,
                                    TBM.CASE_CONTENT,
                                    TBM.CASE_NO_3,
                                    TBM.CASE_NO_4,
                                    TBM.MEM_NM,
                                    MPA.PROD_CD,
                                    PD.PROD_NM,
                                    NVL(RS.RESN_PROC_YN,'N') AS RESN_PROC_YN,
                                    (SELECT SUM(AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = MPA.PROD_CD) AS PAY_TOT_AMT,
                                    (SELECT SUM(REL_AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = MPA.PROD_CD) AS REL_TOT_AMT,
                                    (SELECT SUM(ADD_AMT) FROM PRODUCT_NO_DATA WHERE PROD_CD = MPA.PROD_CD) AS ADD_TOT_AMT,
                                    CASE WHEN KSTBIT = '03' AND NVL(RS.RESN_PROC_YN,'N') = 'Y' THEN 0
                                    ELSE (SELECT COUNT(*) FROM PAY_MNG WHERE ACCNT_NO = MPA.ACCNT_NO AND DEL_FG = 'N')
                                    END AS TRUE_CNT,
                                    (SELECT COUNT(*) FROM PAY_MNG_DTL WHERE ACCNT_NO = MPA.ACCNT_NO AND DEL_FG = 'N') AS REL_CNT,
                                    (SELECT COUNT(*) FROM PAY_MNG_DTL1 WHERE ACCNT_NO = MPA.ACCNT_NO AND DEL_FG = 'N') AS ADD_CNT,
                                    NVL((
                                        SELECT
                                            SUM(NVL(AMT * (END_NO - STT_NO + 1),0))
                                        FROM LF_DMUSER.TB_BANKRUPTCY_SETUP
                                        WHERE MST_SEQ = TBM.SEQ
                                    ),0) AS REPAY_AMT,
                                    TO_CHAR(TBM.REG_DM, 'YYYYMMDD') AS REG_DM,
                                    (SELECT USER_NM FROM PS_WILLVI.TB_USER WHERE USER_ID = TBM.REG_MAN) AS REG_MAN
                                FROM LF_DMUSER.TB_BANKRUPTCY_MNG TBM INNER JOIN
                                    MEM_PROD_ACCNT MPA ON TBM.ACCNT_NO = MPA.ACCNT_NO AND MPA.DEL_FG = 'N' INNER JOIN
                                    MEMBER MB ON MPA.MEM_NO = MB.MEM_NO AND MB.DEL_FG = 'N' INNER JOIN
                                    PRODUCT PD ON MPA.PROD_CD = PD.PROD_CD LEFT OUTER JOIN
                                    RESCISSION RS ON MPA.ACCNT_NO = RS.ACCNT_NO AND RS.DEL_FG = 'N'
                                WHERE 1=1
                                <if test="accnt_no != null and accnt_no != ''">
                                AND TBM.ACCNT_NO = #{accnt_no}
                                </if>
                                <if test="mem_nm != null and mem_nm != ''">
                                AND TBM.MEM_NM LIKE '%' || #{mem_nm} || '%'
                                </if>
                                <if test="bankr_gbn != null and bankr_gbn != ''">
                                AND TBM.BANKR_GBN = #{bankr_gbn}
                                </if>
                                <if test="del_fg != null and del_fg != ''">
                                AND TBM.DEL_FG = #{del_fg}
                                </if>
                                <if test="date_type == '01'">
                                     <if test="stt_dt != null and stt_dt != '' and end_dt != null and end_dt != ''">
                                         AND  TBM.RECORD_DT <![CDATA[>=]]> #{stt_dt}
                                         AND  TBM.RECORD_DT <![CDATA[<=]]> #{end_dt}
                                     </if>
                                 </if>

                                <if test="date_type == '02'">
                                     <if test="stt_dt != null and stt_dt != '' and end_dt != null and end_dt != ''">
                                         AND  TBM.CLOSE_DT <![CDATA[>=]]> #{stt_dt}
                                         AND  TBM.CLOSE_DT <![CDATA[<=]]> #{end_dt}
                                     </if>
                                 </if>
                            ) TBL
                       ) X
               ) Z

        <if test="startLine != null and startLine != '' and endLine != null and endLine != ''">
            <![CDATA[
            WHERE PAGE_INDX >= #{startLine}
              AND PAGE_INDX < #{endLine}
            ]]>
        </if>

    </select>

    <!-- 특수회원 입력체크 -->
    <select id="ReqCustMap.getChkCustExceptionList" parameterType="map" resultType="int">

        SELECT /* ReqCustMap.getChkCustExceptionList */
               COUNT(*)
          FROM TB_BANKRUPTCY_MNG
         WHERE 1=1
           AND ACCNT_NO = #{accnt_no}
           AND DEL_FG = 'N'

    </select>

    <!-- 특수회원 입력 -->
    <insert id="ReqCustMap.insertCustException" parameterType="map">

        INSERT INTO TB_BANKRUPTCY_MNG
          (SEQ, ACCNT_NO, BANKR_GBN, JURISDICTION, CASE_NO_1, CASE_NO_2, RECORD_DT, CASE_CONTENT, CASE_NO_3, CASE_NO_4, DEL_FG, MEM_NM,CLOSE_DT,REG_MAN,REG_DM)
        VALUES
          (
                  (SELECT COUNT(*) + 1 FROM  TB_BANKRUPTCY_MNG),
                  #{accnt_no},
                  #{bankr_gbn},
                  #{jurisdiction},
                  #{case_no_1},
                  #{case_no_2},
                  #{record_dt},
                  #{case_content},
                  #{case_no_3},
                  #{case_no_4},
                  'N',
                  #{mem_nm},
                  #{close_dt},
                  #{rgsr_id},
                  SYSDATE
              )

    </insert>

    <!-- 특수회원 수정 -->
    <update id="ReqCustMap.updateCustException" parameterType="map">

        UPDATE TB_BANKRUPTCY_MNG
           SET BANKR_GBN = #{bankr_gbn}
             , JURISDICTION = #{jurisdiction}
             , CASE_NO_1 = #{case_no_1}
             , CASE_NO_2 = #{case_no_2}
             , RECORD_DT = #{record_dt}
             , CASE_CONTENT = #{case_content}
             , CASE_NO_3 = #{case_no_3}
             , CASE_NO_4 = #{case_no_4}
             , MEM_NM = #{mem_nm}
             , CLOSE_DT = #{close_dt}
         WHERE 1=1
           AND SEQ = ${seq}
           AND DEL_FG = 'N'
    </update>


    <!-- 특수회원 삭제 -->
    <update id="ReqCustMap.deleteCustException" parameterType="map">

        UPDATE TB_BANKRUPTCY_MNG
           SET DEL_FG = 'Y'
         WHERE 1=1
           AND SEQ = ${seq}
           AND DEL_FG = 'N'

    </update>

    <!-- 회생 변제 관리 조회 -->
    <select id="ReqCustMap.getBankRupSetup" parameterType="map" resultType="resultMap">

        SELECT
            SEQ,
            MST_SEQ,
            STT_NO,
            END_NO,
            AMT,
            DEL_FG
        FROM LF_DMUSER.TB_BANKRUPTCY_SETUP
        WHERE 1=1
              AND MST_SEQ = ${mst_seq}
              AND DEL_FG = 'N'
        ORDER BY SEQ ASC

    </select>

    <!-- 회생 변제 등록 -->
    <insert id="ReqCustMap.insertBankRup" parameterType="map">
        /* ReqCustMap.insertBankRup  */
        INSERT INTO TB_BANKRUPTCY_SETUP
            (SEQ, MST_SEQ, STT_NO, END_NO, AMT, DEL_FG, REG_MAN, REG_DM)
        VALUES
        (
             (SELECT COUNT(*) + 1 FROM  TB_BANKRUPTCY_SETUP),
             #{mst_seq},
             #{stt_no},
             #{end_no},
             #{amt},
             'N',
             #{reg_man},
             SYSDATE
      )

    </insert>

     <!-- 회생 변제 수정 -->
    <update id="ReqCustMap.updateBankRup" parameterType="map">

        /* ReqCustMap.updateBankRup */
        UPDATE TB_BANKRUPTCY_SETUP
           SET  STT_NO=#{stt_no}, END_NO=#{end_no}, AMT=#{amt}, REG_MAN=#{reg_man}, REG_DM=SYSDATE
        WHERE 1=1
           AND SEQ = ${seq}
           AND DEL_FG = 'N'

    </update>

    <!-- 특수회원 삭제 -->
    <update id="ReqCustMap.deleteBankRup" parameterType="map">
        /* ReqCustMap.deleteBankRup */
        UPDATE TB_BANKRUPTCY_SETUP
           SET DEL_FG = 'Y',REG_MAN=#{reg_man}, REG_DM=SYSDATE
         WHERE 1=1
           AND SEQ = ${seq}
           AND DEL_FG = 'N'

    </update>


    <!-- ================================================================
     * 날짜 : 20220822
     * 이름 : 김주용
     * 추가내용 : 카드 결과데이터 INSERT (** 자유결제)(복사)
     * ================================================================
     * -->
    <insert id="ReqCustMap.insertNewTypeFreeCardResult"  parameterType="map">
        BEGIN
            <!-- 청구관리 테이블 등록 -->
            INSERT INTO TB_MEMBER_WDRW_REQ	(
                ACCNT_NO,
                MEM_NO,
                PROD_CD,
                PAY_MTHD,
                REQ_BIT,
                STAT,
                KSTBIT,
                REQ_PAY_NO,
                ICHAE_NO,
                ICHAE_CD,
                REQ_DAY,
                PAY_AMT,
                REG_DM,
                REG_MAN,
                DEL_FG,
                RESULT_KEY,
                RESULT_KIND,
                INI_YN
            ) VALUES (
                   #{accnt_no},
                   #{mem_no},
                   #{prod_cd},
                '06',
                '03',
                #{stat},
                #{kstbit},
                999,
                SUBSTR(#{card_no},0,4) || '-****-****[' || #{exp_year} || #{exp_mon} ,
                #{card_cd},
                TO_CHAR(SYSDATE,'YYYYMMDD'),
                #{pay_amt},
                SYSDATE,
                #{emple_no},
                #{del_fg},
                #{result_key},
                #{pay_kind},
                'Y'
            );

            <!-- 결제 결과 테이블 등록 -->
              INSERT
                /* ReqCustMap.insertNewTypeFreeCardResult */
              INTO TB_MEMBER_WDRW_RESULT
                 (
                   ACCNT_NO,
                   REQ_DAY,
                   REQ_NO,
                   PAY_KIND,
                   RESULT_KEY,
                   RESULT_CD,
                   RESULT_MSG,
                   PAY_MTHD,
                   AUTH_DT,
                   AUTH_CD,
                   ICHAE_CD,
                   ICHAE_NO,
                   ETC,
                   REG_DM,
                   REG_MAN,
                   TID
                 )
            VALUES
                 (
                   #{accnt_no},
                   TO_CHAR(SYSDATE,'YYYYMMDD'),
                   #{pay_no},
                   #{pay_kind},
                   #{result_key},
                   #{result_cd},
                   #{result_msg},
                   #{pay_mthd},
                   #{auth_dt},
                   #{auth_cd},
                   #{card_cd},
                   SUBSTR(#{card_no},0,4) || '-****-****[' || #{exp_year} || #{exp_mon} ,
                   #{etc},
                   SYSDATE,
                   #{emple_no},
                   #{result_key}
                 );
        END ;
    </insert>

    <!-- ================================================================
     * 날짜 : 20220822
     * 이름 : 임동진
     * 추가내용 : 장기할부 정보 등록(복사)
     * 대상 테이블 : LF_DMUSER.TB_LTINSTALL_MNG
     * ================================================================
     * -->
    <insert id="ReqCustMap.insertNewTypeLongTermData"  parameterType="map">
            <!-- 결제 결과 테이블 등록 -->
            BEGIN
              INSERT /* ReqCustMap.insertNewTypeLongTermData */
              INTO TB_LTINSTALL_MNG (
                    ACCNT_NO,
                    LTI_PROD_PAY,
                    LTI_USE_YN,
                    REG_DM,
                    REG_MAN,
                    PAY_AMT,
                    CARD_QUOTA,
                    DEL_FG
                 )
             VALUES
                 (
                   #{accnt_no},
                   'Y',
                   'Y',
                   SYSDATE,
                   #{emple_no},
                   #{pay_amt},
                   #{card_quota},
                   'N'
                  );

              UPDATE LF_DMUSER.HP_CALL
              SET STAT = '01'
              WHERE ACCNT_NO =  #{accnt_no} ;
             END;
    </insert>





    <!-- ================================================================
     * 날짜 : 20230206
     * 이름 : 조용우
     * 추가내용 : 카드,CMS 결과데이터 2022년 건수조회
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_WDRW_REQ
                     LF_DMUSER.TB_MEMBER_WDRW_RESULT
                     LF_DMUSER.TB_MEMBER_REQ_REFUND
     * ================================================================
     * -->
    <select id="ReqCustMap.getReqRltmCardLog2022Count" parameterType="map" resultType="int">
        /* ReqCustMap.getReqRltmCardLog2022Count */
        SELECT
            COUNT(*) AS ICNT
        FROM LF_DMUSER.TB_MEMBER_WDRW_REQ_2022 REQ INNER JOIN
            PRODUCT PD ON REQ.PROD_CD = PD.PROD_CD
            LEFT OUTER JOIN LF_DMUSER.TB_MEMBER_WDRW_RESULT_2022 RST
                         ON REQ.ACCNT_NO = RST.ACCNT_NO
                        AND REQ.PAY_MTHD = RST.PAY_MTHD
                        AND REQ.REQ_DAY = RST.REQ_DAY
                        AND REQ.RESULT_KEY = RST.RESULT_KEY
            LEFT OUTER JOIN LF_DMUSER.TB_MEMBER_REQ_REFUND MRR
                         ON MRR.ACCNT_NO = REQ.ACCNT_NO
                        AND MRR.PAY_MTHD = REQ.PAY_MTHD
                        AND MRR.DEL_FG = 'N'
                        AND MRR.REQ_DAY = REQ.REQ_DAY
                      --AND MRR.RESULT_KEY = REQ.RESULT_KEY
                        AND NVL(MRR.RESULT_KEY,'JL32') = NVL(REQ.RESULT_KEY,'JL32') /* JL32 : PGWEB 서버 통신 중 에러 */
        WHERE 1=1
        <if test="accnt_no != null and accnt_no != ''">
            AND REQ.ACCNT_NO = #{accnt_no}
        </if>
        AND REQ.PAY_MTHD = #{pay_mthd}
        AND REQ.DEL_FG IN ('C', 'F', 'X')
        <if test="del_fg != null and del_fg != ''">
            AND REQ.DEL_FG = #{del_fg}
        </if>
        <if test="stt_req_dt != null and stt_req_dt != '' and end_req_dt != null and end_req_dt != ''">
            AND REQ.REQ_DAY BETWEEN #{stt_req_dt} AND #{end_req_dt}
        </if>
        <if test="result_kind != null and result_kind != ''">
            AND REQ.RESULT_KIND = #{result_kind}
        </if>
        <if test="req_bit != null and req_bit != ''">
            AND REQ.REQ_BIT = #{req_bit}
        </if>
         <if test="auth_yn != null and auth_yn != ''">
             AND REQ.AUTH_YN = #{auth_yn}
         </if>
    </select>

    <!-- ================================================================
     * 날짜 : 20230206
     * 이름 : 조용우
     * 추가내용 : 카드,CMS 결과데이터 2022년 조회
     * 대상 테이블 : LF_DMUSER.TB_MEMBER_WDRW_REQ
                     LF_DMUSER.TB_MEMBER_WDRW_RESULT
                     LF_DMUSER.TB_MEMBER_REQ_REFUND
     * ================================================================
     * -->
    <select id="ReqCustMap.getReqRltmCardLog2022List" parameterType="map" resultType="resultMap">


        SELECT /* ReqCustMap.getReqRltmCardLog2022List */
               *
          FROM (SELECT <if test="orderBy != null and orderBy != ''">
                           ROW_NUMBER() OVER(ORDER BY REQ_DAY DESC, REG_DM DESC, REQ_PAY_NO DESC, ACCNT_NO) PAGE_INDX,
                       </if>
                       X.*
                  FROM (
                            SELECT REQ.ACCNT_NO,
                                   REQ.MEM_NO,
                                   PD.PROD_NM,
                                   REQ_BIT,
                                   REQ.TRUE_CNT,                                            /* 실납입횟수 */
                                   REQ.REQ_PAY_NO,                                          /* 청구회차 */
                                   '조회' AS MAX_REQ_PAY_NO,
                                   TO_CHAR(RST.REG_DM, 'YYYYMMDDHH24MISS') AS REG_DM,   /* 결과입력시간*/
                                   '' AS MAX_REG_DM,                                    /* (TEMP) 회원번호 기준 MAX 결과입력시간 */
                                   REQ.PAY_BIT,
                                   REQ.ICHAE_NO,
                                   REQ.REQ_DAY,
                                   PAY_AMT,
                                   REQ.RESULT_KEY,
                                   RST.TID,
                                   RST.PAY_KIND AS RESULT_KIND,
                                   <!-- NVL(RST.PAY_KIND, '01') AS RESULT_KIND, -->
                                   RST.RESULT_CD,
                                   CASE WHEN REQ.PAY_MTHD = '04'  THEN FN_COM_NM('15', RESULT_CD)
                                        WHEN REQ.PAY_MTHD = '06' AND NVL(REQ.AUTH_YN,'Y') = 'N'  THEN FN_COM_NM('0222', RESULT_CD)
                                   ELSE RST.RESULT_MSG END AS RESULT_MSG,
                                   AUTH_DT,
                                   AUTH_CD,
                                   (SELECT COUNT(*) FROM TB_MEMBER_REQ_NAUTH_CNCL WHERE ACCNT_NO = REQ.ACCNT_NO AND REQ_PAY_NO = REQ.REQ_PAY_NO AND DEL_FG IN ('P','N','R')) AS CNCL_CNT,
                                  CASE WHEN REQ.PAY_MTHD = '04'  THEN  FN_COM_NM('63', NVL(RST.ICHAE_CD,REQ.ICHAE_CD))
                                       WHEN REQ.PAY_MTHD = '06' AND RST.PAY_KIND = '01'  AND NVL(REQ.INI_YN, 'N') != 'Y' THEN  RST.ICHAE_CD
                                       WHEN REQ.PAY_MTHD = '06' AND RST.PAY_KIND != '01' AND NVL(REQ.INI_YN, 'N') != 'Y' THEN  FN_COM_NM('0120', NVL(RST.ICHAE_CD,REQ.ICHAE_CD))
                                       WHEN REQ.PAY_MTHD = '06' AND RST.PAY_KIND = '01'  AND NVL(REQ.INI_YN, 'N') = 'Y' THEN FN_COM_NM('0196', NVL(RST.ICHAE_CD,REQ.ICHAE_CD))
                                       WHEN REQ.PAY_MTHD = '06' AND RST.PAY_KIND != '01' AND NVL(REQ.INI_YN, 'N') = 'Y' THEN FN_COM_NM('0196', NVL(RST.ICHAE_CD,REQ.ICHAE_CD))
                                   ELSE '' END AS ICHAE_CD,
                                   <!--
                                   ( SELECT REG_DM
                                       FROM TB_MEMBER_REQ_REFUND
                                      WHERE ACCNT_NO = REQ.ACCNT_NO
                                        AND PAY_MTHD = REQ.PAY_MTHD
                                        AND DEL_FG = 'N'
                                        AND REQ_DAY = REQ.REQ_DAY
                                        AND RESULT_KEY = REQ.RESULT_KEY
                                   ) AS REFUND_REG_DT, /* 환불등록일 */
                                   -->
                                   MRR.REG_DM AS REFUND_REG_DT, /* 환불등록일 */
                                   <!--
                                   ( SELECT REFUND_DT
                                       FROM TB_MEMBER_REQ_REFUND MRR
                                       INNER JOIN TB_MEMBER_WDRW_REQ MWR
                                               ON MWR.ACCNT_NO = MRR.ACCNT_NO
                                              AND MWR.PAY_MTHD = MRR.PAY_MTHD
                                              AND MWR.DEL_FG = 'X'
                                              AND MWR.REQ_DAY = MRR.REQ_DAY
                                              AND MWR.RESULT_KEY = MRR.RESULT_KEY
                                      WHERE MRR.ACCNT_NO = REQ.ACCNT_NO
                                        AND MRR.PAY_MTHD = REQ.PAY_MTHD
                                        AND MRR.DEL_FG = 'N'
                                        AND MRR.REQ_DAY = REQ.REQ_DAY
                                        AND MRR.RESULT_KEY = REQ.RESULT_KEY
                                   ) AS REAL_CANCEL_DT,   /* 실제취소일 */
                                   -->
                                   <!--
                                   ( SELECT TO_CHAR(CANCEL_DT, 'YYYYMMDDHH24MISS')
                                       FROM TB_MEMBER_REQ_REFUND MRR
                                      WHERE MRR.ACCNT_NO = REQ.ACCNT_NO
                                        AND MRR.PAY_MTHD = REQ.PAY_MTHD
                                        AND MRR.DEL_FG = 'N'
                                        AND MRR.REQ_DAY = REQ.REQ_DAY
                                        AND MRR.RESULT_KEY = REQ.RESULT_KEY
                                   ) AS CANCEL_DT,   /* 실제취소일 */
                                   -->
                                   TO_CHAR(MRR.CANCEL_DT, 'YYYYMMDDHH24MISS') AS CANCEL_DT, /* 실제취소일*/
                                   RST.ETC,
                                   REQ.PAY_MTHD,  /* 납입방법 (04:CMS, 06:카드) */
                                   REQ.DEL_FG,
                                   CASE WHEN LENGTH(RST.REG_MAN) = 10
                                        THEN ( SELECT EMPLE_NM FROM EMPLOYEE WHERE EMPLE_NO = RST.REG_MAN )
                                        ELSE RST.REG_MAN
                                    END AS REG_MAN,  /* 결과등록자 사원명으로 표시 */
                                   REQ.AUTH_YN,
                                   REQ.FRANCHISEE_NO,
                                   REQ.INI_YN
                              FROM LF_DMUSER.TB_MEMBER_WDRW_REQ_2022 REQ INNER JOIN
                                  PRODUCT PD ON REQ.PROD_CD = PD.PROD_CD
                        LEFT OUTER JOIN LF_DMUSER.TB_MEMBER_WDRW_RESULT_2022 RST
                                     ON REQ.ACCNT_NO = RST.ACCNT_NO
                                    AND REQ.PAY_MTHD = RST.PAY_MTHD
                                    AND REQ.REQ_DAY = RST.REQ_DAY
                                    AND REQ.RESULT_KEY = RST.RESULT_KEY
                        LEFT OUTER JOIN LF_DMUSER.TB_MEMBER_REQ_REFUND MRR
                                     ON MRR.ACCNT_NO = REQ.ACCNT_NO
                                    AND MRR.PAY_MTHD = REQ.PAY_MTHD
                                    AND MRR.DEL_FG = 'N'
                                    AND MRR.REQ_DAY = REQ.REQ_DAY
                                    --AND MRR.RESULT_KEY = REQ.RESULT_KEY
                                    AND NVL(MRR.RESULT_KEY,'JL32') = NVL(REQ.RESULT_KEY,'JL32') /* JL32 : PGWEB 서버 통신 중 에러 */
                             WHERE 1=1
                               <if test="accnt_no != null and accnt_no != ''">
                               AND REQ.ACCNT_NO = #{accnt_no}
                               </if>
                               AND REQ.PAY_MTHD = #{pay_mthd}
                               AND REQ.DEL_FG IN ('C', 'F', 'X')
                               <if test="auth_yn != null and auth_yn != ''">
                               AND REQ.AUTH_YN = #{auth_yn}
                               </if>
                               <if test="del_fg != null and del_fg != ''">
                               AND REQ.DEL_FG = #{del_fg}
                               </if>
                               <if test="stt_req_dt != null and stt_req_dt != '' and end_req_dt != null and end_req_dt != ''">
                               AND REQ.REQ_DAY BETWEEN #{stt_req_dt} AND #{end_req_dt}
                               </if>
                               <if test="result_kind != null and result_kind != ''">
                               AND REQ.RESULT_KIND = #{result_kind}
                               </if>
                               <if test="req_bit != null and req_bit != ''">
                               AND REQ.REQ_BIT = #{req_bit}
                               </if>
                    ) X
                    WHERE 1=1
                ) Z

     <if test="excel_fg == null or excel_fg == '' or !excel_fg.equalsIgnoreCase('Y')">
         <if test="startLine != null and startLine != '' and endLine != null and endLine != ''">
             <![CDATA[
             WHERE PAGE_INDX >= #{startLine}
               AND PAGE_INDX < #{endLine}
             ]]>
         </if>
     </if>

    </select>

     <!-- ================================================================
     * 날짜 : 20230207
     * 이름 : 조용우
     * 추가내용 : 2022년 환불관리 조회 카운트
     * ================================================================
     * -->
    <select id="ReqCustMap.getMemberRefundList2022Count" parameterType="map" resultType="int">
        SELECT /* ReqCustMap.getMemberRefundList2022Count */
               COUNT(*) AS ICNT
          FROM (

            SELECT *

              FROM ( SELECT MRR.ACCNT_NO      /* 회원번호                                                                   */
                           ,MBR.MEM_NO        /* 고유번호                                                                   */
                           ,MBR.MEM_NM        /* 회원명                                                                     */
                           ,MRR.PAY_MTHD      /* 납입방법(04:CMS, 06:Card)                                                  */
                           ,CASE WHEN MRR.CANCEL_DT IS NOT NULL
                                THEN CASE WHEN MWR.RESULT_KIND = '01' AND TO_CHAR(MRR.CANCEL_DT, 'YYMMDD') > TO_CHAR(TO_DATE(AUTH_DT), 'YYMMDD')
                                           THEN '후취소'
                                           WHEN MWR.RESULT_KIND != '01' AND NVL(MWR.INI_YN,'N') = 'N' AND TO_CHAR(MRR.CANCEL_DT, 'YYMMDD') > SUBSTR(AUTH_DT, 1, 6)
                                           THEN '후취소'
                                           WHEN MWR.RESULT_KIND != '01' AND NVL(MWR.INI_YN,'N') = 'Y' AND TO_CHAR(MRR.CANCEL_DT, 'YYMMDD') > SUBSTR(AUTH_DT, 3, 8)
                                           THEN '후취소'
                                           WHEN MWR.RESULT_KIND = '01' AND TO_CHAR(MRR.CANCEL_DT, 'YYMMDD') = TO_CHAR(TO_DATE(AUTH_DT), 'YYMMDD')
                                           THEN '취소'
                                           WHEN MWR.RESULT_KIND != '01' AND NVL(MWR.INI_YN,'N') = 'N'  AND TO_CHAR(MRR.CANCEL_DT, 'YYMMDD') = SUBSTR(AUTH_DT, 1, 6)
                                           THEN '취소'
                                           WHEN MWR.RESULT_KIND != '01' AND NVL(MWR.INI_YN,'N') = 'Y' AND TO_CHAR(MRR.CANCEL_DT, 'YYMMDD') = SUBSTR(AUTH_DT, 3, 8)
                                           THEN '취소'
                                           ELSE ''
                                       END
                                 ELSE ''
                            END AS CANCEL_GB
                           ,MWR.PAY_BIT       /* PAYBIT                                                                    		 */
                           ,MRR.REQ_DAY       /* 청구일자                                                                   */
                           ,MWR.PAY_AMT       /* 청구금액                                                                   */
                           ,MWR.KSTBIT        /* 회원상태(01:대기, 02:가입, 03:해약, 04:행사, 09:만기)                      */
                           ,MRR.RESULT_KEY    /* 결과키                                                                     */
                           ,MRR.REFUND_LOC    /* 환불 경로(01:결과파일환불,02:해약등록,03:청약철회등록,04:행사등록)         */
                           ,MRR.ICHAE_NO      /* 은행이체번호(CMS)                                                          */
                           ,MRR.ICHAE_CD      /* 은행이체코드(CMS)                                                          */
                           ,MRR.DEPR          /* 예금주(CMS)                                                                */
                           ,MRR.REFUND_DT     /* 환불일자                                                                   */
                           ,MRR.REG_DM        /* 등록일자                                                                   */
                           ,MRR.REG_MAN       /* 등록자ID                                                                   */
                           ,MWR.DEL_FG        /* 청구여부(N:청구전 Y:삭제 R:청구 C:완료(변환/입금) F:완료(실패) X:입금취소) */
                           ,MWR.REQ_PAY_NO    /* 산출청구회차                                                               */
                           ,MWS.RESULT_CD     /* 결과코드                                                                   */
                           ,MWS.RESULT_MSG    /* 결과메세지                                                                 */
                           <!-- ,TO_CHAR(MWS.CANCEL_DT, 'YYYYMMDD') AS CANCEL_DT /* 실시간 취소 일자                             */ -->
                           ,TO_CHAR(MRR.CANCEL_DT, 'YYYYMMDDHH24MISS') AS CANCEL_DT                    /* 실시간 취소 일자  */
                           ,MWS.TID           /* 결과키(TID, CMS결과키)                                                     */
                           ,AUTH_DT     /* 승인일자          */
                           ,MWS.AUTH_CD       /* 승인번호                                                                   */
                           ,MRR.REFUND_REASON /* 환불사유(환불사유코드)                                                     */
                           ,MRR.REFUND_ETC    /* 비고                                                                       */
                           ,MRR.AUTH_YN
                           ,(SELECT DEL_FG FROM TB_MEMBER_REQ_NAUTH_CNCL CNCL WHERE 1=1 AND CNCL.ACCNT_NO = MRR.ACCNT_NO  AND CNCL.REQ_PAY_NO = MRR.REQ_PAY_NO AND CNCL.DEL_FG != 'Y') AS CNCL_DEL_FG
                       FROM TB_MEMBER_REQ_REFUND MRR              /* 고객환불정보                                           */
                       LEFT OUTER JOIN TB_MEMBER_WDRW_REQ_2022 MWR     /* 고객청구요청정보                                       */
                               ON MRR.ACCNT_NO = MWR.ACCNT_NO
                              AND MRR.PAY_MTHD = MWR.PAY_MTHD
                              AND MRR.REQ_DAY = MWR.REQ_DAY
                              AND MRR.REQ_PAY_NO = MWR.REQ_PAY_NO
                              AND MRR.RESULT_KEY = MWR.RESULT_KEY
                       LEFT OUTER JOIN TB_MEMBER_WDRW_RESULT_2022 MWS  /* 고객청구결과정보                                       */
                               ON MWR.ACCNT_NO = MWS.ACCNT_NO
                              AND MWR.RESULT_KEY = MWS.RESULT_KEY
                              AND MWR.REQ_DAY = MWS.REQ_DAY
                       INNER JOIN MEM_PROD_ACCNT MPA              /* 고객가입상품정보                                       */
                               ON MPA.ACCNT_NO = MRR.ACCNT_NO
                              AND MPA.DEL_FG = 'N'
                       INNER JOIN MEMBER MBR                      /* 고객기본정보                                           */
                               ON MBR.MEM_NO = MPA.MEM_NO
                              AND MBR.DEL_FG = 'N'
                       LEFT OUTER JOIN PRODUCT_NO_DATA PND        /* 상품회차별정보                                         */
                               ON MWR.PROD_CD = PND.PROD_CD
                              AND MWR.REQ_PAY_NO = PND.NO
                      WHERE 1=1
                      <if test="data_type == '01' and new_refund.equalsIgnoreCase('N')">
                          <if test="reg_dm_stt != null and reg_dm_stt != '' and reg_dm_end != null and reg_dm_end != '' and (accnt_no == null or accnt_no == '')">
                              AND TO_CHAR(MRR.REG_DM,'YYYYMMDD') BETWEEN #{reg_dm_stt} AND #{reg_dm_end}
                          </if>
                      </if>
                      <if test="data_type == '02' and new_refund.equalsIgnoreCase('N')">
                          <if test="reg_dm_stt != null and reg_dm_stt != '' and reg_dm_end != null and reg_dm_end != '' and (accnt_no == null or accnt_no == '')">
                              AND TO_CHAR(MRR.CANCEL_DT,'YYYYMMDD') BETWEEN #{reg_dm_stt} AND #{reg_dm_end}
                          </if>
                      </if>
                      <if test="accnt_no != null and accnt_no != ''">
                          AND MRR.ACCNT_NO = #{accnt_no}
                      </if>
                      <if test="mem_nm != null and mem_nm != ''">
                          AND MBR.MEM_NM = #{mem_nm}
                      </if>
                      <if test="refund_loc != null and refund_loc != ''">
                          AND MRR.REFUND_LOC = #{refund_loc}
                      </if>
                      <if test="req_stat != null and req_stat != '' and new_refund.equalsIgnoreCase('N')">
                          AND MWR.DEL_FG = #{req_stat}                  /* 청구여부(N:청구전 Y:삭제 R:청구 C:완료(변환/입금) F:완료(실패) X:입금취소) */
                      </if>
                      <!--
                      <if test="del_fg != null and del_fg != ''">
                          AND MRR.DEL_FG = #{del_fg}
                      </if>
                       -->
                      <if test="req_day != null and req_day != ''">
                          AND MRR.REQ_DAY = #{req_day}                  /* 청구일자 */
                      </if>
                      <if test="pay_mthd != null and pay_mthd != ''">
                          AND MRR.PAY_MTHD = #{pay_mthd}                /* 납입방법(04:CMS, 06:Card) */
                      </if>
                      <if test="auth_yn != null and auth_yn != ''">
                          AND MRR.AUTH_YN = #{auth_yn}
                      </if>
                      <if test="new_refund != null and new_refund != '' and new_refund.equalsIgnoreCase('Y')">
                          AND MWR.REQ_DAY >= '20210101'
                          AND NVL(TO_CHAR(MRR.CANCEL_DT,'YYYYMMDD'),'99999999') = '99999999'
                      </if>
                      AND MRR.DEL_FG = 'N'
                   ) MAIN_TBL
             )
             WHERE 1=1
               <if test="cancel_gb != null and cancel_gb != ''">
               AND CANCEL_GB = #{cancel_gb}
               </if>
    </select>

    <!-- ================================================================
     * 날짜 : 20230207
     * 이름 : 조용우
     * 추가내용 : 2022년 환불관리 조회
     * ================================================================
     * -->
    <select id="ReqCustMap.getMemberRefund2022List" parameterType="map" resultType="resultMap">
        SELECT /* ReqCustMap.getMemberRefund2022List */
               *
          FROM

          ( SELECT ROW_NUMBER() OVER(ORDER BY ${orderBy} ${orderDirection}) PAGE_INDX /* PAGE INDX                 */
                 , MAIN_TBL.*
              FROM
               ( SELECT MRR.ACCNT_NO      /* 회원번호                                                                   */
                       ,MWR.PROD_CD
                       ,(SELECT MAX(PD.PROD_NM) FROM PRODUCT PD WHERE 1=1 AND PD.PROD_CD = MWR.PROD_CD) AS PROD_NM
                       ,MWR.ICHAE_NO AS BID
                       ,MBR.MEM_NO        /* 고유번호                                                                   */
                       ,MBR.MEM_NM        /* 회원명                                                                     */
                       ,MRR.PAY_MTHD      /* 납입방법(04:CMS, 06:Card)                                                  */
                       ,CASE WHEN MRR.CANCEL_DT IS NOT NULL
                                 THEN CASE WHEN MWR.RESULT_KIND = '01' AND TO_CHAR(MRR.CANCEL_DT, 'YYMMDD') > TO_CHAR(TO_DATE(AUTH_DT), 'YYMMDD')
                                           THEN '후취소'
                                           WHEN MWR.RESULT_KIND != '01' AND NVL(MWR.INI_YN,'N') = 'N' AND TO_CHAR(MRR.CANCEL_DT, 'YYMMDD') > SUBSTR(AUTH_DT, 1, 6)
                                           THEN '후취소'
                                           WHEN MWR.RESULT_KIND != '01' AND NVL(MWR.INI_YN,'N') = 'Y' AND TO_CHAR(MRR.CANCEL_DT, 'YYMMDD') > SUBSTR(AUTH_DT, 3, 8)
                                           THEN '후취소'
                                           WHEN MWR.RESULT_KIND = '01' AND TO_CHAR(MRR.CANCEL_DT, 'YYMMDD') = TO_CHAR(TO_DATE(AUTH_DT), 'YYMMDD')
                                           THEN '취소'
                                           WHEN MWR.RESULT_KIND != '01' AND NVL(MWR.INI_YN,'N') = 'N'  AND TO_CHAR(MRR.CANCEL_DT, 'YYMMDD') = SUBSTR(AUTH_DT, 1, 6)
                                           THEN '취소'
                                           WHEN MWR.RESULT_KIND != '01' AND NVL(MWR.INI_YN,'N') = 'Y' AND TO_CHAR(MRR.CANCEL_DT, 'YYMMDD') = SUBSTR(AUTH_DT, 3, 8)
                                           THEN '취소'
                                           ELSE ''
                                       END
                                 ELSE ''
                             END AS CANCEL_GB
                       ,MWR.PAY_BIT       /* PAYBIT                                                                       */
                       ,MRR.REQ_DAY       /* 청구일자                                                                   */
                       ,MWR.PAY_AMT       /* 청구금액                                                                   */
                       ,(CASE WHEN SUBSTR(MWR.PAY_BIT,1,1) != 'X' THEN PND.AMT     ELSE 0 END) AS TRUE_AMT    /* 상조금 */
                       ,(CASE WHEN SUBSTR(MWR.PAY_BIT,2,1) != 'X' THEN PND.REL_AMT ELSE 0 END) AS REL_AMT     /* 결합금 */
                       ,(CASE WHEN SUBSTR(MWR.PAY_BIT,3,1) != 'X' THEN PND.ADD_AMT ELSE 0 END) AS ADD_AMT     /* 추가금 */
                       ,MWR.KSTBIT        /* 회원상태(01:대기, 02:가입, 03:해약, 04:행사, 09:만기)                      */
                       ,MRR.RESULT_KEY    /* 결과키                                                                     */
                       ,MWR.RESULT_KIND   /* 결과유형 (01:파일, 02:실시간, 03:자유,04:기타)                             */
                       ,MRR.REFUND_LOC    /* 환불 경로(01:결과파일환불,02:해약등록,03:청약철회등록,04:행사등록)         */
                       <!--
                       ,MRR.ICHAE_NO      /* 은행이체번호(CMS)                                                          */
                       ,MRR.ICHAE_CD      /* 은행이체코드(CMS)                                                          */
                        -->
                       ,CASE WHEN MWR.PAY_MTHD = '04'
                             THEN CASE WHEN NVL(MRR.ICHAE_NO, 'N') = 'N'
                                       THEN MWR.ICHAE_NO
                                       ELSE MRR.ICHAE_NO
                                   END
                             ELSE ''
                         END AS ICHAE_NO
                       ,CASE WHEN MWR.PAY_MTHD = '04'
                             THEN CASE WHEN NVL(MRR.ICHAE_CD, 'N') = 'N'
                                       THEN MWR.ICHAE_CD
                                       ELSE MRR.ICHAE_CD
                                  END
                             ELSE ''
                         END AS ICHAE_CD
                       ,CASE WHEN MWR.PAY_MTHD = '06' AND NVL(MWR.INI_YN, 'N') != 'Y' THEN LF_DMUSER.FN_COM_NM('0120', MWR.ICHAE_CD)
                             WHEN MWR.PAY_MTHD = '06' AND NVL(MWR.INI_YN, 'N') = 'Y' THEN LF_DMUSER.FN_COM_NM('0196', MWR.ICHAE_CD)
                             ELSE ''
                             END AS CARD_CD
                       ,MRR.DEPR          /* 예금주(CMS)                                                                */
                       ,MRR.REFUND_DT     /* 환불일자                                                                   */
                       ,MRR.REG_DM        /* 등록일자                                                                   */
                       ,MRR.REG_MAN       /* 등록자ID                                                                   */
                       ,MWR.DEL_FG        /* 청구여부(N:청구전 Y:삭제 R:청구 C:완료(변환/입금) F:완료(실패) X:입금취소) */
                       ,MWR.REQ_PAY_NO    /* 산출청구회차                                                               */
                       ,MWS.RESULT_CD     /* 결과코드                                                                   */
                       ,MWS.RESULT_MSG    /* 결과메세지                                                                 */
                       <!-- ,TO_CHAR(MWS.CANCEL_DT, 'YYYYMMDD') AS CANCEL_DT /* 실시간 취소 일자                             */ -->
                       ,TO_CHAR(MRR.CANCEL_DT, 'YYYYMMDDHH24MISS') AS CANCEL_DT                    /* 실시간 취소 일자  */
                       ,MWS.TID           /* 결과키(TID, CMS결과키)                                                     */
                       ,AUTH_DT     /* 승인일자          */
                       ,MWS.AUTH_CD       /* 승인번호                                                                   */
                       ,MRR.REFUND_REASON /* 환불사유(환불사유코드)                                                     */
                       ,MRR.REFUND_ETC    /* 비고                                                                       */
                       ,MRR.AUTH_YN
                       ,MWR.FRANCHISEE_NO
                       ,MWR.INI_YN
                       ,(SELECT DEL_FG FROM TB_MEMBER_REQ_NAUTH_CNCL CNCL WHERE 1=1 AND CNCL.ACCNT_NO = MRR.ACCNT_NO  AND CNCL.REQ_PAY_NO = MRR.REQ_PAY_NO AND CNCL.DEL_FG != 'Y') AS CNCL_DEL_FG
                   FROM TB_MEMBER_REQ_REFUND MRR              /* 고객환불정보                                           */
                   LEFT OUTER JOIN TB_MEMBER_WDRW_REQ_2022 MWR     /* 고객청구요청정보                                       */
                           ON MRR.ACCNT_NO = MWR.ACCNT_NO
                          AND MRR.PAY_MTHD = MWR.PAY_MTHD
                          AND MRR.REQ_DAY = MWR.REQ_DAY
                          AND MRR.REQ_PAY_NO = MWR.REQ_PAY_NO
                          AND MRR.RESULT_KEY = MWR.RESULT_KEY
                   LEFT OUTER JOIN TB_MEMBER_WDRW_RESULT_2022 MWS  /* 고객청구결과정보                                       */
                           ON MWR.ACCNT_NO = MWS.ACCNT_NO
                          AND MWR.RESULT_KEY = MWS.RESULT_KEY
                          AND MWR.REQ_DAY = MWS.REQ_DAY
                   INNER JOIN MEM_PROD_ACCNT MPA              /* 고객가입상품정보                                       */
                           ON MPA.ACCNT_NO = MRR.ACCNT_NO
                          AND MPA.DEL_FG = 'N'
                   INNER JOIN MEMBER MBR                      /*  고객기본정보                                           */
                           ON MBR.MEM_NO = MPA.MEM_NO
                          AND MBR.DEL_FG = 'N'
                   LEFT OUTER JOIN PRODUCT_NO_DATA PND        /* 상품회차별정보                                         */
                           ON MWR.PROD_CD = PND.PROD_CD
                          AND MWR.REQ_PAY_NO = PND.NO
                  WHERE 1=1
                  <if test="data_type == '01' and new_refund.equalsIgnoreCase('N')">
                      <if test="reg_dm_stt != null and reg_dm_stt != '' and reg_dm_end != null and reg_dm_end != '' and (accnt_no == null or accnt_no == '')">
                      AND TO_CHAR(MRR.REG_DM,'YYYYMMDD') BETWEEN #{reg_dm_stt} AND #{reg_dm_end}
                      </if>
                  </if>
                  <if test="data_type == '02' and new_refund.equalsIgnoreCase('N')">
                      <if test="reg_dm_stt != null and reg_dm_stt != '' and reg_dm_end != null and reg_dm_end != '' and (accnt_no == null or accnt_no == '')">
                      AND TO_CHAR(MRR.CANCEL_DT,'YYYYMMDD') BETWEEN #{reg_dm_stt} AND #{reg_dm_end}
                      </if>
                  </if>
                  <if test="accnt_no != null and accnt_no != ''">
                      AND MRR.ACCNT_NO = #{accnt_no}
                  </if>
                  <if test="mem_nm != null and mem_nm != ''">
                      AND MBR.MEM_NM = #{mem_nm}
                  </if>
                  <if test="refund_loc != null and refund_loc != ''">
                      AND MRR.REFUND_LOC = #{refund_loc}
                  </if>
                  <if test="req_stat != null and req_stat != '' and new_refund.equalsIgnoreCase('N')">
                      AND MWR.DEL_FG = #{req_stat}                  /* 청구여부(N:청구전 Y:삭제 R:청구 C:완료(변환/입금) F:완료(실패) X:입금취소) */
                  </if>
                  <!--
                  <if test="del_fg != null and del_fg != ''">
                      AND MRR.DEL_FG = #{del_fg}
                  </if>
                  -->
                  <if test="req_day != null and req_day != ''">
                      AND MRR.REQ_DAY = #{req_day}
                  </if>
                  <if test="pay_mthd != null and pay_mthd != ''">
                      AND MRR.PAY_MTHD = #{pay_mthd}
                  </if>
                  <if test="auth_yn != null and auth_yn != ''">
                      AND MRR.AUTH_YN = #{auth_yn}
                  </if>
                  <if test="new_refund != null and new_refund != '' and new_refund.equalsIgnoreCase('Y')">
                      AND MWR.REQ_DAY >= '20210101'
                      AND NVL(TO_CHAR(MRR.CANCEL_DT,'YYYYMMDD'),'99999999') = '99999999'
                  </if>
                  AND MRR.DEL_FG = 'N'
               ) MAIN_TBL

            WHERE 1=1
              <if test="cancel_gb != null and cancel_gb != ''">
              AND CANCEL_GB = #{cancel_gb}
              </if>
         )

         WHERE 1=1
    </select>
</mapper>
